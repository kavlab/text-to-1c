;query;query_ru
0;SELECT count(*) FROM head WHERE age  >  56;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.руководители ГДЕ возраст > 56
1;SELECT name ,  born_state ,  age FROM head ORDER BY age;ВЫБРАТЬ наименование , штатрождения , возраст ИЗ справочник.руководители УПОРЯДОЧИТЬ ПО возраст
2;SELECT creation ,  name ,  budget_in_billions FROM department;ВЫБРАТЬ датасоздания , наименование , бюджетвмлрд ИЗ справочник.департаменты
3;SELECT max(budget_in_billions) ,  min(budget_in_billions) FROM department;ВЫБРАТЬ МАКСИМУМ(бюджетвмлрд) , МИНИМУМ(бюджетвмлрд) ИЗ справочник.департаменты
4;SELECT avg(num_employees) FROM department WHERE ranking BETWEEN 10 AND 15;ВЫБРАТЬ СРЕДНЕЕ(количествосотрудников) ИЗ справочник.департаменты ГДЕ рейтинг МЕЖДУ 10 И 15
5;SELECT name FROM head WHERE born_state != 'California';"ВЫБРАТЬ наименование ИЗ справочник.руководители ГДЕ штатрождения <> ""California"""
6;SELECT DISTINCT T1.creation FROM department AS T1 JOIN management AS T2 ON T1.department_id  =  T2.department_id JOIN head AS T3 ON T2.head_id  =  T3.head_id WHERE T3.born_state  =  'Alabama';"ВЫБРАТЬ РАЗЛИЧНЫЕ T1.датасоздания ИЗ справочник.департаменты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.руководство КАК T2 ПО T1.ссылка = T2.департамент ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.руководители КАК T3 ПО T2.руководитель = T3.ссылка ГДЕ T3.штатрождения = ""Alabama"""
7;SELECT born_state FROM head GROUP BY born_state HAVING count(*)  >=  3;ВЫБРАТЬ штатрождения ИЗ справочник.руководители СГРУППИРОВАТЬ ПО штатрождения ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 3
8;SELECT creation FROM department GROUP BY creation ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 датасоздания ИЗ справочник.департаменты СГРУППИРОВАТЬ ПО датасоздания УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
9;SELECT T1.name ,  T1.num_employees FROM department AS T1 JOIN management AS T2 ON T1.department_id  =  T2.department_id WHERE T2.temporary_acting  =  'Yes';"ВЫБРАТЬ T1.наименование , T1.количествосотрудников ИЗ справочник.департаменты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.руководство КАК T2 ПО T1.ссылка = T2.департамент ГДЕ T2.временныйио = ""Yes"""
10;SELECT count(DISTINCT temporary_acting) FROM management;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ временныйио) ИЗ регистрсведений.руководство
11;"SELECT count(*) FROM department WHERE department_id NOT IN (SELECT department_id FROM management);";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.департаменты ГДЕ department_id НЕ В (ВЫБРАТЬ department_id ИЗ регистрсведений.руководство);"
12;SELECT DISTINCT T1.age FROM management AS T2 JOIN head AS T1 ON T1.head_id  =  T2.head_id WHERE T2.temporary_acting  =  'Yes';"ВЫБРАТЬ РАЗЛИЧНЫЕ T1.возраст ИЗ регистрсведений.руководство КАК T2 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.руководители КАК T1 ПО T1.ссылка = T2.руководитель ГДЕ T2.временныйио = ""Yes"""
14;SELECT T1.department_id ,  T1.name ,  count(*) FROM management AS T2 JOIN department AS T1 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id HAVING count(*)  >  1;ВЫБРАТЬ T1.ссылка , T1.наименование , КОЛИЧЕСТВО(*) ИЗ регистрсведений.руководство КАК T2 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.департаменты КАК T1 ПО T1.ссылка = T2.департамент СГРУППИРОВАТЬ ПО T1.ссылка ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 1
15;SELECT head_id ,  name FROM head WHERE name LIKE '%Ha%';"ВЫБРАТЬ ссылка , наименование ИЗ справочник.руководители ГДЕ наименование ПОДОБНО ""%Ha%"""
16;SELECT count(*) FROM farm;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.фермы
17;SELECT count(*) FROM farm;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.фермы
18;SELECT Total_Horses FROM farm ORDER BY Total_Horses ASC;ВЫБРАТЬ лошадейвсего ИЗ справочник.фермы УПОРЯДОЧИТЬ ПО лошадейвсего ВОЗР
19;SELECT Total_Horses FROM farm ORDER BY Total_Horses ASC;ВЫБРАТЬ лошадейвсего ИЗ справочник.фермы УПОРЯДОЧИТЬ ПО лошадейвсего ВОЗР
20;SELECT Hosts FROM farm_competition WHERE Theme !=  'Aliens';"ВЫБРАТЬ организаторы ИЗ справочник.соревнованиефермеров ГДЕ тема <> ""Aliens"""
21;SELECT Hosts FROM farm_competition WHERE Theme !=  'Aliens';"ВЫБРАТЬ организаторы ИЗ справочник.соревнованиефермеров ГДЕ тема <> ""Aliens"""
22;SELECT Theme FROM farm_competition ORDER BY YEAR ASC;ВЫБРАТЬ тема ИЗ справочник.соревнованиефермеров УПОРЯДОЧИТЬ ПО год ВОЗР
23;SELECT Theme FROM farm_competition ORDER BY YEAR ASC;ВЫБРАТЬ тема ИЗ справочник.соревнованиефермеров УПОРЯДОЧИТЬ ПО год ВОЗР
24;SELECT avg(Working_Horses) FROM farm WHERE Total_Horses  >  5000;ВЫБРАТЬ СРЕДНЕЕ(рабочихлошадей) ИЗ справочник.фермы ГДЕ лошадейвсего > 5000
25;SELECT avg(Working_Horses) FROM farm WHERE Total_Horses  >  5000;ВЫБРАТЬ СРЕДНЕЕ(рабочихлошадей) ИЗ справочник.фермы ГДЕ лошадейвсего > 5000
26;SELECT max(Cows) ,  min(Cows) FROM farm;ВЫБРАТЬ МАКСИМУМ(коровы) , МИНИМУМ(коровы) ИЗ справочник.фермы
27;SELECT max(Cows) ,  min(Cows) FROM farm;ВЫБРАТЬ МАКСИМУМ(коровы) , МИНИМУМ(коровы) ИЗ справочник.фермы
28;SELECT count(DISTINCT Status) FROM city;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ кодстраны) ИЗ справочник.города
29;SELECT count(DISTINCT Status) FROM city;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ кодстраны) ИЗ справочник.города
30;SELECT Official_Name FROM city ORDER BY Population DESC;ВЫБРАТЬ наименование ИЗ справочник.города УПОРЯДОЧИТЬ ПО численность УБЫВ
31;SELECT Official_Name FROM city ORDER BY Population DESC;ВЫБРАТЬ наименование ИЗ справочник.города УПОРЯДОЧИТЬ ПО численность УБЫВ
32;SELECT Official_Name ,  Status FROM city ORDER BY Population DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование , кодстраны ИЗ справочник.города УПОРЯДОЧИТЬ ПО численность УБЫВ
33;SELECT Official_Name ,  Status FROM city ORDER BY Population DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование , кодстраны ИЗ справочник.города УПОРЯДОЧИТЬ ПО численность УБЫВ
34;SELECT T2.Year ,  T1.Official_Name FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID  =  T2.Host_city_ID;ВЫБРАТЬ T2.год , T1.наименование ИЗ справочник.города КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.соревнованиефермеров КАК T2 ПО T1.ссылка = T2.городпроведения
35;SELECT T2.Year ,  T1.Official_Name FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID  =  T2.Host_city_ID;ВЫБРАТЬ T2.год , T1.наименование ИЗ справочник.города КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.соревнованиефермеров КАК T2 ПО T1.ссылка = T2.городпроведения
36;SELECT T1.Official_Name FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID  =  T2.Host_city_ID GROUP BY T2.Host_city_ID HAVING COUNT(*)  >  1;ВЫБРАТЬ T1.наименование ИЗ справочник.города КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.соревнованиефермеров КАК T2 ПО T1.ссылка = T2.городпроведения СГРУППИРОВАТЬ ПО T2.городпроведения ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 1
37;SELECT T1.Official_Name FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID  =  T2.Host_city_ID GROUP BY T2.Host_city_ID HAVING COUNT(*)  >  1;ВЫБРАТЬ T1.наименование ИЗ справочник.города КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.соревнованиефермеров КАК T2 ПО T1.ссылка = T2.городпроведения СГРУППИРОВАТЬ ПО T2.городпроведения ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 1
38;SELECT T1.Status FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID  =  T2.Host_city_ID GROUP BY T2.Host_city_ID ORDER BY COUNT(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.кодстраны ИЗ справочник.города КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.соревнованиефермеров КАК T2 ПО T1.ссылка = T2.городпроведения СГРУППИРОВАТЬ ПО T2.городпроведения УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
39;SELECT T1.Status FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID  =  T2.Host_city_ID GROUP BY T2.Host_city_ID ORDER BY COUNT(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.кодстраны ИЗ справочник.города КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.соревнованиефермеров КАК T2 ПО T1.ссылка = T2.городпроведения СГРУППИРОВАТЬ ПО T2.городпроведения УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
40;SELECT T2.Theme FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID  =  T2.Host_city_ID WHERE T1.Population  >  1000;ВЫБРАТЬ T2.тема ИЗ справочник.города КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.соревнованиефермеров КАК T2 ПО T1.ссылка = T2.городпроведения ГДЕ T1.численность > 1000
41;SELECT T2.Theme FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID  =  T2.Host_city_ID WHERE T1.Population  >  1000;ВЫБРАТЬ T2.тема ИЗ справочник.города КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.соревнованиефермеров КАК T2 ПО T1.ссылка = T2.городпроведения ГДЕ T1.численность > 1000
42;SELECT Status ,  avg(Population) FROM city GROUP BY Status;ВЫБРАТЬ кодстраны , СРЕДНЕЕ(численность) ИЗ справочник.города СГРУППИРОВАТЬ ПО кодстраны
43;SELECT Status ,  avg(Population) FROM city GROUP BY Status;ВЫБРАТЬ кодстраны , СРЕДНЕЕ(численность) ИЗ справочник.города СГРУППИРОВАТЬ ПО кодстраны
44;SELECT Status FROM city GROUP BY Status ORDER BY COUNT(*) ASC;ВЫБРАТЬ кодстраны ИЗ справочник.города СГРУППИРОВАТЬ ПО кодстраны УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) ВОЗР
45;SELECT Status FROM city GROUP BY Status ORDER BY COUNT(*) ASC;ВЫБРАТЬ кодстраны ИЗ справочник.города СГРУППИРОВАТЬ ПО кодстраны УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) ВОЗР
46;SELECT Status FROM city GROUP BY Status ORDER BY COUNT(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 кодстраны ИЗ справочник.города СГРУППИРОВАТЬ ПО кодстраны УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
47;SELECT Status FROM city GROUP BY Status ORDER BY COUNT(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 кодстраны ИЗ справочник.города СГРУППИРОВАТЬ ПО кодстраны УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
48;SELECT Official_Name FROM city WHERE City_ID NOT IN (SELECT Host_city_ID FROM farm_competition);ВЫБРАТЬ Official_Name ИЗ справочник.города ГДЕ City_ID НЕ В (ВЫБРАТЬ Host_city_ID ИЗ справочник.соревнованиефермеров)
49;SELECT Official_Name FROM city WHERE City_ID NOT IN (SELECT Host_city_ID FROM farm_competition);ВЫБРАТЬ Official_Name ИЗ справочник.города ГДЕ City_ID НЕ В (ВЫБРАТЬ Host_city_ID ИЗ справочник.соревнованиефермеров)
52;SELECT Official_Name FROM city WHERE Population  >  1500 OR Population  <  500;ВЫБРАТЬ наименование ИЗ справочник.города ГДЕ численность > 1500 ИЛИ численность < 500
53;SELECT Official_Name FROM city WHERE Population  >  1500 OR Population  <  500;ВЫБРАТЬ наименование ИЗ справочник.города ГДЕ численность > 1500 ИЛИ численность < 500
54;"SELECT Census_Ranking FROM city WHERE Status !=  ""Village""";"ВЫБРАТЬ Census_Ranking ИЗ справочник.города ГДЕ кодстраны <> ""Village"""
55;"SELECT Census_Ranking FROM city WHERE Status !=  ""Village""";"ВЫБРАТЬ Census_Ranking ИЗ справочник.города ГДЕ кодстраны <> ""Village"""
56;SELECT T1.course_name FROM courses AS T1 JOIN student_course_registrations AS T2 ON T1.course_id = T2.course_Id GROUP BY T1.course_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.наименование ИЗ справочник.курсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.регистрациястудентовнакурсы КАК T2 ПО T1.ссылка = T2.курс СГРУППИРОВАТЬ ПО T1.ссылка УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
57;SELECT T1.course_name FROM courses AS T1 JOIN student_course_registrations AS T2 ON T1.course_id = T2.course_Id GROUP BY T1.course_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.наименование ИЗ справочник.курсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.регистрациястудентовнакурсы КАК T2 ПО T1.ссылка = T2.курс СГРУППИРОВАТЬ ПО T1.ссылка УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
58;SELECT student_id FROM student_course_registrations GROUP BY student_id ORDER BY count(*) LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 студент ИЗ регистрсведений.регистрациястудентовнакурсы СГРУППИРОВАТЬ ПО студент УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*)
59;SELECT student_id FROM student_course_registrations GROUP BY student_id ORDER BY count(*) LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 студент ИЗ регистрсведений.регистрациястудентовнакурсы СГРУППИРОВАТЬ ПО студент УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*)
60;SELECT T2.first_name ,  T2.last_name FROM candidates AS T1 JOIN people AS T2 ON T1.candidate_id = T2.person_id;ВЫБРАТЬ T2.имя , T2.фамилия ИЗ справочник.кандидаты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.люди КАК T2 ПО T1.ссылка = T2.ссылка
61;SELECT T2.first_name ,  T2.last_name FROM candidates AS T1 JOIN people AS T2 ON T1.candidate_id = T2.person_id;ВЫБРАТЬ T2.имя , T2.фамилия ИЗ справочник.кандидаты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.люди КАК T2 ПО T1.ссылка = T2.ссылка
62;SELECT student_id FROM students WHERE student_id NOT IN (SELECT student_id FROM student_course_attendance);ВЫБРАТЬ student_id ИЗ справочник.студенты ГДЕ student_id НЕ В (ВЫБРАТЬ student_id ИЗ регистрсведений.посещаемостьстудентов)
63;SELECT student_id FROM students WHERE student_id NOT IN (SELECT student_id FROM student_course_attendance);ВЫБРАТЬ student_id ИЗ справочник.студенты ГДЕ student_id НЕ В (ВЫБРАТЬ student_id ИЗ регистрсведений.посещаемостьстудентов)
64;SELECT student_id FROM student_course_attendance;ВЫБРАТЬ студент ИЗ регистрсведений.посещаемостьстудентов
65;SELECT student_id FROM student_course_attendance;ВЫБРАТЬ студент ИЗ регистрсведений.посещаемостьстудентов
66;SELECT T1.student_id ,  T2.course_name FROM student_course_registrations AS T1 JOIN courses AS T2 ON T1.course_id = T2.course_id;ВЫБРАТЬ T1.студент , T2.наименование ИЗ регистрсведений.регистрациястудентовнакурсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.курсы КАК T2 ПО T1.курс = T2.ссылка
67;SELECT T2.student_details FROM student_course_registrations AS T1 JOIN students AS T2 ON T1.student_id = T2.student_id ORDER BY T1.registration_date DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.описание ИЗ регистрсведений.регистрациястудентовнакурсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК T2 ПО T1.студент = T2.ссылка УПОРЯДОЧИТЬ ПО T1.датарегистрации УБЫВ
68;SELECT T2.student_details FROM student_course_registrations AS T1 JOIN students AS T2 ON T1.student_id = T2.student_id ORDER BY T1.registration_date DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.описание ИЗ регистрсведений.регистрациястудентовнакурсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК T2 ПО T1.студент = T2.ссылка УПОРЯДОЧИТЬ ПО T1.датарегистрации УБЫВ
69;"SELECT count(*) FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = ""English""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.курсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.посещаемостьстудентов КАК T2 ПО T1.ссылка = T2.курс ГДЕ T1.наименование = ""English"""
70;"SELECT count(*) FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = ""English""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.курсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.посещаемостьстудентов КАК T2 ПО T1.ссылка = T2.курс ГДЕ T1.наименование = ""English"""
71;SELECT count(*) FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T2.student_id = 171;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.курсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.посещаемостьстудентов КАК T2 ПО T1.ссылка = T2.курс ГДЕ T2.студент = 171
72;SELECT count(*) FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T2.student_id = 171;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.курсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.посещаемостьстудентов КАК T2 ПО T1.ссылка = T2.курс ГДЕ T2.студент = 171
73;"SELECT T2.candidate_id FROM people AS T1 JOIN candidates AS T2 ON T1.person_id = T2.candidate_id WHERE T1.email_address = ""stanley.monahan@example.org""";"ВЫБРАТЬ T2.ссылка ИЗ справочник.люди КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.кандидаты КАК T2 ПО T1.ссылка = T2.ссылка ГДЕ T1.элпочта = ""stanley.monahan@example.org"""
74;"SELECT T2.candidate_id FROM people AS T1 JOIN candidates AS T2 ON T1.person_id = T2.candidate_id WHERE T1.email_address = ""stanley.monahan@example.org""";"ВЫБРАТЬ T2.ссылка ИЗ справочник.люди КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.кандидаты КАК T2 ПО T1.ссылка = T2.ссылка ГДЕ T1.элпочта = ""stanley.monahan@example.org"""
75;SELECT candidate_id FROM candidate_assessments ORDER BY assessment_date DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 кандидат ИЗ регистрсведений.оценкакандидатов УПОРЯДОЧИТЬ ПО датаоценки УБЫВ
76;SELECT candidate_id FROM candidate_assessments ORDER BY assessment_date DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 кандидат ИЗ регистрсведений.оценкакандидатов УПОРЯДОЧИТЬ ПО датаоценки УБЫВ
77;SELECT T1.student_details FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.описание ИЗ справочник.студенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.регистрациястудентовнакурсы КАК T2 ПО T1.ссылка = T2.студент СГРУППИРОВАТЬ ПО T1.ссылка УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
78;SELECT T1.student_details FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.описание ИЗ справочник.студенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.регистрациястудентовнакурсы КАК T2 ПО T1.ссылка = T2.студент СГРУППИРОВАТЬ ПО T1.ссылка УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
79;SELECT T1.student_id ,  count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id;ВЫБРАТЬ T1.ссылка , КОЛИЧЕСТВО(*) ИЗ справочник.студенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.регистрациястудентовнакурсы КАК T2 ПО T1.ссылка = T2.студент СГРУППИРОВАТЬ ПО T1.ссылка
80;SELECT T1.student_id ,  count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id;ВЫБРАТЬ T1.ссылка , КОЛИЧЕСТВО(*) ИЗ справочник.студенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.регистрациястудентовнакурсы КАК T2 ПО T1.ссылка = T2.студент СГРУППИРОВАТЬ ПО T1.ссылка
81;SELECT T3.course_name ,  count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id JOIN courses AS T3 ON T2.course_id = T3.course_id GROUP BY T2.course_id;ВЫБРАТЬ T3.наименование , КОЛИЧЕСТВО(*) ИЗ справочник.студенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.регистрациястудентовнакурсы КАК T2 ПО T1.ссылка = T2.студент ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.курсы КАК T3 ПО T2.курс = T3.ссылка СГРУППИРОВАТЬ ПО T2.курс
82;SELECT T3.course_name ,  count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id JOIN courses AS T3 ON T2.course_id = T3.course_id GROUP BY T2.course_id;ВЫБРАТЬ T3.наименование , КОЛИЧЕСТВО(*) ИЗ справочник.студенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.регистрациястудентовнакурсы КАК T2 ПО T1.ссылка = T2.студент ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.курсы КАК T3 ПО T2.курс = T3.ссылка СГРУППИРОВАТЬ ПО T2.курс
83;"SELECT candidate_id FROM candidate_assessments WHERE asessment_outcome_code = ""Pass""";"ВЫБРАТЬ кандидат ИЗ регистрсведений.оценкакандидатов ГДЕ кодрезультатаоценки = ""Pass"""
84;"SELECT candidate_id FROM candidate_assessments WHERE asessment_outcome_code = ""Pass""";"ВЫБРАТЬ кандидат ИЗ регистрсведений.оценкакандидатов ГДЕ кодрезультатаоценки = ""Pass"""
85;"SELECT T3.cell_mobile_number FROM candidates AS T1 JOIN candidate_assessments AS T2 ON T1.candidate_id = T2.candidate_id JOIN people AS T3 ON T1.candidate_id = T3.person_id WHERE T2.asessment_outcome_code = ""Fail""";"ВЫБРАТЬ T3.мобильныйтелефон ИЗ справочник.кандидаты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.оценкакандидатов КАК T2 ПО T1.ссылка = T2.кандидат ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.люди КАК T3 ПО T1.ссылка = T3.ссылка ГДЕ T2.кодрезультатаоценки = ""Fail"""
86;"SELECT T3.cell_mobile_number FROM candidates AS T1 JOIN candidate_assessments AS T2 ON T1.candidate_id = T2.candidate_id JOIN people AS T3 ON T1.candidate_id = T3.person_id WHERE T2.asessment_outcome_code = ""Fail""";"ВЫБРАТЬ T3.мобильныйтелефон ИЗ справочник.кандидаты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.оценкакандидатов КАК T2 ПО T1.ссылка = T2.кандидат ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.люди КАК T3 ПО T1.ссылка = T3.ссылка ГДЕ T2.кодрезультатаоценки = ""Fail"""
87;SELECT student_id FROM student_course_attendance WHERE course_id  =  301;ВЫБРАТЬ студент ИЗ регистрсведений.посещаемостьстудентов ГДЕ курс = 301
88;SELECT student_id FROM student_course_attendance WHERE course_id  =  301;ВЫБРАТЬ студент ИЗ регистрсведений.посещаемостьстудентов ГДЕ курс = 301
89;SELECT student_id FROM student_course_attendance WHERE course_id = 301 ORDER BY date_of_attendance DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 студент ИЗ регистрсведений.посещаемостьстудентов ГДЕ курс = 301 УПОРЯДОЧИТЬ ПО датапосещения УБЫВ
90;SELECT student_id FROM student_course_attendance WHERE course_id = 301 ORDER BY date_of_attendance DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 студент ИЗ регистрсведений.посещаемостьстудентов ГДЕ курс = 301 УПОРЯДОЧИТЬ ПО датапосещения УБЫВ
91;SELECT DISTINCT T1.city FROM addresses AS T1 JOIN people_addresses AS T2 ON T1.address_id = T2.address_id;ВЫБРАТЬ РАЗЛИЧНЫЕ T1.город ИЗ справочник.адреса КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.адресалюдей КАК T2 ПО T1.ссылка = T2.адрес
92;SELECT DISTINCT T1.city FROM addresses AS T1 JOIN people_addresses AS T2 ON T1.address_id = T2.address_id;ВЫБРАТЬ РАЗЛИЧНЫЕ T1.город ИЗ справочник.адреса КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.адресалюдей КАК T2 ПО T1.ссылка = T2.адрес
93;SELECT DISTINCT T1.city FROM addresses AS T1 JOIN people_addresses AS T2 ON T1.address_id = T2.address_id JOIN students AS T3 ON T2.person_id = T3.student_id;ВЫБРАТЬ РАЗЛИЧНЫЕ T1.город ИЗ справочник.адреса КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.адресалюдей КАК T2 ПО T1.ссылка = T2.адрес ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК T3 ПО T2.человек = T3.ссылка
94;SELECT DISTINCT T1.city FROM addresses AS T1 JOIN people_addresses AS T2 ON T1.address_id = T2.address_id JOIN students AS T3 ON T2.person_id = T3.student_id;ВЫБРАТЬ РАЗЛИЧНЫЕ T1.город ИЗ справочник.адреса КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.адресалюдей КАК T2 ПО T1.ссылка = T2.адрес ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК T3 ПО T2.человек = T3.ссылка
95;SELECT course_name FROM courses ORDER BY course_name;ВЫБРАТЬ наименование ИЗ справочник.курсы УПОРЯДОЧИТЬ ПО наименование
96;SELECT course_name FROM courses ORDER BY course_name;ВЫБРАТЬ наименование ИЗ справочник.курсы УПОРЯДОЧИТЬ ПО наименование
97;SELECT first_name FROM people ORDER BY first_name;ВЫБРАТЬ имя ИЗ справочник.люди УПОРЯДОЧИТЬ ПО имя
98;SELECT first_name FROM people ORDER BY first_name;ВЫБРАТЬ имя ИЗ справочник.люди УПОРЯДОЧИТЬ ПО имя
99;SELECT student_id FROM student_course_registrations UNION SELECT student_id FROM student_course_attendance;ВЫБРАТЬ student_id ИЗ регистрсведений.регистрациястудентовнакурсы ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ student_id ИЗ регистрсведений.посещаемостьстудентов
100;SELECT student_id FROM student_course_registrations UNION SELECT student_id FROM student_course_attendance;ВЫБРАТЬ student_id ИЗ регистрсведений.регистрациястудентовнакурсы ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ student_id ИЗ регистрсведений.посещаемостьстудентов
101;SELECT course_id FROM student_course_registrations WHERE student_id = 121 UNION SELECT course_id FROM student_course_attendance WHERE student_id = 121;ВЫБРАТЬ курс ИЗ регистрсведений.регистрациястудентовнакурсы ГДЕ студент = 121 ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ курс ИЗ регистрсведений.посещаемостьстудентов ГДЕ студент = 121
102;SELECT course_id FROM student_course_registrations WHERE student_id = 121 UNION SELECT course_id FROM student_course_attendance WHERE student_id = 121;ВЫБРАТЬ курс ИЗ регистрсведений.регистрациястудентовнакурсы ГДЕ студент = 121 ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ курс ИЗ регистрсведений.посещаемостьстудентов ГДЕ студент = 121
103;SELECT * FROM student_course_registrations WHERE student_id NOT IN (SELECT student_id FROM student_course_attendance);ВЫБРАТЬ * ИЗ регистрсведений.регистрациястудентовнакурсы ГДЕ student_id НЕ В (ВЫБРАТЬ student_id ИЗ регистрсведений.посещаемостьстудентов)
104;SELECT * FROM student_course_registrations WHERE student_id NOT IN (SELECT student_id FROM student_course_attendance);ВЫБРАТЬ * ИЗ регистрсведений.регистрациястудентовнакурсы ГДЕ student_id НЕ В (ВЫБРАТЬ student_id ИЗ регистрсведений.посещаемостьстудентов)
105;"SELECT T2.student_id FROM courses AS T1 JOIN student_course_registrations AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = ""statistics"" ORDER BY T2.registration_date";"ВЫБРАТЬ T2.студент ИЗ справочник.курсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.регистрациястудентовнакурсы КАК T2 ПО T1.ссылка = T2.курс ГДЕ T1.наименование = ""statistics"" УПОРЯДОЧИТЬ ПО T2.датарегистрации"
106;"SELECT T2.student_id FROM courses AS T1 JOIN student_course_registrations AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = ""statistics"" ORDER BY T2.registration_date";"ВЫБРАТЬ T2.студент ИЗ справочник.курсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.регистрациястудентовнакурсы КАК T2 ПО T1.ссылка = T2.курс ГДЕ T1.наименование = ""statistics"" УПОРЯДОЧИТЬ ПО T2.датарегистрации"
107;"SELECT T2.student_id FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = ""statistics"" ORDER BY T2.date_of_attendance";"ВЫБРАТЬ T2.студент ИЗ справочник.курсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.посещаемостьстудентов КАК T2 ПО T1.ссылка = T2.курс ГДЕ T1.наименование = ""statistics"" УПОРЯДОЧИТЬ ПО T2.датапосещения"
108;"SELECT T2.student_id FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = ""statistics"" ORDER BY T2.date_of_attendance";"ВЫБРАТЬ T2.студент ИЗ справочник.курсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.посещаемостьстудентов КАК T2 ПО T1.ссылка = T2.курс ГДЕ T1.наименование = ""statistics"" УПОРЯДОЧИТЬ ПО T2.датапосещения"
109;SELECT date FROM weather WHERE max_temperature_f  >  85;ВЫБРАТЬ дата ИЗ регистрсведений.погода ГДЕ макстемператураf > 85
110;SELECT date FROM weather WHERE max_temperature_f  >  85;ВЫБРАТЬ дата ИЗ регистрсведений.погода ГДЕ макстемператураf > 85
111;SELECT name FROM station WHERE lat  <  37.5;ВЫБРАТЬ наименование ИЗ справочник.станции ГДЕ широта < 37.5
112;SELECT name FROM station WHERE lat  <  37.5;ВЫБРАТЬ наименование ИЗ справочник.станции ГДЕ широта < 37.5
113;SELECT city ,  max(lat) FROM station GROUP BY city;ВЫБРАТЬ город , МАКСИМУМ(широта) ИЗ справочник.станции СГРУППИРОВАТЬ ПО город
114;SELECT city ,  max(lat) FROM station GROUP BY city;ВЫБРАТЬ город , МАКСИМУМ(широта) ИЗ справочник.станции СГРУППИРОВАТЬ ПО город
115;SELECT start_station_name ,  end_station_name FROM trip ORDER BY id LIMIT 3;ВЫБРАТЬ ПЕРВЫЕ 3 станцияначала , станцияокончания ИЗ документ.поездка УПОРЯДОЧИТЬ ПО ссылка
116;SELECT start_station_name ,  end_station_name FROM trip ORDER BY id LIMIT 3;ВЫБРАТЬ ПЕРВЫЕ 3 станцияначала , станцияокончания ИЗ документ.поездка УПОРЯДОЧИТЬ ПО ссылка
117;"SELECT avg(lat) ,  avg(long) FROM station WHERE city  =  ""San Jose""";"ВЫБРАТЬ СРЕДНЕЕ(широта) , СРЕДНЕЕ(долгота) ИЗ справочник.станции ГДЕ город = ""San Jose"""
118;"SELECT avg(lat) ,  avg(long) FROM station WHERE city  =  ""San Jose""";"ВЫБРАТЬ СРЕДНЕЕ(широта) , СРЕДНЕЕ(долгота) ИЗ справочник.станции ГДЕ город = ""San Jose"""
119;SELECT id FROM trip ORDER BY duration LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 ссылка ИЗ документ.поездка УПОРЯДОЧИТЬ ПО длительность
120;SELECT id FROM trip ORDER BY duration LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 ссылка ИЗ документ.поездка УПОРЯДОЧИТЬ ПО длительность
121;SELECT sum(duration) ,  max(duration) FROM trip WHERE bike_id  =  636;ВЫБРАТЬ СУММА(длительность) , МАКСИМУМ(длительность) ИЗ документ.поездка ГДЕ велосипед = 636
122;SELECT sum(duration) ,  max(duration) FROM trip WHERE bike_id  =  636;ВЫБРАТЬ СУММА(длительность) , МАКСИМУМ(длительность) ИЗ документ.поездка ГДЕ велосипед = 636
123;"SELECT zip_code  ,  avg(mean_temperature_f) FROM weather WHERE date LIKE ""8/%"" GROUP BY zip_code";"ВЫБРАТЬ почтовыйиндекс , СРЕДНЕЕ(сртемператураf) ИЗ регистрсведений.погода ГДЕ дата ПОДОБНО ""8/%"" СГРУППИРОВАТЬ ПО почтовыйиндекс"
124;"SELECT zip_code  ,  avg(mean_temperature_f) FROM weather WHERE date LIKE ""8/%"" GROUP BY zip_code";"ВЫБРАТЬ почтовыйиндекс , СРЕДНЕЕ(сртемператураf) ИЗ регистрсведений.погода ГДЕ дата ПОДОБНО ""8/%"" СГРУППИРОВАТЬ ПО почтовыйиндекс"
125;SELECT count(DISTINCT bike_id) FROM trip;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ велосипед) ИЗ документ.поездка
126;SELECT count(DISTINCT bike_id) FROM trip;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ велосипед) ИЗ документ.поездка
127;SELECT count(DISTINCT city) FROM station;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ город) ИЗ справочник.станции
128;SELECT count(DISTINCT city) FROM station;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ город) ИЗ справочник.станции
129;"SELECT COUNT(*) FROM station WHERE city  =  ""Mountain View""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.станции ГДЕ город = ""Mountain View"""
130;"SELECT COUNT(*) FROM station WHERE city  =  ""Mountain View""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.станции ГДЕ город = ""Mountain View"""
131;SELECT DISTINCT T1.name FROM station AS T1 JOIN status AS T2 ON T1.id  =  T2.station_id WHERE T2.bikes_available  =  7;ВЫБРАТЬ РАЗЛИЧНЫЕ T1.наименование ИЗ справочник.станции КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.состояниестанций КАК T2 ПО T1.ссылка = T2.станция ГДЕ T2.велосипедовдоступно = 7
132;SELECT DISTINCT T1.name FROM station AS T1 JOIN status AS T2 ON T1.id  =  T2.station_id WHERE T2.bikes_available  =  7;ВЫБРАТЬ РАЗЛИЧНЫЕ T1.наименование ИЗ справочник.станции КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.состояниестанций КАК T2 ПО T1.ссылка = T2.станция ГДЕ T2.велосипедовдоступно = 7
133;"SELECT start_station_name ,  start_station_id FROM trip WHERE start_date LIKE ""8/%"" GROUP BY start_station_name ORDER BY COUNT(*) DESC LIMIT 1";"ВЫБРАТЬ ПЕРВЫЕ 1 станцияначала , наименованиестанцииначала ИЗ документ.поездка ГДЕ датаначала ПОДОБНО ""8/%"" СГРУППИРОВАТЬ ПО станцияначала УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ"
134;"SELECT start_station_name ,  start_station_id FROM trip WHERE start_date LIKE ""8/%"" GROUP BY start_station_name ORDER BY COUNT(*) DESC LIMIT 1";"ВЫБРАТЬ ПЕРВЫЕ 1 станцияначала , наименованиестанцииначала ИЗ документ.поездка ГДЕ датаначала ПОДОБНО ""8/%"" СГРУППИРОВАТЬ ПО станцияначала УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ"
135;SELECT bike_id FROM trip WHERE zip_code  =  94002 GROUP BY bike_id ORDER BY COUNT(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 велосипед ИЗ документ.поездка ГДЕ почтовыйиндекс = 94002 СГРУППИРОВАТЬ ПО велосипед УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
136;SELECT bike_id FROM trip WHERE zip_code  =  94002 GROUP BY bike_id ORDER BY COUNT(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 велосипед ИЗ документ.поездка ГДЕ почтовыйиндекс = 94002 СГРУППИРОВАТЬ ПО велосипед УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
137;SELECT COUNT(*) FROM weather WHERE mean_humidity  >  50 AND mean_visibility_miles  >  8;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.погода ГДЕ срвлажность > 50 И срвидимость > 8
138;SELECT COUNT(*) FROM weather WHERE mean_humidity  >  50 AND mean_visibility_miles  >  8;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.погода ГДЕ срвлажность > 50 И срвидимость > 8
139;SELECT T1.lat ,  T1.long ,  T1.city FROM station AS T1 JOIN trip AS T2 ON T1.id  =  T2.start_station_id ORDER BY T2.duration LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.широта , T1.долгота , T1.город ИЗ справочник.станции КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.поездка КАК T2 ПО T1.ссылка = T2.наименованиестанцииначала УПОРЯДОЧИТЬ ПО T2.длительность
140;SELECT T1.lat ,  T1.long ,  T1.city FROM station AS T1 JOIN trip AS T2 ON T1.id  =  T2.start_station_id ORDER BY T2.duration LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.широта , T1.долгота , T1.город ИЗ справочник.станции КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.поездка КАК T2 ПО T1.ссылка = T2.наименованиестанцииначала УПОРЯДОЧИТЬ ПО T2.длительность
143;"SELECT T1.name ,  T1.id FROM station AS T1 JOIN status AS T2 ON T1.id  =  T2.station_id GROUP BY T2.station_id HAVING avg(T2.bikes_available)  >  14 UNION SELECT name ,  id FROM station WHERE installation_date LIKE ""12/%""";"ВЫБРАТЬ T1.наименование , T1.ссылка ИЗ справочник.станции КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.состояниестанций КАК T2 ПО T1.ссылка = T2.станция СГРУППИРОВАТЬ ПО T2.станция ИМЕЮЩИЕ СРЕДНЕЕ(T2.велосипедовдоступно) > 14 ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ name , id ИЗ справочник.станции ГДЕ installation_date ПОДОБНО ""12/%"""
144;"SELECT T1.name ,  T1.id FROM station AS T1 JOIN status AS T2 ON T1.id  =  T2.station_id GROUP BY T2.station_id HAVING avg(T2.bikes_available)  >  14 UNION SELECT name ,  id FROM station WHERE installation_date LIKE ""12/%""";"ВЫБРАТЬ T1.наименование , T1.ссылка ИЗ справочник.станции КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.состояниестанций КАК T2 ПО T1.ссылка = T2.станция СГРУППИРОВАТЬ ПО T2.станция ИМЕЮЩИЕ СРЕДНЕЕ(T2.велосипедовдоступно) > 14 ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ name , id ИЗ справочник.станции ГДЕ installation_date ПОДОБНО ""12/%"""
145;SELECT cloud_cover FROM weather WHERE zip_code  =  94107 GROUP BY cloud_cover ORDER BY COUNT (*) DESC LIMIT 3;ВЫБРАТЬ ПЕРВЫЕ 3 облачность ИЗ регистрсведений.погода ГДЕ почтовыйиндекс = 94107 СГРУППИРОВАТЬ ПО облачность УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО (*) УБЫВ
146;SELECT cloud_cover FROM weather WHERE zip_code  =  94107 GROUP BY cloud_cover ORDER BY COUNT (*) DESC LIMIT 3;ВЫБРАТЬ ПЕРВЫЕ 3 облачность ИЗ регистрсведений.погода ГДЕ почтовыйиндекс = 94107 СГРУППИРОВАТЬ ПО облачность УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО (*) УБЫВ
147;SELECT zip_code FROM weather GROUP BY zip_code ORDER BY avg(mean_sea_level_pressure_inches) LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 почтовыйиндекс ИЗ регистрсведений.погода СГРУППИРОВАТЬ ПО почтовыйиндекс УПОРЯДОЧИТЬ ПО СРЕДНЕЕ(срдавление)
148;SELECT zip_code FROM weather GROUP BY zip_code ORDER BY avg(mean_sea_level_pressure_inches) LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 почтовыйиндекс ИЗ регистрсведений.погода СГРУППИРОВАТЬ ПО почтовыйиндекс УПОРЯДОЧИТЬ ПО СРЕДНЕЕ(срдавление)
149;"SELECT avg(bikes_available) FROM status WHERE station_id NOT IN (SELECT id FROM station WHERE city  =  ""Palo Alto"")";"ВЫБРАТЬ СРЕДНЕЕ(bikes_available) ИЗ регистрсведений.состояниестанций ГДЕ station_id НЕ В (ВЫБРАТЬ ссылка ИЗ справочник.станции ГДЕ город = ""Palo Alto"")"
150;"SELECT avg(bikes_available) FROM status WHERE station_id NOT IN (SELECT id FROM station WHERE city  =  ""Palo Alto"")";"ВЫБРАТЬ СРЕДНЕЕ(bikes_available) ИЗ регистрсведений.состояниестанций ГДЕ station_id НЕ В (ВЫБРАТЬ ссылка ИЗ справочник.станции ГДЕ город = ""Palo Alto"")"
151;SELECT avg(long) FROM station WHERE id NOT IN (SELECT station_id FROM status GROUP BY station_id HAVING max(bikes_available)  >  10);ВЫБРАТЬ СРЕДНЕЕ(long) ИЗ справочник.станции ГДЕ id НЕ В (ВЫБРАТЬ station_id ИЗ регистрсведений.состояниестанций СГРУППИРОВАТЬ ПО station_id ИМЕЮЩИЕ МАКСИМУМ(bikes_available) > 10)
152;SELECT avg(long) FROM station WHERE id NOT IN (SELECT station_id FROM status GROUP BY station_id HAVING max(bikes_available)  >  10);ВЫБРАТЬ СРЕДНЕЕ(long) ИЗ справочник.станции ГДЕ id НЕ В (ВЫБРАТЬ station_id ИЗ регистрсведений.состояниестанций СГРУППИРОВАТЬ ПО station_id ИМЕЮЩИЕ МАКСИМУМ(bikes_available) > 10)
153;SELECT date ,  zip_code FROM weather WHERE max_temperature_f  >=  80;ВЫБРАТЬ дата , почтовыйиндекс ИЗ регистрсведений.погода ГДЕ макстемператураf >= 80
154;SELECT date ,  zip_code FROM weather WHERE max_temperature_f  >=  80;ВЫБРАТЬ дата , почтовыйиндекс ИЗ регистрсведений.погода ГДЕ макстемператураf >= 80
155;SELECT T1.id FROM trip AS T1 JOIN weather AS T2 ON T1.zip_code  =  T2.zip_code GROUP BY T2.zip_code HAVING avg(T2.mean_temperature_f)  >  60;ВЫБРАТЬ T1.ссылка ИЗ документ.поездка КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.погода КАК T2 ПО T1.почтовыйиндекс = T2.почтовыйиндекс СГРУППИРОВАТЬ ПО T2.почтовыйиндекс ИМЕЮЩИЕ СРЕДНЕЕ(T2.сртемператураf) > 60
156;SELECT T1.id FROM trip AS T1 JOIN weather AS T2 ON T1.zip_code  =  T2.zip_code GROUP BY T2.zip_code HAVING avg(T2.mean_temperature_f)  >  60;ВЫБРАТЬ T1.ссылка ИЗ документ.поездка КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.погода КАК T2 ПО T1.почтовыйиндекс = T2.почтовыйиндекс СГРУППИРОВАТЬ ПО T2.почтовыйиндекс ИМЕЮЩИЕ СРЕДНЕЕ(T2.сртемператураf) > 60
157;SELECT zip_code , count(*) FROM weather WHERE max_wind_Speed_mph  >=  25 GROUP BY zip_code;ВЫБРАТЬ почтовыйиндекс , КОЛИЧЕСТВО(*) ИЗ регистрсведений.погода ГДЕ максскоростьветра >= 25 СГРУППИРОВАТЬ ПО почтовыйиндекс
158;SELECT zip_code , count(*) FROM weather WHERE max_wind_Speed_mph  >=  25 GROUP BY zip_code;ВЫБРАТЬ почтовыйиндекс , КОЛИЧЕСТВО(*) ИЗ регистрсведений.погода ГДЕ максскоростьветра >= 25 СГРУППИРОВАТЬ ПО почтовыйиндекс
159;SELECT date ,  zip_code FROM weather WHERE min_dew_point_f  <  (SELECT min(min_dew_point_f) FROM weather WHERE zip_code  =  94107);ВЫБРАТЬ дата , почтовыйиндекс ИЗ регистрсведений.погода ГДЕ минточкаросыf < (ВЫБРАТЬ МИНИМУМ(минточкаросыf) ИЗ регистрсведений.погода ГДЕ почтовыйиндекс = 94107)
160;SELECT date ,  zip_code FROM weather WHERE min_dew_point_f  <  (SELECT min(min_dew_point_f) FROM weather WHERE zip_code  =  94107);ВЫБРАТЬ дата , почтовыйиндекс ИЗ регистрсведений.погода ГДЕ минточкаросыf < (ВЫБРАТЬ МИНИМУМ(минточкаросыf) ИЗ регистрсведений.погода ГДЕ почтовыйиндекс = 94107)
161;SELECT T1.id ,  T2.installation_date FROM trip AS T1 JOIN station AS T2 ON T1.end_station_id  =  T2.id;ВЫБРАТЬ T1.ссылка , T2.датаустановки ИЗ документ.поездка КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.станции КАК T2 ПО T1.наименованиестанцииокончания = T2.ссылка
162;SELECT T1.id ,  T2.installation_date FROM trip AS T1 JOIN station AS T2 ON T1.end_station_id  =  T2.id;ВЫБРАТЬ T1.ссылка , T2.датаустановки ИЗ документ.поездка КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.станции КАК T2 ПО T1.наименованиестанцииокончания = T2.ссылка
163;SELECT T1.id FROM trip AS T1 JOIN station AS T2 ON T1.start_station_id  =  T2.id ORDER BY T2.dock_count DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.ссылка ИЗ документ.поездка КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.станции КАК T2 ПО T1.наименованиестанцииначала = T2.ссылка УПОРЯДОЧИТЬ ПО T2.количествостоек УБЫВ
164;SELECT T1.id FROM trip AS T1 JOIN station AS T2 ON T1.start_station_id  =  T2.id ORDER BY T2.dock_count DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.ссылка ИЗ документ.поездка КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.станции КАК T2 ПО T1.наименованиестанцииначала = T2.ссылка УПОРЯДОЧИТЬ ПО T2.количествостоек УБЫВ
165;"SELECT count(*) FROM trip AS T1 JOIN station AS T2 ON T1.end_station_id  =  T2.id WHERE T2.city !=  ""San Francisco""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ документ.поездка КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.станции КАК T2 ПО T1.наименованиестанцииокончания = T2.ссылка ГДЕ T2.город <> ""San Francisco"""
166;"SELECT count(*) FROM trip AS T1 JOIN station AS T2 ON T1.end_station_id  =  T2.id WHERE T2.city != ""San Francisco""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ документ.поездка КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.станции КАК T2 ПО T1.наименованиестанцииокончания = T2.ссылка ГДЕ T2.город <> ""San Francisco"""
167;"SELECT date FROM weather WHERE zip_code  =  94107 AND EVENTS != ""Fog"" AND EVENTS != ""Rain""";"ВЫБРАТЬ дата ИЗ регистрсведений.погода ГДЕ почтовыйиндекс = 94107 И явления <> ""Fog"" И явления <> ""Rain"""
168;"SELECT date FROM weather WHERE zip_code  =  94107 AND EVENTS != ""Fog"" AND EVENTS != ""Rain""";"ВЫБРАТЬ дата ИЗ регистрсведений.погода ГДЕ почтовыйиндекс = 94107 И явления <> ""Fog"" И явления <> ""Rain"""
173;SELECT name ,  lat ,  city FROM station ORDER BY lat LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование , широта , город ИЗ справочник.станции УПОРЯДОЧИТЬ ПО широта
174;SELECT name ,  lat ,  city FROM station ORDER BY lat LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование , широта , город ИЗ справочник.станции УПОРЯДОЧИТЬ ПО широта
175;SELECT date ,  mean_temperature_f ,  mean_humidity FROM weather ORDER BY max_gust_speed_mph DESC LIMIT 3;ВЫБРАТЬ ПЕРВЫЕ 3 дата , сртемператураf , срвлажность ИЗ регистрсведений.погода УПОРЯДОЧИТЬ ПО макспорывветра УБЫВ
176;SELECT date ,  mean_temperature_f ,  mean_humidity FROM weather ORDER BY max_gust_speed_mph DESC LIMIT 3;ВЫБРАТЬ ПЕРВЫЕ 3 дата , сртемператураf , срвлажность ИЗ регистрсведений.погода УПОРЯДОЧИТЬ ПО макспорывветра УБЫВ
177;SELECT city ,  COUNT(*) FROM station GROUP BY city HAVING COUNT(*)  >=  15;ВЫБРАТЬ город , КОЛИЧЕСТВО(*) ИЗ справочник.станции СГРУППИРОВАТЬ ПО город ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 15
178;SELECT city ,  COUNT(*) FROM station GROUP BY city HAVING COUNT(*)  >=  15;ВЫБРАТЬ город , КОЛИЧЕСТВО(*) ИЗ справочник.станции СГРУППИРОВАТЬ ПО город ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 15
179;SELECT start_station_id ,  start_station_name FROM trip GROUP BY start_station_name HAVING COUNT(*)  >=  200;ВЫБРАТЬ наименованиестанцииначала , станцияначала ИЗ документ.поездка СГРУППИРОВАТЬ ПО станцияначала ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 200
180;SELECT start_station_id ,  start_station_name FROM trip GROUP BY start_station_name HAVING COUNT(*)  >=  200;ВЫБРАТЬ наименованиестанцииначала , станцияначала ИЗ документ.поездка СГРУППИРОВАТЬ ПО станцияначала ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 200
181;SELECT zip_code FROM weather GROUP BY zip_code HAVING avg(mean_visibility_miles)  <  10;ВЫБРАТЬ почтовыйиндекс ИЗ регистрсведений.погода СГРУППИРОВАТЬ ПО почтовыйиндекс ИМЕЮЩИЕ СРЕДНЕЕ(срвидимость) < 10
182;SELECT zip_code FROM weather GROUP BY zip_code HAVING avg(mean_visibility_miles)  <  10;ВЫБРАТЬ почтовыйиндекс ИЗ регистрсведений.погода СГРУППИРОВАТЬ ПО почтовыйиндекс ИМЕЮЩИЕ СРЕДНЕЕ(срвидимость) < 10
183;SELECT city FROM station GROUP BY city ORDER BY max(lat) DESC;ВЫБРАТЬ город ИЗ справочник.станции СГРУППИРОВАТЬ ПО город УПОРЯДОЧИТЬ ПО МАКСИМУМ(широта) УБЫВ
184;SELECT city FROM station GROUP BY city ORDER BY max(lat) DESC;ВЫБРАТЬ город ИЗ справочник.станции СГРУППИРОВАТЬ ПО город УПОРЯДОЧИТЬ ПО МАКСИМУМ(широта) УБЫВ
185;SELECT date ,  cloud_cover FROM weather ORDER BY cloud_cover DESC LIMIT 5;ВЫБРАТЬ ПЕРВЫЕ 5 дата , облачность ИЗ регистрсведений.погода УПОРЯДОЧИТЬ ПО облачность УБЫВ
186;SELECT date ,  cloud_cover FROM weather ORDER BY cloud_cover DESC LIMIT 5;ВЫБРАТЬ ПЕРВЫЕ 5 дата , облачность ИЗ регистрсведений.погода УПОРЯДОЧИТЬ ПО облачность УБЫВ
187;SELECT id ,  duration FROM trip ORDER BY duration DESC LIMIT 3;ВЫБРАТЬ ПЕРВЫЕ 3 ссылка , длительность ИЗ документ.поездка УПОРЯДОЧИТЬ ПО длительность УБЫВ
188;SELECT id ,  duration FROM trip ORDER BY duration DESC LIMIT 3;ВЫБРАТЬ ПЕРВЫЕ 3 ссылка , длительность ИЗ документ.поездка УПОРЯДОЧИТЬ ПО длительность УБЫВ
189;SELECT T1.name ,  T1.long ,  avg(T2.duration) FROM station AS T1 JOIN trip AS T2 ON T1.id  =  T2.start_station_id GROUP BY T2.start_station_id;ВЫБРАТЬ T1.наименование , T1.долгота , СРЕДНЕЕ(T2.длительность) ИЗ справочник.станции КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.поездка КАК T2 ПО T1.ссылка = T2.наименованиестанцииначала СГРУППИРОВАТЬ ПО T2.наименованиестанцииначала
190;SELECT T1.name ,  T1.long ,  avg(T2.duration) FROM station AS T1 JOIN trip AS T2 ON T1.id  =  T2.start_station_id GROUP BY T2.start_station_id;ВЫБРАТЬ T1.наименование , T1.долгота , СРЕДНЕЕ(T2.длительность) ИЗ справочник.станции КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.поездка КАК T2 ПО T1.ссылка = T2.наименованиестанцииначала СГРУППИРОВАТЬ ПО T2.наименованиестанцииначала
191;SELECT T1.name ,  T1.lat ,  min(T2.duration) FROM station AS T1 JOIN trip AS T2 ON T1.id  =  T2.end_station_id GROUP BY T2.end_station_id;ВЫБРАТЬ T1.наименование , T1.широта , МИНИМУМ(T2.длительность) ИЗ справочник.станции КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.поездка КАК T2 ПО T1.ссылка = T2.наименованиестанцииокончания СГРУППИРОВАТЬ ПО T2.наименованиестанцииокончания
192;SELECT T1.name ,  T1.lat ,  min(T2.duration) FROM station AS T1 JOIN trip AS T2 ON T1.id  =  T2.end_station_id GROUP BY T2.end_station_id;ВЫБРАТЬ T1.наименование , T1.широта , МИНИМУМ(T2.длительность) ИЗ справочник.станции КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.поездка КАК T2 ПО T1.ссылка = T2.наименованиестанцииокончания СГРУППИРОВАТЬ ПО T2.наименованиестанцииокончания
193;SELECT DISTINCT start_station_name FROM trip WHERE duration  <  100;ВЫБРАТЬ РАЗЛИЧНЫЕ станцияначала ИЗ документ.поездка ГДЕ длительность < 100
194;SELECT DISTINCT start_station_name FROM trip WHERE duration  <  100;ВЫБРАТЬ РАЗЛИЧНЫЕ станцияначала ИЗ документ.поездка ГДЕ длительность < 100
197;SELECT id FROM trip WHERE duration  >=  (SELECT avg(duration) FROM trip WHERE zip_code  =  94103);ВЫБРАТЬ ссылка ИЗ документ.поездка ГДЕ длительность >= (ВЫБРАТЬ СРЕДНЕЕ(длительность) ИЗ документ.поездка ГДЕ почтовыйиндекс = 94103)
198;SELECT id FROM trip WHERE duration  >=  (SELECT avg(duration) FROM trip WHERE zip_code  =  94103);ВЫБРАТЬ ссылка ИЗ документ.поездка ГДЕ длительность >= (ВЫБРАТЬ СРЕДНЕЕ(длительность) ИЗ документ.поездка ГДЕ почтовыйиндекс = 94103)
199;SELECT date FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31;ВЫБРАТЬ дата ИЗ регистрсведений.погода ГДЕ срдавление МЕЖДУ 30.3 И 31
200;SELECT date FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31;ВЫБРАТЬ дата ИЗ регистрсведений.погода ГДЕ срдавление МЕЖДУ 30.3 И 31
201;SELECT date ,  max_temperature_f - min_temperature_f FROM weather ORDER BY max_temperature_f - min_temperature_f LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 дата , макстемператураf - минтемператураf ИЗ регистрсведений.погода УПОРЯДОЧИТЬ ПО макстемператураf - минтемператураf
202;SELECT date ,  max_temperature_f - min_temperature_f FROM weather ORDER BY max_temperature_f - min_temperature_f LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 дата , макстемператураf - минтемператураf ИЗ регистрсведений.погода УПОРЯДОЧИТЬ ПО макстемператураf - минтемператураf
203;SELECT DISTINCT T1.id ,  T1.name FROM station AS T1 JOIN status AS T2 ON T1.id  =  T2.station_id WHERE T2.bikes_available  >  12;ВЫБРАТЬ РАЗЛИЧНЫЕ T1.ссылка , T1.наименование ИЗ справочник.станции КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.состояниестанций КАК T2 ПО T1.ссылка = T2.станция ГДЕ T2.велосипедовдоступно > 12
204;SELECT DISTINCT T1.id ,  T1.name FROM station AS T1 JOIN status AS T2 ON T1.id  =  T2.station_id WHERE T2.bikes_available  >  12;ВЫБРАТЬ РАЗЛИЧНЫЕ T1.ссылка , T1.наименование ИЗ справочник.станции КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.состояниестанций КАК T2 ПО T1.ссылка = T2.станция ГДЕ T2.велосипедовдоступно > 12
209;"SELECT count(*) FROM station AS T1 JOIN trip AS T2 JOIN station AS T3 JOIN trip AS T4 ON T1.id  =  T2.start_station_id AND T2.id  =  T4.id AND T3.id  =  T4.end_station_id WHERE T1.city  =  ""Mountain View"" AND T3.city  =  ""Palo Alto""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.станции КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.поездка КАК T2 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.станции КАК T3 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.поездка КАК T4 ПО T1.ссылка = T2.наименованиестанцииначала И T2.ссылка = T4.ссылка И T3.ссылка = T4.наименованиестанцииокончания ГДЕ T1.город = ""Mountain View"" И T3.город = ""Palo Alto"""
210;"SELECT count(*) FROM station AS T1 JOIN trip AS T2 JOIN station AS T3 JOIN trip AS T4 ON T1.id  =  T2.start_station_id AND T2.id  =  T4.id AND T3.id  =  T4.end_station_id WHERE T1.city  =  ""Mountain View"" AND T3.city  =  ""Palo Alto""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.станции КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.поездка КАК T2 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.станции КАК T3 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.поездка КАК T4 ПО T1.ссылка = T2.наименованиестанцииначала И T2.ссылка = T4.ссылка И T3.ссылка = T4.наименованиестанцииокончания ГДЕ T1.город = ""Mountain View"" И T3.город = ""Palo Alto"""
211;SELECT avg(T1.lat) ,  avg(T1.long) FROM station AS T1 JOIN trip AS T2 ON T1.id  =  T2.start_station_id;ВЫБРАТЬ СРЕДНЕЕ(T1.широта) , СРЕДНЕЕ(T1.долгота) ИЗ справочник.станции КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.поездка КАК T2 ПО T1.ссылка = T2.наименованиестанцииначала
212;SELECT avg(T1.lat) ,  avg(T1.long) FROM station AS T1 JOIN trip AS T2 ON T1.id  =  T2.start_station_id;ВЫБРАТЬ СРЕДНЕЕ(T1.широта) , СРЕДНЕЕ(T1.долгота) ИЗ справочник.станции КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.поездка КАК T2 ПО T1.ссылка = T2.наименованиестанцииначала
213;SELECT count(*) FROM book;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.издания
214;SELECT Writer FROM book ORDER BY Writer ASC;ВЫБРАТЬ датаиздания ИЗ регистрсведений.издания УПОРЯДОЧИТЬ ПО датаиздания ВОЗР
215;SELECT Title FROM book ORDER BY Issues ASC;ВЫБРАТЬ книга ИЗ регистрсведений.издания УПОРЯДОЧИТЬ ПО издательство ВОЗР
216;"SELECT Title FROM book WHERE Writer != ""Elaine Lee""";"ВЫБРАТЬ книга ИЗ регистрсведений.издания ГДЕ датаиздания <> ""Elaine Lee"""
217;SELECT Title ,  Issues FROM book;ВЫБРАТЬ книга , издательство ИЗ регистрсведений.издания
218;SELECT Publication_Date FROM publication ORDER BY Price DESC;ВЫБРАТЬ автор ИЗ справочник.книги УПОРЯДОЧИТЬ ПО Price УБЫВ
219;SELECT DISTINCT Publisher FROM publication WHERE Price  >  5000000;ВЫБРАТЬ РАЗЛИЧНЫЕ количествовыпусков ИЗ справочник.книги ГДЕ Price > 5000000
220;SELECT Publisher FROM publication ORDER BY Price DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 количествовыпусков ИЗ справочник.книги УПОРЯДОЧИТЬ ПО Price УБЫВ
221;SELECT Publication_Date FROM publication ORDER BY Price ASC LIMIT 3;ВЫБРАТЬ ПЕРВЫЕ 3 автор ИЗ справочник.книги УПОРЯДОЧИТЬ ПО Price ВОЗР
222;SELECT T1.Title ,  T2.Publication_Date FROM book AS T1 JOIN publication AS T2 ON T1.Book_ID  =  T2.Book_ID;ВЫБРАТЬ T1.книга , T2.автор ИЗ регистрсведений.издания КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.книги КАК T2 ПО T1.ссылка = T2.название
223;SELECT T1.Writer FROM book AS T1 JOIN publication AS T2 ON T1.Book_ID  =  T2.Book_ID WHERE T2.Price  >  4000000;ВЫБРАТЬ T1.датаиздания ИЗ регистрсведений.издания КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.книги КАК T2 ПО T1.ссылка = T2.название ГДЕ T2.Price > 4000000
224;SELECT T1.Title FROM book AS T1 JOIN publication AS T2 ON T1.Book_ID  =  T2.Book_ID ORDER BY T2.Price DESC;ВЫБРАТЬ T1.книга ИЗ регистрсведений.издания КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.книги КАК T2 ПО T1.ссылка = T2.название УПОРЯДОЧИТЬ ПО T2.Price УБЫВ
225;SELECT Publisher FROM publication GROUP BY Publisher HAVING COUNT(*)  >  1;ВЫБРАТЬ количествовыпусков ИЗ справочник.книги СГРУППИРОВАТЬ ПО количествовыпусков ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 1
226;SELECT Publisher ,  COUNT(*) FROM publication GROUP BY Publisher;ВЫБРАТЬ количествовыпусков , КОЛИЧЕСТВО(*) ИЗ справочник.книги СГРУППИРОВАТЬ ПО количествовыпусков
227;SELECT Publication_Date FROM publication GROUP BY Publication_Date ORDER BY COUNT(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 автор ИЗ справочник.книги СГРУППИРОВАТЬ ПО автор УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
228;SELECT Writer FROM book GROUP BY Writer HAVING COUNT(*)  >  1;ВЫБРАТЬ датаиздания ИЗ регистрсведений.издания СГРУППИРОВАТЬ ПО датаиздания ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 1
229;SELECT Title FROM book WHERE Book_ID NOT IN (SELECT Book_ID FROM publication);ВЫБРАТЬ Title ИЗ регистрсведений.издания ГДЕ Book_ID НЕ В (ВЫБРАТЬ Book_ID ИЗ справочник.книги)
231;SELECT COUNT (DISTINCT Publication_Date) FROM publication;ВЫБРАТЬ КОЛИЧЕСТВО (РАЗЛИЧНЫЕ автор) ИЗ справочник.книги
232;SELECT COUNT (DISTINCT Publication_Date) FROM publication;ВЫБРАТЬ КОЛИЧЕСТВО (РАЗЛИЧНЫЕ автор) ИЗ справочник.книги
233;"SELECT Price FROM publication WHERE Publisher  =  ""Person"" OR Publisher  =  ""Wiley""";"ВЫБРАТЬ Price ИЗ справочник.книги ГДЕ количествовыпусков = ""Person"" ИЛИ количествовыпусков = ""Wiley"""
234;SELECT count(*) FROM actor;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.актеры
235;SELECT count(*) FROM actor;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.актеры
236;SELECT Name FROM actor ORDER BY Name ASC;ВЫБРАТЬ наименование ИЗ справочник.актеры УПОРЯДОЧИТЬ ПО наименование ВОЗР
237;SELECT Name FROM actor ORDER BY Name ASC;ВЫБРАТЬ наименование ИЗ справочник.актеры УПОРЯДОЧИТЬ ПО наименование ВОЗР
238;SELECT Character ,  Duration FROM actor;ВЫБРАТЬ персонаж , длительность ИЗ справочник.актеры
239;SELECT Character ,  Duration FROM actor;ВЫБРАТЬ персонаж , длительность ИЗ справочник.актеры
240;SELECT Name FROM actor WHERE Age != 20;ВЫБРАТЬ наименование ИЗ справочник.актеры ГДЕ возраст <> 20
241;SELECT Name FROM actor WHERE Age != 20;ВЫБРАТЬ наименование ИЗ справочник.актеры ГДЕ возраст <> 20
242;SELECT Character FROM actor ORDER BY age DESC;ВЫБРАТЬ персонаж ИЗ справочник.актеры УПОРЯДОЧИТЬ ПО возраст УБЫВ
243;SELECT Character FROM actor ORDER BY age DESC;ВЫБРАТЬ персонаж ИЗ справочник.актеры УПОРЯДОЧИТЬ ПО возраст УБЫВ
244;SELECT Duration FROM actor ORDER BY Age DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 длительность ИЗ справочник.актеры УПОРЯДОЧИТЬ ПО возраст УБЫВ
245;SELECT Duration FROM actor ORDER BY Age DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 длительность ИЗ справочник.актеры УПОРЯДОЧИТЬ ПО возраст УБЫВ
246;"SELECT Name FROM musical WHERE Nominee  =  ""Bob Fosse""";"ВЫБРАТЬ наименование ИЗ справочник.мюзиклы ГДЕ номинант = ""Bob Fosse"""
247;"SELECT Name FROM musical WHERE Nominee  =  ""Bob Fosse""";"ВЫБРАТЬ наименование ИЗ справочник.мюзиклы ГДЕ номинант = ""Bob Fosse"""
248;"SELECT DISTINCT Nominee FROM musical WHERE Award != ""Tony Award""";"ВЫБРАТЬ РАЗЛИЧНЫЕ номинант ИЗ справочник.мюзиклы ГДЕ премия <> ""Tony премия"""
249;"SELECT DISTINCT Nominee FROM musical WHERE Award != ""Tony Award""";"ВЫБРАТЬ РАЗЛИЧНЫЕ номинант ИЗ справочник.мюзиклы ГДЕ премия <> ""Tony премия"""
250;SELECT T1.Name ,  T2.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID;ВЫБРАТЬ T1.наименование , T2.наименование ИЗ справочник.актеры КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.мюзиклы КАК T2 ПО T1.мюзикл = T2.ссылка
251;SELECT T1.Name ,  T2.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID;ВЫБРАТЬ T1.наименование , T2.наименование ИЗ справочник.актеры КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.мюзиклы КАК T2 ПО T1.мюзикл = T2.ссылка
252;"SELECT T1.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID WHERE T2.Name  =  ""The Phantom of the Opera""";"ВЫБРАТЬ T1.наименование ИЗ справочник.актеры КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.мюзиклы КАК T2 ПО T1.мюзикл = T2.ссылка ГДЕ T2.наименование = ""The Phantom of the Opera"""
253;"SELECT T1.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID WHERE T2.Name  =  ""The Phantom of the Opera""";"ВЫБРАТЬ T1.наименование ИЗ справочник.актеры КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.мюзиклы КАК T2 ПО T1.мюзикл = T2.ссылка ГДЕ T2.наименование = ""The Phantom of the Opera"""
254;SELECT T1.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID ORDER BY T2.Year DESC;ВЫБРАТЬ T1.наименование ИЗ справочник.актеры КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.мюзиклы КАК T2 ПО T1.мюзикл = T2.ссылка УПОРЯДОЧИТЬ ПО T2.год УБЫВ
255;SELECT T1.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID ORDER BY T2.Year DESC;ВЫБРАТЬ T1.наименование ИЗ справочник.актеры КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.мюзиклы КАК T2 ПО T1.мюзикл = T2.ссылка УПОРЯДОЧИТЬ ПО T2.год УБЫВ
256;SELECT T2.Name ,  COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID;ВЫБРАТЬ T2.наименование , КОЛИЧЕСТВО(*) ИЗ справочник.актеры КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.мюзиклы КАК T2 ПО T1.мюзикл = T2.ссылка СГРУППИРОВАТЬ ПО T1.мюзикл
257;SELECT T2.Name ,  COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID;ВЫБРАТЬ T2.наименование , КОЛИЧЕСТВО(*) ИЗ справочник.актеры КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.мюзиклы КАК T2 ПО T1.мюзикл = T2.ссылка СГРУППИРОВАТЬ ПО T1.мюзикл
258;SELECT T2.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID HAVING COUNT(*)  >=  3;ВЫБРАТЬ T2.наименование ИЗ справочник.актеры КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.мюзиклы КАК T2 ПО T1.мюзикл = T2.ссылка СГРУППИРОВАТЬ ПО T1.мюзикл ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 3
259;SELECT T2.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID HAVING COUNT(*)  >=  3;ВЫБРАТЬ T2.наименование ИЗ справочник.актеры КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.мюзиклы КАК T2 ПО T1.мюзикл = T2.ссылка СГРУППИРОВАТЬ ПО T1.мюзикл ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 3
260;SELECT Nominee ,  COUNT(*) FROM musical GROUP BY Nominee;ВЫБРАТЬ номинант , КОЛИЧЕСТВО(*) ИЗ справочник.мюзиклы СГРУППИРОВАТЬ ПО номинант
261;SELECT Nominee ,  COUNT(*) FROM musical GROUP BY Nominee;ВЫБРАТЬ номинант , КОЛИЧЕСТВО(*) ИЗ справочник.мюзиклы СГРУППИРОВАТЬ ПО номинант
262;SELECT Nominee FROM musical GROUP BY Nominee ORDER BY COUNT(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 номинант ИЗ справочник.мюзиклы СГРУППИРОВАТЬ ПО номинант УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
263;SELECT Nominee FROM musical GROUP BY Nominee ORDER BY COUNT(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 номинант ИЗ справочник.мюзиклы СГРУППИРОВАТЬ ПО номинант УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
264;SELECT RESULT FROM musical GROUP BY RESULT ORDER BY COUNT(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 результат ИЗ справочник.мюзиклы СГРУППИРОВАТЬ ПО результат УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
265;SELECT RESULT FROM musical GROUP BY RESULT ORDER BY COUNT(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 результат ИЗ справочник.мюзиклы СГРУППИРОВАТЬ ПО результат УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
266;SELECT Nominee FROM musical GROUP BY Nominee HAVING COUNT(*)  >  2;ВЫБРАТЬ номинант ИЗ справочник.мюзиклы СГРУППИРОВАТЬ ПО номинант ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 2
267;SELECT Nominee FROM musical GROUP BY Nominee HAVING COUNT(*)  >  2;ВЫБРАТЬ номинант ИЗ справочник.мюзиклы СГРУППИРОВАТЬ ПО номинант ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 2
268;SELECT Name FROM musical WHERE Musical_ID NOT IN (SELECT Musical_ID FROM actor);ВЫБРАТЬ Name ИЗ справочник.мюзиклы ГДЕ Musical_ID НЕ В (ВЫБРАТЬ Musical_ID ИЗ справочник.актеры)
269;SELECT Name FROM musical WHERE Musical_ID NOT IN (SELECT Musical_ID FROM actor);ВЫБРАТЬ Name ИЗ справочник.мюзиклы ГДЕ Musical_ID НЕ В (ВЫБРАТЬ Musical_ID ИЗ справочник.актеры)
272;"SELECT Nominee FROM musical WHERE Award  =  ""Tony Award"" OR Award  =  ""Cleavant Derricks""";"ВЫБРАТЬ номинант ИЗ справочник.мюзиклы ГДЕ премия = ""Tony премия"" ИЛИ премия = ""Cleavant Derricks"""
273;"SELECT Nominee FROM musical WHERE Award  =  ""Tony Award"" OR Award  =  ""Cleavant Derricks""";"ВЫБРАТЬ номинант ИЗ справочник.мюзиклы ГДЕ премия = ""Tony премия"" ИЛИ премия = ""Cleavant Derricks"""
274;SELECT email FROM user_profiles WHERE name  =  'Mary';"ВЫБРАТЬ электроннаяпочта ИЗ справочник.пользователи ГДЕ наименование = ""Mary"""
275;SELECT partitionid FROM user_profiles WHERE name  =  'Iron Man';"ВЫБРАТЬ раздел ИЗ справочник.пользователи ГДЕ наименование = ""Iron Man"""
276;SELECT count(*) FROM user_profiles;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.пользователи
277;SELECT count(*) FROM follows;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.подписки
278;SELECT count(*) FROM follows GROUP BY f1;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.подписки СГРУППИРОВАТЬ ПО подписчик
279;SELECT count(*) FROM tweets;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ документ.твит
280;SELECT count(DISTINCT UID) FROM tweets;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ пользователь) ИЗ документ.твит
281;SELECT name ,  email FROM user_profiles WHERE name LIKE '%Swift%';"ВЫБРАТЬ наименование , электроннаяпочта ИЗ справочник.пользователи ГДЕ наименование ПОДОБНО ""%Swift%"""
282;SELECT name FROM user_profiles WHERE email LIKE '%superstar%' OR email LIKE '%edu%';"ВЫБРАТЬ наименование ИЗ справочник.пользователи ГДЕ электроннаяпочта ПОДОБНО ""%superstar%"" ИЛИ электроннаяпочта ПОДОБНО ""%edu%"""
283;SELECT text FROM tweets WHERE text LIKE '%intern%';"ВЫБРАТЬ текст ИЗ документ.твит ГДЕ текст ПОДОБНО ""%intern%"""
284;SELECT name ,  email FROM user_profiles WHERE followers  >  1000;ВЫБРАТЬ наименование , электроннаяпочта ИЗ справочник.пользователи ГДЕ количествоподписчиков > 1000
285;SELECT T1.name FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid  =  T2.f1 GROUP BY T2.f1 HAVING count(*)  >  (SELECT count(*) FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid  =  T2.f1 WHERE T1.name  =  'Tyler Swift');"ВЫБРАТЬ T1.наименование ИЗ справочник.пользователи КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.подписки КАК T2 ПО T1.ссылка = T2.подписчик СГРУППИРОВАТЬ ПО T2.подписчик ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > (ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.пользователи КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.подписки КАК T2 ПО T1.ссылка = T2.подписчик ГДЕ T1.наименование = ""Tyler Swift"")"
286;SELECT T1.name ,  T1.email FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid  =  T2.f1 GROUP BY T2.f1 HAVING count(*)  >  1;ВЫБРАТЬ T1.наименование , T1.электроннаяпочта ИЗ справочник.пользователи КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.подписки КАК T2 ПО T1.ссылка = T2.подписчик СГРУППИРОВАТЬ ПО T2.подписчик ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 1
287;SELECT T1.name FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid  =  T2.uid GROUP BY T2.uid HAVING count(*)  >  1;ВЫБРАТЬ T1.наименование ИЗ справочник.пользователи КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.твит КАК T2 ПО T1.ссылка = T2.пользователь СГРУППИРОВАТЬ ПО T2.пользователь ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 1
289;"SELECT T2.f1 FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid  =  T2.f2 WHERE T1.name  =  ""Mary"" OR T1.name  =  ""Susan""";"ВЫБРАТЬ T2.подписчик ИЗ справочник.пользователи КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.подписки КАК T2 ПО T1.ссылка = T2.подписанна ГДЕ T1.наименование = ""Mary"" ИЛИ T1.наименование = ""Susan"""
290;SELECT name FROM user_profiles ORDER BY followers DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование ИЗ справочник.пользователи УПОРЯДОЧИТЬ ПО количествоподписчиков УБЫВ
291;SELECT name ,  email FROM user_profiles ORDER BY followers LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование , электроннаяпочта ИЗ справочник.пользователи УПОРЯДОЧИТЬ ПО количествоподписчиков
292;SELECT name ,  followers FROM user_profiles ORDER BY followers DESC;ВЫБРАТЬ наименование , количествоподписчиков ИЗ справочник.пользователи УПОРЯДОЧИТЬ ПО количествоподписчиков УБЫВ
293;SELECT name FROM user_profiles ORDER BY followers DESC LIMIT 5;ВЫБРАТЬ ПЕРВЫЕ 5 наименование ИЗ справочник.пользователи УПОРЯДОЧИТЬ ПО количествоподписчиков УБЫВ
294;SELECT text FROM tweets ORDER BY createdate;ВЫБРАТЬ текст ИЗ документ.твит УПОРЯДОЧИТЬ ПО датасоздания
295;SELECT T1.name ,  count(*) FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid  =  T2.uid GROUP BY T2.uid;ВЫБРАТЬ T1.наименование , КОЛИЧЕСТВО(*) ИЗ справочник.пользователи КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.твит КАК T2 ПО T1.ссылка = T2.пользователь СГРУППИРОВАТЬ ПО T2.пользователь
296;SELECT T1.name ,  T1.partitionid FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid  =  T2.uid GROUP BY T2.uid HAVING count(*)  <  2;ВЫБРАТЬ T1.наименование , T1.раздел ИЗ справочник.пользователи КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.твит КАК T2 ПО T1.ссылка = T2.пользователь СГРУППИРОВАТЬ ПО T2.пользователь ИМЕЮЩИЕ КОЛИЧЕСТВО(*) < 2
297;SELECT T1.name ,  count(*) FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid  =  T2.uid GROUP BY T2.uid HAVING count(*)  >  1;ВЫБРАТЬ T1.наименование , КОЛИЧЕСТВО(*) ИЗ справочник.пользователи КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.твит КАК T2 ПО T1.ссылка = T2.пользователь СГРУППИРОВАТЬ ПО T2.пользователь ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 1
298;SELECT avg(followers) FROM user_profiles WHERE UID NOT IN (SELECT UID FROM tweets);ВЫБРАТЬ СРЕДНЕЕ(followers) ИЗ справочник.пользователи ГДЕ UID НЕ В (ВЫБРАТЬ UID ИЗ документ.твит)
299;SELECT avg(followers) FROM user_profiles WHERE UID IN (SELECT UID FROM tweets);ВЫБРАТЬ СРЕДНЕЕ(followers) ИЗ справочник.пользователи ГДЕ UID В (ВЫБРАТЬ UID ИЗ документ.твит)
300;SELECT max(followers) ,  sum(followers) FROM user_profiles;ВЫБРАТЬ МАКСИМУМ(количествоподписчиков) , СУММА(количествоподписчиков) ИЗ справочник.пользователи
301;SELECT distinct(catalog_entry_name) FROM catalog_contents;ВЫБРАТЬ distinct(наименование) ИЗ справочник.позициикаталога
302;SELECT distinct(catalog_entry_name) FROM catalog_contents;ВЫБРАТЬ distinct(наименование) ИЗ справочник.позициикаталога
303;SELECT attribute_data_type FROM Attribute_Definitions GROUP BY attribute_data_type HAVING count(*)  >  3;ВЫБРАТЬ типданных ИЗ справочник.атрибуты СГРУППИРОВАТЬ ПО типданных ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 3
304;SELECT attribute_data_type FROM Attribute_Definitions GROUP BY attribute_data_type HAVING count(*)  >  3;ВЫБРАТЬ типданных ИЗ справочник.атрибуты СГРУППИРОВАТЬ ПО типданных ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 3
305;"SELECT attribute_data_type FROM Attribute_Definitions WHERE attribute_name  =  ""Green""";"ВЫБРАТЬ типданных ИЗ справочник.атрибуты ГДЕ наименование = ""Green"""
306;"SELECT attribute_data_type FROM Attribute_Definitions WHERE attribute_name  =  ""Green""";"ВЫБРАТЬ типданных ИЗ справочник.атрибуты ГДЕ наименование = ""Green"""
307;SELECT catalog_level_name ,  catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10;ВЫБРАТЬ наименованиеуровня , номеруровня ИЗ справочник.уровникаталога ГДЕ номеруровня МЕЖДУ 5 И 10
308;SELECT catalog_level_name ,  catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10;ВЫБРАТЬ наименованиеуровня , номеруровня ИЗ справочник.уровникаталога ГДЕ номеруровня МЕЖДУ 5 И 10
309;"SELECT distinct(catalog_publisher) FROM catalogs WHERE catalog_publisher LIKE ""%Murray%""";"ВЫБРАТЬ distinct(издатель) ИЗ справочник.каталоги ГДЕ издатель ПОДОБНО ""%Murray%"""
310;"SELECT distinct(catalog_publisher) FROM catalogs WHERE catalog_publisher LIKE ""%Murray%""";"ВЫБРАТЬ distinct(издатель) ИЗ справочник.каталоги ГДЕ издатель ПОДОБНО ""%Murray%"""
311;SELECT catalog_publisher FROM catalogs GROUP BY catalog_publisher ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 издатель ИЗ справочник.каталоги СГРУППИРОВАТЬ ПО издатель УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
312;SELECT catalog_publisher FROM catalogs GROUP BY catalog_publisher ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 издатель ИЗ справочник.каталоги СГРУППИРОВАТЬ ПО издатель УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
313;SELECT t1.catalog_name ,  t1.date_of_publication FROM catalogs AS t1 JOIN catalog_structure AS t2 ON t1.catalog_id  =  t2.catalog_id WHERE catalog_level_number  >  5;ВЫБРАТЬ t1.наименование , t1.датапубликации ИЗ справочник.каталоги КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.уровникаталога КАК t2 ПО t1.ссылка = t2.каталог ГДЕ catalog_level_number > 5
314;SELECT t1.catalog_name ,  t1.date_of_publication FROM catalogs AS t1 JOIN catalog_structure AS t2 ON t1.catalog_id  =  t2.catalog_id WHERE catalog_level_number  >  5;ВЫБРАТЬ t1.наименование , t1.датапубликации ИЗ справочник.каталоги КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.уровникаталога КАК t2 ПО t1.ссылка = t2.каталог ГДЕ catalog_level_number > 5
315;SELECT t1.catalog_entry_name FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id  =  t2.catalog_entry_id WHERE t2.attribute_value  =  (SELECT attribute_value FROM Catalog_Contents_Additional_Attributes GROUP BY attribute_value ORDER BY count(*) DESC LIMIT 1);ВЫБРАТЬ t1.наименование ИЗ справочник.позициикаталога КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.допатрибутыкаталога КАК t2 ПО t1.ссылка = t2.позиция ГДЕ t2.значение = (ВЫБРАТЬ attribute_value ИЗ регистрсведений.допатрибутыкаталога СГРУППИРОВАТЬ ПО attribute_value УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ LIMIT 1)
316;SELECT t1.catalog_entry_name FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id  =  t2.catalog_entry_id WHERE t2.attribute_value  =  (SELECT attribute_value FROM Catalog_Contents_Additional_Attributes GROUP BY attribute_value ORDER BY count(*) DESC LIMIT 1);ВЫБРАТЬ t1.наименование ИЗ справочник.позициикаталога КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.допатрибутыкаталога КАК t2 ПО t1.ссылка = t2.позиция ГДЕ t2.значение = (ВЫБРАТЬ attribute_value ИЗ регистрсведений.допатрибутыкаталога СГРУППИРОВАТЬ ПО attribute_value УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ LIMIT 1)
317;SELECT catalog_entry_name FROM catalog_contents ORDER BY price_in_dollars DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование ИЗ справочник.позициикаталога УПОРЯДОЧИТЬ ПО ценавдолларах УБЫВ
318;SELECT catalog_entry_name FROM catalog_contents ORDER BY price_in_dollars DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование ИЗ справочник.позициикаталога УПОРЯДОЧИТЬ ПО ценавдолларах УБЫВ
319;SELECT t2.catalog_level_name FROM catalog_contents AS t1 JOIN catalog_structure AS t2 ON t1.catalog_level_number  =  t2.catalog_level_number ORDER BY t1.price_in_dollars LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 t2.наименованиеуровня ИЗ справочник.позициикаталога КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.уровникаталога КАК t2 ПО t1.уровень = t2.номеруровня УПОРЯДОЧИТЬ ПО t1.ценавдолларах
320;SELECT t2.catalog_level_name FROM catalog_contents AS t1 JOIN catalog_structure AS t2 ON t1.catalog_level_number  =  t2.catalog_level_number ORDER BY t1.price_in_dollars LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 t2.наименованиеуровня ИЗ справочник.позициикаталога КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.уровникаталога КАК t2 ПО t1.уровень = t2.номеруровня УПОРЯДОЧИТЬ ПО t1.ценавдолларах
321;SELECT avg(price_in_euros) ,  min(price_in_euros) FROM catalog_contents;ВЫБРАТЬ СРЕДНЕЕ(ценавевро) , МИНИМУМ(ценавевро) ИЗ справочник.позициикаталога
322;SELECT avg(price_in_euros) ,  min(price_in_euros) FROM catalog_contents;ВЫБРАТЬ СРЕДНЕЕ(ценавевро) , МИНИМУМ(ценавевро) ИЗ справочник.позициикаталога
323;SELECT catalog_entry_name FROM catalog_contents ORDER BY height DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование ИЗ справочник.позициикаталога УПОРЯДОЧИТЬ ПО высота УБЫВ
324;SELECT catalog_entry_name FROM catalog_contents ORDER BY height DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование ИЗ справочник.позициикаталога УПОРЯДОЧИТЬ ПО высота УБЫВ
325;SELECT catalog_entry_name FROM catalog_contents ORDER BY capacity ASC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование ИЗ справочник.позициикаталога УПОРЯДОЧИТЬ ПО вместимость ВОЗР
326;SELECT catalog_entry_name FROM catalog_contents ORDER BY capacity ASC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование ИЗ справочник.позициикаталога УПОРЯДОЧИТЬ ПО вместимость ВОЗР
327;"SELECT catalog_entry_name FROM catalog_contents WHERE product_stock_number LIKE ""2%""";"ВЫБРАТЬ наименование ИЗ справочник.позициикаталога ГДЕ артикул ПОДОБНО ""2%"""
328;"SELECT catalog_entry_name FROM catalog_contents WHERE product_stock_number LIKE ""2%""";"ВЫБРАТЬ наименование ИЗ справочник.позициикаталога ГДЕ артикул ПОДОБНО ""2%"""
329;"SELECT t1.catalog_entry_name FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id  =  t2.catalog_entry_id WHERE t2.catalog_level_number  =  ""8""";"ВЫБРАТЬ t1.наименование ИЗ справочник.позициикаталога КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.допатрибутыкаталога КАК t2 ПО t1.ссылка = t2.позиция ГДЕ t2.уровень = ""8"""
330;"SELECT t1.catalog_entry_name FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id  =  t2.catalog_entry_id WHERE t2.catalog_level_number  =  ""8""";"ВЫБРАТЬ t1.наименование ИЗ справочник.позициикаталога КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.допатрибутыкаталога КАК t2 ПО t1.ссылка = t2.позиция ГДЕ t2.уровень = ""8"""
331;SELECT catalog_entry_name FROM catalog_contents WHERE LENGTH  <  3 OR width  >  5;ВЫБРАТЬ наименование ИЗ справочник.позициикаталога ГДЕ длина < 3 ИЛИ ширина > 5
332;SELECT catalog_entry_name FROM catalog_contents WHERE LENGTH  <  3 OR width  >  5;ВЫБРАТЬ наименование ИЗ справочник.позициикаталога ГДЕ длина < 3 ИЛИ ширина > 5
333;SELECT t1.attribute_name ,  t1.attribute_id FROM Attribute_Definitions AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.attribute_id  =  t2.attribute_id WHERE t2.attribute_value  =  0;ВЫБРАТЬ t1.наименование , t1.ссылка ИЗ справочник.атрибуты КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.допатрибутыкаталога КАК t2 ПО t1.ссылка = t2.атрибут ГДЕ t2.значение = 0
334;SELECT t1.attribute_name ,  t1.attribute_id FROM Attribute_Definitions AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.attribute_id  =  t2.attribute_id WHERE t2.attribute_value  =  0;ВЫБРАТЬ t1.наименование , t1.ссылка ИЗ справочник.атрибуты КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.допатрибутыкаталога КАК t2 ПО t1.ссылка = t2.атрибут ГДЕ t2.значение = 0
335;SELECT catalog_entry_name ,  capacity FROM Catalog_Contents WHERE price_in_dollars  >  700;ВЫБРАТЬ наименование , вместимость ИЗ справочник.позициикаталога ГДЕ ценавдолларах > 700
336;SELECT catalog_entry_name ,  capacity FROM Catalog_Contents WHERE price_in_dollars  >  700;ВЫБРАТЬ наименование , вместимость ИЗ справочник.позициикаталога ГДЕ ценавдолларах > 700
337;SELECT date_of_latest_revision FROM Catalogs GROUP BY date_of_latest_revision HAVING count(*)  >  1;ВЫБРАТЬ датаобновления ИЗ справочник.каталоги СГРУППИРОВАТЬ ПО датаобновления ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 1
338;SELECT date_of_latest_revision FROM Catalogs GROUP BY date_of_latest_revision HAVING count(*)  >  1;ВЫБРАТЬ датаобновления ИЗ справочник.каталоги СГРУППИРОВАТЬ ПО датаобновления ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 1
339;SELECT count(*) FROM catalog_contents;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.позициикаталога
340;SELECT count(*) FROM catalog_contents;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.позициикаталога
341;SELECT catalog_entry_name FROM catalog_contents WHERE next_entry_id  >  8;ВЫБРАТЬ наименование ИЗ справочник.позициикаталога ГДЕ следующаяпозиция > 8
342;SELECT catalog_entry_name FROM catalog_contents WHERE next_entry_id  >  8;ВЫБРАТЬ наименование ИЗ справочник.позициикаталога ГДЕ следующаяпозиция > 8
343;SELECT count(*) FROM Aircraft;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.сотрудники
344;SELECT count(*) FROM Aircraft;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.сотрудники
345;SELECT name ,  distance FROM Aircraft;ВЫБРАТЬ наименование , оклад ИЗ справочник.сотрудники
346;SELECT name ,  distance FROM Aircraft;ВЫБРАТЬ наименование , оклад ИЗ справочник.сотрудники
347;SELECT aid FROM Aircraft WHERE distance  >  1000;ВЫБРАТЬ ссылка ИЗ справочник.сотрудники ГДЕ оклад > 1000
348;SELECT aid FROM Aircraft WHERE distance  >  1000;ВЫБРАТЬ ссылка ИЗ справочник.сотрудники ГДЕ оклад > 1000
349;SELECT count(*) FROM Aircraft WHERE distance BETWEEN 1000 AND 5000;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.сотрудники ГДЕ оклад МЕЖДУ 1000 И 5000
350;SELECT count(*) FROM Aircraft WHERE distance BETWEEN 1000 AND 5000;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.сотрудники ГДЕ оклад МЕЖДУ 1000 И 5000
351;SELECT name ,  distance FROM Aircraft WHERE aid  =  12;ВЫБРАТЬ наименование , оклад ИЗ справочник.сотрудники ГДЕ ссылка = 12
352;SELECT name ,  distance FROM Aircraft WHERE aid  =  12;ВЫБРАТЬ наименование , оклад ИЗ справочник.сотрудники ГДЕ ссылка = 12
353;SELECT min(distance) ,  avg(distance) ,  max(distance) FROM Aircraft;ВЫБРАТЬ МИНИМУМ(оклад) , СРЕДНЕЕ(оклад) , МАКСИМУМ(оклад) ИЗ справочник.сотрудники
354;SELECT min(distance) ,  avg(distance) ,  max(distance) FROM Aircraft;ВЫБРАТЬ МИНИМУМ(оклад) , СРЕДНЕЕ(оклад) , МАКСИМУМ(оклад) ИЗ справочник.сотрудники
355;SELECT aid ,  name FROM Aircraft ORDER BY distance DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 ссылка , наименование ИЗ справочник.сотрудники УПОРЯДОЧИТЬ ПО оклад УБЫВ
356;SELECT aid ,  name FROM Aircraft ORDER BY distance DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 ссылка , наименование ИЗ справочник.сотрудники УПОРЯДОЧИТЬ ПО оклад УБЫВ
357;SELECT name FROM Aircraft ORDER BY distance LIMIT 3;ВЫБРАТЬ ПЕРВЫЕ 3 наименование ИЗ справочник.сотрудники УПОРЯДОЧИТЬ ПО оклад
358;SELECT name FROM Aircraft ORDER BY distance LIMIT 3;ВЫБРАТЬ ПЕРВЫЕ 3 наименование ИЗ справочник.сотрудники УПОРЯДОЧИТЬ ПО оклад
359;SELECT name FROM Aircraft WHERE distance  >  (SELECT avg(distance) FROM Aircraft);ВЫБРАТЬ name ИЗ справочник.сотрудники ГДЕ distance > (ВЫБРАТЬ СРЕДНЕЕ(distance) ИЗ справочник.сотрудники)
360;SELECT name FROM Aircraft WHERE distance  >  (SELECT avg(distance) FROM Aircraft);ВЫБРАТЬ name ИЗ справочник.сотрудники ГДЕ distance > (ВЫБРАТЬ СРЕДНЕЕ(distance) ИЗ справочник.сотрудники)
361;SELECT count(*) FROM Employee;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ документ.рейсы
362;SELECT count(*) FROM Employee;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ документ.рейсы
363;SELECT name ,  salary FROM Employee ORDER BY salary;ВЫБРАТЬ номеррейса , аэропортотправления ИЗ документ.рейсы УПОРЯДОЧИТЬ ПО аэропортотправления
364;SELECT name ,  salary FROM Employee ORDER BY salary;ВЫБРАТЬ номеррейса , аэропортотправления ИЗ документ.рейсы УПОРЯДОЧИТЬ ПО аэропортотправления
365;SELECT eid FROM Employee WHERE salary  >  100000;ВЫБРАТЬ ссылка ИЗ документ.рейсы ГДЕ аэропортотправления > 100000
366;SELECT eid FROM Employee WHERE salary  >  100000;ВЫБРАТЬ ссылка ИЗ документ.рейсы ГДЕ аэропортотправления > 100000
367;SELECT count(*) FROM Employee WHERE salary BETWEEN 100000 AND 200000;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ документ.рейсы ГДЕ аэропортотправления МЕЖДУ 100000 И 200000
368;SELECT count(*) FROM Employee WHERE salary BETWEEN 100000 AND 200000;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ документ.рейсы ГДЕ аэропортотправления МЕЖДУ 100000 И 200000
369;SELECT name ,  salary FROM Employee WHERE eid  =  242518965;ВЫБРАТЬ номеррейса , аэропортотправления ИЗ документ.рейсы ГДЕ ссылка = 242518965
370;SELECT name ,  salary FROM Employee WHERE eid  =  242518965;ВЫБРАТЬ номеррейса , аэропортотправления ИЗ документ.рейсы ГДЕ ссылка = 242518965
371;SELECT avg(salary) ,  max(salary) FROM Employee;ВЫБРАТЬ СРЕДНЕЕ(аэропортотправления) , МАКСИМУМ(аэропортотправления) ИЗ документ.рейсы
372;SELECT avg(salary) ,  max(salary) FROM Employee;ВЫБРАТЬ СРЕДНЕЕ(аэропортотправления) , МАКСИМУМ(аэропортотправления) ИЗ документ.рейсы
373;SELECT eid ,  name FROM Employee ORDER BY salary DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 ссылка , номеррейса ИЗ документ.рейсы УПОРЯДОЧИТЬ ПО аэропортотправления УБЫВ
374;SELECT eid ,  name FROM Employee ORDER BY salary DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 ссылка , номеррейса ИЗ документ.рейсы УПОРЯДОЧИТЬ ПО аэропортотправления УБЫВ
375;SELECT name FROM Employee ORDER BY salary ASC LIMIT 3;ВЫБРАТЬ ПЕРВЫЕ 3 номеррейса ИЗ документ.рейсы УПОРЯДОЧИТЬ ПО аэропортотправления ВОЗР
376;SELECT name FROM Employee ORDER BY salary ASC LIMIT 3;ВЫБРАТЬ ПЕРВЫЕ 3 номеррейса ИЗ документ.рейсы УПОРЯДОЧИТЬ ПО аэропортотправления ВОЗР
377;SELECT name FROM Employee WHERE salary  >  (SELECT avg(salary) FROM Employee);ВЫБРАТЬ name ИЗ документ.рейсы ГДЕ salary > (ВЫБРАТЬ СРЕДНЕЕ(salary) ИЗ документ.рейсы)
378;SELECT name FROM Employee WHERE salary  >  (SELECT avg(salary) FROM Employee);ВЫБРАТЬ name ИЗ документ.рейсы ГДЕ salary > (ВЫБРАТЬ СРЕДНЕЕ(salary) ИЗ документ.рейсы)
379;SELECT eid ,  salary FROM Employee WHERE name  =  'Mark Young';"ВЫБРАТЬ ссылка , аэропортотправления ИЗ документ.рейсы ГДЕ номеррейса = ""Mark Young"""
380;SELECT eid ,  salary FROM Employee WHERE name  =  'Mark Young';"ВЫБРАТЬ ссылка , аэропортотправления ИЗ документ.рейсы ГДЕ номеррейса = ""Mark Young"""
381;SELECT count(*) FROM Flight;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.самолеты
382;SELECT count(*) FROM Flight;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.самолеты
383;SELECT flno ,  origin ,  destination FROM Flight ORDER BY origin;ВЫБРАТЬ ссылка , наименование , дальностьполета ИЗ справочник.самолеты УПОРЯДОЧИТЬ ПО наименование
384;SELECT flno ,  origin ,  destination FROM Flight ORDER BY origin;ВЫБРАТЬ ссылка , наименование , дальностьполета ИЗ справочник.самолеты УПОРЯДОЧИТЬ ПО наименование
385;"SELECT flno FROM Flight WHERE origin  =  ""Los Angeles""";"ВЫБРАТЬ ссылка ИЗ справочник.самолеты ГДЕ наименование = ""Los Angeles"""
386;"SELECT flno FROM Flight WHERE origin  =  ""Los Angeles""";"ВЫБРАТЬ ссылка ИЗ справочник.самолеты ГДЕ наименование = ""Los Angeles"""
387;"SELECT origin FROM Flight WHERE destination  =  ""Honolulu""";"ВЫБРАТЬ наименование ИЗ справочник.самолеты ГДЕ дальностьполета = ""Honolulu"""
388;"SELECT origin FROM Flight WHERE destination  =  ""Honolulu""";"ВЫБРАТЬ наименование ИЗ справочник.самолеты ГДЕ дальностьполета = ""Honolulu"""
389;"SELECT departure_date ,  arrival_date FROM Flight WHERE origin  =  ""Los Angeles"" AND destination  =  ""Honolulu""";"ВЫБРАТЬ departure_date , arrival_date ИЗ справочник.самолеты ГДЕ наименование = ""Los Angeles"" И дальностьполета = ""Honolulu"""
390;"SELECT departure_date ,  arrival_date FROM Flight WHERE origin  =  ""Los Angeles"" AND destination  =  ""Honolulu""";"ВЫБРАТЬ departure_date , arrival_date ИЗ справочник.самолеты ГДЕ наименование = ""Los Angeles"" И дальностьполета = ""Honolulu"""
391;SELECT flno FROM Flight WHERE distance  >  2000;ВЫБРАТЬ ссылка ИЗ справочник.самолеты ГДЕ distance > 2000
392;SELECT flno FROM Flight WHERE distance  >  2000;ВЫБРАТЬ ссылка ИЗ справочник.самолеты ГДЕ distance > 2000
393;"SELECT avg(price) FROM Flight WHERE origin  =  ""Los Angeles"" AND destination  =  ""Honolulu""";"ВЫБРАТЬ СРЕДНЕЕ(price) ИЗ справочник.самолеты ГДЕ наименование = ""Los Angeles"" И дальностьполета = ""Honolulu"""
394;"SELECT avg(price) FROM Flight WHERE origin  =  ""Los Angeles"" AND destination  =  ""Honolulu""";"ВЫБРАТЬ СРЕДНЕЕ(price) ИЗ справочник.самолеты ГДЕ наименование = ""Los Angeles"" И дальностьполета = ""Honolulu"""
395;SELECT origin ,  destination FROM Flight WHERE price  >  300;ВЫБРАТЬ наименование , дальностьполета ИЗ справочник.самолеты ГДЕ price > 300
396;SELECT origin ,  destination FROM Flight WHERE price  >  300;ВЫБРАТЬ наименование , дальностьполета ИЗ справочник.самолеты ГДЕ price > 300
397;SELECT flno ,  distance FROM Flight ORDER BY price DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 ссылка , distance ИЗ справочник.самолеты УПОРЯДОЧИТЬ ПО price УБЫВ
398;SELECT flno ,  distance FROM Flight ORDER BY price DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 ссылка , distance ИЗ справочник.самолеты УПОРЯДОЧИТЬ ПО price УБЫВ
399;SELECT flno FROM Flight ORDER BY distance ASC LIMIT 3;ВЫБРАТЬ ПЕРВЫЕ 3 ссылка ИЗ справочник.самолеты УПОРЯДОЧИТЬ ПО distance ВОЗР
400;SELECT flno FROM Flight ORDER BY distance ASC LIMIT 3;ВЫБРАТЬ ПЕРВЫЕ 3 ссылка ИЗ справочник.самолеты УПОРЯДОЧИТЬ ПО distance ВОЗР
401;"SELECT avg(distance) ,  avg(price) FROM Flight WHERE origin  =  ""Los Angeles""";"ВЫБРАТЬ СРЕДНЕЕ(distance) , СРЕДНЕЕ(price) ИЗ справочник.самолеты ГДЕ наименование = ""Los Angeles"""
402;"SELECT avg(distance) ,  avg(price) FROM Flight WHERE origin  =  ""Los Angeles""";"ВЫБРАТЬ СРЕДНЕЕ(distance) , СРЕДНЕЕ(price) ИЗ справочник.самолеты ГДЕ наименование = ""Los Angeles"""
403;SELECT origin ,  count(*) FROM Flight GROUP BY origin;ВЫБРАТЬ наименование , КОЛИЧЕСТВО(*) ИЗ справочник.самолеты СГРУППИРОВАТЬ ПО наименование
404;SELECT origin ,  count(*) FROM Flight GROUP BY origin;ВЫБРАТЬ наименование , КОЛИЧЕСТВО(*) ИЗ справочник.самолеты СГРУППИРОВАТЬ ПО наименование
405;SELECT destination ,  count(*) FROM Flight GROUP BY destination;ВЫБРАТЬ дальностьполета , КОЛИЧЕСТВО(*) ИЗ справочник.самолеты СГРУППИРОВАТЬ ПО дальностьполета
406;SELECT destination ,  count(*) FROM Flight GROUP BY destination;ВЫБРАТЬ дальностьполета , КОЛИЧЕСТВО(*) ИЗ справочник.самолеты СГРУППИРОВАТЬ ПО дальностьполета
407;SELECT origin FROM Flight GROUP BY origin ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование ИЗ справочник.самолеты СГРУППИРОВАТЬ ПО наименование УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
408;SELECT origin FROM Flight GROUP BY origin ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование ИЗ справочник.самолеты СГРУППИРОВАТЬ ПО наименование УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
409;SELECT destination FROM Flight GROUP BY destination ORDER BY count(*) LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 дальностьполета ИЗ справочник.самолеты СГРУППИРОВАТЬ ПО дальностьполета УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*)
410;SELECT destination FROM Flight GROUP BY destination ORDER BY count(*) LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 дальностьполета ИЗ справочник.самолеты СГРУППИРОВАТЬ ПО дальностьполета УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*)
411;SELECT T2.name FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid  =  T2.aid WHERE T1.flno  =  99;ВЫБРАТЬ T2.наименование ИЗ справочник.самолеты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сотрудники КАК T2 ПО T1.aid = T2.ссылка ГДЕ T1.ссылка = 99
412;SELECT T2.name FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid  =  T2.aid WHERE T1.flno  =  99;ВЫБРАТЬ T2.наименование ИЗ справочник.самолеты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сотрудники КАК T2 ПО T1.aid = T2.ссылка ГДЕ T1.ссылка = 99
413;"SELECT T1.flno FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid  =  T2.aid WHERE T2.name  =  ""Airbus A340-300""";"ВЫБРАТЬ T1.ссылка ИЗ справочник.самолеты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сотрудники КАК T2 ПО T1.aid = T2.ссылка ГДЕ T2.наименование = ""Airbus A340-300"""
414;"SELECT T1.flno FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid  =  T2.aid WHERE T2.name  =  ""Airbus A340-300""";"ВЫБРАТЬ T1.ссылка ИЗ справочник.самолеты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сотрудники КАК T2 ПО T1.aid = T2.ссылка ГДЕ T2.наименование = ""Airbus A340-300"""
415;SELECT T2.name ,  count(*) FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid  =  T2.aid GROUP BY T1.aid;ВЫБРАТЬ T2.наименование , КОЛИЧЕСТВО(*) ИЗ справочник.самолеты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сотрудники КАК T2 ПО T1.aid = T2.ссылка СГРУППИРОВАТЬ ПО T1.aid
416;SELECT T2.name ,  count(*) FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid  =  T2.aid GROUP BY T1.aid;ВЫБРАТЬ T2.наименование , КОЛИЧЕСТВО(*) ИЗ справочник.самолеты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сотрудники КАК T2 ПО T1.aid = T2.ссылка СГРУППИРОВАТЬ ПО T1.aid
417;SELECT T2.name FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid  =  T2.aid GROUP BY T1.aid HAVING count(*)  >= 2;ВЫБРАТЬ T2.наименование ИЗ справочник.самолеты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сотрудники КАК T2 ПО T1.aid = T2.ссылка СГРУППИРОВАТЬ ПО T1.aid ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
418;SELECT T2.name FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid  =  T2.aid GROUP BY T1.aid HAVING count(*)  >= 2;ВЫБРАТЬ T2.наименование ИЗ справочник.самолеты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сотрудники КАК T2 ПО T1.aid = T2.ссылка СГРУППИРОВАТЬ ПО T1.aid ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
419;SELECT count(DISTINCT eid) FROM Certificate;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ сотрудник) ИЗ регистрсведений.сертификаты
420;SELECT count(DISTINCT eid) FROM Certificate;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ сотрудник) ИЗ регистрсведений.сертификаты
423;"SELECT T3.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T1.name  =  ""John Williams""";"ВЫБРАТЬ T3.наименование ИЗ документ.рейсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.сертификаты КАК T2 ПО T1.ссылка = T2.сотрудник ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сотрудники КАК T3 ПО T3.ссылка = T2.самолет ГДЕ T1.номеррейса = ""John Williams"""
424;"SELECT T3.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T1.name  =  ""John Williams""";"ВЫБРАТЬ T3.наименование ИЗ документ.рейсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.сертификаты КАК T2 ПО T1.ссылка = T2.сотрудник ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сотрудники КАК T3 ПО T3.ссылка = T2.самолет ГДЕ T1.номеррейса = ""John Williams"""
425;"SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.name  =  ""Boeing 737-800""";"ВЫБРАТЬ T1.номеррейса ИЗ документ.рейсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.сертификаты КАК T2 ПО T1.ссылка = T2.сотрудник ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сотрудники КАК T3 ПО T3.ссылка = T2.самолет ГДЕ T3.наименование = ""Boeing 737-800"""
426;"SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.name  =  ""Boeing 737-800""";"ВЫБРАТЬ T1.номеррейса ИЗ документ.рейсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.сертификаты КАК T2 ПО T1.ссылка = T2.сотрудник ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сотрудники КАК T3 ПО T3.ссылка = T2.самолет ГДЕ T3.наименование = ""Boeing 737-800"""
431;SELECT T2.name FROM Certificate AS T1 JOIN Aircraft AS T2 ON T2.aid  =  T1.aid GROUP BY T1.aid ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.наименование ИЗ регистрсведений.сертификаты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сотрудники КАК T2 ПО T2.ссылка = T1.самолет СГРУППИРОВАТЬ ПО T1.самолет УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
432;SELECT T2.name FROM Certificate AS T1 JOIN Aircraft AS T2 ON T2.aid  =  T1.aid GROUP BY T1.aid ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.наименование ИЗ регистрсведений.сертификаты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сотрудники КАК T2 ПО T2.ссылка = T1.самолет СГРУППИРОВАТЬ ПО T1.самолет УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
433;SELECT T2.name FROM Certificate AS T1 JOIN Aircraft AS T2 ON T2.aid  =  T1.aid WHERE T2.distance  >  5000 GROUP BY T1.aid ORDER BY count(*)  >=  5;ВЫБРАТЬ T2.наименование ИЗ регистрсведений.сертификаты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сотрудники КАК T2 ПО T2.ссылка = T1.самолет ГДЕ T2.оклад > 5000 СГРУППИРОВАТЬ ПО T1.самолет УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) >= 5
434;SELECT T2.name FROM Certificate AS T1 JOIN Aircraft AS T2 ON T2.aid  =  T1.aid WHERE T2.distance  >  5000 GROUP BY T1.aid ORDER BY count(*)  >=  5;ВЫБРАТЬ T2.наименование ИЗ регистрсведений.сертификаты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сотрудники КАК T2 ПО T2.ссылка = T1.самолет ГДЕ T2.оклад > 5000 СГРУППИРОВАТЬ ПО T1.самолет УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) >= 5
435;SELECT T1.name ,  T1.salary FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid GROUP BY T1.eid ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.номеррейса , T1.аэропортотправления ИЗ документ.рейсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.сертификаты КАК T2 ПО T1.ссылка = T2.сотрудник СГРУППИРОВАТЬ ПО T1.ссылка УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
436;SELECT T1.name ,  T1.salary FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid GROUP BY T1.eid ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.номеррейса , T1.аэропортотправления ИЗ документ.рейсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.сертификаты КАК T2 ПО T1.ссылка = T2.сотрудник СГРУППИРОВАТЬ ПО T1.ссылка УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
437;SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.distance  >  5000 GROUP BY T1.eid ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.номеррейса ИЗ документ.рейсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.сертификаты КАК T2 ПО T1.ссылка = T2.сотрудник ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сотрудники КАК T3 ПО T3.ссылка = T2.самолет ГДЕ T3.оклад > 5000 СГРУППИРОВАТЬ ПО T1.ссылка УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
438;SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.distance  >  5000 GROUP BY T1.eid ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.номеррейса ИЗ документ.рейсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.сертификаты КАК T2 ПО T1.ссылка = T2.сотрудник ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сотрудники КАК T3 ПО T3.ссылка = T2.самолет ГДЕ T3.оклад > 5000 СГРУППИРОВАТЬ ПО T1.ссылка УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
439;SELECT count(DISTINCT allergy) FROM Allergy_type;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ наименованиеаллергии) ИЗ справочник.типыаллергий
440;SELECT count(DISTINCT allergy) FROM Allergy_type;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ наименованиеаллергии) ИЗ справочник.типыаллергий
441;SELECT count(DISTINCT allergytype) FROM Allergy_type;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ типаллергии) ИЗ справочник.типыаллергий
442;SELECT count(DISTINCT allergytype) FROM Allergy_type;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ типаллергии) ИЗ справочник.типыаллергий
443;SELECT DISTINCT allergytype FROM Allergy_type;ВЫБРАТЬ РАЗЛИЧНЫЕ типаллергии ИЗ справочник.типыаллергий
444;SELECT DISTINCT allergytype FROM Allergy_type;ВЫБРАТЬ РАЗЛИЧНЫЕ типаллергии ИЗ справочник.типыаллергий
445;SELECT allergy ,  allergytype FROM Allergy_type;ВЫБРАТЬ наименованиеаллергии , типаллергии ИЗ справочник.типыаллергий
446;SELECT allergy ,  allergytype FROM Allergy_type;ВЫБРАТЬ наименованиеаллергии , типаллергии ИЗ справочник.типыаллергий
447;"SELECT DISTINCT allergy FROM Allergy_type WHERE allergytype  =  ""food""";"ВЫБРАТЬ РАЗЛИЧНЫЕ наименованиеаллергии ИЗ справочник.типыаллергий ГДЕ типаллергии = ""food"""
448;"SELECT DISTINCT allergy FROM Allergy_type WHERE allergytype  =  ""food""";"ВЫБРАТЬ РАЗЛИЧНЫЕ наименованиеаллергии ИЗ справочник.типыаллергий ГДЕ типаллергии = ""food"""
449;"SELECT allergytype FROM Allergy_type WHERE allergy  =  ""Cat""";"ВЫБРАТЬ типаллергии ИЗ справочник.типыаллергий ГДЕ наименованиеаллергии = ""Cat"""
450;"SELECT allergytype FROM Allergy_type WHERE allergy  =  ""Cat""";"ВЫБРАТЬ типаллергии ИЗ справочник.типыаллергий ГДЕ наименованиеаллергии = ""Cat"""
451;"SELECT count(*) FROM Allergy_type WHERE allergytype  =  ""animal""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.типыаллергий ГДЕ типаллергии = ""animal"""
452;"SELECT count(*) FROM Allergy_type WHERE allergytype  =  ""animal""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.типыаллергий ГДЕ типаллергии = ""animal"""
453;SELECT allergytype ,  count(*) FROM Allergy_type GROUP BY allergytype;ВЫБРАТЬ типаллергии , КОЛИЧЕСТВО(*) ИЗ справочник.типыаллергий СГРУППИРОВАТЬ ПО типаллергии
454;SELECT allergytype ,  count(*) FROM Allergy_type GROUP BY allergytype;ВЫБРАТЬ типаллергии , КОЛИЧЕСТВО(*) ИЗ справочник.типыаллергий СГРУППИРОВАТЬ ПО типаллергии
455;SELECT allergytype FROM Allergy_type GROUP BY allergytype ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 типаллергии ИЗ справочник.типыаллергий СГРУППИРОВАТЬ ПО типаллергии УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
456;SELECT allergytype FROM Allergy_type GROUP BY allergytype ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 типаллергии ИЗ справочник.типыаллергий СГРУППИРОВАТЬ ПО типаллергии УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
457;SELECT allergytype FROM Allergy_type GROUP BY allergytype ORDER BY count(*) ASC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 типаллергии ИЗ справочник.типыаллергий СГРУППИРОВАТЬ ПО типаллергии УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) ВОЗР
458;SELECT allergytype FROM Allergy_type GROUP BY allergytype ORDER BY count(*) ASC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 типаллергии ИЗ справочник.типыаллергий СГРУППИРОВАТЬ ПО типаллергии УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) ВОЗР
459;SELECT count(*) FROM Student;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.студенты
460;SELECT count(*) FROM Student;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.студенты
461;SELECT Fname ,  Lname FROM Student;ВЫБРАТЬ имя , фамилия ИЗ справочник.студенты
462;SELECT Fname ,  Lname FROM Student;ВЫБРАТЬ имя , фамилия ИЗ справочник.студенты
463;SELECT count(DISTINCT advisor) FROM Student;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ наставник) ИЗ справочник.студенты
464;SELECT count(DISTINCT advisor) FROM Student;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ наставник) ИЗ справочник.студенты
465;SELECT DISTINCT Major FROM Student;ВЫБРАТЬ РАЗЛИЧНЫЕ специальность ИЗ справочник.студенты
466;SELECT DISTINCT Major FROM Student;ВЫБРАТЬ РАЗЛИЧНЫЕ специальность ИЗ справочник.студенты
467;SELECT DISTINCT city_code FROM Student;ВЫБРАТЬ РАЗЛИЧНЫЕ кодгорода ИЗ справочник.студенты
468;SELECT DISTINCT city_code FROM Student;ВЫБРАТЬ РАЗЛИЧНЫЕ кодгорода ИЗ справочник.студенты
469;SELECT Fname ,  Lname ,  Age FROM Student WHERE Sex  =  'F';"ВЫБРАТЬ имя , фамилия , возраст ИЗ справочник.студенты ГДЕ пол = ""F"""
470;SELECT Fname ,  Lname ,  Age FROM Student WHERE Sex  =  'F';"ВЫБРАТЬ имя , фамилия , возраст ИЗ справочник.студенты ГДЕ пол = ""F"""
471;SELECT StuID FROM Student WHERE Sex  =  'M';"ВЫБРАТЬ ссылка ИЗ справочник.студенты ГДЕ пол = ""M"""
472;SELECT StuID FROM Student WHERE Sex  =  'M';"ВЫБРАТЬ ссылка ИЗ справочник.студенты ГДЕ пол = ""M"""
473;SELECT count(*) FROM Student WHERE age  =  18;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.студенты ГДЕ возраст = 18
474;SELECT count(*) FROM Student WHERE age  =  18;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.студенты ГДЕ возраст = 18
475;SELECT StuID FROM Student WHERE age  >  20;ВЫБРАТЬ ссылка ИЗ справочник.студенты ГДЕ возраст > 20
476;SELECT StuID FROM Student WHERE age  >  20;ВЫБРАТЬ ссылка ИЗ справочник.студенты ГДЕ возраст > 20
477;"SELECT city_code FROM Student WHERE LName  =  ""Kim""";"ВЫБРАТЬ кодгорода ИЗ справочник.студенты ГДЕ фамилия = ""Kim"""
478;"SELECT city_code FROM Student WHERE LName  =  ""Kim""";"ВЫБРАТЬ кодгорода ИЗ справочник.студенты ГДЕ фамилия = ""Kim"""
479;SELECT Advisor FROM Student WHERE StuID  =  1004;ВЫБРАТЬ наставник ИЗ справочник.студенты ГДЕ ссылка = 1004
480;SELECT Advisor FROM Student WHERE StuID  =  1004;ВЫБРАТЬ наставник ИЗ справочник.студенты ГДЕ ссылка = 1004
481;"SELECT count(*) FROM Student WHERE city_code  =  ""HKG"" OR city_code  =  ""CHI""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.студенты ГДЕ кодгорода = ""HKG"" ИЛИ кодгорода = ""CHI"""
482;"SELECT count(*) FROM Student WHERE city_code  =  ""HKG"" OR city_code  =  ""CHI""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.студенты ГДЕ кодгорода = ""HKG"" ИЛИ кодгорода = ""CHI"""
483;SELECT min(age) ,  avg(age) ,  max(age) FROM Student;ВЫБРАТЬ МИНИМУМ(возраст) , СРЕДНЕЕ(возраст) , МАКСИМУМ(возраст) ИЗ справочник.студенты
484;SELECT min(age) ,  avg(age) ,  max(age) FROM Student;ВЫБРАТЬ МИНИМУМ(возраст) , СРЕДНЕЕ(возраст) , МАКСИМУМ(возраст) ИЗ справочник.студенты
485;SELECT LName FROM Student WHERE age  =  (SELECT min(age) FROM Student);ВЫБРАТЬ LName ИЗ справочник.студенты ГДЕ age = (ВЫБРАТЬ МИНИМУМ(age) ИЗ справочник.студенты)
486;SELECT LName FROM Student WHERE age  =  (SELECT min(age) FROM Student);ВЫБРАТЬ LName ИЗ справочник.студенты ГДЕ age = (ВЫБРАТЬ МИНИМУМ(age) ИЗ справочник.студенты)
487;SELECT StuID FROM Student WHERE age  =  (SELECT max(age) FROM Student);ВЫБРАТЬ StuID ИЗ справочник.студенты ГДЕ age = (ВЫБРАТЬ МАКСИМУМ(age) ИЗ справочник.студенты)
488;SELECT StuID FROM Student WHERE age  =  (SELECT max(age) FROM Student);ВЫБРАТЬ StuID ИЗ справочник.студенты ГДЕ age = (ВЫБРАТЬ МАКСИМУМ(age) ИЗ справочник.студенты)
489;SELECT major ,  count(*) FROM Student GROUP BY major;ВЫБРАТЬ специальность , КОЛИЧЕСТВО(*) ИЗ справочник.студенты СГРУППИРОВАТЬ ПО специальность
490;SELECT major ,  count(*) FROM Student GROUP BY major;ВЫБРАТЬ специальность , КОЛИЧЕСТВО(*) ИЗ справочник.студенты СГРУППИРОВАТЬ ПО специальность
491;SELECT major FROM Student GROUP BY major ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 специальность ИЗ справочник.студенты СГРУППИРОВАТЬ ПО специальность УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
492;SELECT major FROM Student GROUP BY major ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 специальность ИЗ справочник.студенты СГРУППИРОВАТЬ ПО специальность УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
493;SELECT age ,  count(*) FROM Student GROUP BY age;ВЫБРАТЬ возраст , КОЛИЧЕСТВО(*) ИЗ справочник.студенты СГРУППИРОВАТЬ ПО возраст
494;SELECT age ,  count(*) FROM Student GROUP BY age;ВЫБРАТЬ возраст , КОЛИЧЕСТВО(*) ИЗ справочник.студенты СГРУППИРОВАТЬ ПО возраст
495;SELECT avg(age) ,  sex FROM Student GROUP BY sex;ВЫБРАТЬ СРЕДНЕЕ(возраст) , пол ИЗ справочник.студенты СГРУППИРОВАТЬ ПО пол
496;SELECT avg(age) ,  sex FROM Student GROUP BY sex;ВЫБРАТЬ СРЕДНЕЕ(возраст) , пол ИЗ справочник.студенты СГРУППИРОВАТЬ ПО пол
497;SELECT city_code ,  count(*) FROM Student GROUP BY city_code;ВЫБРАТЬ кодгорода , КОЛИЧЕСТВО(*) ИЗ справочник.студенты СГРУППИРОВАТЬ ПО кодгорода
498;SELECT city_code ,  count(*) FROM Student GROUP BY city_code;ВЫБРАТЬ кодгорода , КОЛИЧЕСТВО(*) ИЗ справочник.студенты СГРУППИРОВАТЬ ПО кодгорода
499;SELECT advisor ,  count(*) FROM Student GROUP BY advisor;ВЫБРАТЬ наставник , КОЛИЧЕСТВО(*) ИЗ справочник.студенты СГРУППИРОВАТЬ ПО наставник
500;SELECT advisor ,  count(*) FROM Student GROUP BY advisor;ВЫБРАТЬ наставник , КОЛИЧЕСТВО(*) ИЗ справочник.студенты СГРУППИРОВАТЬ ПО наставник
501;SELECT advisor FROM Student GROUP BY advisor ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наставник ИЗ справочник.студенты СГРУППИРОВАТЬ ПО наставник УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
502;SELECT advisor FROM Student GROUP BY advisor ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наставник ИЗ справочник.студенты СГРУППИРОВАТЬ ПО наставник УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
503;"SELECT count(*) FROM Has_allergy WHERE Allergy  =  ""Cat""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.аллергиистудентов ГДЕ аллергия = ""Cat"""
504;"SELECT count(*) FROM Has_allergy WHERE Allergy  =  ""Cat""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.аллергиистудентов ГДЕ аллергия = ""Cat"""
505;SELECT StuID FROM Has_allergy GROUP BY StuID HAVING count(*)  >=  2;ВЫБРАТЬ студент ИЗ регистрсведений.аллергиистудентов СГРУППИРОВАТЬ ПО студент ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
506;SELECT StuID FROM Has_allergy GROUP BY StuID HAVING count(*)  >=  2;ВЫБРАТЬ студент ИЗ регистрсведений.аллергиистудентов СГРУППИРОВАТЬ ПО студент ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
509;"SELECT count(*) FROM has_allergy AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID WHERE T2.sex  =  ""F"" AND T1.allergy  =  ""Milk"" OR T1.allergy  =  ""Eggs""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.аллергиистудентов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК T2 ПО T1.студент = T2.ссылка ГДЕ T2.пол = ""F"" И T1.аллергия = ""Milk"" ИЛИ T1.аллергия = ""Eggs"""
510;"SELECT count(*) FROM has_allergy AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID WHERE T2.sex  =  ""F"" AND T1.allergy  =  ""Milk"" OR T1.allergy  =  ""Eggs""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.аллергиистудентов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК T2 ПО T1.студент = T2.ссылка ГДЕ T2.пол = ""F"" И T1.аллергия = ""Milk"" ИЛИ T1.аллергия = ""Eggs"""
511;"SELECT count(*) FROM Has_allergy AS T1 JOIN Allergy_type AS T2 ON T1.allergy  =  T2.allergy WHERE T2.allergytype  =  ""food""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.аллергиистудентов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.типыаллергий КАК T2 ПО T1.аллергия = T2.наименованиеаллергии ГДЕ T2.типаллергии = ""food"""
512;"SELECT count(*) FROM Has_allergy AS T1 JOIN Allergy_type AS T2 ON T1.allergy  =  T2.allergy WHERE T2.allergytype  =  ""food""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.аллергиистудентов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.типыаллергий КАК T2 ПО T1.аллергия = T2.наименованиеаллергии ГДЕ T2.типаллергии = ""food"""
513;SELECT Allergy FROM Has_allergy GROUP BY Allergy ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 аллергия ИЗ регистрсведений.аллергиистудентов СГРУППИРОВАТЬ ПО аллергия УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
514;SELECT Allergy FROM Has_allergy GROUP BY Allergy ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 аллергия ИЗ регистрсведений.аллергиистудентов СГРУППИРОВАТЬ ПО аллергия УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
515;SELECT Allergy ,  count(*) FROM Has_allergy GROUP BY Allergy;ВЫБРАТЬ аллергия , КОЛИЧЕСТВО(*) ИЗ регистрсведений.аллергиистудентов СГРУППИРОВАТЬ ПО аллергия
516;SELECT Allergy ,  count(*) FROM Has_allergy GROUP BY Allergy;ВЫБРАТЬ аллергия , КОЛИЧЕСТВО(*) ИЗ регистрсведений.аллергиистудентов СГРУППИРОВАТЬ ПО аллергия
517;SELECT T2.allergytype ,  count(*) FROM Has_allergy AS T1 JOIN Allergy_type AS T2 ON T1.allergy  =  T2.allergy GROUP BY T2.allergytype;ВЫБРАТЬ T2.типаллергии , КОЛИЧЕСТВО(*) ИЗ регистрсведений.аллергиистудентов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.типыаллергий КАК T2 ПО T1.аллергия = T2.наименованиеаллергии СГРУППИРОВАТЬ ПО T2.типаллергии
518;SELECT T2.allergytype ,  count(*) FROM Has_allergy AS T1 JOIN Allergy_type AS T2 ON T1.allergy  =  T2.allergy GROUP BY T2.allergytype;ВЫБРАТЬ T2.типаллергии , КОЛИЧЕСТВО(*) ИЗ регистрсведений.аллергиистудентов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.типыаллергий КАК T2 ПО T1.аллергия = T2.наименованиеаллергии СГРУППИРОВАТЬ ПО T2.типаллергии
521;"SELECT T1.Allergy ,  T1.AllergyType FROM Allergy_type AS T1 JOIN Has_allergy AS T2 ON T1.Allergy  =  T2.Allergy JOIN Student AS T3 ON T3.StuID  =  T2.StuID WHERE T3.Fname  =  ""Lisa"" ORDER BY T1.Allergy";"ВЫБРАТЬ T1.наименованиеаллергии , T1.типаллергии ИЗ справочник.типыаллергий КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.аллергиистудентов КАК T2 ПО T1.наименованиеаллергии = T2.аллергия ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК T3 ПО T3.ссылка = T2.студент ГДЕ T3.имя = ""Lisa"" УПОРЯДОЧИТЬ ПО T1.наименованиеаллергии"
522;"SELECT T1.Allergy ,  T1.AllergyType FROM Allergy_type AS T1 JOIN Has_allergy AS T2 ON T1.Allergy  =  T2.Allergy JOIN Student AS T3 ON T3.StuID  =  T2.StuID WHERE T3.Fname  =  ""Lisa"" ORDER BY T1.Allergy";"ВЫБРАТЬ T1.наименованиеаллергии , T1.типаллергии ИЗ справочник.типыаллергий КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.аллергиистудентов КАК T2 ПО T1.наименованиеаллергии = T2.аллергия ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК T3 ПО T3.ссылка = T2.студент ГДЕ T3.имя = ""Lisa"" УПОРЯДОЧИТЬ ПО T1.наименованиеаллергии"
527;"SELECT fname ,  lname FROM Student WHERE StuID NOT IN (SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  ""food"")";"ВЫБРАТЬ fname , lname ИЗ справочник.студенты ГДЕ StuID НЕ В (ВЫБРАТЬ T1.студент ИЗ регистрсведений.аллергиистудентов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.типыаллергий КАК T2 ПО T1.аллергия = T2.наименованиеаллергии ГДЕ T2.типаллергии = ""food"")"
528;"SELECT fname ,  lname FROM Student WHERE StuID NOT IN (SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  ""food"")";"ВЫБРАТЬ fname , lname ИЗ справочник.студенты ГДЕ StuID НЕ В (ВЫБРАТЬ T1.студент ИЗ регистрсведений.аллергиистудентов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.типыаллергий КАК T2 ПО T1.аллергия = T2.наименованиеаллергии ГДЕ T2.типаллергии = ""food"")"
529;"SELECT count(*) FROM Student WHERE sex  =  ""M"" AND StuID IN (SELECT StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  ""food"")";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.студенты ГДЕ sex = ""M"" И StuID В (ВЫБРАТЬ StuID ИЗ регистрсведений.аллергиистудентов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.типыаллергий КАК T2 ПО T1.аллергия = T2.наименованиеаллергии ГДЕ T2.типаллергии = ""food"")"
530;"SELECT count(*) FROM Student WHERE sex  =  ""M"" AND StuID IN (SELECT StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  ""food"")";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.студенты ГДЕ sex = ""M"" И StuID В (ВЫБРАТЬ StuID ИЗ регистрсведений.аллергиистудентов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.типыаллергий КАК T2 ПО T1.аллергия = T2.наименованиеаллергии ГДЕ T2.типаллергии = ""food"")"
531;"SELECT DISTINCT T1.fname ,  T1.city_code FROM Student AS T1 JOIN Has_Allergy AS T2 ON T1.stuid  =  T2.stuid WHERE T2.Allergy  =  ""Milk"" OR T2.Allergy  =  ""Cat""";"ВЫБРАТЬ РАЗЛИЧНЫЕ T1.имя , T1.кодгорода ИЗ справочник.студенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.аллергиистудентов КАК T2 ПО T1.ссылка = T2.студент ГДЕ T2.аллергия = ""Milk"" ИЛИ T2.аллергия = ""Cat"""
532;"SELECT DISTINCT T1.fname ,  T1.city_code FROM Student AS T1 JOIN Has_Allergy AS T2 ON T1.stuid  =  T2.stuid WHERE T2.Allergy  =  ""Milk"" OR T2.Allergy  =  ""Cat""";"ВЫБРАТЬ РАЗЛИЧНЫЕ T1.имя , T1.кодгорода ИЗ справочник.студенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.аллергиистудентов КАК T2 ПО T1.ссылка = T2.студент ГДЕ T2.аллергия = ""Milk"" ИЛИ T2.аллергия = ""Cat"""
533;"SELECT count(*) FROM Student WHERE age  >  18 AND StuID NOT IN ( SELECT StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  ""food"" OR T2.allergytype  =  ""animal"")";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.студенты ГДЕ age > 18 И StuID НЕ В ( ВЫБРАТЬ StuID ИЗ регистрсведений.аллергиистудентов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.типыаллергий КАК T2 ПО T1.аллергия = T2.наименованиеаллергии ГДЕ T2.типаллергии = ""food"" ИЛИ T2.типаллергии = ""animal"")"
534;"SELECT count(*) FROM Student WHERE age  >  18 AND StuID NOT IN ( SELECT StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  ""food"" OR T2.allergytype  =  ""animal"")";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.студенты ГДЕ age > 18 И StuID НЕ В ( ВЫБРАТЬ StuID ИЗ регистрсведений.аллергиистудентов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.типыаллергий КАК T2 ПО T1.аллергия = T2.наименованиеаллергии ГДЕ T2.типаллергии = ""food"" ИЛИ T2.типаллергии = ""animal"")"
535;"SELECT fname ,  major FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_allergy WHERE Allergy  =  ""Soy"")";"ВЫБРАТЬ fname , major ИЗ справочник.студенты ГДЕ студент НЕ В (ВЫБРАТЬ студент ИЗ регистрсведений.аллергиистудентов ГДЕ аллергия = ""Soy"")"
536;"SELECT fname ,  major FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_allergy WHERE Allergy  =  ""Soy"")";"ВЫБРАТЬ fname , major ИЗ справочник.студенты ГДЕ студент НЕ В (ВЫБРАТЬ студент ИЗ регистрсведений.аллергиистудентов ГДЕ аллергия = ""Soy"")"
537;"SELECT billing_country ,  COUNT(*) FROM invoices GROUP BY billing_country ORDER BY count(*) DESC LIMIT 5;";"ВЫБРАТЬ странаплательщика , КОЛИЧЕСТВО(*) ИЗ документ.счет СГРУППИРОВАТЬ ПО странаплательщика УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ LIMIT 5;"
538;"SELECT billing_country ,  COUNT(*) FROM invoices GROUP BY billing_country ORDER BY count(*) DESC LIMIT 5;";"ВЫБРАТЬ странаплательщика , КОЛИЧЕСТВО(*) ИЗ документ.счет СГРУППИРОВАТЬ ПО странаплательщика УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ LIMIT 5;"
539;"SELECT billing_country ,  SUM(total) FROM invoices GROUP BY billing_country ORDER BY SUM(total) DESC LIMIT 8;";"ВЫБРАТЬ странаплательщика , SUM(сумма) ИЗ документ.счет СГРУППИРОВАТЬ ПО странаплательщика УПОРЯДОЧИТЬ ПО SUM(сумма) УБЫВ LIMIT 8;"
540;"SELECT billing_country ,  SUM(total) FROM invoices GROUP BY billing_country ORDER BY SUM(total) DESC LIMIT 8;";"ВЫБРАТЬ странаплательщика , SUM(сумма) ИЗ документ.счет СГРУППИРОВАТЬ ПО странаплательщика УПОРЯДОЧИТЬ ПО SUM(сумма) УБЫВ LIMIT 8;"
541;"SELECT billing_country ,  AVG(total) FROM invoices GROUP BY billing_country ORDER BY AVG(total) DESC LIMIT 10;";"ВЫБРАТЬ странаплательщика , AVG(сумма) ИЗ документ.счет СГРУППИРОВАТЬ ПО странаплательщика УПОРЯДОЧИТЬ ПО AVG(сумма) УБЫВ LIMIT 10;"
542;"SELECT billing_country ,  AVG(total) FROM invoices GROUP BY billing_country ORDER BY AVG(total) DESC LIMIT 10;";"ВЫБРАТЬ странаплательщика , AVG(сумма) ИЗ документ.счет СГРУППИРОВАТЬ ПО странаплательщика УПОРЯДОЧИТЬ ПО AVG(сумма) УБЫВ LIMIT 10;"
543;"SELECT T1.first_name ,  T1.last_name FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id  =  T1.id ORDER BY T2.invoice_date DESC LIMIT 5;";"ВЫБРАТЬ T1.имя , T1.фамилия ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.счет КАК T2 ПО T2.клиент = T1.ссылка УПОРЯДОЧИТЬ ПО T2.датасчета УБЫВ LIMIT 5;"
544;"SELECT T1.first_name ,  T1.last_name FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id  =  T1.id ORDER BY T2.invoice_date DESC LIMIT 5;";"ВЫБРАТЬ T1.имя , T1.фамилия ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.счет КАК T2 ПО T2.клиент = T1.ссылка УПОРЯДОЧИТЬ ПО T2.датасчета УБЫВ LIMIT 5;"
545;"SELECT T1.first_name ,  T1.last_name ,  COUNT(*) FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id  =  T1.id GROUP BY T1.id ORDER BY COUNT(*) DESC LIMIT 10;";"ВЫБРАТЬ T1.имя , T1.фамилия , КОЛИЧЕСТВО(*) ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.счет КАК T2 ПО T2.клиент = T1.ссылка СГРУППИРОВАТЬ ПО T1.ссылка УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ LIMIT 10;"
546;"SELECT T1.first_name ,  T1.last_name ,  COUNT(*) FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id  =  T1.id GROUP BY T1.id ORDER BY COUNT(*) DESC LIMIT 10;";"ВЫБРАТЬ T1.имя , T1.фамилия , КОЛИЧЕСТВО(*) ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.счет КАК T2 ПО T2.клиент = T1.ссылка СГРУППИРОВАТЬ ПО T1.ссылка УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ LIMIT 10;"
547;"SELECT T1.first_name ,  T1.last_name ,  SUM(T2.total) FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id  =  T1.id GROUP BY T1.id ORDER BY SUM(T2.total) DESC LIMIT 10;";"ВЫБРАТЬ T1.имя , T1.фамилия , SUM(T2.сумма) ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.счет КАК T2 ПО T2.клиент = T1.ссылка СГРУППИРОВАТЬ ПО T1.ссылка УПОРЯДОЧИТЬ ПО SUM(T2.сумма) УБЫВ LIMIT 10;"
548;"SELECT T1.first_name ,  T1.last_name ,  SUM(T2.total) FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id  =  T1.id GROUP BY T1.id ORDER BY SUM(T2.total) DESC LIMIT 10;";"ВЫБРАТЬ T1.имя , T1.фамилия , SUM(T2.сумма) ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.счет КАК T2 ПО T2.клиент = T1.ссылка СГРУППИРОВАТЬ ПО T1.ссылка УПОРЯДОЧИТЬ ПО SUM(T2.сумма) УБЫВ LIMIT 10;"
549;"SELECT T1.name ,  COUNT(*) FROM genres AS T1 JOIN tracks AS T2 ON T2.genre_id  =  T1.id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 5;";"ВЫБРАТЬ T1.наименование , КОЛИЧЕСТВО(*) ИЗ справочник.жанры КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.треки КАК T2 ПО T2.жанр = T1.ссылка СГРУППИРОВАТЬ ПО T1.ссылка УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ LIMIT 5;"
550;"SELECT T1.name ,  COUNT(*) FROM genres AS T1 JOIN tracks AS T2 ON T2.genre_id  =  T1.id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 5;";"ВЫБРАТЬ T1.наименование , КОЛИЧЕСТВО(*) ИЗ справочник.жанры КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.треки КАК T2 ПО T2.жанр = T1.ссылка СГРУППИРОВАТЬ ПО T1.ссылка УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ LIMIT 5;"
551;"SELECT title FROM albums;";"ВЫБРАТЬ название ИЗ справочник.альбомы;"
552;"SELECT title FROM albums;";"ВЫБРАТЬ название ИЗ справочник.альбомы;"
553;"SELECT title FROM albums ORDER BY title;";"ВЫБРАТЬ название ИЗ справочник.альбомы УПОРЯДОЧИТЬ ПО название;"
554;"SELECT title FROM albums ORDER BY title;";"ВЫБРАТЬ название ИЗ справочник.альбомы УПОРЯДОЧИТЬ ПО название;"
555;"SELECT title FROM albums WHERE title LIKE 'A%' ORDER BY title;";"ВЫБРАТЬ название ИЗ справочник.альбомы ГДЕ название ПОДОБНО ""A%"" УПОРЯДОЧИТЬ ПО название;"
556;"SELECT title FROM albums WHERE title LIKE 'A%' ORDER BY title;";"ВЫБРАТЬ название ИЗ справочник.альбомы ГДЕ название ПОДОБНО ""A%"" УПОРЯДОЧИТЬ ПО название;"
557;"SELECT T1.first_name ,  T1.last_name FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id  =  T1.id ORDER BY total LIMIT 10;";"ВЫБРАТЬ T1.имя , T1.фамилия ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.счет КАК T2 ПО T2.клиент = T1.ссылка УПОРЯДОЧИТЬ ПО total LIMIT 10;"
558;"SELECT T1.first_name ,  T1.last_name FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id  =  T1.id ORDER BY total LIMIT 10;";"ВЫБРАТЬ T1.имя , T1.фамилия ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.счет КАК T2 ПО T2.клиент = T1.ссылка УПОРЯДОЧИТЬ ПО total LIMIT 10;"
559;"SELECT sum(total) FROM invoices WHERE billing_city  =  ""Chicago"" AND billing_state  =  ""IL"";";"ВЫБРАТЬ СУММА(сумма) ИЗ документ.счет ГДЕ городплательщика = ""Chicago"" И областьплательщика = ""IL"";"
560;"SELECT sum(total) FROM invoices WHERE billing_city  =  ""Chicago"" AND billing_state  =  ""IL"";";"ВЫБРАТЬ СУММА(сумма) ИЗ документ.счет ГДЕ городплательщика = ""Chicago"" И областьплательщика = ""IL"";"
561;"SELECT COUNT(*) FROM invoices WHERE billing_city  =  ""Chicago"" AND billing_state  =  ""IL"";";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ документ.счет ГДЕ городплательщика = ""Chicago"" И областьплательщика = ""IL"";"
562;"SELECT COUNT(*) FROM invoices WHERE billing_city  =  ""Chicago"" AND billing_state  =  ""IL"";";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ документ.счет ГДЕ городплательщика = ""Chicago"" И областьплательщика = ""IL"";"
563;"SELECT billing_state ,  COUNT(*) FROM invoices WHERE billing_country  =  ""USA"" GROUP BY billing_state;";"ВЫБРАТЬ областьплательщика , КОЛИЧЕСТВО(*) ИЗ документ.счет ГДЕ странаплательщика = ""USA"" СГРУППИРОВАТЬ ПО областьплательщика;"
564;"SELECT billing_state ,  COUNT(*) FROM invoices WHERE billing_country  =  ""USA"" GROUP BY billing_state;";"ВЫБРАТЬ областьплательщика , КОЛИЧЕСТВО(*) ИЗ документ.счет ГДЕ странаплательщика = ""USA"" СГРУППИРОВАТЬ ПО областьплательщика;"
565;"SELECT billing_state ,  COUNT(*) FROM invoices WHERE billing_country  =  ""USA"" GROUP BY billing_state ORDER BY COUNT(*) DESC LIMIT 1;";"ВЫБРАТЬ областьплательщика , КОЛИЧЕСТВО(*) ИЗ документ.счет ГДЕ странаплательщика = ""USA"" СГРУППИРОВАТЬ ПО областьплательщика УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ LIMIT 1;"
566;"SELECT billing_state ,  COUNT(*) FROM invoices WHERE billing_country  =  ""USA"" GROUP BY billing_state ORDER BY COUNT(*) DESC LIMIT 1;";"ВЫБРАТЬ областьплательщика , КОЛИЧЕСТВО(*) ИЗ документ.счет ГДЕ странаплательщика = ""USA"" СГРУППИРОВАТЬ ПО областьплательщика УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ LIMIT 1;"
567;"SELECT billing_state ,  COUNT(*) ,  SUM(total) FROM invoices WHERE billing_state  =  ""CA"";";"ВЫБРАТЬ областьплательщика , КОЛИЧЕСТВО(*) , SUM(сумма) ИЗ документ.счет ГДЕ областьплательщика = ""CA"";"
568;"SELECT billing_state ,  COUNT(*) ,  SUM(total) FROM invoices WHERE billing_state  =  ""CA"";";"ВЫБРАТЬ областьплательщика , КОЛИЧЕСТВО(*) , SUM(сумма) ИЗ документ.счет ГДЕ областьплательщика = ""CA"";"
569;"SELECT T1.title FROM albums AS T1 JOIN artists AS T2 ON  T1.artist_id = T2.id WHERE T2.name = ""Aerosmith"";";"ВЫБРАТЬ T1.название ИЗ справочник.альбомы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.артисты КАК T2 ПО T1.артист = T2.ссылка ГДЕ T2.наименование = ""Aerosmith"";"
570;"SELECT T1.title FROM albums AS T1 JOIN artists AS T2 ON  T1.artist_id = T2.id WHERE T2.name = ""Aerosmith"";";"ВЫБРАТЬ T1.название ИЗ справочник.альбомы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.артисты КАК T2 ПО T1.артист = T2.ссылка ГДЕ T2.наименование = ""Aerosmith"";"
571;"SELECT count(*) FROM albums AS T1 JOIN artists AS T2 ON  T1.artist_id = T2.id WHERE T2.name = ""Billy Cobham"";";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.альбомы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.артисты КАК T2 ПО T1.артист = T2.ссылка ГДЕ T2.наименование = ""Billy Cobham"";"
572;"SELECT count(*) FROM albums AS T1 JOIN artists AS T2 ON  T1.artist_id = T2.id WHERE T2.name = ""Billy Cobham"";";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.альбомы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.артисты КАК T2 ПО T1.артист = T2.ссылка ГДЕ T2.наименование = ""Billy Cobham"";"
573;"SELECT company FROM customers WHERE first_name = ""Eduardo"" AND last_name = ""Martins"";";"ВЫБРАТЬ компания ИЗ справочник.клиенты ГДЕ имя = ""Eduardo"" И фамилия = ""Martins"";"
574;"SELECT company FROM customers WHERE first_name = ""Eduardo"" AND last_name = ""Martins"";";"ВЫБРАТЬ компания ИЗ справочник.клиенты ГДЕ имя = ""Eduardo"" И фамилия = ""Martins"";"
575;"SELECT email ,  phone FROM customers WHERE first_name = ""Astrid"" AND last_name = ""Gruber"";";"ВЫБРАТЬ электроннаяпочта , телефон ИЗ справочник.клиенты ГДЕ имя = ""Astrid"" И фамилия = ""Gruber"";"
576;"SELECT email ,  phone FROM customers WHERE first_name = ""Astrid"" AND last_name = ""Gruber"";";"ВЫБРАТЬ электроннаяпочта , телефон ИЗ справочник.клиенты ГДЕ имя = ""Astrid"" И фамилия = ""Gruber"";"
577;"SELECT count(*) FROM customers WHERE city = ""Prague"";";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.клиенты ГДЕ город = ""Prague"";"
578;"SELECT count(*) FROM customers WHERE city = ""Prague"";";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.клиенты ГДЕ город = ""Prague"";"
579;"SELECT count(*) FROM customers WHERE state = ""CA"";";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.клиенты ГДЕ область = ""CA"";"
580;"SELECT count(*) FROM customers WHERE state = ""CA"";";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.клиенты ГДЕ область = ""CA"";"
581;"SELECT country FROM customers WHERE first_name = ""Roberto"" AND last_name = ""Almeida"";";"ВЫБРАТЬ страна ИЗ справочник.клиенты ГДЕ имя = ""Roberto"" И фамилия = ""Almeida"";"
582;"SELECT country FROM customers WHERE first_name = ""Roberto"" AND last_name = ""Almeida"";";"ВЫБРАТЬ страна ИЗ справочник.клиенты ГДЕ имя = ""Roberto"" И фамилия = ""Almeida"";"
583;SELECT T2.title FROM artists AS T1 JOIN albums AS T2 ON T1.id  =  T2.artist_id WHERE T1.name LIKE '%Led%';"ВЫБРАТЬ T2.название ИЗ справочник.артисты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.альбомы КАК T2 ПО T1.ссылка = T2.артист ГДЕ T1.наименование ПОДОБНО ""%Led%"""
584;SELECT T2.title FROM artists AS T1 JOIN albums AS T2 ON T1.id  =  T2.artist_id WHERE T1.name LIKE '%Led%';"ВЫБРАТЬ T2.название ИЗ справочник.артисты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.альбомы КАК T2 ПО T1.ссылка = T2.артист ГДЕ T1.наименование ПОДОБНО ""%Led%"""
585;"SELECT count(*) FROM employees AS T1 JOIN customers AS T2 ON T2.support_rep_id = T1.id WHERE T1.first_name = ""Steve"" AND T1.last_name = ""Johnson"";";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.сотрудники КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.клиенты КАК T2 ПО T2.сотрудникподдержки = T1.ссылка ГДЕ T1.имя = ""Steve"" И T1.фамилия = ""Johnson"";"
586;"SELECT count(*) FROM employees AS T1 JOIN customers AS T2 ON T2.support_rep_id = T1.id WHERE T1.first_name = ""Steve"" AND T1.last_name = ""Johnson"";";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.сотрудники КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.клиенты КАК T2 ПО T2.сотрудникподдержки = T1.ссылка ГДЕ T1.имя = ""Steve"" И T1.фамилия = ""Johnson"";"
587;"SELECT title ,  phone ,  hire_date FROM employees WHERE first_name = ""Nancy"" AND last_name = ""Edwards"";";"ВЫБРАТЬ должностьнаименование , телефон , датанайма ИЗ справочник.сотрудники ГДЕ имя = ""Nancy"" И фамилия = ""Edwards"";"
588;"SELECT title ,  phone ,  hire_date FROM employees WHERE first_name = ""Nancy"" AND last_name = ""Edwards"";";"ВЫБРАТЬ должностьнаименование , телефон , датанайма ИЗ справочник.сотрудники ГДЕ имя = ""Nancy"" И фамилия = ""Edwards"";"
589;"SELECT T2.first_name , T2.last_name FROM employees AS T1 JOIN employees AS T2 ON T1.id = T2.reports_to WHERE T1.first_name = ""Nancy"" AND T1.last_name = ""Edwards"";";"ВЫБРАТЬ T2.имя , T2.фамилия ИЗ справочник.сотрудники КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сотрудники КАК T2 ПО T1.ссылка = T2.имяруководителя ГДЕ T1.имя = ""Nancy"" И T1.фамилия = ""Edwards"";"
590;"SELECT T2.first_name , T2.last_name FROM employees AS T1 JOIN employees AS T2 ON T1.id = T2.reports_to WHERE T1.first_name = ""Nancy"" AND T1.last_name = ""Edwards"";";"ВЫБРАТЬ T2.имя , T2.фамилия ИЗ справочник.сотрудники КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сотрудники КАК T2 ПО T1.ссылка = T2.имяруководителя ГДЕ T1.имя = ""Nancy"" И T1.фамилия = ""Edwards"";"
591;"SELECT address FROM employees WHERE first_name = ""Nancy"" AND last_name = ""Edwards"";";"ВЫБРАТЬ адрес ИЗ справочник.сотрудники ГДЕ имя = ""Nancy"" И фамилия = ""Edwards"";"
592;"SELECT address FROM employees WHERE first_name = ""Nancy"" AND last_name = ""Edwards"";";"ВЫБРАТЬ адрес ИЗ справочник.сотрудники ГДЕ имя = ""Nancy"" И фамилия = ""Edwards"";"
593;SELECT T1.first_name , T1.last_name FROM employees AS T1 JOIN customers AS T2 ON T1.id  =  T2.support_rep_id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.имя , T1.фамилия ИЗ справочник.сотрудники КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.клиенты КАК T2 ПО T1.ссылка = T2.сотрудникподдержки СГРУППИРОВАТЬ ПО T1.ссылка УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
594;SELECT T1.first_name , T1.last_name FROM employees AS T1 JOIN customers AS T2 ON T1.id  =  T2.support_rep_id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.имя , T1.фамилия ИЗ справочник.сотрудники КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.клиенты КАК T2 ПО T1.ссылка = T2.сотрудникподдержки СГРУППИРОВАТЬ ПО T1.ссылка УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
595;"SELECT count(*) FROM employees WHERE country = ""Canada"";";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.сотрудники ГДЕ страна = ""Canada"";"
596;"SELECT count(*) FROM employees WHERE country = ""Canada"";";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.сотрудники ГДЕ страна = ""Canada"";"
597;"SELECT phone FROM employees WHERE first_name = ""Nancy"" AND last_name = ""Edwards"";";"ВЫБРАТЬ телефон ИЗ справочник.сотрудники ГДЕ имя = ""Nancy"" И фамилия = ""Edwards"";"
598;"SELECT phone FROM employees WHERE first_name = ""Nancy"" AND last_name = ""Edwards"";";"ВЫБРАТЬ телефон ИЗ справочник.сотрудники ГДЕ имя = ""Nancy"" И фамилия = ""Edwards"";"
599;"SELECT first_name , last_name FROM employees ORDER BY birth_date DESC LIMIT 1;";"ВЫБРАТЬ имя , фамилия ИЗ справочник.сотрудники УПОРЯДОЧИТЬ ПО датарождения УБЫВ LIMIT 1;"
600;"SELECT first_name , last_name FROM employees ORDER BY birth_date DESC LIMIT 1;";"ВЫБРАТЬ имя , фамилия ИЗ справочник.сотрудники УПОРЯДОЧИТЬ ПО датарождения УБЫВ LIMIT 1;"
601;"SELECT first_name , last_name FROM employees ORDER BY hire_date ASC LIMIT 10;";"ВЫБРАТЬ имя , фамилия ИЗ справочник.сотрудники УПОРЯДОЧИТЬ ПО датанайма ВОЗР LIMIT 10;"
602;"SELECT first_name , last_name FROM employees ORDER BY hire_date ASC LIMIT 10;";"ВЫБРАТЬ имя , фамилия ИЗ справочник.сотрудники УПОРЯДОЧИТЬ ПО датанайма ВОЗР LIMIT 10;"
603;SELECT count(*) ,  city FROM employees WHERE title  =  'IT Staff' GROUP BY city;"ВЫБРАТЬ КОЛИЧЕСТВО(*) , город ИЗ справочник.сотрудники ГДЕ должностьнаименование = ""IT Staff"" СГРУППИРОВАТЬ ПО город"
604;SELECT count(*) ,  city FROM employees WHERE title  =  'IT Staff' GROUP BY city;"ВЫБРАТЬ КОЛИЧЕСТВО(*) , город ИЗ справочник.сотрудники ГДЕ должностьнаименование = ""IT Staff"" СГРУППИРОВАТЬ ПО город"
605;"SELECT T2.first_name , T2.last_name ,  count(T1.reports_to) FROM employees AS T1 JOIN employees AS T2 ON T1.reports_to = T2.id GROUP BY T1.reports_to ORDER BY count(T1.reports_to) DESC LIMIT 1;";"ВЫБРАТЬ T2.имя , T2.фамилия , КОЛИЧЕСТВО(T1.имяруководителя) ИЗ справочник.сотрудники КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сотрудники КАК T2 ПО T1.имяруководителя = T2.ссылка СГРУППИРОВАТЬ ПО T1.имяруководителя УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(T1.имяруководителя) УБЫВ LIMIT 1;"
606;"SELECT T2.first_name , T2.last_name ,  count(T1.reports_to) FROM employees AS T1 JOIN employees AS T2 ON T1.reports_to = T2.id GROUP BY T1.reports_to ORDER BY count(T1.reports_to) DESC LIMIT 1;";"ВЫБРАТЬ T2.имя , T2.фамилия , КОЛИЧЕСТВО(T1.имяруководителя) ИЗ справочник.сотрудники КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сотрудники КАК T2 ПО T1.имяруководителя = T2.ссылка СГРУППИРОВАТЬ ПО T1.имяруководителя УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(T1.имяруководителя) УБЫВ LIMIT 1;"
607;"SELECT count(*) FROM customers AS T1 JOIN invoices AS T2 ON T1.id = T2.customer_id WHERE T1.first_name = ""Lucas"" AND T1.last_name = ""Mancini"";";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.счет КАК T2 ПО T1.ссылка = T2.клиент ГДЕ T1.имя = ""Lucas"" И T1.фамилия = ""Mancini"";"
608;"SELECT count(*) FROM customers AS T1 JOIN invoices AS T2 ON T1.id = T2.customer_id WHERE T1.first_name = ""Lucas"" AND T1.last_name = ""Mancini"";";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.счет КАК T2 ПО T1.ссылка = T2.клиент ГДЕ T1.имя = ""Lucas"" И T1.фамилия = ""Mancini"";"
609;"SELECT sum(T2.total) FROM customers AS T1 JOIN invoices AS T2 ON T1.id = T2.customer_id WHERE T1.first_name = ""Lucas"" AND T1.last_name = ""Mancini"";";"ВЫБРАТЬ СУММА(T2.сумма) ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.счет КАК T2 ПО T1.ссылка = T2.клиент ГДЕ T1.имя = ""Lucas"" И T1.фамилия = ""Mancini"";"
610;"SELECT sum(T2.total) FROM customers AS T1 JOIN invoices AS T2 ON T1.id = T2.customer_id WHERE T1.first_name = ""Lucas"" AND T1.last_name = ""Mancini"";";"ВЫБРАТЬ СУММА(T2.сумма) ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.счет КАК T2 ПО T1.ссылка = T2.клиент ГДЕ T1.имя = ""Lucas"" И T1.фамилия = ""Mancini"";"
611;"SELECT name FROM media_types;";"ВЫБРАТЬ наименование ИЗ справочник.типыносителей;"
612;"SELECT name FROM media_types;";"ВЫБРАТЬ наименование ИЗ справочник.типыносителей;"
613;"SELECT DISTINCT name FROM genres;";"ВЫБРАТЬ РАЗЛИЧНЫЕ наименование ИЗ справочник.жанры;"
614;"SELECT DISTINCT name FROM genres;";"ВЫБРАТЬ РАЗЛИЧНЫЕ наименование ИЗ справочник.жанры;"
615;"SELECT name FROM playlists;";"ВЫБРАТЬ наименование ИЗ справочник.плейлисты;"
616;"SELECT name FROM playlists;";"ВЫБРАТЬ наименование ИЗ справочник.плейлисты;"
617;"SELECT composer FROM tracks WHERE name = ""Fast As a Shark"";";"ВЫБРАТЬ композитор ИЗ справочник.треки ГДЕ наименование = ""Fast As a Shark"";"
618;"SELECT composer FROM tracks WHERE name = ""Fast As a Shark"";";"ВЫБРАТЬ композитор ИЗ справочник.треки ГДЕ наименование = ""Fast As a Shark"";"
619;"SELECT milliseconds FROM tracks WHERE name = ""Fast As a Shark"";";"ВЫБРАТЬ длительностьмсек ИЗ справочник.треки ГДЕ наименование = ""Fast As a Shark"";"
620;"SELECT milliseconds FROM tracks WHERE name = ""Fast As a Shark"";";"ВЫБРАТЬ длительностьмсек ИЗ справочник.треки ГДЕ наименование = ""Fast As a Shark"";"
621;"SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T1.name = ""Rock"";";"ВЫБРАТЬ T2.наименование ИЗ справочник.жанры КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.треки КАК T2 ПО T1.ссылка = T2.жанр ГДЕ T1.наименование = ""Rock"";"
622;"SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T1.name = ""Rock"";";"ВЫБРАТЬ T2.наименование ИЗ справочник.жанры КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.треки КАК T2 ПО T1.ссылка = T2.жанр ГДЕ T1.наименование = ""Rock"";"
623;"SELECT T1.title FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T2.name = ""Balls to the Wall"";";"ВЫБРАТЬ T1.название ИЗ справочник.альбомы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.треки КАК T2 ПО T1.ссылка = T2.жанр ГДЕ T2.наименование = ""Balls to the Wall"";"
624;"SELECT T1.title FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T2.name = ""Balls to the Wall"";";"ВЫБРАТЬ T1.название ИЗ справочник.альбомы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.треки КАК T2 ПО T1.ссылка = T2.жанр ГДЕ T2.наименование = ""Balls to the Wall"";"
625;"SELECT T2.name FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T1.title = ""Balls to the Wall"";";"ВЫБРАТЬ T2.наименование ИЗ справочник.альбомы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.треки КАК T2 ПО T1.ссылка = T2.жанр ГДЕ T1.название = ""Balls to the Wall"";"
626;"SELECT T2.name FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T1.title = ""Balls to the Wall"";";"ВЫБРАТЬ T2.наименование ИЗ справочник.альбомы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.треки КАК T2 ПО T1.ссылка = T2.жанр ГДЕ T1.название = ""Balls to the Wall"";"
627;"SELECT T1.title FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.album_id GROUP BY T1.id HAVING count(T1.id)  >  10;";"ВЫБРАТЬ T1.название ИЗ справочник.альбомы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.треки КАК T2 ПО T1.ссылка = T2.альбом СГРУППИРОВАТЬ ПО T1.ссылка ИМЕЮЩИЕ КОЛИЧЕСТВО(T1.ссылка) > 10;"
628;"SELECT T1.title FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.album_id GROUP BY T1.id HAVING count(T1.id)  >  10;";"ВЫБРАТЬ T1.название ИЗ справочник.альбомы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.треки КАК T2 ПО T1.ссылка = T2.альбом СГРУППИРОВАТЬ ПО T1.ссылка ИМЕЮЩИЕ КОЛИЧЕСТВО(T1.ссылка) > 10;"
629;"SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id JOIN media_types AS T3 ON T3.id = T2.media_type_id WHERE T1.name = ""Rock"" AND T3.name = ""MPEG audio file"";";"ВЫБРАТЬ T2.наименование ИЗ справочник.жанры КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.треки КАК T2 ПО T1.ссылка = T2.жанр ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.типыносителей КАК T3 ПО T3.ссылка = T2.типносителя ГДЕ T1.наименование = ""Rock"" И T3.наименование = ""MPEG audio file"";"
630;"SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id JOIN media_types AS T3 ON T3.id = T2.media_type_id WHERE T1.name = ""Rock"" AND T3.name = ""MPEG audio file"";";"ВЫБРАТЬ T2.наименование ИЗ справочник.жанры КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.треки КАК T2 ПО T1.ссылка = T2.жанр ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.типыносителей КАК T3 ПО T3.ссылка = T2.типносителя ГДЕ T1.наименование = ""Rock"" И T3.наименование = ""MPEG audio file"";"
631;"SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id JOIN media_types AS T3 ON T3.id = T2.media_type_id WHERE T1.name = ""Rock"" OR T3.name = ""MPEG audio file"";";"ВЫБРАТЬ T2.наименование ИЗ справочник.жанры КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.треки КАК T2 ПО T1.ссылка = T2.жанр ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.типыносителей КАК T3 ПО T3.ссылка = T2.типносителя ГДЕ T1.наименование = ""Rock"" ИЛИ T3.наименование = ""MPEG audio file"";"
632;"SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id JOIN media_types AS T3 ON T3.id = T2.media_type_id WHERE T1.name = ""Rock"" OR T3.name = ""MPEG audio file"";";"ВЫБРАТЬ T2.наименование ИЗ справочник.жанры КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.треки КАК T2 ПО T1.ссылка = T2.жанр ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.типыносителей КАК T3 ПО T3.ссылка = T2.типносителя ГДЕ T1.наименование = ""Rock"" ИЛИ T3.наименование = ""MPEG audio file"";"
633;"SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T1.name = ""Rock"" OR T1.name = ""Jazz""";"ВЫБРАТЬ T2.наименование ИЗ справочник.жанры КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.треки КАК T2 ПО T1.ссылка = T2.жанр ГДЕ T1.наименование = ""Rock"" ИЛИ T1.наименование = ""Jazz"""
634;"SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T1.name = ""Rock"" OR T1.name = ""Jazz""";"ВЫБРАТЬ T2.наименование ИЗ справочник.жанры КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.треки КАК T2 ПО T1.ссылка = T2.жанр ГДЕ T1.наименование = ""Rock"" ИЛИ T1.наименование = ""Jazz"""
635;"SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id = T2.track_id JOIN playlists AS T3 ON T3.id = T2.playlist_id WHERE T3.name = ""Movies"";";"ВЫБРАТЬ T1.наименование ИЗ справочник.треки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.трекиплейлистов КАК T2 ПО T1.ссылка = T2.трек ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.плейлисты КАК T3 ПО T3.ссылка = T2.плейлист ГДЕ T3.наименование = ""Movies"";"
636;"SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id = T2.track_id JOIN playlists AS T3 ON T3.id = T2.playlist_id WHERE T3.name = ""Movies"";";"ВЫБРАТЬ T1.наименование ИЗ справочник.треки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.трекиплейлистов КАК T2 ПО T1.ссылка = T2.трек ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.плейлисты КАК T3 ПО T3.ссылка = T2.плейлист ГДЕ T3.наименование = ""Movies"";"
637;"SELECT T2.name FROM playlist_tracks AS T1 JOIN playlists AS T2 ON T2.id = T1.playlist_id GROUP BY T1.playlist_id HAVING count(T1.track_id)  >  100;";"ВЫБРАТЬ T2.наименование ИЗ регистрсведений.трекиплейлистов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.плейлисты КАК T2 ПО T2.ссылка = T1.плейлист СГРУППИРОВАТЬ ПО T1.плейлист ИМЕЮЩИЕ КОЛИЧЕСТВО(T1.трек) > 100;"
638;"SELECT T2.name FROM playlist_tracks AS T1 JOIN playlists AS T2 ON T2.id = T1.playlist_id GROUP BY T1.playlist_id HAVING count(T1.track_id)  >  100;";"ВЫБРАТЬ T2.наименование ИЗ регистрсведений.трекиплейлистов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.плейлисты КАК T2 ПО T2.ссылка = T1.плейлист СГРУППИРОВАТЬ ПО T1.плейлист ИМЕЮЩИЕ КОЛИЧЕСТВО(T1.трек) > 100;"
639;"SELECT T1.name FROM tracks AS T1 JOIN invoice_lines AS T2 ON T1.id = T2.track_id JOIN invoices AS T3 ON T3.id = T2.invoice_id JOIN customers AS T4 ON T4.id = T3.customer_id WHERE T4.first_name = ""Daan"" AND T4.last_name = ""Peeters"";";"ВЫБРАТЬ T1.наименование ИЗ справочник.треки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ табличнаячасть.строкисчета КАК T2 ПО T1.ссылка = T2.трек ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.счет КАК T3 ПО T3.ссылка = T2.счет ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.клиенты КАК T4 ПО T4.ссылка = T3.клиент ГДЕ T4.имя = ""Daan"" И T4.фамилия = ""Peeters"";"
640;"SELECT T1.name FROM tracks AS T1 JOIN invoice_lines AS T2 ON T1.id = T2.track_id JOIN invoices AS T3 ON T3.id = T2.invoice_id JOIN customers AS T4 ON T4.id = T3.customer_id WHERE T4.first_name = ""Daan"" AND T4.last_name = ""Peeters"";";"ВЫБРАТЬ T1.наименование ИЗ справочник.треки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ табличнаячасть.строкисчета КАК T2 ПО T1.ссылка = T2.трек ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.счет КАК T3 ПО T3.ссылка = T2.счет ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.клиенты КАК T4 ПО T4.ссылка = T3.клиент ГДЕ T4.имя = ""Daan"" И T4.фамилия = ""Peeters"";"
641;"SELECT unit_price FROM tracks WHERE name = ""Fast As a Shark"";";"ВЫБРАТЬ ценазаединицу ИЗ справочник.треки ГДЕ наименование = ""Fast As a Shark"";"
642;"SELECT unit_price FROM tracks WHERE name = ""Fast As a Shark"";";"ВЫБРАТЬ ценазаединицу ИЗ справочник.треки ГДЕ наименование = ""Fast As a Shark"";"
647;"SELECT count(*) ,  T1.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id GROUP BY T1.name;";"ВЫБРАТЬ КОЛИЧЕСТВО(*) , T1.наименование ИЗ справочник.жанры КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.треки КАК T2 ПО T1.ссылка = T2.жанр СГРУППИРОВАТЬ ПО T1.наименование;"
648;"SELECT count(*) ,  T1.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id GROUP BY T1.name;";"ВЫБРАТЬ КОЛИЧЕСТВО(*) , T1.наименование ИЗ справочник.жанры КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.треки КАК T2 ПО T1.ссылка = T2.жанр СГРУППИРОВАТЬ ПО T1.наименование;"
649;SELECT count(*) FROM editor;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.редакторы
650;SELECT Name FROM editor ORDER BY Age ASC;ВЫБРАТЬ наименование ИЗ справочник.редакторы УПОРЯДОЧИТЬ ПО возраст ВОЗР
651;SELECT Name ,  Age FROM editor;ВЫБРАТЬ наименование , возраст ИЗ справочник.редакторы
652;SELECT Name FROM editor WHERE Age  >  25;ВЫБРАТЬ наименование ИЗ справочник.редакторы ГДЕ возраст > 25
653;SELECT Name FROM editor WHERE Age  =  24 OR Age  =  25;ВЫБРАТЬ наименование ИЗ справочник.редакторы ГДЕ возраст = 24 ИЛИ возраст = 25
654;SELECT Name FROM editor ORDER BY Age ASC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование ИЗ справочник.редакторы УПОРЯДОЧИТЬ ПО возраст ВОЗР
655;SELECT Age ,  COUNT(*) FROM editor GROUP BY Age;ВЫБРАТЬ возраст , КОЛИЧЕСТВО(*) ИЗ справочник.редакторы СГРУППИРОВАТЬ ПО возраст
656;SELECT Age FROM editor GROUP BY Age ORDER BY COUNT(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 возраст ИЗ справочник.редакторы СГРУППИРОВАТЬ ПО возраст УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
657;SELECT DISTINCT Theme FROM journal;ВЫБРАТЬ РАЗЛИЧНЫЕ тема ИЗ справочник.журналы
658;SELECT T2.Name ,  T3.Theme FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID  =  T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID  =  T3.Journal_ID;ВЫБРАТЬ T2.наименование , T3.тема ИЗ регистрсведений.редакционнаяколлегия КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.редакторы КАК T2 ПО T1.редактор = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.журналы КАК T3 ПО T1.журнал = T3.ссылка
659;SELECT T2.Name ,  T3.Theme FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID  =  T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID  =  T3.Journal_ID;ВЫБРАТЬ T2.наименование , T3.тема ИЗ регистрсведений.редакционнаяколлегия КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.редакторы КАК T2 ПО T1.редактор = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.журналы КАК T3 ПО T1.журнал = T3.ссылка
660;SELECT T2.Name ,  T2.age ,  T3.Theme FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID  =  T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID  =  T3.Journal_ID ORDER BY T3.Theme ASC;ВЫБРАТЬ T2.наименование , T2.возраст , T3.тема ИЗ регистрсведений.редакционнаяколлегия КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.редакторы КАК T2 ПО T1.редактор = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.журналы КАК T3 ПО T1.журнал = T3.ссылка УПОРЯДОЧИТЬ ПО T3.тема ВОЗР
661;SELECT T2.Name FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID  =  T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID  =  T3.Journal_ID WHERE T3.Sales  >  3000;ВЫБРАТЬ T2.наименование ИЗ регистрсведений.редакционнаяколлегия КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.редакторы КАК T2 ПО T1.редактор = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.журналы КАК T3 ПО T1.журнал = T3.ссылка ГДЕ T3.продажи > 3000
662;SELECT T1.editor_id ,  T1.Name ,  COUNT(*) FROM editor AS T1 JOIN journal_committee AS T2 ON T1.Editor_ID  =  T2.Editor_ID GROUP BY T1.editor_id;ВЫБРАТЬ T1.ссылка , T1.наименование , КОЛИЧЕСТВО(*) ИЗ справочник.редакторы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.редакционнаяколлегия КАК T2 ПО T1.ссылка = T2.редактор СГРУППИРОВАТЬ ПО T1.ссылка
663;SELECT T1.Name FROM editor AS T1 JOIN journal_committee AS T2 ON T1.Editor_ID  =  T2.Editor_ID GROUP BY T1.Name HAVING COUNT(*)  >=  2;ВЫБРАТЬ T1.наименование ИЗ справочник.редакторы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.редакционнаяколлегия КАК T2 ПО T1.ссылка = T2.редактор СГРУППИРОВАТЬ ПО T1.наименование ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
664;SELECT Name FROM editor WHERE editor_id NOT IN (SELECT editor_id FROM journal_committee);ВЫБРАТЬ Name ИЗ справочник.редакторы ГДЕ editor_id НЕ В (ВЫБРАТЬ editor_id ИЗ регистрсведений.редакционнаяколлегия)
666;SELECT avg(T1.sales) FROM journal AS T1 JOIN journal_committee AS T2 ON T1.journal_ID  =  T2.journal_ID WHERE T2.work_type  =  'Photo';"ВЫБРАТЬ СРЕДНЕЕ(T1.продажи) ИЗ справочник.журналы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.редакционнаяколлегия КАК T2 ПО T1.ссылка = T2.журнал ГДЕ T2.типработы = ""Photo"""
667;SELECT count(*) FROM Accounts;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.счета
668;SELECT count(*) FROM Accounts;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.счета
669;SELECT account_id ,  customer_id ,  account_name FROM Accounts;ВЫБРАТЬ ссылка , клиент , наименование ИЗ справочник.счета
670;SELECT account_id ,  customer_id ,  account_name FROM Accounts;ВЫБРАТЬ ссылка , клиент , наименование ИЗ справочник.счета
671;"SELECT other_account_details FROM Accounts WHERE account_name  =  ""338""";"ВЫБРАТЬ прочиедетали ИЗ справочник.счета ГДЕ наименование = ""338"""
672;"SELECT other_account_details FROM Accounts WHERE account_name  =  ""338""";"ВЫБРАТЬ прочиедетали ИЗ справочник.счета ГДЕ наименование = ""338"""
673;"SELECT T2.customer_first_name ,  T2.customer_last_name ,  T2.customer_phone FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.account_name  =  ""162""";"ВЫБРАТЬ T2.имя , T2.фамилия , T2.телефон ИЗ справочник.счета КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.клиенты КАК T2 ПО T1.клиент = T2.ссылка ГДЕ T1.наименование = ""162"""
674;"SELECT T2.customer_first_name ,  T2.customer_last_name ,  T2.customer_phone FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.account_name  =  ""162""";"ВЫБРАТЬ T2.имя , T2.фамилия , T2.телефон ИЗ справочник.счета КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.клиенты КАК T2 ПО T1.клиент = T2.ссылка ГДЕ T1.наименование = ""162"""
675;"SELECT count(*) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_first_name  =  ""Art"" AND T2.customer_last_name  =  ""Turcotte""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.счета КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.клиенты КАК T2 ПО T1.клиент = T2.ссылка ГДЕ T2.имя = ""Art"" И T2.фамилия = ""Turcotte"""
676;"SELECT count(*) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_first_name  =  ""Art"" AND T2.customer_last_name  =  ""Turcotte""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.счета КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.клиенты КАК T2 ПО T1.клиент = T2.ссылка ГДЕ T2.имя = ""Art"" И T2.фамилия = ""Turcotte"""
677;SELECT customer_id ,  count(*) FROM Accounts GROUP BY customer_id;ВЫБРАТЬ клиент , КОЛИЧЕСТВО(*) ИЗ справочник.счета СГРУППИРОВАТЬ ПО клиент
678;SELECT customer_id ,  count(*) FROM Accounts GROUP BY customer_id;ВЫБРАТЬ клиент , КОЛИЧЕСТВО(*) ИЗ справочник.счета СГРУППИРОВАТЬ ПО клиент
679;SELECT customer_id ,  count(*) FROM Accounts GROUP BY customer_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 клиент , КОЛИЧЕСТВО(*) ИЗ справочник.счета СГРУППИРОВАТЬ ПО клиент УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
680;SELECT customer_id ,  count(*) FROM Accounts GROUP BY customer_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 клиент , КОЛИЧЕСТВО(*) ИЗ справочник.счета СГРУППИРОВАТЬ ПО клиент УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
681;SELECT T2.customer_first_name ,  T2.customer_last_name ,  T1.customer_id FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) ASC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.имя , T2.фамилия , T1.клиент ИЗ справочник.счета КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.клиенты КАК T2 ПО T1.клиент = T2.ссылка СГРУППИРОВАТЬ ПО T1.клиент УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) ВОЗР
682;SELECT T2.customer_first_name ,  T2.customer_last_name ,  T1.customer_id FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) ASC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.имя , T2.фамилия , T1.клиент ИЗ справочник.счета КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.клиенты КАК T2 ПО T1.клиент = T2.ссылка СГРУППИРОВАТЬ ПО T1.клиент УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) ВОЗР
683;SELECT count(*) FROM Customers WHERE customer_id NOT IN (SELECT customer_id FROM Accounts);ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.клиенты ГДЕ customer_id НЕ В (ВЫБРАТЬ customer_id ИЗ справочник.счета)
684;SELECT count(*) FROM Customers WHERE customer_id NOT IN (SELECT customer_id FROM Accounts);ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.клиенты ГДЕ customer_id НЕ В (ВЫБРАТЬ customer_id ИЗ справочник.счета)
687;SELECT DISTINCT T1.customer_first_name ,  T1.customer_last_name FROM Customers AS T1 JOIN Accounts AS T2 ON T1.customer_id  =  T2.customer_id;ВЫБРАТЬ РАЗЛИЧНЫЕ T1.имя , T1.фамилия ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.счета КАК T2 ПО T1.ссылка = T2.клиент
688;SELECT DISTINCT T1.customer_first_name ,  T1.customer_last_name FROM Customers AS T1 JOIN Accounts AS T2 ON T1.customer_id  =  T2.customer_id;ВЫБРАТЬ РАЗЛИЧНЫЕ T1.имя , T1.фамилия ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.счета КАК T2 ПО T1.ссылка = T2.клиент
689;SELECT count(DISTINCT customer_id) FROM Accounts;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ клиент) ИЗ справочник.счета
690;SELECT count(DISTINCT customer_id) FROM Accounts;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ клиент) ИЗ справочник.счета
691;SELECT count(*) FROM Customers;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.клиенты
692;SELECT count(*) FROM Customers;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.клиенты
693;SELECT customer_id ,  customer_first_name ,  customer_last_name ,  customer_phone FROM Customers;ВЫБРАТЬ ссылка , имя , фамилия , телефон ИЗ справочник.клиенты
694;SELECT customer_id ,  customer_first_name ,  customer_last_name ,  customer_phone FROM Customers;ВЫБРАТЬ ссылка , имя , фамилия , телефон ИЗ справочник.клиенты
695;"SELECT customer_phone ,  customer_email FROM Customers WHERE customer_first_name  =  ""Aniyah"" AND customer_last_name  =  ""Feest""";"ВЫБРАТЬ телефон , элпочта ИЗ справочник.клиенты ГДЕ имя = ""Aniyah"" И фамилия = ""Feest"""
696;"SELECT customer_phone ,  customer_email FROM Customers WHERE customer_first_name  =  ""Aniyah"" AND customer_last_name  =  ""Feest""";"ВЫБРАТЬ телефон , элпочта ИЗ справочник.клиенты ГДЕ имя = ""Aniyah"" И фамилия = ""Feest"""
697;SELECT count(*) FROM Customers_cards;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.банковскиекарты
698;SELECT count(*) FROM Customers_cards;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.банковскиекарты
699;SELECT card_id ,  customer_id ,  card_type_code ,  card_number FROM Customers_cards;ВЫБРАТЬ ссылка , клиент , кодтипакарты , номеркарты ИЗ справочник.банковскиекарты
700;SELECT card_id ,  customer_id ,  card_type_code ,  card_number FROM Customers_cards;ВЫБРАТЬ ссылка , клиент , кодтипакарты , номеркарты ИЗ справочник.банковскиекарты
701;"SELECT date_valid_from ,  date_valid_to FROM Customers_cards WHERE card_number  =  ""4560596484842""";"ВЫБРАТЬ датаначаладействия , датаокончаниядействия ИЗ справочник.банковскиекарты ГДЕ номеркарты = ""4560596484842"""
702;"SELECT date_valid_from ,  date_valid_to FROM Customers_cards WHERE card_number  =  ""4560596484842""";"ВЫБРАТЬ датаначаладействия , датаокончаниядействия ИЗ справочник.банковскиекарты ГДЕ номеркарты = ""4560596484842"""
703;"SELECT T2.customer_first_name ,  T2.customer_last_name ,  T2.customer_phone FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.card_number  =  ""4560596484842""";"ВЫБРАТЬ T2.имя , T2.фамилия , T2.телефон ИЗ справочник.банковскиекарты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.клиенты КАК T2 ПО T1.клиент = T2.ссылка ГДЕ T1.номеркарты = ""4560596484842"""
704;"SELECT T2.customer_first_name ,  T2.customer_last_name ,  T2.customer_phone FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.card_number  =  ""4560596484842""";"ВЫБРАТЬ T2.имя , T2.фамилия , T2.телефон ИЗ справочник.банковскиекарты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.клиенты КАК T2 ПО T1.клиент = T2.ссылка ГДЕ T1.номеркарты = ""4560596484842"""
705;"SELECT count(*) FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_first_name  =  ""Art"" AND T2.customer_last_name  =  ""Turcotte""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.банковскиекарты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.клиенты КАК T2 ПО T1.клиент = T2.ссылка ГДЕ T2.имя = ""Art"" И T2.фамилия = ""Turcotte"""
706;"SELECT count(*) FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_first_name  =  ""Art"" AND T2.customer_last_name  =  ""Turcotte""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.банковскиекарты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.клиенты КАК T2 ПО T1.клиент = T2.ссылка ГДЕ T2.имя = ""Art"" И T2.фамилия = ""Turcotte"""
707;"SELECT count(*) FROM Customers_cards WHERE card_type_code  =  ""Debit""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.банковскиекарты ГДЕ кодтипакарты = ""Debit"""
708;"SELECT count(*) FROM Customers_cards WHERE card_type_code  =  ""Debit""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.банковскиекарты ГДЕ кодтипакарты = ""Debit"""
709;"SELECT count(*) FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_first_name  =  ""Blanche"" AND T2.customer_last_name  =  ""Huels"" AND T1.card_type_code  =  ""Credit""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.банковскиекарты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.клиенты КАК T2 ПО T1.клиент = T2.ссылка ГДЕ T2.имя = ""Blanche"" И T2.фамилия = ""Huels"" И T1.кодтипакарты = ""Credit"""
710;"SELECT count(*) FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_first_name  =  ""Blanche"" AND T2.customer_last_name  =  ""Huels"" AND T1.card_type_code  =  ""Credit""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.банковскиекарты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.клиенты КАК T2 ПО T1.клиент = T2.ссылка ГДЕ T2.имя = ""Blanche"" И T2.фамилия = ""Huels"" И T1.кодтипакарты = ""Credit"""
711;SELECT customer_id ,  count(*) FROM Customers_cards GROUP BY customer_id;ВЫБРАТЬ клиент , КОЛИЧЕСТВО(*) ИЗ справочник.банковскиекарты СГРУППИРОВАТЬ ПО клиент
712;SELECT customer_id ,  count(*) FROM Customers_cards GROUP BY customer_id;ВЫБРАТЬ клиент , КОЛИЧЕСТВО(*) ИЗ справочник.банковскиекарты СГРУППИРОВАТЬ ПО клиент
713;SELECT customer_id ,  count(*) FROM Customers_cards GROUP BY customer_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 клиент , КОЛИЧЕСТВО(*) ИЗ справочник.банковскиекарты СГРУППИРОВАТЬ ПО клиент УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
714;SELECT customer_id ,  count(*) FROM Customers_cards GROUP BY customer_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 клиент , КОЛИЧЕСТВО(*) ИЗ справочник.банковскиекарты СГРУППИРОВАТЬ ПО клиент УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
715;SELECT T1.customer_id ,  T2.customer_first_name ,  T2.customer_last_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >=  2;ВЫБРАТЬ T1.клиент , T2.имя , T2.фамилия ИЗ справочник.банковскиекарты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.клиенты КАК T2 ПО T1.клиент = T2.ссылка СГРУППИРОВАТЬ ПО T1.клиент ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
716;SELECT T1.customer_id ,  T2.customer_first_name ,  T2.customer_last_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >=  2;ВЫБРАТЬ T1.клиент , T2.имя , T2.фамилия ИЗ справочник.банковскиекарты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.клиенты КАК T2 ПО T1.клиент = T2.ссылка СГРУППИРОВАТЬ ПО T1.клиент ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
717;SELECT T1.customer_id ,  T2.customer_first_name ,  T2.customer_last_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) ASC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.клиент , T2.имя , T2.фамилия ИЗ справочник.банковскиекарты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.клиенты КАК T2 ПО T1.клиент = T2.ссылка СГРУППИРОВАТЬ ПО T1.клиент УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) ВОЗР
718;SELECT T1.customer_id ,  T2.customer_first_name ,  T2.customer_last_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) ASC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.клиент , T2.имя , T2.фамилия ИЗ справочник.банковскиекарты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.клиенты КАК T2 ПО T1.клиент = T2.ссылка СГРУППИРОВАТЬ ПО T1.клиент УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) ВОЗР
719;SELECT card_type_code ,  count(*) FROM Customers_cards GROUP BY card_type_code;ВЫБРАТЬ кодтипакарты , КОЛИЧЕСТВО(*) ИЗ справочник.банковскиекарты СГРУППИРОВАТЬ ПО кодтипакарты
720;SELECT card_type_code ,  count(*) FROM Customers_cards GROUP BY card_type_code;ВЫБРАТЬ кодтипакарты , КОЛИЧЕСТВО(*) ИЗ справочник.банковскиекарты СГРУППИРОВАТЬ ПО кодтипакарты
721;SELECT card_type_code FROM Customers_cards GROUP BY card_type_code ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 кодтипакарты ИЗ справочник.банковскиекарты СГРУППИРОВАТЬ ПО кодтипакарты УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
722;SELECT card_type_code FROM Customers_cards GROUP BY card_type_code ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 кодтипакарты ИЗ справочник.банковскиекарты СГРУППИРОВАТЬ ПО кодтипакарты УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
723;SELECT card_type_code FROM Customers_cards GROUP BY card_type_code HAVING count(*)  >=  5;ВЫБРАТЬ кодтипакарты ИЗ справочник.банковскиекарты СГРУППИРОВАТЬ ПО кодтипакарты ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 5
724;SELECT card_type_code FROM Customers_cards GROUP BY card_type_code HAVING count(*)  >=  5;ВЫБРАТЬ кодтипакарты ИЗ справочник.банковскиекарты СГРУППИРОВАТЬ ПО кодтипакарты ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 5
725;SELECT card_type_code ,  count(DISTINCT customer_id) FROM Customers_cards GROUP BY card_type_code;ВЫБРАТЬ кодтипакарты , КОЛИЧЕСТВО(РАЗЛИЧНЫЕ клиент) ИЗ справочник.банковскиекарты СГРУППИРОВАТЬ ПО кодтипакарты
726;SELECT card_type_code ,  count(DISTINCT customer_id) FROM Customers_cards GROUP BY card_type_code;ВЫБРАТЬ кодтипакарты , КОЛИЧЕСТВО(РАЗЛИЧНЫЕ клиент) ИЗ справочник.банковскиекарты СГРУППИРОВАТЬ ПО кодтипакарты
729;SELECT DISTINCT card_type_code FROM Customers_Cards;ВЫБРАТЬ РАЗЛИЧНЫЕ кодтипакарты ИЗ справочник.банковскиекарты
730;SELECT DISTINCT card_type_code FROM Customers_Cards;ВЫБРАТЬ РАЗЛИЧНЫЕ кодтипакарты ИЗ справочник.банковскиекарты
731;SELECT count(DISTINCT card_type_code) FROM Customers_Cards;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ кодтипакарты) ИЗ справочник.банковскиекарты
732;SELECT count(DISTINCT card_type_code) FROM Customers_Cards;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ кодтипакарты) ИЗ справочник.банковскиекарты
733;SELECT DISTINCT transaction_type FROM Financial_Transactions;ВЫБРАТЬ РАЗЛИЧНЫЕ типтранзакции ИЗ регистрсведений.движениесредств
734;SELECT DISTINCT transaction_type FROM Financial_Transactions;ВЫБРАТЬ РАЗЛИЧНЫЕ типтранзакции ИЗ регистрсведений.движениесредств
735;SELECT count(DISTINCT transaction_type) FROM Financial_Transactions;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ типтранзакции) ИЗ регистрсведений.движениесредств
736;SELECT count(DISTINCT transaction_type) FROM Financial_Transactions;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ типтранзакции) ИЗ регистрсведений.движениесредств
737;SELECT avg(transaction_amount) ,  sum(transaction_amount) FROM Financial_transactions;ВЫБРАТЬ СРЕДНЕЕ(сумма) , СУММА(сумма) ИЗ регистрсведений.движениесредств
738;SELECT avg(transaction_amount) ,  sum(transaction_amount) FROM Financial_transactions;ВЫБРАТЬ СРЕДНЕЕ(сумма) , СУММА(сумма) ИЗ регистрсведений.движениесредств
739;SELECT T2.card_type_code ,  count(*) FROM Financial_transactions AS T1 JOIN Customers_cards AS T2 ON T1.card_id  =  T2.card_id GROUP BY T2.card_type_code;ВЫБРАТЬ T2.кодтипакарты , КОЛИЧЕСТВО(*) ИЗ регистрсведений.движениесредств КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.банковскиекарты КАК T2 ПО T1.карта = T2.ссылка СГРУППИРОВАТЬ ПО T2.кодтипакарты
740;SELECT T2.card_type_code ,  count(*) FROM Financial_transactions AS T1 JOIN Customers_cards AS T2 ON T1.card_id  =  T2.card_id GROUP BY T2.card_type_code;ВЫБРАТЬ T2.кодтипакарты , КОЛИЧЕСТВО(*) ИЗ регистрсведений.движениесредств КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.банковскиекарты КАК T2 ПО T1.карта = T2.ссылка СГРУППИРОВАТЬ ПО T2.кодтипакарты
741;SELECT transaction_type ,  count(*) FROM Financial_transactions GROUP BY transaction_type;ВЫБРАТЬ типтранзакции , КОЛИЧЕСТВО(*) ИЗ регистрсведений.движениесредств СГРУППИРОВАТЬ ПО типтранзакции
742;SELECT transaction_type ,  count(*) FROM Financial_transactions GROUP BY transaction_type;ВЫБРАТЬ типтранзакции , КОЛИЧЕСТВО(*) ИЗ регистрсведений.движениесредств СГРУППИРОВАТЬ ПО типтранзакции
743;SELECT transaction_type FROM Financial_transactions GROUP BY transaction_type ORDER BY sum(transaction_amount) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 типтранзакции ИЗ регистрсведений.движениесредств СГРУППИРОВАТЬ ПО типтранзакции УПОРЯДОЧИТЬ ПО СУММА(сумма) УБЫВ
744;SELECT transaction_type FROM Financial_transactions GROUP BY transaction_type ORDER BY sum(transaction_amount) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 типтранзакции ИЗ регистрсведений.движениесредств СГРУППИРОВАТЬ ПО типтранзакции УПОРЯДОЧИТЬ ПО СУММА(сумма) УБЫВ
745;SELECT account_id ,  count(*) FROM Financial_transactions GROUP BY account_id;ВЫБРАТЬ счет , КОЛИЧЕСТВО(*) ИЗ регистрсведений.движениесредств СГРУППИРОВАТЬ ПО счет
746;SELECT account_id ,  count(*) FROM Financial_transactions GROUP BY account_id;ВЫБРАТЬ счет , КОЛИЧЕСТВО(*) ИЗ регистрсведений.движениесредств СГРУППИРОВАТЬ ПО счет
747;SELECT count(*) FROM track;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.гонки
748;SELECT count(*) FROM track;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.гонки
749;SELECT name ,  LOCATION FROM track;ВЫБРАТЬ наименование , класс ИЗ справочник.гонки
750;SELECT name ,  LOCATION FROM track;ВЫБРАТЬ наименование , класс ИЗ справочник.гонки
751;SELECT name ,  seating FROM track WHERE year_opened  >  2000 ORDER BY seating;ВЫБРАТЬ наименование , датапроведения ИЗ справочник.гонки ГДЕ трек > 2000 УПОРЯДОЧИТЬ ПО датапроведения
752;SELECT name ,  seating FROM track WHERE year_opened  >  2000 ORDER BY seating;ВЫБРАТЬ наименование , датапроведения ИЗ справочник.гонки ГДЕ трек > 2000 УПОРЯДОЧИТЬ ПО датапроведения
753;SELECT name ,  LOCATION ,  seating FROM track ORDER BY year_opened DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование , класс , датапроведения ИЗ справочник.гонки УПОРЯДОЧИТЬ ПО трек УБЫВ
754;SELECT name ,  LOCATION ,  seating FROM track ORDER BY year_opened DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование , класс , датапроведения ИЗ справочник.гонки УПОРЯДОЧИТЬ ПО трек УБЫВ
755;SELECT min(seating) ,  max(seating) ,  avg(seating) FROM track;ВЫБРАТЬ МИНИМУМ(датапроведения) , МАКСИМУМ(датапроведения) , СРЕДНЕЕ(датапроведения) ИЗ справочник.гонки
756;SELECT min(seating) ,  max(seating) ,  avg(seating) FROM track;ВЫБРАТЬ МИНИМУМ(датапроведения) , МАКСИМУМ(датапроведения) , СРЕДНЕЕ(датапроведения) ИЗ справочник.гонки
757;SELECT name ,  LOCATION ,  year_opened FROM track WHERE seating  >  (SELECT avg(seating) FROM track);ВЫБРАТЬ name , LOCATION , year_opened ИЗ справочник.гонки ГДЕ seating > (ВЫБРАТЬ СРЕДНЕЕ(seating) ИЗ справочник.гонки)
758;SELECT name ,  LOCATION ,  year_opened FROM track WHERE seating  >  (SELECT avg(seating) FROM track);ВЫБРАТЬ name , LOCATION , year_opened ИЗ справочник.гонки ГДЕ seating > (ВЫБРАТЬ СРЕДНЕЕ(seating) ИЗ справочник.гонки)
759;SELECT DISTINCT LOCATION FROM track;ВЫБРАТЬ РАЗЛИЧНЫЕ класс ИЗ справочник.гонки
760;SELECT DISTINCT LOCATION FROM track;ВЫБРАТЬ РАЗЛИЧНЫЕ класс ИЗ справочник.гонки
761;SELECT count(*) FROM race;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.треки
762;SELECT count(*) FROM race;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.треки
763;SELECT DISTINCT CLASS FROM race;ВЫБРАТЬ РАЗЛИЧНЫЕ местоположение ИЗ справочник.треки
764;SELECT DISTINCT CLASS FROM race;ВЫБРАТЬ РАЗЛИЧНЫЕ местоположение ИЗ справочник.треки
765;SELECT name ,  CLASS ,  date FROM race;ВЫБРАТЬ наименование , местоположение , вместимость ИЗ справочник.треки
766;SELECT name ,  CLASS ,  date FROM race;ВЫБРАТЬ наименование , местоположение , вместимость ИЗ справочник.треки
767;SELECT CLASS ,  count(*) FROM race GROUP BY CLASS;ВЫБРАТЬ местоположение , КОЛИЧЕСТВО(*) ИЗ справочник.треки СГРУППИРОВАТЬ ПО местоположение
768;SELECT CLASS ,  count(*) FROM race GROUP BY CLASS;ВЫБРАТЬ местоположение , КОЛИЧЕСТВО(*) ИЗ справочник.треки СГРУППИРОВАТЬ ПО местоположение
769;SELECT CLASS FROM race GROUP BY CLASS ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 местоположение ИЗ справочник.треки СГРУППИРОВАТЬ ПО местоположение УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
770;SELECT CLASS FROM race GROUP BY CLASS ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 местоположение ИЗ справочник.треки СГРУППИРОВАТЬ ПО местоположение УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
771;SELECT CLASS FROM race GROUP BY CLASS HAVING count(*)  >=  2;ВЫБРАТЬ местоположение ИЗ справочник.треки СГРУППИРОВАТЬ ПО местоположение ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
772;SELECT CLASS FROM race GROUP BY CLASS HAVING count(*)  >=  2;ВЫБРАТЬ местоположение ИЗ справочник.треки СГРУППИРОВАТЬ ПО местоположение ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
775;SELECT name FROM track WHERE track_id NOT IN (SELECT track_id FROM race);ВЫБРАТЬ name ИЗ справочник.гонки ГДЕ track_id НЕ В (ВЫБРАТЬ track_id ИЗ справочник.треки)
776;SELECT name FROM track WHERE track_id NOT IN (SELECT track_id FROM race);ВЫБРАТЬ name ИЗ справочник.гонки ГДЕ track_id НЕ В (ВЫБРАТЬ track_id ИЗ справочник.треки)
777;SELECT year_opened FROM track WHERE seating BETWEEN 4000 AND 5000;ВЫБРАТЬ трек ИЗ справочник.гонки ГДЕ датапроведения МЕЖДУ 4000 И 5000
778;SELECT year_opened FROM track WHERE seating BETWEEN 4000 AND 5000;ВЫБРАТЬ трек ИЗ справочник.гонки ГДЕ датапроведения МЕЖДУ 4000 И 5000
779;SELECT T2.name ,  count(*) FROM race AS T1 JOIN track AS T2 ON T1.track_id  =  T2.track_id GROUP BY T1.track_id;ВЫБРАТЬ T2.наименование , КОЛИЧЕСТВО(*) ИЗ справочник.треки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.гонки КАК T2 ПО T1.годоткрытия = T2.ссылка СГРУППИРОВАТЬ ПО T1.годоткрытия
780;SELECT T2.name ,  count(*) FROM race AS T1 JOIN track AS T2 ON T1.track_id  =  T2.track_id GROUP BY T1.track_id;ВЫБРАТЬ T2.наименование , КОЛИЧЕСТВО(*) ИЗ справочник.треки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.гонки КАК T2 ПО T1.годоткрытия = T2.ссылка СГРУППИРОВАТЬ ПО T1.годоткрытия
781;SELECT T2.name FROM race AS T1 JOIN track AS T2 ON T1.track_id  =  T2.track_id GROUP BY T1.track_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.наименование ИЗ справочник.треки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.гонки КАК T2 ПО T1.годоткрытия = T2.ссылка СГРУППИРОВАТЬ ПО T1.годоткрытия УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
782;SELECT T2.name FROM race AS T1 JOIN track AS T2 ON T1.track_id  =  T2.track_id GROUP BY T1.track_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.наименование ИЗ справочник.треки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.гонки КАК T2 ПО T1.годоткрытия = T2.ссылка СГРУППИРОВАТЬ ПО T1.годоткрытия УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
783;SELECT T1.name ,  T1.date ,  T2.name FROM race AS T1 JOIN track AS T2 ON T1.track_id  =  T2.track_id;ВЫБРАТЬ T1.наименование , T1.вместимость , T2.наименование ИЗ справочник.треки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.гонки КАК T2 ПО T1.годоткрытия = T2.ссылка
784;SELECT T1.name ,  T1.date ,  T2.name FROM race AS T1 JOIN track AS T2 ON T1.track_id  =  T2.track_id;ВЫБРАТЬ T1.наименование , T1.вместимость , T2.наименование ИЗ справочник.треки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.гонки КАК T2 ПО T1.годоткрытия = T2.ссылка
785;SELECT T2.name ,  T2.location FROM race AS T1 JOIN track AS T2 ON T1.track_id  =  T2.track_id GROUP BY T1.track_id HAVING count(*)  =  1;ВЫБРАТЬ T2.наименование , T2.класс ИЗ справочник.треки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.гонки КАК T2 ПО T1.годоткрытия = T2.ссылка СГРУППИРОВАТЬ ПО T1.годоткрытия ИМЕЮЩИЕ КОЛИЧЕСТВО(*) = 1
786;SELECT T2.name ,  T2.location FROM race AS T1 JOIN track AS T2 ON T1.track_id  =  T2.track_id GROUP BY T1.track_id HAVING count(*)  =  1;ВЫБРАТЬ T2.наименование , T2.класс ИЗ справочник.треки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.гонки КАК T2 ПО T1.годоткрытия = T2.ссылка СГРУППИРОВАТЬ ПО T1.годоткрытия ИМЕЮЩИЕ КОЛИЧЕСТВО(*) = 1
789;SELECT count(*) FROM member WHERE Membership_card  =  'Black';"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.члены ГДЕ номеркарты = ""Black"""
790;SELECT count(*) ,  address FROM member GROUP BY address;ВЫБРАТЬ КОЛИЧЕСТВО(*) , адрес ИЗ справочник.члены СГРУППИРОВАТЬ ПО адрес
791;SELECT name FROM member WHERE address  =  'Harford' OR address  =  'Waterbury';"ВЫБРАТЬ наименование ИЗ справочник.члены ГДЕ адрес = ""Harford"" ИЛИ адрес = ""Waterbury"""
792;SELECT name ,  member_id FROM member WHERE Membership_card  =  'Black' OR age  <  30;"ВЫБРАТЬ наименование , ссылка ИЗ справочник.члены ГДЕ номеркарты = ""Black"" ИЛИ возраст < 30"
793;SELECT Time_of_purchase ,  age ,  address FROM member ORDER BY Time_of_purchase;ВЫБРАТЬ времяпокупки , возраст , адрес ИЗ справочник.члены УПОРЯДОЧИТЬ ПО времяпокупки
794;SELECT Membership_card FROM member GROUP BY Membership_card HAVING count(*)  >  5;ВЫБРАТЬ номеркарты ИЗ справочник.члены СГРУППИРОВАТЬ ПО номеркарты ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 5
797;SELECT count(*) FROM member WHERE address != 'Hartford';"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.члены ГДЕ адрес <> ""Hartford"""
799;SELECT address FROM shop ORDER BY open_year;ВЫБРАТЬ адрес ИЗ справочник.магазины УПОРЯДОЧИТЬ ПО годоткрытия
800;SELECT avg(num_of_staff) ,  avg(score) FROM shop;ВЫБРАТЬ СРЕДНЕЕ(количествосотрудников) , СРЕДНЕЕ(оценка) ИЗ справочник.магазины
801;SELECT shop_id ,  address FROM shop WHERE score  <  (SELECT avg(score) FROM shop);ВЫБРАТЬ shop_id , address ИЗ справочник.магазины ГДЕ score < (ВЫБРАТЬ СРЕДНЕЕ(score) ИЗ справочник.магазины)
802;SELECT address ,  num_of_staff FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM happy_hour);ВЫБРАТЬ address , num_of_staff ИЗ справочник.магазины ГДЕ shop_id НЕ В (ВЫБРАТЬ shop_id ИЗ регистрсведений.счастливыечасы)
803;SELECT t1.address ,  t1.shop_id FROM shop AS t1 JOIN happy_hour AS t2 ON t1.shop_id  =  t2.shop_id WHERE MONTH  =  'May';"ВЫБРАТЬ t1.адрес , t1.ссылка ИЗ справочник.магазины КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.счастливыечасы КАК t2 ПО t1.ссылка = t2.магазин ГДЕ MONTH = ""May"""
804;SELECT shop_id ,  count(*) FROM happy_hour GROUP BY shop_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 магазин , КОЛИЧЕСТВО(*) ИЗ регистрсведений.счастливыечасы СГРУППИРОВАТЬ ПО магазин УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
805;SELECT MONTH FROM happy_hour GROUP BY MONTH ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 месяц ИЗ регистрсведений.счастливыечасы СГРУППИРОВАТЬ ПО месяц УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
806;SELECT MONTH FROM happy_hour GROUP BY MONTH HAVING count(*)  >  2;ВЫБРАТЬ месяц ИЗ регистрсведений.счастливыечасы СГРУППИРОВАТЬ ПО месяц ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 2
807;SELECT count(*) FROM ALBUM;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.альбомы
808;SELECT count(*) FROM ALBUM;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.альбомы
809;SELECT Name FROM GENRE;ВЫБРАТЬ наименование ИЗ справочник.жанры
810;SELECT Name FROM GENRE;ВЫБРАТЬ наименование ИЗ справочник.жанры
811;"SELECT * FROM CUSTOMER WHERE State  =  ""NY""";"ВЫБРАТЬ * ИЗ справочник.клиенты ГДЕ штат = ""NY"""
812;"SELECT * FROM CUSTOMER WHERE State  =  ""NY""";"ВЫБРАТЬ * ИЗ справочник.клиенты ГДЕ штат = ""NY"""
813;"SELECT FirstName ,  LastName FROM EMPLOYEE WHERE City  =  ""Calgary""";"ВЫБРАТЬ имя , фамилия ИЗ справочник.сотрудники ГДЕ город = ""Calgary"""
814;"SELECT FirstName ,  LastName FROM EMPLOYEE WHERE City  =  ""Calgary""";"ВЫБРАТЬ имя , фамилия ИЗ справочник.сотрудники ГДЕ город = ""Calgary"""
815;SELECT distinct(BillingCountry) FROM INVOICE;ВЫБРАТЬ distinct(странаплатежа) ИЗ документ.счета
816;SELECT distinct(BillingCountry) FROM INVOICE;ВЫБРАТЬ distinct(странаплатежа) ИЗ документ.счета
817;"SELECT Name FROM ARTIST WHERE Name LIKE ""%a%""";"ВЫБРАТЬ наименование ИЗ справочник.артисты ГДЕ наименование ПОДОБНО ""%a%"""
818;"SELECT Name FROM ARTIST WHERE Name LIKE ""%a%""";"ВЫБРАТЬ наименование ИЗ справочник.артисты ГДЕ наименование ПОДОБНО ""%a%"""
819;"SELECT Title FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistId WHERE T2.Name  =  ""AC/DC""";"ВЫБРАТЬ Title ИЗ справочник.альбомы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.артисты КАК T2 ПО T1.артист = T2.ссылка ГДЕ T2.наименование = ""AC/DC"""
820;"SELECT Title FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistId WHERE T2.Name  =  ""AC/DC""";"ВЫБРАТЬ Title ИЗ справочник.альбомы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.артисты КАК T2 ПО T1.артист = T2.ссылка ГДЕ T2.наименование = ""AC/DC"""
821;"SELECT COUNT(*) FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistId WHERE T2.Name  =  ""Metallica""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.альбомы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.артисты КАК T2 ПО T1.артист = T2.ссылка ГДЕ T2.наименование = ""Metallica"""
822;"SELECT COUNT(*) FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistId WHERE T2.Name  =  ""Metallica""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.альбомы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.артисты КАК T2 ПО T1.артист = T2.ссылка ГДЕ T2.наименование = ""Metallica"""
823;"SELECT T2.Name FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistId WHERE T1.Title  =  ""Balls to the Wall""";"ВЫБРАТЬ T2.наименование ИЗ справочник.альбомы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.артисты КАК T2 ПО T1.артист = T2.ссылка ГДЕ T1.наименование = ""Balls to the Wall"""
824;"SELECT T2.Name FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistId WHERE T1.Title  =  ""Balls to the Wall""";"ВЫБРАТЬ T2.наименование ИЗ справочник.альбомы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.артисты КАК T2 ПО T1.артист = T2.ссылка ГДЕ T1.наименование = ""Balls to the Wall"""
825;SELECT T2.Name FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistId GROUP BY T2.Name ORDER BY COUNT(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.наименование ИЗ справочник.альбомы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.артисты КАК T2 ПО T1.артист = T2.ссылка СГРУППИРОВАТЬ ПО T2.наименование УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
826;SELECT T2.Name FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistId GROUP BY T2.Name ORDER BY COUNT(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.наименование ИЗ справочник.альбомы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.артисты КАК T2 ПО T1.артист = T2.ссылка СГРУППИРОВАТЬ ПО T2.наименование УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
827;SELECT Name FROM TRACK WHERE Name LIKE '%you%';"ВЫБРАТЬ наименование ИЗ справочник.треки ГДЕ наименование ПОДОБНО ""%you%"""
828;SELECT Name FROM TRACK WHERE Name LIKE '%you%';"ВЫБРАТЬ наименование ИЗ справочник.треки ГДЕ наименование ПОДОБНО ""%you%"""
829;SELECT AVG(UnitPrice) FROM TRACK;ВЫБРАТЬ AVG(ценазаединицу) ИЗ справочник.треки
830;SELECT AVG(UnitPrice) FROM TRACK;ВЫБРАТЬ AVG(ценазаединицу) ИЗ справочник.треки
831;SELECT max(Milliseconds) ,  min(Milliseconds) FROM TRACK;ВЫБРАТЬ МАКСИМУМ(длительностьмс) , МИНИМУМ(длительностьмс) ИЗ справочник.треки
832;SELECT max(Milliseconds) ,  min(Milliseconds) FROM TRACK;ВЫБРАТЬ МАКСИМУМ(длительностьмс) , МИНИМУМ(длительностьмс) ИЗ справочник.треки
833;SELECT T1.Title ,  T2.AlbumID ,  COUNT(*) FROM ALBUM AS T1 JOIN TRACK AS T2 ON T1.AlbumId  =  T2.AlbumId GROUP BY T2.AlbumID;ВЫБРАТЬ T1.наименование , T2.альбом , КОЛИЧЕСТВО(*) ИЗ справочник.альбомы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.треки КАК T2 ПО T1.ссылка = T2.альбом СГРУППИРОВАТЬ ПО T2.альбом
834;SELECT T1.Title ,  T2.AlbumID ,  COUNT(*) FROM ALBUM AS T1 JOIN TRACK AS T2 ON T1.AlbumId  =  T2.AlbumId GROUP BY T2.AlbumID;ВЫБРАТЬ T1.наименование , T2.альбом , КОЛИЧЕСТВО(*) ИЗ справочник.альбомы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.треки КАК T2 ПО T1.ссылка = T2.альбом СГРУППИРОВАТЬ ПО T2.альбом
835;SELECT T1.Name FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId GROUP BY T2.GenreId ORDER BY COUNT(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.наименование ИЗ справочник.жанры КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.треки КАК T2 ПО T1.ссылка = T2.жанр СГРУППИРОВАТЬ ПО T2.жанр УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
836;SELECT T1.Name FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId GROUP BY T2.GenreId ORDER BY COUNT(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.наименование ИЗ справочник.жанры КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.треки КАК T2 ПО T1.ссылка = T2.жанр СГРУППИРОВАТЬ ПО T2.жанр УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
837;SELECT T1.Name FROM MEDIATYPE AS T1 JOIN TRACK AS T2 ON T1.MediaTypeId  =  T2.MediaTypeId GROUP BY T2.MediaTypeId ORDER BY COUNT(*) ASC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.наименование ИЗ справочник.типыносителей КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.треки КАК T2 ПО T1.ссылка = T2.типносителя СГРУППИРОВАТЬ ПО T2.типносителя УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) ВОЗР
838;SELECT T1.Name FROM MEDIATYPE AS T1 JOIN TRACK AS T2 ON T1.MediaTypeId  =  T2.MediaTypeId GROUP BY T2.MediaTypeId ORDER BY COUNT(*) ASC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.наименование ИЗ справочник.типыносителей КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.треки КАК T2 ПО T1.ссылка = T2.типносителя СГРУППИРОВАТЬ ПО T2.типносителя УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) ВОЗР
839;SELECT T1.Title ,  T2.AlbumID FROM ALBUM AS T1 JOIN TRACK AS T2 ON T1.AlbumId  =  T2.AlbumId WHERE T2.UnitPrice  >  1 GROUP BY T2.AlbumID;ВЫБРАТЬ T1.наименование , T2.альбом ИЗ справочник.альбомы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.треки КАК T2 ПО T1.ссылка = T2.альбом ГДЕ T2.ценазаединицу > 1 СГРУППИРОВАТЬ ПО T2.альбом
840;SELECT T1.Title ,  T2.AlbumID FROM ALBUM AS T1 JOIN TRACK AS T2 ON T1.AlbumId  =  T2.AlbumId WHERE T2.UnitPrice  >  1 GROUP BY T2.AlbumID;ВЫБРАТЬ T1.наименование , T2.альбом ИЗ справочник.альбомы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.треки КАК T2 ПО T1.ссылка = T2.альбом ГДЕ T2.ценазаединицу > 1 СГРУППИРОВАТЬ ПО T2.альбом
841;"SELECT COUNT(*) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId WHERE T1.Name  =  ""Rock""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.жанры КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.треки КАК T2 ПО T1.ссылка = T2.жанр ГДЕ T1.наименование = ""Rock"""
842;"SELECT COUNT(*) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId WHERE T1.Name  =  ""Rock""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.жанры КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.треки КАК T2 ПО T1.ссылка = T2.жанр ГДЕ T1.наименование = ""Rock"""
843;"SELECT AVG(UnitPrice) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId WHERE T1.Name  =  ""Jazz""";"ВЫБРАТЬ AVG(UnitPrice) ИЗ справочник.жанры КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.треки КАК T2 ПО T1.ссылка = T2.жанр ГДЕ T1.наименование = ""Jazz"""
844;"SELECT AVG(UnitPrice) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId WHERE T1.Name  =  ""Jazz""";"ВЫБРАТЬ AVG(UnitPrice) ИЗ справочник.жанры КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.треки КАК T2 ПО T1.ссылка = T2.жанр ГДЕ T1.наименование = ""Jazz"""
845;"SELECT FirstName ,  LastName FROM CUSTOMER WHERE Email  =  ""luisg@embraer.com.br""";"ВЫБРАТЬ имя , фамилия ИЗ справочник.клиенты ГДЕ элпочта = ""luisg@embraer.com.br"""
846;"SELECT FirstName ,  LastName FROM CUSTOMER WHERE Email  =  ""luisg@embraer.com.br""";"ВЫБРАТЬ имя , фамилия ИЗ справочник.клиенты ГДЕ элпочта = ""luisg@embraer.com.br"""
847;"SELECT COUNT(*) FROM CUSTOMER WHERE Email LIKE ""%gmail.com%""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.клиенты ГДЕ элпочта ПОДОБНО ""%gmail.com%"""
848;"SELECT COUNT(*) FROM CUSTOMER WHERE Email LIKE ""%gmail.com%""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.клиенты ГДЕ элпочта ПОДОБНО ""%gmail.com%"""
849;"SELECT T2.FirstName ,  T2.LastName FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId  =  T2.EmployeeId WHERE T1.FirstName  =  ""Leonie""";"ВЫБРАТЬ T2.имя , T2.фамилия ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сотрудники КАК T2 ПО T1.ответственныйменеджер = T2.ссылка ГДЕ T1.имя = ""Leonie"""
850;"SELECT T2.FirstName ,  T2.LastName FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId  =  T2.EmployeeId WHERE T1.FirstName  =  ""Leonie""";"ВЫБРАТЬ T2.имя , T2.фамилия ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сотрудники КАК T2 ПО T1.ответственныйменеджер = T2.ссылка ГДЕ T1.имя = ""Leonie"""
851;"SELECT T2.City FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId  =  T2.EmployeeId WHERE T1.PostalCode  =  ""70174""";"ВЫБРАТЬ T2.город ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сотрудники КАК T2 ПО T1.ответственныйменеджер = T2.ссылка ГДЕ T1.почтовыйиндекс = ""70174"""
852;"SELECT T2.City FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId  =  T2.EmployeeId WHERE T1.PostalCode  =  ""70174""";"ВЫБРАТЬ T2.город ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сотрудники КАК T2 ПО T1.ответственныйменеджер = T2.ссылка ГДЕ T1.почтовыйиндекс = ""70174"""
853;SELECT COUNT(DISTINCT city) FROM EMPLOYEE;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ город) ИЗ справочник.сотрудники
854;SELECT COUNT(DISTINCT city) FROM EMPLOYEE;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ город) ИЗ справочник.сотрудники
855;"SELECT T2.InvoiceDate FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId  =  T2.CustomerId WHERE T1.FirstName  =  ""Astrid"" AND LastName  =  ""Gruber""";"ВЫБРАТЬ T2.датасчета ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.счета КАК T2 ПО T1.ссылка = T2.клиент ГДЕ T1.имя = ""Astrid"" И LastName = ""Gruber"""
856;"SELECT T2.InvoiceDate FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId  =  T2.CustomerId WHERE T1.FirstName  =  ""Astrid"" AND LastName  =  ""Gruber""";"ВЫБРАТЬ T2.датасчета ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.счета КАК T2 ПО T1.ссылка = T2.клиент ГДЕ T1.имя = ""Astrid"" И LastName = ""Gruber"""
859;"SELECT DISTINCT T1.FirstName FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId  =  T2.CustomerId WHERE T1.country  =  ""Brazil""";"ВЫБРАТЬ РАЗЛИЧНЫЕ T1.имя ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.счета КАК T2 ПО T1.ссылка = T2.клиент ГДЕ T1.страна = ""Brazil"""
860;"SELECT DISTINCT T1.FirstName FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId  =  T2.CustomerId WHERE T1.country  =  ""Brazil""";"ВЫБРАТЬ РАЗЛИЧНЫЕ T1.имя ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.счета КАК T2 ПО T1.ссылка = T2.клиент ГДЕ T1.страна = ""Brazil"""
861;"SELECT DISTINCT T1.Address FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId  =  T2.CustomerId WHERE T1.country  =  ""Germany""";"ВЫБРАТЬ РАЗЛИЧНЫЕ T1.адрес ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.счета КАК T2 ПО T1.ссылка = T2.клиент ГДЕ T1.страна = ""Germany"""
862;"SELECT DISTINCT T1.Address FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId  =  T2.CustomerId WHERE T1.country  =  ""Germany""";"ВЫБРАТЬ РАЗЛИЧНЫЕ T1.адрес ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.счета КАК T2 ПО T1.ссылка = T2.клиент ГДЕ T1.страна = ""Germany"""
863;SELECT Phone FROM EMPLOYEE;ВЫБРАТЬ телефон ИЗ справочник.сотрудники
864;SELECT Phone FROM EMPLOYEE;ВЫБРАТЬ телефон ИЗ справочник.сотрудники
865;"SELECT COUNT(*) FROM MEDIATYPE AS T1 JOIN TRACK AS T2 ON T1.MediaTypeId  =  T2.MediaTypeId WHERE T1.Name  =  ""AAC audio file""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.типыносителей КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.треки КАК T2 ПО T1.ссылка = T2.типносителя ГДЕ T1.наименование = ""AAC audio file"""
866;"SELECT COUNT(*) FROM MEDIATYPE AS T1 JOIN TRACK AS T2 ON T1.MediaTypeId  =  T2.MediaTypeId WHERE T1.Name  =  ""AAC audio file""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.типыносителей КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.треки КАК T2 ПО T1.ссылка = T2.типносителя ГДЕ T1.наименование = ""AAC audio file"""
867;"SELECT AVG(Milliseconds) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId WHERE T1.Name  =  ""Latin"" OR T1.Name  =  ""Pop""";"ВЫБРАТЬ AVG(Milliseconds) ИЗ справочник.жанры КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.треки КАК T2 ПО T1.ссылка = T2.жанр ГДЕ T1.наименование = ""Latin"" ИЛИ T1.наименование = ""Pop"""
868;"SELECT AVG(Milliseconds) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId WHERE T1.Name  =  ""Latin"" OR T1.Name  =  ""Pop""";"ВЫБРАТЬ AVG(Milliseconds) ИЗ справочник.жанры КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.треки КАК T2 ПО T1.ссылка = T2.жанр ГДЕ T1.наименование = ""Latin"" ИЛИ T1.наименование = ""Pop"""
869;SELECT T1.FirstName ,  T1.SupportRepId FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId  =  T2.EmployeeId GROUP BY T1.SupportRepId HAVING COUNT(*)  >=  10;ВЫБРАТЬ T1.имя , T1.ответственныйменеджер ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сотрудники КАК T2 ПО T1.ответственныйменеджер = T2.ссылка СГРУППИРОВАТЬ ПО T1.ответственныйменеджер ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 10
870;SELECT T1.FirstName ,  T1.SupportRepId FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId  =  T2.EmployeeId GROUP BY T1.SupportRepId HAVING COUNT(*)  >=  10;ВЫБРАТЬ T1.имя , T1.ответственныйменеджер ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сотрудники КАК T2 ПО T1.ответственныйменеджер = T2.ссылка СГРУППИРОВАТЬ ПО T1.ответственныйменеджер ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 10
871;SELECT T1.LastName FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId  =  T2.EmployeeId GROUP BY T1.SupportRepId HAVING COUNT(*)  <=  20;ВЫБРАТЬ T1.фамилия ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сотрудники КАК T2 ПО T1.ответственныйменеджер = T2.ссылка СГРУППИРОВАТЬ ПО T1.ответственныйменеджер ИМЕЮЩИЕ КОЛИЧЕСТВО(*) <= 20
872;SELECT T1.LastName FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId  =  T2.EmployeeId GROUP BY T1.SupportRepId HAVING COUNT(*)  <=  20;ВЫБРАТЬ T1.фамилия ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сотрудники КАК T2 ПО T1.ответственныйменеджер = T2.ссылка СГРУППИРОВАТЬ ПО T1.ответственныйменеджер ИМЕЮЩИЕ КОЛИЧЕСТВО(*) <= 20
873;SELECT Title FROM ALBUM ORDER BY Title;ВЫБРАТЬ наименование ИЗ справочник.альбомы УПОРЯДОЧИТЬ ПО наименование
874;SELECT Title FROM ALBUM ORDER BY Title;ВЫБРАТЬ наименование ИЗ справочник.альбомы УПОРЯДОЧИТЬ ПО наименование
875;SELECT T2.Name ,  T1.ArtistId FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistID GROUP BY T1.ArtistId HAVING COUNT(*)  >=  3 ORDER BY T2.Name;ВЫБРАТЬ T2.наименование , T1.артист ИЗ справочник.альбомы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.артисты КАК T2 ПО T1.артист = T2.ссылка СГРУППИРОВАТЬ ПО T1.артист ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 3 УПОРЯДОЧИТЬ ПО T2.наименование
876;SELECT T2.Name ,  T1.ArtistId FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistID GROUP BY T1.ArtistId HAVING COUNT(*)  >=  3 ORDER BY T2.Name;ВЫБРАТЬ T2.наименование , T1.артист ИЗ справочник.альбомы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.артисты КАК T2 ПО T1.артист = T2.ссылка СГРУППИРОВАТЬ ПО T1.артист ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 3 УПОРЯДОЧИТЬ ПО T2.наименование
879;"SELECT AVG(T2.UnitPrice) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId WHERE T1.Name  =  ""Rock""";"ВЫБРАТЬ AVG(T2.ценазаединицу) ИЗ справочник.жанры КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.треки КАК T2 ПО T1.ссылка = T2.жанр ГДЕ T1.наименование = ""Rock"""
880;"SELECT AVG(T2.UnitPrice) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId WHERE T1.Name  =  ""Rock""";"ВЫБРАТЬ AVG(T2.ценазаединицу) ИЗ справочник.жанры КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.треки КАК T2 ПО T1.ссылка = T2.жанр ГДЕ T1.наименование = ""Rock"""
881;"SELECT max(Milliseconds) ,  min(Milliseconds) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId WHERE T1.Name  =  ""Pop""";"ВЫБРАТЬ МАКСИМУМ(Milliseconds) , МИНИМУМ(Milliseconds) ИЗ справочник.жанры КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.треки КАК T2 ПО T1.ссылка = T2.жанр ГДЕ T1.наименование = ""Pop"""
882;"SELECT max(Milliseconds) ,  min(Milliseconds) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId WHERE T1.Name  =  ""Pop""";"ВЫБРАТЬ МАКСИМУМ(Milliseconds) , МИНИМУМ(Milliseconds) ИЗ справочник.жанры КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.треки КАК T2 ПО T1.ссылка = T2.жанр ГДЕ T1.наименование = ""Pop"""
883;"SELECT BirthDate FROM EMPLOYEE WHERE City  =  ""Edmonton""";"ВЫБРАТЬ датарождения ИЗ справочник.сотрудники ГДЕ город = ""Edmonton"""
884;"SELECT BirthDate FROM EMPLOYEE WHERE City  =  ""Edmonton""";"ВЫБРАТЬ датарождения ИЗ справочник.сотрудники ГДЕ город = ""Edmonton"""
885;SELECT distinct(UnitPrice) FROM TRACK;ВЫБРАТЬ distinct(ценазаединицу) ИЗ справочник.треки
886;SELECT distinct(UnitPrice) FROM TRACK;ВЫБРАТЬ distinct(ценазаединицу) ИЗ справочник.треки
887;SELECT count(*) FROM ARTIST WHERE artistid NOT IN(SELECT artistid FROM ALBUM);ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.артисты ГДЕ artistid NOT IN(ВЫБРАТЬ artistid ИЗ справочник.альбомы)
888;SELECT count(*) FROM ARTIST WHERE artistid NOT IN(SELECT artistid FROM ALBUM);ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.артисты ГДЕ artistid NOT IN(ВЫБРАТЬ artistid ИЗ справочник.альбомы)
891;SELECT customer_phone FROM available_policies;ВЫБРАТЬ телефонклиента ИЗ справочник.доступныеполисы
892;SELECT customer_phone FROM available_policies;ВЫБРАТЬ телефонклиента ИЗ справочник.доступныеполисы
893;"SELECT customer_phone FROM available_policies WHERE policy_type_code  =  ""Life Insurance""";"ВЫБРАТЬ телефонклиента ИЗ справочник.доступныеполисы ГДЕ кодтипаполиса = ""Life Insurance"""
894;"SELECT customer_phone FROM available_policies WHERE policy_type_code  =  ""Life Insurance""";"ВЫБРАТЬ телефонклиента ИЗ справочник.доступныеполисы ГДЕ кодтипаполиса = ""Life Insurance"""
895;SELECT policy_type_code FROM available_policies GROUP BY policy_type_code ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 кодтипаполиса ИЗ справочник.доступныеполисы СГРУППИРОВАТЬ ПО кодтипаполиса УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
896;SELECT policy_type_code FROM available_policies GROUP BY policy_type_code ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 кодтипаполиса ИЗ справочник.доступныеполисы СГРУППИРОВАТЬ ПО кодтипаполиса УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
897;SELECT customer_phone FROM available_policies WHERE policy_type_code  =  (SELECT policy_type_code FROM available_policies GROUP BY policy_type_code ORDER BY count(*) DESC LIMIT 1);ВЫБРАТЬ customer_phone ИЗ справочник.доступныеполисы ГДЕ policy_type_code = (ВЫБРАТЬ policy_type_code ИЗ справочник.доступныеполисы СГРУППИРОВАТЬ ПО policy_type_code УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ LIMIT 1)
898;SELECT customer_phone FROM available_policies WHERE policy_type_code  =  (SELECT policy_type_code FROM available_policies GROUP BY policy_type_code ORDER BY count(*) DESC LIMIT 1);ВЫБРАТЬ customer_phone ИЗ справочник.доступныеполисы ГДЕ policy_type_code = (ВЫБРАТЬ policy_type_code ИЗ справочник.доступныеполисы СГРУППИРОВАТЬ ПО policy_type_code УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ LIMIT 1)
899;SELECT policy_type_code FROM available_policies GROUP BY policy_type_code HAVING count(*)  >  4;ВЫБРАТЬ кодтипаполиса ИЗ справочник.доступныеполисы СГРУППИРОВАТЬ ПО кодтипаполиса ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 4
900;SELECT policy_type_code FROM available_policies GROUP BY policy_type_code HAVING count(*)  >  4;ВЫБРАТЬ кодтипаполиса ИЗ справочник.доступныеполисы СГРУППИРОВАТЬ ПО кодтипаполиса ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 4
901;SELECT sum(settlement_amount) ,  avg(settlement_amount) FROM settlements;ВЫБРАТЬ СУММА(суммавыплаты) , СРЕДНЕЕ(суммавыплаты) ИЗ документ.выплата
902;SELECT sum(settlement_amount) ,  avg(settlement_amount) FROM settlements;ВЫБРАТЬ СУММА(суммавыплаты) , СРЕДНЕЕ(суммавыплаты) ИЗ документ.выплата
903;SELECT t2.service_name FROM first_notification_of_loss AS t1 JOIN services AS t2 ON t1.service_id  =  t2.service_id GROUP BY t1.service_id HAVING count(*)  >  2;ВЫБРАТЬ t2.наименование ИЗ документ.уведомлениеолосе КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сервисы КАК t2 ПО t1.сервис = t2.ссылка СГРУППИРОВАТЬ ПО t1.сервис ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 2
904;SELECT t2.service_name FROM first_notification_of_loss AS t1 JOIN services AS t2 ON t1.service_id  =  t2.service_id GROUP BY t1.service_id HAVING count(*)  >  2;ВЫБРАТЬ t2.наименование ИЗ документ.уведомлениеолосе КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сервисы КАК t2 ПО t1.сервис = t2.ссылка СГРУППИРОВАТЬ ПО t1.сервис ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 2
905;SELECT t1.Effective_Date FROM claims AS t1 JOIN settlements AS t2 ON t1.claim_id  =  t2.claim_id GROUP BY t1.claim_id ORDER BY sum(t2.settlement_amount) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 t1.датавступлениявсилу ИЗ документ.претензия КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.выплата КАК t2 ПО t1.ссылка = t2.претензия СГРУППИРОВАТЬ ПО t1.ссылка УПОРЯДОЧИТЬ ПО СУММА(t2.суммавыплаты) УБЫВ
906;SELECT t1.Effective_Date FROM claims AS t1 JOIN settlements AS t2 ON t1.claim_id  =  t2.claim_id GROUP BY t1.claim_id ORDER BY sum(t2.settlement_amount) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 t1.датавступлениявсилу ИЗ документ.претензия КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.выплата КАК t2 ПО t1.ссылка = t2.претензия СГРУППИРОВАТЬ ПО t1.ссылка УПОРЯДОЧИТЬ ПО СУММА(t2.суммавыплаты) УБЫВ
907;"SELECT count(*) FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.customer_name  =  ""Dayana Robel""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.клиенты КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.полисыклиентов КАК t2 ПО t1.ссылка = t2.клиент ГДЕ t1.наименование = ""Dayana Robel"""
908;"SELECT count(*) FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.customer_name  =  ""Dayana Robel""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.клиенты КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.полисыклиентов КАК t2 ПО t1.ссылка = t2.клиент ГДЕ t1.наименование = ""Dayana Robel"""
909;SELECT t1.customer_name FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id GROUP BY t1.customer_name ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 t1.наименование ИЗ справочник.клиенты КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.полисыклиентов КАК t2 ПО t1.ссылка = t2.клиент СГРУППИРОВАТЬ ПО t1.наименование УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
910;SELECT t1.customer_name FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id GROUP BY t1.customer_name ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 t1.наименование ИЗ справочник.клиенты КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.полисыклиентов КАК t2 ПО t1.ссылка = t2.клиент СГРУППИРОВАТЬ ПО t1.наименование УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
911;"SELECT DISTINCT t3.policy_type_code FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id JOIN available_policies AS t3 ON t2.policy_id  =  t3.policy_id WHERE t1.customer_name  =  ""Dayana Robel""";"ВЫБРАТЬ РАЗЛИЧНЫЕ t3.кодтипаполиса ИЗ справочник.клиенты КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.полисыклиентов КАК t2 ПО t1.ссылка = t2.клиент ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.доступныеполисы КАК t3 ПО t2.полис = t3.ссылка ГДЕ t1.наименование = ""Dayana Robel"""
912;"SELECT DISTINCT t3.policy_type_code FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id JOIN available_policies AS t3 ON t2.policy_id  =  t3.policy_id WHERE t1.customer_name  =  ""Dayana Robel""";"ВЫБРАТЬ РАЗЛИЧНЫЕ t3.кодтипаполиса ИЗ справочник.клиенты КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.полисыклиентов КАК t2 ПО t1.ссылка = t2.клиент ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.доступныеполисы КАК t3 ПО t2.полис = t3.ссылка ГДЕ t1.наименование = ""Dayana Robel"""
913;SELECT DISTINCT t3.policy_type_code FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id JOIN available_policies AS t3 ON t2.policy_id  =  t3.policy_id WHERE t1.customer_name  =  (SELECT t1.customer_name FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id GROUP BY t1.customer_name ORDER BY count(*) DESC LIMIT 1);ВЫБРАТЬ РАЗЛИЧНЫЕ t3.кодтипаполиса ИЗ справочник.клиенты КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.полисыклиентов КАК t2 ПО t1.ссылка = t2.клиент ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.доступныеполисы КАК t3 ПО t2.полис = t3.ссылка ГДЕ t1.наименование = (ВЫБРАТЬ t1.наименование ИЗ справочник.клиенты КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.полисыклиентов КАК t2 ПО t1.ссылка = t2.клиент СГРУППИРОВАТЬ ПО t1.наименование УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ LIMIT 1)
914;SELECT DISTINCT t3.policy_type_code FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id JOIN available_policies AS t3 ON t2.policy_id  =  t3.policy_id WHERE t1.customer_name  =  (SELECT t1.customer_name FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id GROUP BY t1.customer_name ORDER BY count(*) DESC LIMIT 1);ВЫБРАТЬ РАЗЛИЧНЫЕ t3.кодтипаполиса ИЗ справочник.клиенты КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.полисыклиентов КАК t2 ПО t1.ссылка = t2.клиент ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.доступныеполисы КАК t3 ПО t2.полис = t3.ссылка ГДЕ t1.наименование = (ВЫБРАТЬ t1.наименование ИЗ справочник.клиенты КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.полисыклиентов КАК t2 ПО t1.ссылка = t2.клиент СГРУППИРОВАТЬ ПО t1.наименование УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ LIMIT 1)
915;SELECT service_name FROM services ORDER BY service_name;ВЫБРАТЬ наименование ИЗ справочник.сервисы УПОРЯДОЧИТЬ ПО наименование
916;SELECT service_name FROM services ORDER BY service_name;ВЫБРАТЬ наименование ИЗ справочник.сервисы УПОРЯДОЧИТЬ ПО наименование
917;SELECT count(*) FROM services;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.сервисы
918;SELECT count(*) FROM services;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.сервисы
921;"SELECT t1.customer_name FROM customers AS t1 JOIN first_notification_of_loss AS t2 ON t1.customer_id  =  t2.customer_id JOIN services AS t3 ON t2.service_id  =  t3.service_id WHERE t3.service_name  =  ""Close a policy"" OR t3.service_name  =  ""Upgrade a policy""";"ВЫБРАТЬ t1.наименование ИЗ справочник.клиенты КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.уведомлениеолосе КАК t2 ПО t1.ссылка = t2.клиент ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сервисы КАК t3 ПО t2.сервис = t3.ссылка ГДЕ t3.наименование = ""Close a policy"" ИЛИ t3.наименование = ""Upgrade a policy"""
922;"SELECT t1.customer_name FROM customers AS t1 JOIN first_notification_of_loss AS t2 ON t1.customer_id  =  t2.customer_id JOIN services AS t3 ON t2.service_id  =  t3.service_id WHERE t3.service_name  =  ""Close a policy"" OR t3.service_name  =  ""Upgrade a policy""";"ВЫБРАТЬ t1.наименование ИЗ справочник.клиенты КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.уведомлениеолосе КАК t2 ПО t1.ссылка = t2.клиент ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сервисы КАК t3 ПО t2.сервис = t3.ссылка ГДЕ t3.наименование = ""Close a policy"" ИЛИ t3.наименование = ""Upgrade a policy"""
925;"SELECT customer_id FROM customers WHERE customer_name LIKE ""%Diana%""";"ВЫБРАТЬ ссылка ИЗ справочник.клиенты ГДЕ наименование ПОДОБНО ""%Diana%"""
926;"SELECT customer_id FROM customers WHERE customer_name LIKE ""%Diana%""";"ВЫБРАТЬ ссылка ИЗ справочник.клиенты ГДЕ наименование ПОДОБНО ""%Diana%"""
927;SELECT max(settlement_amount) ,  min(settlement_amount) FROM settlements;ВЫБРАТЬ МАКСИМУМ(суммавыплаты) , МИНИМУМ(суммавыплаты) ИЗ документ.выплата
928;SELECT max(settlement_amount) ,  min(settlement_amount) FROM settlements;ВЫБРАТЬ МАКСИМУМ(суммавыплаты) , МИНИМУМ(суммавыплаты) ИЗ документ.выплата
929;SELECT customer_id ,  customer_name FROM customers ORDER BY customer_id ASC;ВЫБРАТЬ ссылка , наименование ИЗ справочник.клиенты УПОРЯДОЧИТЬ ПО ссылка ВОЗР
930;SELECT customer_id ,  customer_name FROM customers ORDER BY customer_id ASC;ВЫБРАТЬ ссылка , наименование ИЗ справочник.клиенты УПОРЯДОЧИТЬ ПО ссылка ВОЗР
931;"SELECT t2.date_opened ,  t2.date_closed FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.customer_name LIKE ""%Diana%""";"ВЫБРАТЬ t2.датаоткрытия , t2.датазакрытия ИЗ справочник.клиенты КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.полисыклиентов КАК t2 ПО t1.ссылка = t2.клиент ГДЕ t1.наименование ПОДОБНО ""%Diana%"""
932;"SELECT t2.date_opened ,  t2.date_closed FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.customer_name LIKE ""%Diana%""";"ВЫБРАТЬ t2.датаоткрытия , t2.датазакрытия ИЗ справочник.клиенты КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.полисыклиентов КАК t2 ПО t1.ссылка = t2.клиент ГДЕ t1.наименование ПОДОБНО ""%Diana%"""
933;SELECT count(*) FROM enzyme;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.ферменты
934;SELECT count(*) FROM enzyme;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.ферменты
935;SELECT name FROM enzyme ORDER BY name DESC;ВЫБРАТЬ наименование ИЗ справочник.ферменты УПОРЯДОЧИТЬ ПО наименование УБЫВ
936;SELECT name FROM enzyme ORDER BY name DESC;ВЫБРАТЬ наименование ИЗ справочник.ферменты УПОРЯДОЧИТЬ ПО наименование УБЫВ
937;SELECT name ,  LOCATION FROM enzyme;ВЫБРАТЬ наименование , локализация ИЗ справочник.ферменты
938;SELECT name ,  LOCATION FROM enzyme;ВЫБРАТЬ наименование , локализация ИЗ справочник.ферменты
939;SELECT max(OMIM) FROM enzyme;ВЫБРАТЬ МАКСИМУМ(omim) ИЗ справочник.ферменты
940;SELECT max(OMIM) FROM enzyme;ВЫБРАТЬ МАКСИМУМ(omim) ИЗ справочник.ферменты
941;SELECT product ,  chromosome ,  porphyria FROM enzyme WHERE LOCATION  =  'Cytosol';"ВЫБРАТЬ продукт , хромосома , порфирия ИЗ справочник.ферменты ГДЕ локализация = ""Cytosol"""
942;SELECT product ,  chromosome ,  porphyria FROM enzyme WHERE LOCATION  =  'Cytosol';"ВЫБРАТЬ продукт , хромосома , порфирия ИЗ справочник.ферменты ГДЕ локализация = ""Cytosol"""
943;SELECT name FROM enzyme WHERE product != 'Heme';"ВЫБРАТЬ наименование ИЗ справочник.ферменты ГДЕ продукт <> ""Heme"""
944;SELECT name FROM enzyme WHERE product != 'Heme';"ВЫБРАТЬ наименование ИЗ справочник.ферменты ГДЕ продукт <> ""Heme"""
945;SELECT name ,  trade_name FROM medicine WHERE FDA_approved  =  'Yes';"ВЫБРАТЬ наименование , торговоенаименование ИЗ справочник.лекарства ГДЕ одобреноfda = ""Yes"""
946;SELECT name ,  trade_name FROM medicine WHERE FDA_approved  =  'Yes';"ВЫБРАТЬ наименование , торговоенаименование ИЗ справочник.лекарства ГДЕ одобреноfda = ""Yes"""
947;SELECT T1.name FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T1.id  =  T2.enzyme_id JOIN medicine AS T3 ON T2.medicine_id  =  T3.id WHERE T3.name  =  'Amisulpride' AND T2.interaction_type  =  'inhibitor';"ВЫБРАТЬ T1.наименование ИЗ справочник.ферменты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.взаимодействиялекарствиферментов КАК T2 ПО T1.ссылка = T2.фермент ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.лекарства КАК T3 ПО T2.лекарство = T3.ссылка ГДЕ T3.наименование = ""Amisulpride"" И T2.типвзаимодействия = ""inhibitor"""
948;SELECT T1.name FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T1.id  =  T2.enzyme_id JOIN medicine AS T3 ON T2.medicine_id  =  T3.id WHERE T3.name  =  'Amisulpride' AND T2.interaction_type  =  'inhibitor';"ВЫБРАТЬ T1.наименование ИЗ справочник.ферменты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.взаимодействиялекарствиферментов КАК T2 ПО T1.ссылка = T2.фермент ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.лекарства КАК T3 ПО T2.лекарство = T3.ссылка ГДЕ T3.наименование = ""Amisulpride"" И T2.типвзаимодействия = ""inhibitor"""
949;SELECT T1.id ,  T1.Name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id GROUP BY T1.id HAVING count(*)  >=  2;ВЫБРАТЬ T1.ссылка , T1.наименование ИЗ справочник.лекарства КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.взаимодействиялекарствиферментов КАК T2 ПО T2.лекарство = T1.ссылка СГРУППИРОВАТЬ ПО T1.ссылка ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
950;SELECT T1.id ,  T1.Name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id GROUP BY T1.id HAVING count(*)  >=  2;ВЫБРАТЬ T1.ссылка , T1.наименование ИЗ справочник.лекарства КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.взаимодействиялекарствиферментов КАК T2 ПО T2.лекарство = T1.ссылка СГРУППИРОВАТЬ ПО T1.ссылка ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
951;SELECT T1.id ,  T1.Name ,  T1.FDA_approved FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id GROUP BY T1.id ORDER BY count(*) DESC;ВЫБРАТЬ T1.ссылка , T1.наименование , T1.одобреноfda ИЗ справочник.лекарства КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.взаимодействиялекарствиферментов КАК T2 ПО T2.лекарство = T1.ссылка СГРУППИРОВАТЬ ПО T1.ссылка УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
952;SELECT T1.id ,  T1.Name ,  T1.FDA_approved FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id GROUP BY T1.id ORDER BY count(*) DESC;ВЫБРАТЬ T1.ссылка , T1.наименование , T1.одобреноfda ИЗ справочник.лекарства КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.взаимодействиялекарствиферментов КАК T2 ПО T2.лекарство = T1.ссылка СГРУППИРОВАТЬ ПО T1.ссылка УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
953;SELECT T1.id ,  T1.name FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T1.id  =  T2.enzyme_id WHERE T2.interaction_type  =  'activitor' GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1;"ВЫБРАТЬ ПЕРВЫЕ 1 T1.ссылка , T1.наименование ИЗ справочник.ферменты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.взаимодействиялекарствиферментов КАК T2 ПО T1.ссылка = T2.фермент ГДЕ T2.типвзаимодействия = ""activitor"" СГРУППИРОВАТЬ ПО T1.ссылка УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ"
954;SELECT T1.id ,  T1.name FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T1.id  =  T2.enzyme_id WHERE T2.interaction_type  =  'activitor' GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1;"ВЫБРАТЬ ПЕРВЫЕ 1 T1.ссылка , T1.наименование ИЗ справочник.ферменты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.взаимодействиялекарствиферментов КАК T2 ПО T1.ссылка = T2.фермент ГДЕ T2.типвзаимодействия = ""activitor"" СГРУППИРОВАТЬ ПО T1.ссылка УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ"
955;SELECT T1.interaction_type FROM medicine_enzyme_interaction AS T1 JOIN medicine AS T2 ON T1.medicine_id  =  T2.id JOIN enzyme AS T3 ON T1.enzyme_id  =  T3.id WHERE T3.name  =  'ALA synthase' AND T2.name  =  'Aripiprazole';"ВЫБРАТЬ T1.типвзаимодействия ИЗ регистрсведений.взаимодействиялекарствиферментов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.лекарства КАК T2 ПО T1.лекарство = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.ферменты КАК T3 ПО T1.фермент = T3.ссылка ГДЕ T3.наименование = ""ALA synthase"" И T2.наименование = ""Aripiprazole"""
956;SELECT T1.interaction_type FROM medicine_enzyme_interaction AS T1 JOIN medicine AS T2 ON T1.medicine_id  =  T2.id JOIN enzyme AS T3 ON T1.enzyme_id  =  T3.id WHERE T3.name  =  'ALA synthase' AND T2.name  =  'Aripiprazole';"ВЫБРАТЬ T1.типвзаимодействия ИЗ регистрсведений.взаимодействиялекарствиферментов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.лекарства КАК T2 ПО T1.лекарство = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.ферменты КАК T3 ПО T1.фермент = T3.ссылка ГДЕ T3.наименование = ""ALA synthase"" И T2.наименование = ""Aripiprazole"""
957;SELECT interaction_type ,  count(*) FROM medicine_enzyme_interaction GROUP BY interaction_type ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 типвзаимодействия , КОЛИЧЕСТВО(*) ИЗ регистрсведений.взаимодействиялекарствиферментов СГРУППИРОВАТЬ ПО типвзаимодействия УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
958;SELECT interaction_type ,  count(*) FROM medicine_enzyme_interaction GROUP BY interaction_type ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 типвзаимодействия , КОЛИЧЕСТВО(*) ИЗ регистрсведений.взаимодействиялекарствиферментов СГРУППИРОВАТЬ ПО типвзаимодействия УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
959;SELECT count(*) FROM medicine WHERE FDA_approved  =  'No';"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.лекарства ГДЕ одобреноfda = ""No"""
960;SELECT count(*) FROM medicine WHERE FDA_approved  =  'No';"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.лекарства ГДЕ одобреноfda = ""No"""
961;"SELECT count(*) FROM enzyme WHERE id NOT IN ( SELECT enzyme_id FROM medicine_enzyme_interaction );";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.ферменты ГДЕ id НЕ В ( ВЫБРАТЬ enzyme_id ИЗ регистрсведений.взаимодействиялекарствиферментов );"
962;"SELECT count(*) FROM enzyme WHERE id NOT IN ( SELECT enzyme_id FROM medicine_enzyme_interaction );";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.ферменты ГДЕ id НЕ В ( ВЫБРАТЬ enzyme_id ИЗ регистрсведений.взаимодействиялекарствиферментов );"
963;SELECT T1.id ,  T1.trade_name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id GROUP BY T1.id HAVING COUNT(*)  >=  3;ВЫБРАТЬ T1.ссылка , T1.торговоенаименование ИЗ справочник.лекарства КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.взаимодействиялекарствиферментов КАК T2 ПО T2.лекарство = T1.ссылка СГРУППИРОВАТЬ ПО T1.ссылка ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 3
964;SELECT T1.id ,  T1.trade_name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id GROUP BY T1.id HAVING COUNT(*)  >=  3;ВЫБРАТЬ T1.ссылка , T1.торговоенаименование ИЗ справочник.лекарства КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.взаимодействиялекарствиферментов КАК T2 ПО T2.лекарство = T1.ссылка СГРУППИРОВАТЬ ПО T1.ссылка ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 3
965;SELECT DISTINCT T1.name ,  T1.location ,  T1.product FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.enzyme_id  =  T1.id WHERE T2.interaction_type  =  'inhibitor';"ВЫБРАТЬ РАЗЛИЧНЫЕ T1.наименование , T1.локализация , T1.продукт ИЗ справочник.ферменты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.взаимодействиялекарствиферментов КАК T2 ПО T2.фермент = T1.ссылка ГДЕ T2.типвзаимодействия = ""inhibitor"""
966;SELECT DISTINCT T1.name ,  T1.location ,  T1.product FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.enzyme_id  =  T1.id WHERE T2.interaction_type  =  'inhibitor';"ВЫБРАТЬ РАЗЛИЧНЫЕ T1.наименование , T1.локализация , T1.продукт ИЗ справочник.ферменты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.взаимодействиялекарствиферментов КАК T2 ПО T2.фермент = T1.ссылка ГДЕ T2.типвзаимодействия = ""inhibitor"""
971;SELECT count(DISTINCT FDA_approved) FROM medicine;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ одобреноfda) ИЗ справочник.лекарства
972;SELECT count(DISTINCT FDA_approved) FROM medicine;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ одобреноfda) ИЗ справочник.лекарства
973;"SELECT name FROM enzyme WHERE name LIKE ""%ALA%""";"ВЫБРАТЬ наименование ИЗ справочник.ферменты ГДЕ наименование ПОДОБНО ""%ALA%"""
974;"SELECT name FROM enzyme WHERE name LIKE ""%ALA%""";"ВЫБРАТЬ наименование ИЗ справочник.ферменты ГДЕ наименование ПОДОБНО ""%ALA%"""
975;SELECT trade_name ,  count(*) FROM medicine GROUP BY trade_name;ВЫБРАТЬ торговоенаименование , КОЛИЧЕСТВО(*) ИЗ справочник.лекарства СГРУППИРОВАТЬ ПО торговоенаименование
976;SELECT trade_name ,  count(*) FROM medicine GROUP BY trade_name;ВЫБРАТЬ торговоенаименование , КОЛИЧЕСТВО(*) ИЗ справочник.лекарства СГРУППИРОВАТЬ ПО торговоенаименование
977;SELECT school ,  nickname FROM university ORDER BY founded;ВЫБРАТЬ университет , игрывгостяхacc ИЗ справочник.баскетбольныекоманды УПОРЯДОЧИТЬ ПО сезонacc
978;SELECT school ,  nickname FROM university ORDER BY founded;ВЫБРАТЬ университет , игрывгостяхacc ИЗ справочник.баскетбольныекоманды УПОРЯДОЧИТЬ ПО сезонacc
979;SELECT school ,  LOCATION FROM university WHERE affiliation  =  'Public';"ВЫБРАТЬ университет , наименование ИЗ справочник.баскетбольныекоманды ГДЕ процентacc = ""Public"""
980;SELECT school ,  LOCATION FROM university WHERE affiliation  =  'Public';"ВЫБРАТЬ университет , наименование ИЗ справочник.баскетбольныекоманды ГДЕ процентacc = ""Public"""
981;SELECT founded FROM university ORDER BY enrollment DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 сезонacc ИЗ справочник.баскетбольныекоманды УПОРЯДОЧИТЬ ПО игрыдомаacc УБЫВ
982;SELECT founded FROM university ORDER BY enrollment DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 сезонacc ИЗ справочник.баскетбольныекоманды УПОРЯДОЧИТЬ ПО игрыдомаacc УБЫВ
983;SELECT founded FROM university WHERE affiliation != 'Public' ORDER BY founded DESC LIMIT 1;"ВЫБРАТЬ ПЕРВЫЕ 1 сезонacc ИЗ справочник.баскетбольныекоманды ГДЕ процентacc <> ""Public"" УПОРЯДОЧИТЬ ПО сезонacc УБЫВ"
984;SELECT founded FROM university WHERE affiliation != 'Public' ORDER BY founded DESC LIMIT 1;"ВЫБРАТЬ ПЕРВЫЕ 1 сезонacc ИЗ справочник.баскетбольныекоманды ГДЕ процентacc <> ""Public"" УПОРЯДОЧИТЬ ПО сезонacc УБЫВ"
985;SELECT count(DISTINCT school_id) FROM basketball_match;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ наименование) ИЗ справочник.университеты
986;SELECT count(DISTINCT school_id) FROM basketball_match;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ наименование) ИЗ справочник.университеты
987;SELECT acc_percent FROM basketball_match ORDER BY acc_percent DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 принадлежность ИЗ справочник.университеты УПОРЯДОЧИТЬ ПО принадлежность УБЫВ
988;SELECT acc_percent FROM basketball_match ORDER BY acc_percent DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 принадлежность ИЗ справочник.университеты УПОРЯДОЧИТЬ ПО принадлежность УБЫВ
989;SELECT t1.Primary_conference FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id  =  t2.school_id ORDER BY t2.acc_percent LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 t1.всеигры ИЗ справочник.баскетбольныекоманды КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.университеты КАК t2 ПО t1.ссылка = t2.наименование УПОРЯДОЧИТЬ ПО t2.принадлежность
990;SELECT t1.Primary_conference FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id  =  t2.school_id ORDER BY t2.acc_percent LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 t1.всеигры ИЗ справочник.баскетбольныекоманды КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.университеты КАК t2 ПО t1.ссылка = t2.наименование УПОРЯДОЧИТЬ ПО t2.принадлежность
991;SELECT t2.team_name ,  t2.ACC_Regular_Season FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id  =  t2.school_id ORDER BY t1.founded LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 t2.местоположение , t2.годоснования ИЗ справочник.баскетбольныекоманды КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.университеты КАК t2 ПО t1.ссылка = t2.наименование УПОРЯДОЧИТЬ ПО t1.сезонacc
992;SELECT t2.team_name ,  t2.ACC_Regular_Season FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id  =  t2.school_id ORDER BY t1.founded LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 t2.местоположение , t2.годоснования ИЗ справочник.баскетбольныекоманды КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.университеты КАК t2 ПО t1.ссылка = t2.наименование УПОРЯДОЧИТЬ ПО t1.сезонacc
993;SELECT t2.All_Games ,  t1.location FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id  =  t2.school_id WHERE team_name  =  'Clemson';"ВЫБРАТЬ t2.основнаяконференция , t1.наименование ИЗ справочник.баскетбольныекоманды КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.университеты КАК t2 ПО t1.ссылка = t2.наименование ГДЕ team_name = ""Clemson"""
994;SELECT t2.All_Games ,  t1.location FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id  =  t2.school_id WHERE team_name  =  'Clemson';"ВЫБРАТЬ t2.основнаяконференция , t1.наименование ИЗ справочник.баскетбольныекоманды КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.университеты КАК t2 ПО t1.ссылка = t2.наименование ГДЕ team_name = ""Clemson"""
995;SELECT avg(enrollment) FROM university WHERE founded  <  1850;ВЫБРАТЬ СРЕДНЕЕ(игрыдомаacc) ИЗ справочник.баскетбольныекоманды ГДЕ сезонacc < 1850
996;SELECT avg(enrollment) FROM university WHERE founded  <  1850;ВЫБРАТЬ СРЕДНЕЕ(игрыдомаacc) ИЗ справочник.баскетбольныекоманды ГДЕ сезонacc < 1850
997;SELECT enrollment ,  primary_conference FROM university ORDER BY founded LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 игрыдомаacc , всеигры ИЗ справочник.баскетбольныекоманды УПОРЯДОЧИТЬ ПО сезонacc
998;SELECT enrollment ,  primary_conference FROM university ORDER BY founded LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 игрыдомаacc , всеигры ИЗ справочник.баскетбольныекоманды УПОРЯДОЧИТЬ ПО сезонacc
999;SELECT sum(enrollment) ,  min(enrollment) FROM university;ВЫБРАТЬ СУММА(игрыдомаacc) , МИНИМУМ(игрыдомаacc) ИЗ справочник.баскетбольныекоманды
1000;SELECT sum(enrollment) ,  min(enrollment) FROM university;ВЫБРАТЬ СУММА(игрыдомаacc) , МИНИМУМ(игрыдомаacc) ИЗ справочник.баскетбольныекоманды
1001;SELECT sum(enrollment) ,  affiliation FROM university GROUP BY affiliation;ВЫБРАТЬ СУММА(игрыдомаacc) , процентacc ИЗ справочник.баскетбольныекоманды СГРУППИРОВАТЬ ПО процентacc
1002;SELECT sum(enrollment) ,  affiliation FROM university GROUP BY affiliation;ВЫБРАТЬ СУММА(игрыдомаacc) , процентacc ИЗ справочник.баскетбольныекоманды СГРУППИРОВАТЬ ПО процентacc
1003;SELECT count(*) FROM university WHERE school_id NOT IN (SELECT school_id FROM basketball_match);ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.баскетбольныекоманды ГДЕ school_id НЕ В (ВЫБРАТЬ school_id ИЗ справочник.университеты)
1004;SELECT count(*) FROM university WHERE school_id NOT IN (SELECT school_id FROM basketball_match);ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.баскетбольныекоманды ГДЕ school_id НЕ В (ВЫБРАТЬ school_id ИЗ справочник.университеты)
1005;SELECT school FROM university WHERE founded  >  1850 OR affiliation  =  'Public';"ВЫБРАТЬ университет ИЗ справочник.баскетбольныекоманды ГДЕ сезонacc > 1850 ИЛИ процентacc = ""Public"""
1006;SELECT school FROM university WHERE founded  >  1850 OR affiliation  =  'Public';"ВЫБРАТЬ университет ИЗ справочник.баскетбольныекоманды ГДЕ сезонacc > 1850 ИЛИ процентacc = ""Public"""
1007;SELECT count(DISTINCT affiliation) FROM university;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ процентacc) ИЗ справочник.баскетбольныекоманды
1008;SELECT count(DISTINCT affiliation) FROM university;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ процентacc) ИЗ справочник.баскетбольныекоманды
1009;"SELECT count(*) FROM university WHERE LOCATION LIKE ""%NY%""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.баскетбольныекоманды ГДЕ наименование ПОДОБНО ""%NY%"""
1010;"SELECT count(*) FROM university WHERE LOCATION LIKE ""%NY%""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.баскетбольныекоманды ГДЕ наименование ПОДОБНО ""%NY%"""
1011;SELECT t2.team_name FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id  =  t2.school_id WHERE enrollment  <  (SELECT avg(enrollment) FROM university);ВЫБРАТЬ t2.местоположение ИЗ справочник.баскетбольныекоманды КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.университеты КАК t2 ПО t1.ссылка = t2.наименование ГДЕ enrollment < (ВЫБРАТЬ СРЕДНЕЕ(enrollment) ИЗ справочник.баскетбольныекоманды)
1012;SELECT t2.team_name FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id  =  t2.school_id WHERE enrollment  <  (SELECT avg(enrollment) FROM university);ВЫБРАТЬ t2.местоположение ИЗ справочник.баскетбольныекоманды КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.университеты КАК t2 ПО t1.ссылка = t2.наименование ГДЕ enrollment < (ВЫБРАТЬ СРЕДНЕЕ(enrollment) ИЗ справочник.баскетбольныекоманды)
1013;SELECT count(*) ,  affiliation FROM university WHERE enrollment  >  20000 GROUP BY affiliation;ВЫБРАТЬ КОЛИЧЕСТВО(*) , процентacc ИЗ справочник.баскетбольныекоманды ГДЕ игрыдомаacc > 20000 СГРУППИРОВАТЬ ПО процентacc
1014;SELECT count(*) ,  affiliation FROM university WHERE enrollment  >  20000 GROUP BY affiliation;ВЫБРАТЬ КОЛИЧЕСТВО(*) , процентacc ИЗ справочник.баскетбольныекоманды ГДЕ игрыдомаacc > 20000 СГРУППИРОВАТЬ ПО процентacc
1015;SELECT sum(Enrollment) ,  affiliation FROM university WHERE founded  >  1850 GROUP BY affiliation;ВЫБРАТЬ СУММА(игрыдомаacc) , процентacc ИЗ справочник.баскетбольныекоманды ГДЕ сезонacc > 1850 СГРУППИРОВАТЬ ПО процентacc
1016;SELECT sum(Enrollment) ,  affiliation FROM university WHERE founded  >  1850 GROUP BY affiliation;ВЫБРАТЬ СУММА(игрыдомаacc) , процентacc ИЗ справочник.баскетбольныекоманды ГДЕ сезонacc > 1850 СГРУППИРОВАТЬ ПО процентacc
1017;SELECT max(Enrollment) FROM university;ВЫБРАТЬ МАКСИМУМ(игрыдомаacc) ИЗ справочник.баскетбольныекоманды
1018;SELECT max(Enrollment) FROM university;ВЫБРАТЬ МАКСИМУМ(игрыдомаacc) ИЗ справочник.баскетбольныекоманды
1019;SELECT * FROM basketball_match;ВЫБРАТЬ * ИЗ справочник.университеты
1020;SELECT * FROM basketball_match;ВЫБРАТЬ * ИЗ справочник.университеты
1021;SELECT team_name FROM basketball_match ORDER BY All_Home DESC;ВЫБРАТЬ местоположение ИЗ справочник.университеты УПОРЯДОЧИТЬ ПО All_Home УБЫВ
1022;SELECT team_name FROM basketball_match ORDER BY All_Home DESC;ВЫБРАТЬ местоположение ИЗ справочник.университеты УПОРЯДОЧИТЬ ПО All_Home УБЫВ
1023;"SELECT Model_name FROM chip_model WHERE Launch_year BETWEEN 2002 AND 2004;";"ВЫБРАТЬ наименование ИЗ справочник.моделичипов ГДЕ годвыхода МЕЖДУ 2002 И 2004;"
1024;"SELECT Model_name ,  RAM_MiB FROM chip_model ORDER BY RAM_MiB ASC LIMIT 1;";"ВЫБРАТЬ наименование , озу_миб ИЗ справочник.моделичипов УПОРЯДОЧИТЬ ПО озу_миб ВОЗР LIMIT 1;"
1025;"SELECT chip_model ,  screen_mode FROM phone WHERE Hardware_Model_name = ""LG-P760"";";"ВЫБРАТЬ модельчипа , режимэкрана ИЗ справочник.моделителефонов ГДЕ модель = ""LG-P760"";"
1026;"SELECT count(*) FROM phone WHERE Company_name = ""Nokia Corporation"";";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.моделителефонов ГДЕ компания = ""Nokia Corporation"";"
1027;"SELECT max(T1.RAM_MiB) ,  min(T1.RAM_MiB) FROM chip_model AS T1 JOIN phone AS T2 ON T1.Model_name  =  T2.chip_model WHERE T2.Company_name = ""Nokia Corporation"";";"ВЫБРАТЬ МАКСИМУМ(T1.озу_миб) , МИНИМУМ(T1.озу_миб) ИЗ справочник.моделичипов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.моделителефонов КАК T2 ПО T1.наименование = T2.модельчипа ГДЕ T2.компания = ""Nokia Corporation"";"
1028;"SELECT avg(T1.ROM_MiB) FROM chip_model AS T1 JOIN phone AS T2 ON T1.Model_name  =  T2.chip_model WHERE T2.Company_name = ""Nokia Corporation"";";"ВЫБРАТЬ СРЕДНЕЕ(T1.пзу_миб) ИЗ справочник.моделичипов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.моделителефонов КАК T2 ПО T1.наименование = T2.модельчипа ГДЕ T2.компания = ""Nokia Corporation"";"
1029;"SELECT T2.Hardware_Model_name ,  T2.Company_name FROM chip_model AS T1 JOIN phone AS T2 ON T1.Model_name  =  T2.chip_model WHERE T1.Launch_year = 2002 OR T1.RAM_MiB  >  32;";"ВЫБРАТЬ T2.модель , T2.компания ИЗ справочник.моделичипов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.моделителефонов КАК T2 ПО T1.наименование = T2.модельчипа ГДЕ T1.годвыхода = 2002 ИЛИ T1.озу_миб > 32;"
1030;"SELECT Hardware_Model_name ,  Company_name FROM phone WHERE Accreditation_type LIKE 'Full';";"ВЫБРАТЬ модель , компания ИЗ справочник.моделителефонов ГДЕ типсертификации ПОДОБНО ""Full"";"
1031;"SELECT T1.Char_cells ,  T1.Pixels ,  T1.Hardware_colours FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE T2.Hardware_Model_name = ""LG-P760"";";"ВЫБРАТЬ T1.символьныеячейки , T1.пиксели , T1.аппаратныецвета ИЗ справочник.режимыэкрана КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.моделителефонов КАК T2 ПО T1.код = T2.режимэкрана ГДЕ T2.модель = ""LG-P760"";"
1032;"SELECT T2.Hardware_Model_name ,  T2.Company_name FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE T1.Type  =  ""Graphics"";";"ВЫБРАТЬ T2.модель , T2.компания ИЗ справочник.режимыэкрана КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.моделителефонов КАК T2 ПО T1.код = T2.режимэкрана ГДЕ T1.тип = ""Graphics"";"
1033;"SELECT Company_name ,  count(*) FROM phone GROUP BY Company_name ORDER BY count(*) ASC LIMIT 1;";"ВЫБРАТЬ компания , КОЛИЧЕСТВО(*) ИЗ справочник.моделителефонов СГРУППИРОВАТЬ ПО компания УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) ВОЗР LIMIT 1;"
1034;"SELECT Company_name FROM phone GROUP BY Company_name HAVING count(*)  >  1;";"ВЫБРАТЬ компания ИЗ справочник.моделителефонов СГРУППИРОВАТЬ ПО компания ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 1;"
1035;"SELECT max(used_kb) , min(used_kb) , avg(used_kb) FROM screen_mode;";"ВЫБРАТЬ МАКСИМУМ(использованокб) , МИНИМУМ(использованокб) , СРЕДНЕЕ(использованокб) ИЗ справочник.режимыэкрана;"
1036;"SELECT T2.Hardware_Model_name FROM chip_model AS T1 JOIN phone AS T2 ON T1.Model_name  =  T2.chip_model WHERE T1.Launch_year = 2002 ORDER BY T1.RAM_MiB DESC LIMIT 1;";"ВЫБРАТЬ T2.модель ИЗ справочник.моделичипов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.моделителефонов КАК T2 ПО T1.наименование = T2.модельчипа ГДЕ T1.годвыхода = 2002 УПОРЯДОЧИТЬ ПО T1.озу_миб УБЫВ LIMIT 1;"
1037;"SELECT T1.WiFi , T3.Type FROM chip_model AS T1 JOIN phone AS T2 ON T1.Model_name  =  T2.chip_model JOIN screen_mode AS T3 ON T2.screen_mode = T3.Graphics_mode WHERE T2.Hardware_Model_name = ""LG-P760"";";"ВЫБРАТЬ T1.wifi , T3.тип ИЗ справочник.моделичипов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.моделителефонов КАК T2 ПО T1.наименование = T2.модельчипа ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.режимыэкрана КАК T3 ПО T2.режимэкрана = T3.код ГДЕ T2.модель = ""LG-P760"";"
1038;"SELECT T2.Hardware_Model_name FROM chip_model AS T1 JOIN phone AS T2 ON T1.Model_name  =  T2.chip_model JOIN screen_mode AS T3 ON T2.screen_mode = T3.Graphics_mode WHERE T3.Type = ""Text"" OR T1.RAM_MiB  >  32;";"ВЫБРАТЬ T2.модель ИЗ справочник.моделичипов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.моделителефонов КАК T2 ПО T1.наименование = T2.модельчипа ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.режимыэкрана КАК T3 ПО T2.режимэкрана = T3.код ГДЕ T3.тип = ""Text"" ИЛИ T1.озу_миб > 32;"
1039;"SELECT DISTINCT T2.Hardware_Model_name FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE T1.Type  =  ""Graphics"" OR t2.Company_name  =  ""Nokia Corporation""";"ВЫБРАТЬ РАЗЛИЧНЫЕ T2.модель ИЗ справочник.режимыэкрана КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.моделителефонов КАК T2 ПО T1.код = T2.режимэкрана ГДЕ T1.тип = ""Graphics"" ИЛИ t2.Company_name = ""Nokia Corporation"""
1040;"SELECT DISTINCT T2.Hardware_Model_name FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE t2.Company_name  =  ""Nokia Corporation"" AND T1.Type != ""Text"";";"ВЫБРАТЬ РАЗЛИЧНЫЕ T2.модель ИЗ справочник.режимыэкрана КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.моделителефонов КАК T2 ПО T1.код = T2.режимэкрана ГДЕ t2.Company_name = ""Nokia Corporation"" И T1.тип <> ""Text"";"
1041;"SELECT DISTINCT T2.Hardware_Model_name , T2.Company_name FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE T1.used_kb BETWEEN 10 AND 15;";"ВЫБРАТЬ РАЗЛИЧНЫЕ T2.модель , T2.компания ИЗ справочник.режимыэкрана КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.моделителефонов КАК T2 ПО T1.код = T2.режимэкрана ГДЕ T1.использованокб МЕЖДУ 10 И 15;"
1042;SELECT Accreditation_type ,  count(*) FROM phone GROUP BY Accreditation_type;ВЫБРАТЬ типсертификации , КОЛИЧЕСТВО(*) ИЗ справочник.моделителефонов СГРУППИРОВАТЬ ПО типсертификации
1043;SELECT Accreditation_type ,  count(*) FROM phone GROUP BY Accreditation_type;ВЫБРАТЬ типсертификации , КОЛИЧЕСТВО(*) ИЗ справочник.моделителефонов СГРУППИРОВАТЬ ПО типсертификации
1044;SELECT Accreditation_level FROM phone GROUP BY Accreditation_level HAVING count(*)  >  3;ВЫБРАТЬ уровеньсертификации ИЗ справочник.моделителефонов СГРУППИРОВАТЬ ПО уровеньсертификации ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 3
1045;SELECT * FROM chip_model;ВЫБРАТЬ * ИЗ справочник.моделичипов
1046;SELECT count(*) FROM chip_model WHERE wifi  =  'No';"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.моделичипов ГДЕ wifi = ""No"""
1047;SELECT count(*) FROM chip_model WHERE wifi  =  'No';"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.моделичипов ГДЕ wifi = ""No"""
1048;SELECT model_name FROM chip_model ORDER BY launch_year;ВЫБРАТЬ наименование ИЗ справочник.моделичипов УПОРЯДОЧИТЬ ПО годвыхода
1049;SELECT avg(RAM_MiB) FROM chip_model WHERE model_name NOT IN (SELECT chip_model FROM phone);ВЫБРАТЬ СРЕДНЕЕ(RAM_MiB) ИЗ справочник.моделичипов ГДЕ model_name НЕ В (ВЫБРАТЬ chip_model ИЗ справочник.моделителефонов)
1052;SELECT count(*) FROM country;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.страны
1053;SELECT count(*) FROM country;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.страны
1054;SELECT Country_name ,  Capital FROM country;ВЫБРАТЬ наименование , столица ИЗ справочник.страны
1055;SELECT Country_name ,  Capital FROM country;ВЫБРАТЬ наименование , столица ИЗ справочник.страны
1056;"SELECT Official_native_language FROM country WHERE Official_native_language LIKE ""%English%""";"ВЫБРАТЬ официальныйязык ИЗ справочник.страны ГДЕ официальныйязык ПОДОБНО ""%English%"""
1057;"SELECT Official_native_language FROM country WHERE Official_native_language LIKE ""%English%""";"ВЫБРАТЬ официальныйязык ИЗ справочник.страны ГДЕ официальныйязык ПОДОБНО ""%English%"""
1058;SELECT DISTINCT POSITION FROM match_season;ВЫБРАТЬ РАЗЛИЧНЫЕ позиция ИЗ регистрсведений.сезоныматчей
1059;SELECT DISTINCT POSITION FROM match_season;ВЫБРАТЬ РАЗЛИЧНЫЕ позиция ИЗ регистрсведений.сезоныматчей
1060;"SELECT Player FROM match_season WHERE College  =  ""UCLA""";"ВЫБРАТЬ игрок ИЗ регистрсведений.сезоныматчей ГДЕ колледж = ""UCLA"""
1061;"SELECT Player FROM match_season WHERE College  =  ""UCLA""";"ВЫБРАТЬ игрок ИЗ регистрсведений.сезоныматчей ГДЕ колледж = ""UCLA"""
1062;"SELECT DISTINCT POSITION FROM match_season WHERE College  =  ""UCLA"" OR College  =  ""Duke""";"ВЫБРАТЬ РАЗЛИЧНЫЕ позиция ИЗ регистрсведений.сезоныматчей ГДЕ колледж = ""UCLA"" ИЛИ колледж = ""Duke"""
1063;"SELECT DISTINCT POSITION FROM match_season WHERE College  =  ""UCLA"" OR College  =  ""Duke""";"ВЫБРАТЬ РАЗЛИЧНЫЕ позиция ИЗ регистрсведений.сезоныматчей ГДЕ колледж = ""UCLA"" ИЛИ колледж = ""Duke"""
1064;"SELECT Draft_Pick_Number ,  Draft_Class FROM match_season WHERE POSITION  =  ""Defender""";"ВЫБРАТЬ номервыборавдрафте , классдрафта ИЗ регистрсведений.сезоныматчей ГДЕ позиция = ""Defender"""
1065;"SELECT Draft_Pick_Number ,  Draft_Class FROM match_season WHERE POSITION  =  ""Defender""";"ВЫБРАТЬ номервыборавдрафте , классдрафта ИЗ регистрсведений.сезоныматчей ГДЕ позиция = ""Defender"""
1066;SELECT count(DISTINCT Team) FROM match_season;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ команда) ИЗ регистрсведений.сезоныматчей
1067;SELECT count(DISTINCT Team) FROM match_season;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ команда) ИЗ регистрсведений.сезоныматчей
1068;SELECT Player ,  Years_Played FROM player;ВЫБРАТЬ наименование , годывыступлений ИЗ наименование
1069;SELECT Player ,  Years_Played FROM player;ВЫБРАТЬ наименование , годывыступлений ИЗ наименование
1070;SELECT Name FROM Team;ВЫБРАТЬ наименование ИЗ справочник.команды
1071;SELECT Name FROM Team;ВЫБРАТЬ наименование ИЗ справочник.команды
1072;SELECT T2.Season ,  T2.Player ,  T1.Country_name FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country;ВЫБРАТЬ T2.сезон , T2.игрок , T1.наименование ИЗ справочник.страны КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.сезоныматчей КАК T2 ПО T1.ссылка = T2.странасправочник
1073;SELECT T2.Season ,  T2.Player ,  T1.Country_name FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country;ВЫБРАТЬ T2.сезон , T2.игрок , T1.наименование ИЗ справочник.страны КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.сезоныматчей КАК T2 ПО T1.ссылка = T2.странасправочник
1074;"SELECT T2.Player FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T1.Country_name  =  ""Indonesia""";"ВЫБРАТЬ T2.игрок ИЗ справочник.страны КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.сезоныматчей КАК T2 ПО T1.ссылка = T2.странасправочник ГДЕ T1.наименование = ""Indonesia"""
1075;"SELECT T2.Player FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T1.Country_name  =  ""Indonesia""";"ВЫБРАТЬ T2.игрок ИЗ справочник.страны КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.сезоныматчей КАК T2 ПО T1.ссылка = T2.странасправочник ГДЕ T1.наименование = ""Indonesia"""
1076;"SELECT DISTINCT T2.Position FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T1.Capital  =  ""Dublin""";"ВЫБРАТЬ РАЗЛИЧНЫЕ T2.позиция ИЗ справочник.страны КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.сезоныматчей КАК T2 ПО T1.ссылка = T2.странасправочник ГДЕ T1.столица = ""Dublin"""
1077;"SELECT DISTINCT T2.Position FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T1.Capital  =  ""Dublin""";"ВЫБРАТЬ РАЗЛИЧНЫЕ T2.позиция ИЗ справочник.страны КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.сезоныматчей КАК T2 ПО T1.ссылка = T2.странасправочник ГДЕ T1.столица = ""Dublin"""
1078;"SELECT T1.Official_native_language FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T2.College  =  ""Maryland"" OR T2.College  =  ""Duke""";"ВЫБРАТЬ T1.официальныйязык ИЗ справочник.страны КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.сезоныматчей КАК T2 ПО T1.ссылка = T2.странасправочник ГДЕ T2.колледж = ""Maryland"" ИЛИ T2.колледж = ""Duke"""
1079;"SELECT T1.Official_native_language FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T2.College  =  ""Maryland"" OR T2.College  =  ""Duke""";"ВЫБРАТЬ T1.официальныйязык ИЗ справочник.страны КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.сезоныматчей КАК T2 ПО T1.ссылка = T2.странасправочник ГДЕ T2.колледж = ""Maryland"" ИЛИ T2.колледж = ""Duke"""
1080;"SELECT count(DISTINCT T1.Official_native_language) FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T2.Position  =  ""Defender""";"ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ T1.официальныйязык) ИЗ справочник.страны КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.сезоныматчей КАК T2 ПО T1.ссылка = T2.странасправочник ГДЕ T2.позиция = ""Defender"""
1081;"SELECT count(DISTINCT T1.Official_native_language) FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T2.Position  =  ""Defender""";"ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ T1.официальныйязык) ИЗ справочник.страны КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.сезоныматчей КАК T2 ПО T1.ссылка = T2.странасправочник ГДЕ T2.позиция = ""Defender"""
1082;SELECT T1.Season ,  T1.Player ,  T2.Name FROM match_season AS T1 JOIN team AS T2 ON T1.Team  =  T2.Team_id;ВЫБРАТЬ T1.сезон , T1.игрок , T2.наименование ИЗ регистрсведений.сезоныматчей КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.команды КАК T2 ПО T1.команда = T2.ссылка
1083;SELECT T1.Season ,  T1.Player ,  T2.Name FROM match_season AS T1 JOIN team AS T2 ON T1.Team  =  T2.Team_id;ВЫБРАТЬ T1.сезон , T1.игрок , T2.наименование ИЗ регистрсведений.сезоныматчей КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.команды КАК T2 ПО T1.команда = T2.ссылка
1084;"SELECT T1.Position FROM match_season AS T1 JOIN team AS T2 ON T1.Team  =  T2.Team_id WHERE T2.Name  =  ""Ryley Goldner""";"ВЫБРАТЬ T1.позиция ИЗ регистрсведений.сезоныматчей КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.команды КАК T2 ПО T1.команда = T2.ссылка ГДЕ T2.наименование = ""Ryley Goldner"""
1085;"SELECT T1.Position FROM match_season AS T1 JOIN team AS T2 ON T1.Team  =  T2.Team_id WHERE T2.Name  =  ""Ryley Goldner""";"ВЫБРАТЬ T1.позиция ИЗ регистрсведений.сезоныматчей КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.команды КАК T2 ПО T1.команда = T2.ссылка ГДЕ T2.наименование = ""Ryley Goldner"""
1086;"SELECT count(DISTINCT T1.College) FROM match_season AS T1 JOIN team AS T2 ON T1.Team  =  T2.Team_id WHERE T2.Name  =  ""Columbus Crew""";"ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ T1.колледж) ИЗ регистрсведений.сезоныматчей КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.команды КАК T2 ПО T1.команда = T2.ссылка ГДЕ T2.наименование = ""Columbus Crew"""
1087;"SELECT count(DISTINCT T1.College) FROM match_season AS T1 JOIN team AS T2 ON T1.Team  =  T2.Team_id WHERE T2.Name  =  ""Columbus Crew""";"ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ T1.колледж) ИЗ регистрсведений.сезоныматчей КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.команды КАК T2 ПО T1.команда = T2.ссылка ГДЕ T2.наименование = ""Columbus Crew"""
1088;"SELECT T1.Player , T1.Years_Played FROM player AS T1 JOIN team AS T2 ON T1.Team  =  T2.Team_id WHERE T2.Name  =  ""Columbus Crew""";"ВЫБРАТЬ T1.наименование , T1.годывыступлений ИЗ справочник.игроки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.команды КАК T2 ПО T1.командасправочник = T2.ссылка ГДЕ T2.наименование = ""Columbus Crew"""
1089;"SELECT T1.Player , T1.Years_Played FROM player AS T1 JOIN team AS T2 ON T1.Team  =  T2.Team_id WHERE T2.Name  =  ""Columbus Crew""";"ВЫБРАТЬ T1.наименование , T1.годывыступлений ИЗ справочник.игроки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.команды КАК T2 ПО T1.командасправочник = T2.ссылка ГДЕ T2.наименование = ""Columbus Crew"""
1090;SELECT POSITION ,  COUNT(*) FROM match_season GROUP BY POSITION;ВЫБРАТЬ позиция , КОЛИЧЕСТВО(*) ИЗ регистрсведений.сезоныматчей СГРУППИРОВАТЬ ПО позиция
1091;SELECT POSITION ,  COUNT(*) FROM match_season GROUP BY POSITION;ВЫБРАТЬ позиция , КОЛИЧЕСТВО(*) ИЗ регистрсведений.сезоныматчей СГРУППИРОВАТЬ ПО позиция
1092;SELECT Country_name ,  COUNT(*) FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country GROUP BY T1.Country_name;ВЫБРАТЬ Country_name , КОЛИЧЕСТВО(*) ИЗ справочник.страны КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.сезоныматчей КАК T2 ПО T1.ссылка = T2.странасправочник СГРУППИРОВАТЬ ПО T1.наименование
1093;SELECT Country_name ,  COUNT(*) FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country GROUP BY T1.Country_name;ВЫБРАТЬ Country_name , КОЛИЧЕСТВО(*) ИЗ справочник.страны КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.сезоныматчей КАК T2 ПО T1.ссылка = T2.странасправочник СГРУППИРОВАТЬ ПО T1.наименование
1094;SELECT player FROM match_season ORDER BY College ASC;ВЫБРАТЬ игрок ИЗ регистрсведений.сезоныматчей УПОРЯДОЧИТЬ ПО колледж ВОЗР
1095;SELECT player FROM match_season ORDER BY College ASC;ВЫБРАТЬ игрок ИЗ регистрсведений.сезоныматчей УПОРЯДОЧИТЬ ПО колледж ВОЗР
1096;SELECT POSITION FROM match_season GROUP BY POSITION ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 позиция ИЗ регистрсведений.сезоныматчей СГРУППИРОВАТЬ ПО позиция УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
1097;SELECT POSITION FROM match_season GROUP BY POSITION ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 позиция ИЗ регистрсведений.сезоныматчей СГРУППИРОВАТЬ ПО позиция УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
1098;SELECT College FROM match_season GROUP BY College ORDER BY count(*) DESC LIMIT 3;ВЫБРАТЬ ПЕРВЫЕ 3 колледж ИЗ регистрсведений.сезоныматчей СГРУППИРОВАТЬ ПО колледж УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
1099;SELECT College FROM match_season GROUP BY College ORDER BY count(*) DESC LIMIT 3;ВЫБРАТЬ ПЕРВЫЕ 3 колледж ИЗ регистрсведений.сезоныматчей СГРУППИРОВАТЬ ПО колледж УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
1100;SELECT College FROM match_season GROUP BY College HAVING count(*)  >=  2;ВЫБРАТЬ колледж ИЗ регистрсведений.сезоныматчей СГРУППИРОВАТЬ ПО колледж ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
1101;SELECT College FROM match_season GROUP BY College HAVING count(*)  >=  2;ВЫБРАТЬ колледж ИЗ регистрсведений.сезоныматчей СГРУППИРОВАТЬ ПО колледж ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
1102;SELECT College FROM match_season GROUP BY College HAVING count(*)  >=  2 ORDER BY College DESC;ВЫБРАТЬ колледж ИЗ регистрсведений.сезоныматчей СГРУППИРОВАТЬ ПО колледж ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2 УПОРЯДОЧИТЬ ПО колледж УБЫВ
1103;SELECT College FROM match_season GROUP BY College HAVING count(*)  >=  2 ORDER BY College DESC;ВЫБРАТЬ колледж ИЗ регистрсведений.сезоныматчей СГРУППИРОВАТЬ ПО колледж ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2 УПОРЯДОЧИТЬ ПО колледж УБЫВ
1104;SELECT Name FROM team WHERE Team_id NOT IN (SELECT Team FROM match_season);ВЫБРАТЬ Name ИЗ справочник.команды ГДЕ Team_id НЕ В (ВЫБРАТЬ Team ИЗ регистрсведений.сезоныматчей)
1105;SELECT Name FROM team WHERE Team_id NOT IN (SELECT Team FROM match_season);ВЫБРАТЬ Name ИЗ справочник.команды ГДЕ Team_id НЕ В (ВЫБРАТЬ Team ИЗ регистрсведений.сезоныматчей)
1110;SELECT count(*) FROM climber;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.альпинисты
1111;SELECT count(*) FROM climber;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.альпинисты
1112;SELECT Name FROM climber ORDER BY Points DESC;ВЫБРАТЬ наименование ИЗ справочник.альпинисты УПОРЯДОЧИТЬ ПО очки УБЫВ
1113;SELECT Name FROM climber ORDER BY Points DESC;ВЫБРАТЬ наименование ИЗ справочник.альпинисты УПОРЯДОЧИТЬ ПО очки УБЫВ
1114;"SELECT Name FROM climber WHERE Country != ""Switzerland""";"ВЫБРАТЬ наименование ИЗ справочник.альпинисты ГДЕ страна <> ""Switzerland"""
1115;"SELECT Name FROM climber WHERE Country != ""Switzerland""";"ВЫБРАТЬ наименование ИЗ справочник.альпинисты ГДЕ страна <> ""Switzerland"""
1116;"SELECT max(Points) FROM climber WHERE Country  =  ""United Kingdom""";"ВЫБРАТЬ МАКСИМУМ(очки) ИЗ справочник.альпинисты ГДЕ страна = ""United Kingdom"""
1117;"SELECT max(Points) FROM climber WHERE Country  =  ""United Kingdom""";"ВЫБРАТЬ МАКСИМУМ(очки) ИЗ справочник.альпинисты ГДЕ страна = ""United Kingdom"""
1118;SELECT COUNT(DISTINCT Country) FROM climber;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ страна) ИЗ справочник.альпинисты
1119;SELECT COUNT(DISTINCT Country) FROM climber;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ страна) ИЗ справочник.альпинисты
1120;SELECT Name FROM mountain ORDER BY Name ASC;ВЫБРАТЬ наименование ИЗ справочник.горы УПОРЯДОЧИТЬ ПО наименование ВОЗР
1121;SELECT Name FROM mountain ORDER BY Name ASC;ВЫБРАТЬ наименование ИЗ справочник.горы УПОРЯДОЧИТЬ ПО наименование ВОЗР
1122;SELECT Country FROM mountain WHERE Height  >  5000;ВЫБРАТЬ страна ИЗ справочник.горы ГДЕ высота > 5000
1123;SELECT Country FROM mountain WHERE Height  >  5000;ВЫБРАТЬ страна ИЗ справочник.горы ГДЕ высота > 5000
1124;SELECT Name FROM mountain ORDER BY Height DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование ИЗ справочник.горы УПОРЯДОЧИТЬ ПО высота УБЫВ
1125;SELECT Name FROM mountain ORDER BY Height DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование ИЗ справочник.горы УПОРЯДОЧИТЬ ПО высота УБЫВ
1126;SELECT DISTINCT Range FROM mountain ORDER BY Prominence DESC LIMIT 3;ВЫБРАТЬ ПЕРВЫЕ 3 РАЗЛИЧНЫЕ хребет ИЗ справочник.горы УПОРЯДОЧИТЬ ПО видимость УБЫВ
1127;SELECT DISTINCT Range FROM mountain ORDER BY Prominence DESC LIMIT 3;ВЫБРАТЬ ПЕРВЫЕ 3 РАЗЛИЧНЫЕ хребет ИЗ справочник.горы УПОРЯДОЧИТЬ ПО видимость УБЫВ
1128;SELECT T1.Name ,  T2.Name FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID  =  T2.Mountain_ID;ВЫБРАТЬ T1.наименование , T2.наименование ИЗ справочник.альпинисты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.горы КАК T2 ПО T1.гора = T2.ссылка
1129;SELECT T1.Name ,  T2.Name FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID  =  T2.Mountain_ID;ВЫБРАТЬ T1.наименование , T2.наименование ИЗ справочник.альпинисты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.горы КАК T2 ПО T1.гора = T2.ссылка
1130;SELECT T1.Name ,  T2.Height FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID  =  T2.Mountain_ID;ВЫБРАТЬ T1.наименование , T2.высота ИЗ справочник.альпинисты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.горы КАК T2 ПО T1.гора = T2.ссылка
1131;SELECT T1.Name ,  T2.Height FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID  =  T2.Mountain_ID;ВЫБРАТЬ T1.наименование , T2.высота ИЗ справочник.альпинисты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.горы КАК T2 ПО T1.гора = T2.ссылка
1132;SELECT T2.Height FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID  =  T2.Mountain_ID ORDER BY T1.Points DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.высота ИЗ справочник.альпинисты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.горы КАК T2 ПО T1.гора = T2.ссылка УПОРЯДОЧИТЬ ПО T1.очки УБЫВ
1133;SELECT T2.Height FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID  =  T2.Mountain_ID ORDER BY T1.Points DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.высота ИЗ справочник.альпинисты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.горы КАК T2 ПО T1.гора = T2.ссылка УПОРЯДОЧИТЬ ПО T1.очки УБЫВ
1134;"SELECT DISTINCT T2.Name FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID  =  T2.Mountain_ID WHERE T1.Country  =  ""West Germany""";"ВЫБРАТЬ РАЗЛИЧНЫЕ T2.наименование ИЗ справочник.альпинисты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.горы КАК T2 ПО T1.гора = T2.ссылка ГДЕ T1.страна = ""West Germany"""
1135;"SELECT DISTINCT T2.Name FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID  =  T2.Mountain_ID WHERE T1.Country  =  ""West Germany""";"ВЫБРАТЬ РАЗЛИЧНЫЕ T2.наименование ИЗ справочник.альпинисты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.горы КАК T2 ПО T1.гора = T2.ссылка ГДЕ T1.страна = ""West Germany"""
1136;"SELECT T1.Time FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID  =  T2.Mountain_ID WHERE T2.Country  =  ""Uganda""";"ВЫБРАТЬ T1.времяподъема ИЗ справочник.альпинисты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.горы КАК T2 ПО T1.гора = T2.ссылка ГДЕ T2.страна = ""Uganda"""
1137;"SELECT T1.Time FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID  =  T2.Mountain_ID WHERE T2.Country  =  ""Uganda""";"ВЫБРАТЬ T1.времяподъема ИЗ справочник.альпинисты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.горы КАК T2 ПО T1.гора = T2.ссылка ГДЕ T2.страна = ""Uganda"""
1138;SELECT Country ,  COUNT(*) FROM climber GROUP BY Country;ВЫБРАТЬ страна , КОЛИЧЕСТВО(*) ИЗ справочник.альпинисты СГРУППИРОВАТЬ ПО страна
1139;SELECT Country ,  COUNT(*) FROM climber GROUP BY Country;ВЫБРАТЬ страна , КОЛИЧЕСТВО(*) ИЗ справочник.альпинисты СГРУППИРОВАТЬ ПО страна
1140;SELECT Country FROM mountain GROUP BY Country HAVING COUNT(*)  >  1;ВЫБРАТЬ страна ИЗ справочник.горы СГРУППИРОВАТЬ ПО страна ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 1
1141;SELECT Country FROM mountain GROUP BY Country HAVING COUNT(*)  >  1;ВЫБРАТЬ страна ИЗ справочник.горы СГРУППИРОВАТЬ ПО страна ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 1
1142;SELECT Name FROM mountain WHERE Mountain_ID NOT IN (SELECT Mountain_ID FROM climber);ВЫБРАТЬ Name ИЗ справочник.горы ГДЕ Mountain_ID НЕ В (ВЫБРАТЬ Mountain_ID ИЗ справочник.альпинисты)
1143;SELECT Name FROM mountain WHERE Mountain_ID NOT IN (SELECT Mountain_ID FROM climber);ВЫБРАТЬ Name ИЗ справочник.горы ГДЕ Mountain_ID НЕ В (ВЫБРАТЬ Mountain_ID ИЗ справочник.альпинисты)
1146;SELECT Range FROM mountain GROUP BY Range ORDER BY COUNT(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 хребет ИЗ справочник.горы СГРУППИРОВАТЬ ПО хребет УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
1147;SELECT Range FROM mountain GROUP BY Range ORDER BY COUNT(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 хребет ИЗ справочник.горы СГРУППИРОВАТЬ ПО хребет УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
1148;SELECT Name FROM mountain WHERE Height  >  5000 OR Prominence  >  1000;ВЫБРАТЬ наименование ИЗ справочник.горы ГДЕ высота > 5000 ИЛИ видимость > 1000
1149;SELECT Name FROM mountain WHERE Height  >  5000 OR Prominence  >  1000;ВЫБРАТЬ наименование ИЗ справочник.горы ГДЕ высота > 5000 ИЛИ видимость > 1000
1150;SELECT count(*) FROM body_builder;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.люди
1151;SELECT Total FROM body_builder ORDER BY Total ASC;ВЫБРАТЬ датарождения ИЗ справочник.люди УПОРЯДОЧИТЬ ПО датарождения ВОЗР
1152;SELECT Snatch ,  Clean_Jerk FROM body_builder ORDER BY Snatch ASC;ВЫБРАТЬ рост , вес ИЗ справочник.люди УПОРЯДОЧИТЬ ПО рост ВОЗР
1153;SELECT avg(Snatch) FROM body_builder;ВЫБРАТЬ СРЕДНЕЕ(рост) ИЗ справочник.люди
1154;SELECT Clean_Jerk FROM body_builder ORDER BY Total DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 вес ИЗ справочник.люди УПОРЯДОЧИТЬ ПО датарождения УБЫВ
1155;SELECT Birth_Date FROM People ORDER BY Height ASC;ВЫБРАТЬ итоговыйрезультат ИЗ регистрсведений.результатыбодибилдеров УПОРЯДОЧИТЬ ПО рывок ВОЗР
1156;SELECT T2.Name FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID;ВЫБРАТЬ T2.спортсмен ИЗ справочник.люди КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.результатыбодибилдеров КАК T2 ПО T1.наименование = T2.ссылка
1157;SELECT T2.Name FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Total  >  300;ВЫБРАТЬ T2.спортсмен ИЗ справочник.люди КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.результатыбодибилдеров КАК T2 ПО T1.наименование = T2.ссылка ГДЕ T1.датарождения > 300
1158;SELECT T2.Name FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Weight DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.спортсмен ИЗ справочник.люди КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.результатыбодибилдеров КАК T2 ПО T1.наименование = T2.ссылка УПОРЯДОЧИТЬ ПО T2.толчок УБЫВ
1159;SELECT T2.Birth_Date ,  T2.Birth_Place FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Total DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.итоговыйрезультат , T2.Birth_Place ИЗ справочник.люди КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.результатыбодибилдеров КАК T2 ПО T1.наименование = T2.ссылка УПОРЯДОЧИТЬ ПО T1.датарождения УБЫВ
1160;SELECT T2.Height FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Total  <  315;ВЫБРАТЬ T2.рывок ИЗ справочник.люди КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.результатыбодибилдеров КАК T2 ПО T1.наименование = T2.ссылка ГДЕ T1.датарождения < 315
1161;SELECT avg(T1.Total) FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Height  >  200;ВЫБРАТЬ СРЕДНЕЕ(T1.датарождения) ИЗ справочник.люди КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.результатыбодибилдеров КАК T2 ПО T1.наименование = T2.ссылка ГДЕ T2.рывок > 200
1162;SELECT T2.Name FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Total DESC;ВЫБРАТЬ T2.спортсмен ИЗ справочник.люди КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.результатыбодибилдеров КАК T2 ПО T1.наименование = T2.ссылка УПОРЯДОЧИТЬ ПО T1.датарождения УБЫВ
1163;SELECT Birth_Place ,  COUNT(*) FROM people GROUP BY Birth_Place;ВЫБРАТЬ Birth_Place , КОЛИЧЕСТВО(*) ИЗ регистрсведений.результатыбодибилдеров СГРУППИРОВАТЬ ПО Birth_Place
1164;SELECT Birth_Place FROM people GROUP BY Birth_Place ORDER BY COUNT(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 Birth_Place ИЗ регистрсведений.результатыбодибилдеров СГРУППИРОВАТЬ ПО Birth_Place УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
1165;SELECT Birth_Place FROM people GROUP BY Birth_Place HAVING COUNT(*)  >=  2;ВЫБРАТЬ Birth_Place ИЗ регистрсведений.результатыбодибилдеров СГРУППИРОВАТЬ ПО Birth_Place ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
1166;SELECT Height ,  Weight FROM people ORDER BY Height DESC;ВЫБРАТЬ рывок , толчок ИЗ регистрсведений.результатыбодибилдеров УПОРЯДОЧИТЬ ПО рывок УБЫВ
1167;SELECT * FROM body_builder;ВЫБРАТЬ * ИЗ справочник.люди
1169;SELECT count(DISTINCT Birth_Place) FROM people;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Birth_Place) ИЗ регистрсведений.результатыбодибилдеров
1170;SELECT count(*) FROM people WHERE people_id NOT IN (SELECT People_ID FROM body_builder);ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.результатыбодибилдеров ГДЕ people_id НЕ В (ВЫБРАТЬ People_ID ИЗ справочник.люди)
1171;"SELECT T2.weight FROM body_builder AS T1 JOIN people AS T2 ON T1.people_id  =  T2.people_id WHERE T1.snatch  >  140 OR T2.height  >  200;";"ВЫБРАТЬ T2.толчок ИЗ справочник.люди КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.результатыбодибилдеров КАК T2 ПО T1.наименование = T2.ссылка ГДЕ T1.рост > 140 ИЛИ T2.рывок > 200;"
1172;"SELECT T1.total FROM body_builder AS T1 JOIN people AS T2 ON T1.people_id  =  T2.people_id WHERE T2.Birth_Date LIKE ""%January%"";";"ВЫБРАТЬ T1.датарождения ИЗ справочник.люди КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.результатыбодибилдеров КАК T2 ПО T1.наименование = T2.ссылка ГДЕ T2.итоговыйрезультат ПОДОБНО ""%January%"";"
1173;SELECT min(snatch) FROM body_builder;ВЫБРАТЬ МИНИМУМ(рост) ИЗ справочник.люди
1174;SELECT count(*) FROM election;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.представители
1175;SELECT Votes FROM election ORDER BY Votes DESC;ВЫБРАТЬ партия ИЗ справочник.представители УПОРЯДОЧИТЬ ПО партия УБЫВ
1176;SELECT Date ,  Vote_Percent FROM election;ВЫБРАТЬ штат , периоджизни ИЗ справочник.представители
1177;SELECT min(Vote_Percent) ,  max(Vote_Percent) FROM election;ВЫБРАТЬ МИНИМУМ(периоджизни) , МАКСИМУМ(периоджизни) ИЗ справочник.представители
1178;SELECT Name ,  Party FROM representative;ВЫБРАТЬ представитель , количествоголосов ИЗ регистрсведений.выборы
1179;"SELECT Name FROM Representative WHERE Party != ""Republican""";"ВЫБРАТЬ представитель ИЗ регистрсведений.выборы ГДЕ количествоголосов <> ""Republican"""
1180;"SELECT Lifespan FROM representative WHERE State  =  ""New York"" OR State  =  ""Indiana""";"ВЫБРАТЬ процентголосов ИЗ регистрсведений.выборы ГДЕ дата = ""New York"" ИЛИ дата = ""Indiana"""
1181;SELECT T2.Name ,  T1.Date FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID  =  T2.Representative_ID;ВЫБРАТЬ T2.представитель , T1.штат ИЗ справочник.представители КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.выборы КАК T2 ПО T1.наименование = T2.ссылка
1182;SELECT T2.Name FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID  =  T2.Representative_ID WHERE Votes  >  10000;ВЫБРАТЬ T2.представитель ИЗ справочник.представители КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.выборы КАК T2 ПО T1.наименование = T2.ссылка ГДЕ Votes > 10000
1183;SELECT T2.Name FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID  =  T2.Representative_ID ORDER BY votes DESC;ВЫБРАТЬ T2.представитель ИЗ справочник.представители КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.выборы КАК T2 ПО T1.наименование = T2.ссылка УПОРЯДОЧИТЬ ПО votes УБЫВ
1184;SELECT T2.Party FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID  =  T2.Representative_ID ORDER BY votes ASC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.количествоголосов ИЗ справочник.представители КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.выборы КАК T2 ПО T1.наименование = T2.ссылка УПОРЯДОЧИТЬ ПО votes ВОЗР
1185;SELECT T2.Lifespan FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID  =  T2.Representative_ID ORDER BY Vote_Percent DESC;ВЫБРАТЬ T2.процентголосов ИЗ справочник.представители КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.выборы КАК T2 ПО T1.наименование = T2.ссылка УПОРЯДОЧИТЬ ПО Vote_Percent УБЫВ
1186;"SELECT avg(T1.Votes) FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID  =  T2.Representative_ID WHERE T2.Party  =  ""Republican""";"ВЫБРАТЬ СРЕДНЕЕ(T1.партия) ИЗ справочник.представители КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.выборы КАК T2 ПО T1.наименование = T2.ссылка ГДЕ T2.количествоголосов = ""Republican"""
1187;SELECT Party ,  COUNT(*) FROM representative GROUP BY Party;ВЫБРАТЬ количествоголосов , КОЛИЧЕСТВО(*) ИЗ регистрсведений.выборы СГРУППИРОВАТЬ ПО количествоголосов
1188;SELECT Party ,  COUNT(*) FROM representative GROUP BY Party ORDER BY COUNT(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 количествоголосов , КОЛИЧЕСТВО(*) ИЗ регистрсведений.выборы СГРУППИРОВАТЬ ПО количествоголосов УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
1189;SELECT Party FROM representative GROUP BY Party HAVING COUNT(*)  >=  3;ВЫБРАТЬ количествоголосов ИЗ регистрсведений.выборы СГРУППИРОВАТЬ ПО количествоголосов ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 3
1190;SELECT State FROM representative GROUP BY State HAVING COUNT(*)  >=  2;ВЫБРАТЬ дата ИЗ регистрсведений.выборы СГРУППИРОВАТЬ ПО дата ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
1191;SELECT Name FROM representative WHERE Representative_ID NOT IN (SELECT Representative_ID FROM election);ВЫБРАТЬ Name ИЗ регистрсведений.выборы ГДЕ Representative_ID НЕ В (ВЫБРАТЬ Representative_ID ИЗ справочник.представители)
1193;SELECT count(DISTINCT Party) FROM representative;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ количествоголосов) ИЗ регистрсведений.выборы
1194;SELECT count(*) FROM Apartment_Bookings;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ документ.бронированиеквартиры
1195;SELECT count(*) FROM Apartment_Bookings;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ документ.бронированиеквартиры
1196;SELECT booking_start_date ,  booking_end_date FROM Apartment_Bookings;ВЫБРАТЬ датаначалабронирования , датаокончаниябронирования ИЗ документ.бронированиеквартиры
1197;SELECT booking_start_date ,  booking_end_date FROM Apartment_Bookings;ВЫБРАТЬ датаначалабронирования , датаокончаниябронирования ИЗ документ.бронированиеквартиры
1198;SELECT DISTINCT building_description FROM Apartment_Buildings;ВЫБРАТЬ РАЗЛИЧНЫЕ описание ИЗ справочник.жилыедома
1199;SELECT DISTINCT building_description FROM Apartment_Buildings;ВЫБРАТЬ РАЗЛИЧНЫЕ описание ИЗ справочник.жилыедома
1200;"SELECT building_short_name FROM Apartment_Buildings WHERE building_manager	 =  ""Emma""";"ВЫБРАТЬ краткоенаименование ИЗ справочник.жилыедома ГДЕ управляющий = ""Emma"""
1201;"SELECT building_short_name FROM Apartment_Buildings WHERE building_manager	 =  ""Emma""";"ВЫБРАТЬ краткоенаименование ИЗ справочник.жилыедома ГДЕ управляющий = ""Emma"""
1202;"SELECT building_address ,  building_phone FROM Apartment_Buildings WHERE building_manager	 =  ""Brenden""";"ВЫБРАТЬ адрес , телефон ИЗ справочник.жилыедома ГДЕ управляющий = ""Brenden"""
1203;"SELECT building_address ,  building_phone FROM Apartment_Buildings WHERE building_manager	 =  ""Brenden""";"ВЫБРАТЬ адрес , телефон ИЗ справочник.жилыедома ГДЕ управляющий = ""Brenden"""
1204;"SELECT building_full_name FROM Apartment_Buildings WHERE building_full_name LIKE ""%court%""";"ВЫБРАТЬ полноенаименование ИЗ справочник.жилыедома ГДЕ полноенаименование ПОДОБНО ""%court%"""
1205;"SELECT building_full_name FROM Apartment_Buildings WHERE building_full_name LIKE ""%court%""";"ВЫБРАТЬ полноенаименование ИЗ справочник.жилыедома ГДЕ полноенаименование ПОДОБНО ""%court%"""
1206;SELECT min(bathroom_count) ,  max(bathroom_count) FROM Apartments;ВЫБРАТЬ МИНИМУМ(количествованных) , МАКСИМУМ(количествованных) ИЗ справочник.квартиры
1207;SELECT min(bathroom_count) ,  max(bathroom_count) FROM Apartments;ВЫБРАТЬ МИНИМУМ(количествованных) , МАКСИМУМ(количествованных) ИЗ справочник.квартиры
1208;SELECT avg(bedroom_count) FROM Apartments;ВЫБРАТЬ СРЕДНЕЕ(количествоспален) ИЗ справочник.квартиры
1209;SELECT avg(bedroom_count) FROM Apartments;ВЫБРАТЬ СРЕДНЕЕ(количествоспален) ИЗ справочник.квартиры
1210;SELECT apt_number ,  room_count FROM Apartments;ВЫБРАТЬ номерквартиры , количествокомнат ИЗ справочник.квартиры
1211;SELECT apt_number ,  room_count FROM Apartments;ВЫБРАТЬ номерквартиры , количествокомнат ИЗ справочник.квартиры
1212;"SELECT avg(room_count) FROM Apartments WHERE apt_type_code  =  ""Studio""";"ВЫБРАТЬ СРЕДНЕЕ(количествокомнат) ИЗ справочник.квартиры ГДЕ кодтипаквартиры = ""Studio"""
1213;"SELECT avg(room_count) FROM Apartments WHERE apt_type_code  =  ""Studio""";"ВЫБРАТЬ СРЕДНЕЕ(количествокомнат) ИЗ справочник.квартиры ГДЕ кодтипаквартиры = ""Studio"""
1214;"SELECT apt_number FROM Apartments WHERE apt_type_code  =  ""Flat""";"ВЫБРАТЬ номерквартиры ИЗ справочник.квартиры ГДЕ кодтипаквартиры = ""Flat"""
1215;"SELECT apt_number FROM Apartments WHERE apt_type_code  =  ""Flat""";"ВЫБРАТЬ номерквартиры ИЗ справочник.квартиры ГДЕ кодтипаквартиры = ""Flat"""
1216;SELECT guest_first_name ,  guest_last_name FROM Guests;ВЫБРАТЬ имя , фамилия ИЗ справочник.гости
1217;SELECT guest_first_name ,  guest_last_name FROM Guests;ВЫБРАТЬ имя , фамилия ИЗ справочник.гости
1218;"SELECT date_of_birth FROM Guests WHERE gender_code  =  ""Male""";"ВЫБРАТЬ датарождения ИЗ справочник.гости ГДЕ кодпола = ""Male"""
1219;"SELECT date_of_birth FROM Guests WHERE gender_code  =  ""Male""";"ВЫБРАТЬ датарождения ИЗ справочник.гости ГДЕ кодпола = ""Male"""
1220;SELECT T2.apt_number ,  T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id;ВЫБРАТЬ T2.номерквартиры , T1.датаначалабронирования , T1.датаначалабронирования ИЗ документ.бронированиеквартиры КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.квартиры КАК T2 ПО T1.квартира = T2.ссылка
1221;SELECT T2.apt_number ,  T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id;ВЫБРАТЬ T2.номерквартиры , T1.датаначалабронирования , T1.датаначалабронирования ИЗ документ.бронированиеквартиры КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.квартиры КАК T2 ПО T1.квартира = T2.ссылка
1222;"SELECT T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.apt_type_code  =  ""Duplex""";"ВЫБРАТЬ T1.датаначалабронирования , T1.датаначалабронирования ИЗ документ.бронированиеквартиры КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.квартиры КАК T2 ПО T1.квартира = T2.ссылка ГДЕ T2.кодтипаквартиры = ""Duplex"""
1223;"SELECT T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.apt_type_code  =  ""Duplex""";"ВЫБРАТЬ T1.датаначалабронирования , T1.датаначалабронирования ИЗ документ.бронированиеквартиры КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.квартиры КАК T2 ПО T1.квартира = T2.ссылка ГДЕ T2.кодтипаквартиры = ""Duplex"""
1224;SELECT T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.bedroom_count  >  2;ВЫБРАТЬ T1.датаначалабронирования , T1.датаначалабронирования ИЗ документ.бронированиеквартиры КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.квартиры КАК T2 ПО T1.квартира = T2.ссылка ГДЕ T2.количествоспален > 2
1225;SELECT T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.bedroom_count  >  2;ВЫБРАТЬ T1.датаначалабронирования , T1.датаначалабронирования ИЗ документ.бронированиеквартиры КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.квартиры КАК T2 ПО T1.квартира = T2.ссылка ГДЕ T2.количествоспален > 2
1226;"SELECT T1.booking_status_code FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.apt_number  =  ""Suite 634""";"ВЫБРАТЬ T1.кодстатусабронирования ИЗ документ.бронированиеквартиры КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.квартиры КАК T2 ПО T1.квартира = T2.ссылка ГДЕ T2.номерквартиры = ""Suite 634"""
1227;"SELECT T1.booking_status_code FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.apt_number  =  ""Suite 634""";"ВЫБРАТЬ T1.кодстатусабронирования ИЗ документ.бронированиеквартиры КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.квартиры КАК T2 ПО T1.квартира = T2.ссылка ГДЕ T2.номерквартиры = ""Suite 634"""
1228;"SELECT DISTINCT T2.apt_number FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.booking_status_code  =  ""Confirmed""";"ВЫБРАТЬ РАЗЛИЧНЫЕ T2.номерквартиры ИЗ документ.бронированиеквартиры КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.квартиры КАК T2 ПО T1.квартира = T2.ссылка ГДЕ T1.кодстатусабронирования = ""Confirmed"""
1229;"SELECT DISTINCT T2.apt_number FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.booking_status_code  =  ""Confirmed""";"ВЫБРАТЬ РАЗЛИЧНЫЕ T2.номерквартиры ИЗ документ.бронированиеквартиры КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.квартиры КАК T2 ПО T1.квартира = T2.ссылка ГДЕ T1.кодстатусабронирования = ""Confirmed"""
1230;"SELECT avg(room_count) FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.booking_status_code  =  ""Provisional""";"ВЫБРАТЬ СРЕДНЕЕ(room_count) ИЗ документ.бронированиеквартиры КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.квартиры КАК T2 ПО T1.квартира = T2.ссылка ГДЕ T1.кодстатусабронирования = ""Provisional"""
1231;"SELECT avg(room_count) FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.booking_status_code  =  ""Provisional""";"ВЫБРАТЬ СРЕДНЕЕ(room_count) ИЗ документ.бронированиеквартиры КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.квартиры КАК T2 ПО T1.квартира = T2.ссылка ГДЕ T1.кодстатусабронирования = ""Provisional"""
1232;SELECT T2.guest_first_name ,  T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id  =  T2.guest_id;ВЫБРАТЬ T2.имя , T1.датаначалабронирования , T1.датаначалабронирования ИЗ документ.бронированиеквартиры КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.гости КАК T2 ПО T1.гость = T2.ссылка
1233;SELECT T2.guest_first_name ,  T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id  =  T2.guest_id;ВЫБРАТЬ T2.имя , T1.датаначалабронирования , T1.датаначалабронирования ИЗ документ.бронированиеквартиры КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.гости КАК T2 ПО T1.гость = T2.ссылка
1234;"SELECT T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id  =  T2.guest_id WHERE T2.gender_code  =  ""Female""";"ВЫБРАТЬ T1.датаначалабронирования , T1.датаначалабронирования ИЗ документ.бронированиеквартиры КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.гости КАК T2 ПО T1.гость = T2.ссылка ГДЕ T2.кодпола = ""Female"""
1235;"SELECT T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id  =  T2.guest_id WHERE T2.gender_code  =  ""Female""";"ВЫБРАТЬ T1.датаначалабронирования , T1.датаначалабронирования ИЗ документ.бронированиеквартиры КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.гости КАК T2 ПО T1.гость = T2.ссылка ГДЕ T2.кодпола = ""Female"""
1236;"SELECT T2.guest_first_name ,  T2.guest_last_name FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id  =  T2.guest_id WHERE T1.booking_status_code  =  ""Confirmed""";"ВЫБРАТЬ T2.имя , T2.фамилия ИЗ документ.бронированиеквартиры КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.гости КАК T2 ПО T1.гость = T2.ссылка ГДЕ T1.кодстатусабронирования = ""Confirmed"""
1237;"SELECT T2.guest_first_name ,  T2.guest_last_name FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id  =  T2.guest_id WHERE T1.booking_status_code  =  ""Confirmed""";"ВЫБРАТЬ T2.имя , T2.фамилия ИЗ документ.бронированиеквартиры КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.гости КАК T2 ПО T1.гость = T2.ссылка ГДЕ T1.кодстатусабронирования = ""Confirmed"""
1238;SELECT T1.facility_code FROM Apartment_Facilities AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.bedroom_count  >  4;ВЫБРАТЬ T1.кодудобства ИЗ регистрсведений.удобстваквартир КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.квартиры КАК T2 ПО T1.квартира = T2.ссылка ГДЕ T2.количествоспален > 4
1239;SELECT T1.facility_code FROM Apartment_Facilities AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.bedroom_count  >  4;ВЫБРАТЬ T1.кодудобства ИЗ регистрсведений.удобстваквартир КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.квартиры КАК T2 ПО T1.квартира = T2.ссылка ГДЕ T2.количествоспален > 4
1240;"SELECT sum(T2.room_count) FROM Apartment_Facilities AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.facility_code  =  ""Gym""";"ВЫБРАТЬ СУММА(T2.количествокомнат) ИЗ регистрсведений.удобстваквартир КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.квартиры КАК T2 ПО T1.квартира = T2.ссылка ГДЕ T1.кодудобства = ""Gym"""
1241;"SELECT sum(T2.room_count) FROM Apartment_Facilities AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.facility_code  =  ""Gym""";"ВЫБРАТЬ СУММА(T2.количествокомнат) ИЗ регистрсведений.удобстваквартир КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.квартиры КАК T2 ПО T1.квартира = T2.ссылка ГДЕ T1.кодудобства = ""Gym"""
1242;"SELECT sum(T2.room_count) FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id  =  T2.building_id WHERE T1.building_short_name  =  ""Columbus Square""";"ВЫБРАТЬ СУММА(T2.количествокомнат) ИЗ справочник.жилыедома КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.квартиры КАК T2 ПО T1.ссылка = T2.жилойдом ГДЕ T1.краткоенаименование = ""Columbus Square"""
1243;"SELECT sum(T2.room_count) FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id  =  T2.building_id WHERE T1.building_short_name  =  ""Columbus Square""";"ВЫБРАТЬ СУММА(T2.количествокомнат) ИЗ справочник.жилыедома КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.квартиры КАК T2 ПО T1.ссылка = T2.жилойдом ГДЕ T1.краткоенаименование = ""Columbus Square"""
1244;SELECT T1.building_address FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id  =  T2.building_id WHERE T2.bathroom_count  >  2;ВЫБРАТЬ T1.адрес ИЗ справочник.жилыедома КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.квартиры КАК T2 ПО T1.ссылка = T2.жилойдом ГДЕ T2.количествованных > 2
1245;SELECT T1.building_address FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id  =  T2.building_id WHERE T2.bathroom_count  >  2;ВЫБРАТЬ T1.адрес ИЗ справочник.жилыедома КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.квартиры КАК T2 ПО T1.ссылка = T2.жилойдом ГДЕ T2.количествованных > 2
1246;"SELECT T2.apt_type_code ,  T2.apt_number FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id  =  T2.building_id WHERE T1.building_manager  =  ""Kyle""";"ВЫБРАТЬ T2.кодтипаквартиры , T2.номерквартиры ИЗ справочник.жилыедома КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.квартиры КАК T2 ПО T1.ссылка = T2.жилойдом ГДЕ T1.управляющий = ""Kyle"""
1247;"SELECT T2.apt_type_code ,  T2.apt_number FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id  =  T2.building_id WHERE T1.building_manager  =  ""Kyle""";"ВЫБРАТЬ T2.кодтипаквартиры , T2.номерквартиры ИЗ справочник.жилыедома КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.квартиры КАК T2 ПО T1.ссылка = T2.жилойдом ГДЕ T1.управляющий = ""Kyle"""
1248;SELECT 	booking_status_code ,  COUNT(*) FROM Apartment_Bookings GROUP BY booking_status_code;ВЫБРАТЬ кодстатусабронирования , КОЛИЧЕСТВО(*) ИЗ документ.бронированиеквартиры СГРУППИРОВАТЬ ПО кодстатусабронирования
1249;SELECT 	booking_status_code ,  COUNT(*) FROM Apartment_Bookings GROUP BY booking_status_code;ВЫБРАТЬ кодстатусабронирования , КОЛИЧЕСТВО(*) ИЗ документ.бронированиеквартиры СГРУППИРОВАТЬ ПО кодстатусабронирования
1250;SELECT apt_number FROM Apartments ORDER BY room_count ASC;ВЫБРАТЬ номерквартиры ИЗ справочник.квартиры УПОРЯДОЧИТЬ ПО количествокомнат ВОЗР
1251;SELECT apt_number FROM Apartments ORDER BY room_count ASC;ВЫБРАТЬ номерквартиры ИЗ справочник.квартиры УПОРЯДОЧИТЬ ПО количествокомнат ВОЗР
1252;SELECT apt_number FROM Apartments ORDER BY bedroom_count DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 номерквартиры ИЗ справочник.квартиры УПОРЯДОЧИТЬ ПО количествоспален УБЫВ
1253;SELECT apt_number FROM Apartments ORDER BY bedroom_count DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 номерквартиры ИЗ справочник.квартиры УПОРЯДОЧИТЬ ПО количествоспален УБЫВ
1254;SELECT apt_type_code ,  COUNT(*) FROM Apartments GROUP BY apt_type_code ORDER BY COUNT(*) ASC;ВЫБРАТЬ кодтипаквартиры , КОЛИЧЕСТВО(*) ИЗ справочник.квартиры СГРУППИРОВАТЬ ПО кодтипаквартиры УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) ВОЗР
1255;SELECT apt_type_code ,  COUNT(*) FROM Apartments GROUP BY apt_type_code ORDER BY COUNT(*) ASC;ВЫБРАТЬ кодтипаквартиры , КОЛИЧЕСТВО(*) ИЗ справочник.квартиры СГРУППИРОВАТЬ ПО кодтипаквартиры УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) ВОЗР
1256;SELECT apt_type_code FROM Apartments GROUP BY apt_type_code ORDER BY avg(room_count) DESC LIMIT 3;ВЫБРАТЬ ПЕРВЫЕ 3 кодтипаквартиры ИЗ справочник.квартиры СГРУППИРОВАТЬ ПО кодтипаквартиры УПОРЯДОЧИТЬ ПО СРЕДНЕЕ(количествокомнат) УБЫВ
1257;SELECT apt_type_code FROM Apartments GROUP BY apt_type_code ORDER BY avg(room_count) DESC LIMIT 3;ВЫБРАТЬ ПЕРВЫЕ 3 кодтипаквартиры ИЗ справочник.квартиры СГРУППИРОВАТЬ ПО кодтипаквартиры УПОРЯДОЧИТЬ ПО СРЕДНЕЕ(количествокомнат) УБЫВ
1258;SELECT apt_type_code ,  bathroom_count ,  bedroom_count FROM Apartments GROUP BY apt_type_code ORDER BY sum(room_count) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 кодтипаквартиры , количествованных , количествоспален ИЗ справочник.квартиры СГРУППИРОВАТЬ ПО кодтипаквартиры УПОРЯДОЧИТЬ ПО СУММА(количествокомнат) УБЫВ
1259;SELECT apt_type_code ,  bathroom_count ,  bedroom_count FROM Apartments GROUP BY apt_type_code ORDER BY sum(room_count) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 кодтипаквартиры , количествованных , количествоспален ИЗ справочник.квартиры СГРУППИРОВАТЬ ПО кодтипаквартиры УПОРЯДОЧИТЬ ПО СУММА(количествокомнат) УБЫВ
1260;SELECT apt_type_code FROM Apartments GROUP BY apt_type_code ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 кодтипаквартиры ИЗ справочник.квартиры СГРУППИРОВАТЬ ПО кодтипаквартиры УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
1261;SELECT apt_type_code FROM Apartments GROUP BY apt_type_code ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 кодтипаквартиры ИЗ справочник.квартиры СГРУППИРОВАТЬ ПО кодтипаквартиры УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
1262;SELECT apt_type_code FROM Apartments WHERE bathroom_count  >  1 GROUP BY apt_type_code ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 кодтипаквартиры ИЗ справочник.квартиры ГДЕ количествованных > 1 СГРУППИРОВАТЬ ПО кодтипаквартиры УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
1263;SELECT apt_type_code FROM Apartments WHERE bathroom_count  >  1 GROUP BY apt_type_code ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 кодтипаквартиры ИЗ справочник.квартиры ГДЕ количествованных > 1 СГРУППИРОВАТЬ ПО кодтипаквартиры УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
1264;SELECT apt_type_code ,  max(room_count) ,  min(room_count) FROM Apartments GROUP BY apt_type_code;ВЫБРАТЬ кодтипаквартиры , МАКСИМУМ(количествокомнат) , МИНИМУМ(количествокомнат) ИЗ справочник.квартиры СГРУППИРОВАТЬ ПО кодтипаквартиры
1265;SELECT apt_type_code ,  max(room_count) ,  min(room_count) FROM Apartments GROUP BY apt_type_code;ВЫБРАТЬ кодтипаквартиры , МАКСИМУМ(количествокомнат) , МИНИМУМ(количествокомнат) ИЗ справочник.квартиры СГРУППИРОВАТЬ ПО кодтипаквартиры
1266;SELECT gender_code ,  COUNT(*) FROM Guests GROUP BY gender_code ORDER BY COUNT(*) DESC;ВЫБРАТЬ кодпола , КОЛИЧЕСТВО(*) ИЗ справочник.гости СГРУППИРОВАТЬ ПО кодпола УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
1267;SELECT gender_code ,  COUNT(*) FROM Guests GROUP BY gender_code ORDER BY COUNT(*) DESC;ВЫБРАТЬ кодпола , КОЛИЧЕСТВО(*) ИЗ справочник.гости СГРУППИРОВАТЬ ПО кодпола УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
1268;SELECT count(*) FROM Apartments WHERE apt_id NOT IN (SELECT apt_id FROM Apartment_Facilities);ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.квартиры ГДЕ apt_id НЕ В (ВЫБРАТЬ apt_id ИЗ регистрсведений.удобстваквартир)
1269;SELECT count(*) FROM Apartments WHERE apt_id NOT IN (SELECT apt_id FROM Apartment_Facilities);ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.квартиры ГДЕ apt_id НЕ В (ВЫБРАТЬ apt_id ИЗ регистрсведений.удобстваквартир)
1274;SELECT count(*) FROM game WHERE season  >  2007;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.игры ГДЕ сезон > 2007
1275;SELECT Date FROM game ORDER BY home_team DESC;ВЫБРАТЬ дата ИЗ справочник.игры УПОРЯДОЧИТЬ ПО хозяева УБЫВ
1276;SELECT season ,  home_team ,  away_team FROM game;ВЫБРАТЬ сезон , хозяева , гости ИЗ справочник.игры
1277;SELECT max(home_games) ,  min(home_games) ,  avg(home_games) FROM stadium;ВЫБРАТЬ МАКСИМУМ(домашниематчи) , МИНИМУМ(домашниематчи) , СРЕДНЕЕ(домашниематчи) ИЗ справочник.стадионы
1278;SELECT average_attendance FROM stadium WHERE capacity_percentage  >  100;ВЫБРАТЬ средняяявка ИЗ справочник.стадионы ГДЕ заполнениепроцентов > 100
1279;SELECT player ,  number_of_matches ,  SOURCE FROM injury_accident WHERE injury != 'Knee problem';"ВЫБРАТЬ игрок , количествоматчей , источник ИЗ регистрсведений.травмы ГДЕ травма <> ""Knee problem"""
1280;SELECT T1.season FROM game AS T1 JOIN injury_accident AS T2 ON T1.id  =  T2.game_id WHERE T2.player  =  'Walter Samuel';"ВЫБРАТЬ T1.сезон ИЗ справочник.игры КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.травмы КАК T2 ПО T1.ссылка = T2.игра ГДЕ T2.игрок = ""Walter Samuel"""
1281;SELECT T1.id ,  T1.score ,  T1.date FROM game AS T1 JOIN injury_accident AS T2 ON T2.game_id  =  T1.id GROUP BY T1.id HAVING count(*)  >=  2;ВЫБРАТЬ T1.ссылка , T1.счет , T1.дата ИЗ справочник.игры КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.травмы КАК T2 ПО T2.игра = T1.ссылка СГРУППИРОВАТЬ ПО T1.ссылка ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
1282;SELECT T1.id ,  T1.name FROM stadium AS T1 JOIN game AS T2 ON T1.id  =  T2.stadium_id JOIN injury_accident AS T3 ON T2.id  =  T3.game_id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.ссылка , T1.наименование ИЗ справочник.стадионы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.игры КАК T2 ПО T1.ссылка = T2.стадион ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.травмы КАК T3 ПО T2.ссылка = T3.игра СГРУППИРОВАТЬ ПО T1.ссылка УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
1283;SELECT T1.id ,  T1.name FROM stadium AS T1 JOIN game AS T2 ON T1.id  =  T2.stadium_id JOIN injury_accident AS T3 ON T2.id  =  T3.game_id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.ссылка , T1.наименование ИЗ справочник.стадионы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.игры КАК T2 ПО T1.ссылка = T2.стадион ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.травмы КАК T3 ПО T2.ссылка = T3.игра СГРУППИРОВАТЬ ПО T1.ссылка УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
1284;SELECT T1.season ,  T2.name FROM game AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.id JOIN injury_accident AS T3 ON T1.id  =  T3.game_id WHERE T3.injury  =  'Foot injury' OR T3.injury  =  'Knee problem';"ВЫБРАТЬ T1.сезон , T2.наименование ИЗ справочник.игры КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.стадионы КАК T2 ПО T1.стадион = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.травмы КАК T3 ПО T1.ссылка = T3.игра ГДЕ T3.травма = ""Foot injury"" ИЛИ T3.травма = ""Knee problem"""
1285;SELECT count(DISTINCT SOURCE) FROM injury_accident;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ источник) ИЗ регистрсведений.травмы
1286;SELECT count(*) FROM game WHERE id NOT IN ( SELECT game_id FROM injury_accident );ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.игры ГДЕ id НЕ В ( ВЫБРАТЬ game_id ИЗ регистрсведений.травмы )
1287;SELECT count(DISTINCT T1.injury) FROM injury_accident AS T1 JOIN game AS T2 ON T1.game_id  =  T2.id WHERE T2.season  >  2010;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ T1.травма) ИЗ регистрсведений.травмы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.игры КАК T2 ПО T1.игра = T2.ссылка ГДЕ T2.сезон > 2010
1290;"SELECT name FROM stadium WHERE name LIKE ""%Bank%""";"ВЫБРАТЬ наименование ИЗ справочник.стадионы ГДЕ наименование ПОДОБНО ""%Bank%"""
1291;SELECT T1.id ,  count(*) FROM stadium AS T1 JOIN game AS T2 ON T1.id  =  T2.stadium_id GROUP BY T1.id;ВЫБРАТЬ T1.ссылка , КОЛИЧЕСТВО(*) ИЗ справочник.стадионы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.игры КАК T2 ПО T1.ссылка = T2.стадион СГРУППИРОВАТЬ ПО T1.ссылка
1292;SELECT T1.date ,  T2.player FROM game AS T1 JOIN injury_accident AS T2 ON T1.id  =  T2.game_id ORDER BY T1.season DESC;ВЫБРАТЬ T1.дата , T2.игрок ИЗ справочник.игры КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.травмы КАК T2 ПО T1.ссылка = T2.игра УПОРЯДОЧИТЬ ПО T1.сезон УБЫВ
1293;SELECT T1.name ,  T2.name FROM Country AS T1 JOIN League AS T2 ON T1.id  =  T2.country_id;ВЫБРАТЬ T1.наименование , T2.наименование ИЗ справочник.страны КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.лиги КАК T2 ПО T1.ссылка = T2.странасправочник
1294;"SELECT count(*) FROM Country AS T1 JOIN League AS T2 ON T1.id  =  T2.country_id WHERE T1.name  =  ""England""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.страны КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.лиги КАК T2 ПО T1.ссылка = T2.странасправочник ГДЕ T1.наименование = ""England"""
1295;SELECT avg(weight) FROM Player;ВЫБРАТЬ СРЕДНЕЕ(вес) ИЗ справочник.игроки
1296;SELECT max(weight) ,  min(weight) FROM Player;ВЫБРАТЬ МАКСИМУМ(вес) , МИНИМУМ(вес) ИЗ справочник.игроки
1297;SELECT DISTINCT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.overall_rating  >  ( SELECT avg(overall_rating) FROM Player_Attributes );ВЫБРАТЬ РАЗЛИЧНЫЕ T1.наименование ИЗ справочник.игроки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.атрибутыигроков КАК T2 ПО T1.игрокapi = T2.игрокapi ГДЕ T2.общийрейтинг > ( ВЫБРАТЬ СРЕДНЕЕ(overall_rating) ИЗ регистрсведений.атрибутыигроков )
1298;SELECT DISTINCT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.dribbling  =  ( SELECT max(overall_rating) FROM Player_Attributes);ВЫБРАТЬ РАЗЛИЧНЫЕ T1.наименование ИЗ справочник.игроки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.атрибутыигроков КАК T2 ПО T1.игрокapi = T2.игрокapi ГДЕ T2.дриблинг = ( ВЫБРАТЬ МАКСИМУМ(overall_rating) ИЗ регистрсведений.атрибутыигроков)
1299;"SELECT DISTINCT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.crossing  >  90 AND T2.preferred_foot  =  ""right""";"ВЫБРАТЬ РАЗЛИЧНЫЕ T1.наименование ИЗ справочник.игроки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.атрибутыигроков КАК T2 ПО T1.игрокapi = T2.игрокapi ГДЕ T2.навесы > 90 И T2.ведущаянога = ""right"""
1300;"SELECT DISTINCT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.preferred_foot  =  ""left"" AND T2.overall_rating  >=  85 AND T2.overall_rating  <=  90";"ВЫБРАТЬ РАЗЛИЧНЫЕ T1.наименование ИЗ справочник.игроки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.атрибутыигроков КАК T2 ПО T1.игрокapi = T2.игрокapi ГДЕ T2.ведущаянога = ""left"" И T2.общийрейтинг >= 85 И T2.общийрейтинг <= 90"
1301;SELECT preferred_foot ,  avg(overall_rating) FROM Player_Attributes GROUP BY preferred_foot;ВЫБРАТЬ ведущаянога , СРЕДНЕЕ(общийрейтинг) ИЗ регистрсведений.атрибутыигроков СГРУППИРОВАТЬ ПО ведущаянога
1302;SELECT preferred_foot ,  count(*) FROM Player_Attributes WHERE overall_rating  >  80 GROUP BY preferred_foot;ВЫБРАТЬ ведущаянога , КОЛИЧЕСТВО(*) ИЗ регистрсведений.атрибутыигроков ГДЕ общийрейтинг > 80 СГРУППИРОВАТЬ ПО ведущаянога
1305;SELECT DISTINCT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id  =  T2.player_api_id ORDER BY overall_rating DESC LIMIT 3;ВЫБРАТЬ ПЕРВЫЕ 3 РАЗЛИЧНЫЕ T1.наименование ИЗ справочник.игроки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.атрибутыигроков КАК T2 ПО T1.игрокapi = T2.игрокapi УПОРЯДОЧИТЬ ПО overall_rating УБЫВ
1306;SELECT DISTINCT T1.player_name ,  T1.birthday FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id  =  T2.player_api_id ORDER BY potential DESC LIMIT 5;ВЫБРАТЬ ПЕРВЫЕ 5 РАЗЛИЧНЫЕ T1.наименование , T1.датарождения ИЗ справочник.игроки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.атрибутыигроков КАК T2 ПО T1.игрокapi = T2.игрокapi УПОРЯДОЧИТЬ ПО potential УБЫВ
1307;SELECT count(*) FROM performance;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.выступления
1308;SELECT HOST FROM performance ORDER BY Attendance ASC;ВЫБРАТЬ ведущий ИЗ справочник.выступления УПОРЯДОЧИТЬ ПО посещаемость ВОЗР
1309;SELECT Date ,  LOCATION FROM performance;ВЫБРАТЬ дата , местоположение ИЗ справочник.выступления
1310;"SELECT Attendance FROM performance WHERE LOCATION  =  ""TD Garden"" OR LOCATION  =  ""Bell Centre""";"ВЫБРАТЬ посещаемость ИЗ справочник.выступления ГДЕ местоположение = ""TD Garden"" ИЛИ местоположение = ""Bell Centre"""
1311;SELECT avg(Attendance) FROM performance;ВЫБРАТЬ СРЕДНЕЕ(посещаемость) ИЗ справочник.выступления
1312;SELECT Date FROM performance ORDER BY Attendance DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 дата ИЗ справочник.выступления УПОРЯДОЧИТЬ ПО посещаемость УБЫВ
1313;SELECT LOCATION ,  COUNT(*) FROM performance GROUP BY LOCATION;ВЫБРАТЬ местоположение , КОЛИЧЕСТВО(*) ИЗ справочник.выступления СГРУППИРОВАТЬ ПО местоположение
1314;SELECT LOCATION FROM performance GROUP BY LOCATION ORDER BY COUNT(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 местоположение ИЗ справочник.выступления СГРУППИРОВАТЬ ПО местоположение УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
1315;SELECT LOCATION FROM performance GROUP BY LOCATION HAVING COUNT(*)  >=  2;ВЫБРАТЬ местоположение ИЗ справочник.выступления СГРУППИРОВАТЬ ПО местоположение ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
1317;SELECT T2.Name ,  T3.Location FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID  =  T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID  =  T3.Performance_ID;ВЫБРАТЬ T2.наименование , T3.местоположение ИЗ регистрсведений.участиеввыступлениях КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.участники КАК T2 ПО T1.участник = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.выступления КАК T3 ПО T1.выступление = T3.ссылка
1318;SELECT T2.Name ,  T3.Location FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID  =  T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID  =  T3.Performance_ID ORDER BY T2.Name ASC;ВЫБРАТЬ T2.наименование , T3.местоположение ИЗ регистрсведений.участиеввыступлениях КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.участники КАК T2 ПО T1.участник = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.выступления КАК T3 ПО T1.выступление = T3.ссылка УПОРЯДОЧИТЬ ПО T2.наименование ВОЗР
1319;"SELECT T3.Date FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID  =  T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID  =  T3.Performance_ID WHERE T2.Role  =  ""Violin""";"ВЫБРАТЬ T3.дата ИЗ регистрсведений.участиеввыступлениях КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.участники КАК T2 ПО T1.участник = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.выступления КАК T3 ПО T1.выступление = T3.ссылка ГДЕ T2.роль = ""Violin"""
1320;SELECT T2.Name ,  T3.Date FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID  =  T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID  =  T3.Performance_ID ORDER BY T3.Attendance DESC;ВЫБРАТЬ T2.наименование , T3.дата ИЗ регистрсведений.участиеввыступлениях КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.участники КАК T2 ПО T1.участник = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.выступления КАК T3 ПО T1.выступление = T3.ссылка УПОРЯДОЧИТЬ ПО T3.посещаемость УБЫВ
1321;SELECT Name FROM member WHERE Member_ID NOT IN (SELECT Member_ID FROM member_attendance);ВЫБРАТЬ Name ИЗ справочник.участники ГДЕ Member_ID НЕ В (ВЫБРАТЬ Member_ID ИЗ регистрсведений.участиеввыступлениях)
1322;SELECT DISTINCT building FROM classroom WHERE capacity  >  50;ВЫБРАТЬ РАЗЛИЧНЫЕ здание ИЗ справочник.аудитории ГДЕ вместимость > 50
1323;SELECT DISTINCT building FROM classroom WHERE capacity  >  50;ВЫБРАТЬ РАЗЛИЧНЫЕ здание ИЗ справочник.аудитории ГДЕ вместимость > 50
1324;SELECT count(*) FROM classroom WHERE building != 'Lamberton';"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.аудитории ГДЕ здание <> ""Lamberton"""
1325;SELECT count(*) FROM classroom WHERE building != 'Lamberton';"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.аудитории ГДЕ здание <> ""Lamberton"""
1326;SELECT dept_name ,  building FROM department WHERE budget  >  (SELECT avg(budget) FROM department);ВЫБРАТЬ dept_name , building ИЗ справочник.факультеты ГДЕ budget > (ВЫБРАТЬ СРЕДНЕЕ(budget) ИЗ справочник.факультеты)
1327;SELECT dept_name ,  building FROM department WHERE budget  >  (SELECT avg(budget) FROM department);ВЫБРАТЬ dept_name , building ИЗ справочник.факультеты ГДЕ budget > (ВЫБРАТЬ СРЕДНЕЕ(budget) ИЗ справочник.факультеты)
1328;SELECT building ,  room_number FROM classroom WHERE capacity BETWEEN 50 AND 100;ВЫБРАТЬ здание , номераудитории ИЗ справочник.аудитории ГДЕ вместимость МЕЖДУ 50 И 100
1329;SELECT building ,  room_number FROM classroom WHERE capacity BETWEEN 50 AND 100;ВЫБРАТЬ здание , номераудитории ИЗ справочник.аудитории ГДЕ вместимость МЕЖДУ 50 И 100
1330;SELECT dept_name ,  building FROM department ORDER BY budget DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование , здание ИЗ справочник.факультеты УПОРЯДОЧИТЬ ПО бюджет УБЫВ
1331;SELECT dept_name ,  building FROM department ORDER BY budget DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование , здание ИЗ справочник.факультеты УПОРЯДОЧИТЬ ПО бюджет УБЫВ
1332;SELECT name FROM student WHERE dept_name  =  'History' ORDER BY tot_cred DESC LIMIT 1;"ВЫБРАТЬ ПЕРВЫЕ 1 наименование ИЗ справочник.студенты ГДЕ факультет = ""History"" УПОРЯДОЧИТЬ ПО кредитовнабрано УБЫВ"
1333;SELECT name FROM student WHERE dept_name  =  'History' ORDER BY tot_cred DESC LIMIT 1;"ВЫБРАТЬ ПЕРВЫЕ 1 наименование ИЗ справочник.студенты ГДЕ факультет = ""History"" УПОРЯДОЧИТЬ ПО кредитовнабрано УБЫВ"
1334;SELECT count(*) FROM classroom WHERE building  =  'Lamberton';"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.аудитории ГДЕ здание = ""Lamberton"""
1335;SELECT count(*) FROM classroom WHERE building  =  'Lamberton';"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.аудитории ГДЕ здание = ""Lamberton"""
1336;SELECT count(DISTINCT s_id) FROM advisor;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ студент) ИЗ регистрсведений.назначениенаставников
1337;SELECT count(DISTINCT s_id) FROM advisor;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ студент) ИЗ регистрсведений.назначениенаставников
1338;SELECT count(DISTINCT dept_name) FROM course;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ факультет) ИЗ справочник.курсы
1339;SELECT count(DISTINCT dept_name) FROM course;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ факультет) ИЗ справочник.курсы
1340;SELECT count(DISTINCT course_id) FROM course WHERE dept_name  =  'Physics';"ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ссылка) ИЗ справочник.курсы ГДЕ факультет = ""Physics"""
1341;SELECT count(DISTINCT course_id) FROM course WHERE dept_name  =  'Physics';"ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ссылка) ИЗ справочник.курсы ГДЕ факультет = ""Physics"""
1342;SELECT T1.title FROM course AS T1 JOIN prereq AS T2 ON T1.course_id  =  T2.course_id GROUP BY T2.course_id HAVING count(*)  =  2;ВЫБРАТЬ T1.наименование ИЗ справочник.курсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.пререквизиты КАК T2 ПО T1.ссылка = T2.курс СГРУППИРОВАТЬ ПО T2.курс ИМЕЮЩИЕ КОЛИЧЕСТВО(*) = 2
1343;SELECT T1.title FROM course AS T1 JOIN prereq AS T2 ON T1.course_id  =  T2.course_id GROUP BY T2.course_id HAVING count(*)  =  2;ВЫБРАТЬ T1.наименование ИЗ справочник.курсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.пререквизиты КАК T2 ПО T1.ссылка = T2.курс СГРУППИРОВАТЬ ПО T2.курс ИМЕЮЩИЕ КОЛИЧЕСТВО(*) = 2
1344;SELECT T1.title ,  T1.credits , T1.dept_name FROM course AS T1 JOIN prereq AS T2 ON T1.course_id  =  T2.course_id GROUP BY T2.course_id HAVING count(*)  >  1;ВЫБРАТЬ T1.наименование , T1.кредиты , T1.факультет ИЗ справочник.курсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.пререквизиты КАК T2 ПО T1.ссылка = T2.курс СГРУППИРОВАТЬ ПО T2.курс ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 1
1345;SELECT T1.title ,  T1.credits , T1.dept_name FROM course AS T1 JOIN prereq AS T2 ON T1.course_id  =  T2.course_id GROUP BY T2.course_id HAVING count(*)  >  1;ВЫБРАТЬ T1.наименование , T1.кредиты , T1.факультет ИЗ справочник.курсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.пререквизиты КАК T2 ПО T1.ссылка = T2.курс СГРУППИРОВАТЬ ПО T2.курс ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 1
1346;SELECT count(*) FROM course WHERE course_id NOT IN (SELECT course_id FROM prereq);ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.курсы ГДЕ course_id НЕ В (ВЫБРАТЬ course_id ИЗ регистрсведений.пререквизиты)
1347;SELECT count(*) FROM course WHERE course_id NOT IN (SELECT course_id FROM prereq);ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.курсы ГДЕ course_id НЕ В (ВЫБРАТЬ course_id ИЗ регистрсведений.пререквизиты)
1348;SELECT title FROM course WHERE course_id NOT IN (SELECT course_id FROM prereq);ВЫБРАТЬ title ИЗ справочник.курсы ГДЕ course_id НЕ В (ВЫБРАТЬ course_id ИЗ регистрсведений.пререквизиты)
1349;SELECT title FROM course WHERE course_id NOT IN (SELECT course_id FROM prereq);ВЫБРАТЬ title ИЗ справочник.курсы ГДЕ course_id НЕ В (ВЫБРАТЬ course_id ИЗ регистрсведений.пререквизиты)
1350;SELECT COUNT (DISTINCT id) FROM teaches;ВЫБРАТЬ КОЛИЧЕСТВО (РАЗЛИЧНЫЕ преподаватель) ИЗ регистрсведений.преподавателикурсов
1351;SELECT COUNT (DISTINCT id) FROM teaches;ВЫБРАТЬ КОЛИЧЕСТВО (РАЗЛИЧНЫЕ преподаватель) ИЗ регистрсведений.преподавателикурсов
1352;SELECT sum(budget) FROM department WHERE dept_name  =  'Marketing' OR dept_name  =  'Finance';"ВЫБРАТЬ СУММА(бюджет) ИЗ справочник.факультеты ГДЕ наименование = ""Marketing"" ИЛИ наименование = ""Finance"""
1353;SELECT sum(budget) FROM department WHERE dept_name  =  'Marketing' OR dept_name  =  'Finance';"ВЫБРАТЬ СУММА(бюджет) ИЗ справочник.факультеты ГДЕ наименование = ""Marketing"" ИЛИ наименование = ""Finance"""
1354;SELECT dept_name FROM instructor WHERE name LIKE '%Soisalon%';"ВЫБРАТЬ факультет ИЗ справочник.преподаватели ГДЕ наименование ПОДОБНО ""%Soisalon%"""
1355;SELECT dept_name FROM instructor WHERE name LIKE '%Soisalon%';"ВЫБРАТЬ факультет ИЗ справочник.преподаватели ГДЕ наименование ПОДОБНО ""%Soisalon%"""
1356;SELECT count(*) FROM classroom WHERE building  =  'Lamberton' AND capacity  <  50;"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.аудитории ГДЕ здание = ""Lamberton"" И вместимость < 50"
1357;SELECT count(*) FROM classroom WHERE building  =  'Lamberton' AND capacity  <  50;"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.аудитории ГДЕ здание = ""Lamberton"" И вместимость < 50"
1358;SELECT dept_name ,  budget FROM department WHERE budget  >  (SELECT avg(budget) FROM department);ВЫБРАТЬ dept_name , budget ИЗ справочник.факультеты ГДЕ budget > (ВЫБРАТЬ СРЕДНЕЕ(budget) ИЗ справочник.факультеты)
1359;SELECT dept_name ,  budget FROM department WHERE budget  >  (SELECT avg(budget) FROM department);ВЫБРАТЬ dept_name , budget ИЗ справочник.факультеты ГДЕ budget > (ВЫБРАТЬ СРЕДНЕЕ(budget) ИЗ справочник.факультеты)
1360;SELECT name FROM instructor WHERE dept_name  =  'Statistics' ORDER BY salary LIMIT 1;"ВЫБРАТЬ ПЕРВЫЕ 1 наименование ИЗ справочник.преподаватели ГДЕ факультет = ""Statistics"" УПОРЯДОЧИТЬ ПО зарплата"
1361;SELECT name FROM instructor WHERE dept_name  =  'Statistics' ORDER BY salary LIMIT 1;"ВЫБРАТЬ ПЕРВЫЕ 1 наименование ИЗ справочник.преподаватели ГДЕ факультет = ""Statistics"" УПОРЯДОЧИТЬ ПО зарплата"
1368;SELECT DISTINCT T1.name FROM student AS T1 JOIN takes AS T2 ON T1.id  =  T2.id WHERE YEAR  =  2009 OR YEAR  =  2010;ВЫБРАТЬ РАЗЛИЧНЫЕ T1.наименование ИЗ справочник.студенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.записинакурсы КАК T2 ПО T1.ссылка = T2.студент ГДЕ YEAR = 2009 ИЛИ YEAR = 2010
1369;SELECT DISTINCT T1.name FROM student AS T1 JOIN takes AS T2 ON T1.id  =  T2.id WHERE YEAR  =  2009 OR YEAR  =  2010;ВЫБРАТЬ РАЗЛИЧНЫЕ T1.наименование ИЗ справочник.студенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.записинакурсы КАК T2 ПО T1.ссылка = T2.студент ГДЕ YEAR = 2009 ИЛИ YEAR = 2010
1370;SELECT dept_name FROM course GROUP BY dept_name ORDER BY count(*) DESC LIMIT 3;ВЫБРАТЬ ПЕРВЫЕ 3 факультет ИЗ справочник.курсы СГРУППИРОВАТЬ ПО факультет УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
1371;SELECT dept_name FROM course GROUP BY dept_name ORDER BY count(*) DESC LIMIT 3;ВЫБРАТЬ ПЕРВЫЕ 3 факультет ИЗ справочник.курсы СГРУППИРОВАТЬ ПО факультет УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
1372;SELECT dept_name FROM course GROUP BY dept_name ORDER BY sum(credits) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 факультет ИЗ справочник.курсы СГРУППИРОВАТЬ ПО факультет УПОРЯДОЧИТЬ ПО СУММА(кредиты) УБЫВ
1373;SELECT dept_name FROM course GROUP BY dept_name ORDER BY sum(credits) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 факультет ИЗ справочник.курсы СГРУППИРОВАТЬ ПО факультет УПОРЯДОЧИТЬ ПО СУММА(кредиты) УБЫВ
1374;SELECT title FROM course ORDER BY title ,  credits;ВЫБРАТЬ наименование ИЗ справочник.курсы УПОРЯДОЧИТЬ ПО наименование , кредиты
1375;SELECT title FROM course ORDER BY title ,  credits;ВЫБРАТЬ наименование ИЗ справочник.курсы УПОРЯДОЧИТЬ ПО наименование , кредиты
1376;SELECT dept_name FROM department ORDER BY budget LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование ИЗ справочник.факультеты УПОРЯДОЧИТЬ ПО бюджет
1377;SELECT dept_name FROM department ORDER BY budget LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование ИЗ справочник.факультеты УПОРЯДОЧИТЬ ПО бюджет
1378;SELECT dept_name ,  building FROM department ORDER BY budget DESC;ВЫБРАТЬ наименование , здание ИЗ справочник.факультеты УПОРЯДОЧИТЬ ПО бюджет УБЫВ
1379;SELECT dept_name ,  building FROM department ORDER BY budget DESC;ВЫБРАТЬ наименование , здание ИЗ справочник.факультеты УПОРЯДОЧИТЬ ПО бюджет УБЫВ
1380;SELECT name FROM instructor ORDER BY salary DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование ИЗ справочник.преподаватели УПОРЯДОЧИТЬ ПО зарплата УБЫВ
1381;SELECT name FROM instructor ORDER BY salary DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование ИЗ справочник.преподаватели УПОРЯДОЧИТЬ ПО зарплата УБЫВ
1382;SELECT * FROM instructor ORDER BY salary;ВЫБРАТЬ * ИЗ справочник.преподаватели УПОРЯДОЧИТЬ ПО зарплата
1383;SELECT * FROM instructor ORDER BY salary;ВЫБРАТЬ * ИЗ справочник.преподаватели УПОРЯДОЧИТЬ ПО зарплата
1384;SELECT name ,  dept_name FROM student ORDER BY tot_cred;ВЫБРАТЬ наименование , факультет ИЗ справочник.студенты УПОРЯДОЧИТЬ ПО кредитовнабрано
1385;SELECT name ,  dept_name FROM student ORDER BY tot_cred;ВЫБРАТЬ наименование , факультет ИЗ справочник.студенты УПОРЯДОЧИТЬ ПО кредитовнабрано
1386;SELECT T1.title ,  T3.name FROM course AS T1 JOIN teaches AS T2 ON T1.course_id  =  T2.course_id JOIN instructor AS T3 ON T2.id  =  T3.id WHERE YEAR  =  2008 ORDER BY T1.title;ВЫБРАТЬ T1.наименование , T3.наименование ИЗ справочник.курсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.преподавателикурсов КАК T2 ПО T1.ссылка = T2.курс ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.преподаватели КАК T3 ПО T2.преподаватель = T3.ссылка ГДЕ YEAR = 2008 УПОРЯДОЧИТЬ ПО T1.наименование
1387;SELECT T1.title ,  T3.name FROM course AS T1 JOIN teaches AS T2 ON T1.course_id  =  T2.course_id JOIN instructor AS T3 ON T2.id  =  T3.id WHERE YEAR  =  2008 ORDER BY T1.title;ВЫБРАТЬ T1.наименование , T3.наименование ИЗ справочник.курсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.преподавателикурсов КАК T2 ПО T1.ссылка = T2.курс ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.преподаватели КАК T3 ПО T2.преподаватель = T3.ссылка ГДЕ YEAR = 2008 УПОРЯДОЧИТЬ ПО T1.наименование
1388;SELECT T1.name FROM instructor AS T1 JOIN advisor AS T2 ON T1.id  =  T2.i_id GROUP BY T2.i_id HAVING count(*)  >  1;ВЫБРАТЬ T1.наименование ИЗ справочник.преподаватели КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.назначениенаставников КАК T2 ПО T1.ссылка = T2.наставник СГРУППИРОВАТЬ ПО T2.наставник ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 1
1389;SELECT T1.name FROM instructor AS T1 JOIN advisor AS T2 ON T1.id  =  T2.i_id GROUP BY T2.i_id HAVING count(*)  >  1;ВЫБРАТЬ T1.наименование ИЗ справочник.преподаватели КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.назначениенаставников КАК T2 ПО T1.ссылка = T2.наставник СГРУППИРОВАТЬ ПО T2.наставник ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 1
1390;SELECT T1.name FROM student AS T1 JOIN advisor AS T2 ON T1.id  =  T2.s_id GROUP BY T2.s_id HAVING count(*)  >  1;ВЫБРАТЬ T1.наименование ИЗ справочник.студенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.назначениенаставников КАК T2 ПО T1.ссылка = T2.студент СГРУППИРОВАТЬ ПО T2.студент ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 1
1391;SELECT T1.name FROM student AS T1 JOIN advisor AS T2 ON T1.id  =  T2.s_id GROUP BY T2.s_id HAVING count(*)  >  1;ВЫБРАТЬ T1.наименование ИЗ справочник.студенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.назначениенаставников КАК T2 ПО T1.ссылка = T2.студент СГРУППИРОВАТЬ ПО T2.студент ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 1
1392;SELECT count(*) ,  building FROM classroom WHERE capacity  >  50 GROUP BY building;ВЫБРАТЬ КОЛИЧЕСТВО(*) , здание ИЗ справочник.аудитории ГДЕ вместимость > 50 СГРУППИРОВАТЬ ПО здание
1393;SELECT count(*) ,  building FROM classroom WHERE capacity  >  50 GROUP BY building;ВЫБРАТЬ КОЛИЧЕСТВО(*) , здание ИЗ справочник.аудитории ГДЕ вместимость > 50 СГРУППИРОВАТЬ ПО здание
1394;SELECT max(capacity) ,  avg(capacity) ,  building FROM classroom GROUP BY building;ВЫБРАТЬ МАКСИМУМ(вместимость) , СРЕДНЕЕ(вместимость) , здание ИЗ справочник.аудитории СГРУППИРОВАТЬ ПО здание
1395;SELECT max(capacity) ,  avg(capacity) ,  building FROM classroom GROUP BY building;ВЫБРАТЬ МАКСИМУМ(вместимость) , СРЕДНЕЕ(вместимость) , здание ИЗ справочник.аудитории СГРУППИРОВАТЬ ПО здание
1396;SELECT title FROM course GROUP BY title HAVING count(*)  >  1;ВЫБРАТЬ наименование ИЗ справочник.курсы СГРУППИРОВАТЬ ПО наименование ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 1
1397;SELECT title FROM course GROUP BY title HAVING count(*)  >  1;ВЫБРАТЬ наименование ИЗ справочник.курсы СГРУППИРОВАТЬ ПО наименование ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 1
1398;SELECT sum(credits) ,  dept_name FROM course GROUP BY dept_name;ВЫБРАТЬ СУММА(кредиты) , факультет ИЗ справочник.курсы СГРУППИРОВАТЬ ПО факультет
1399;SELECT sum(credits) ,  dept_name FROM course GROUP BY dept_name;ВЫБРАТЬ СУММА(кредиты) , факультет ИЗ справочник.курсы СГРУППИРОВАТЬ ПО факультет
1400;SELECT min(salary) ,  dept_name FROM instructor GROUP BY dept_name HAVING avg(salary)  >  (SELECT avg(salary) FROM instructor);ВЫБРАТЬ МИНИМУМ(salary) , dept_name ИЗ справочник.преподаватели СГРУППИРОВАТЬ ПО dept_name ИМЕЮЩИЕ СРЕДНЕЕ(salary) > (ВЫБРАТЬ СРЕДНЕЕ(salary) ИЗ справочник.преподаватели)
1401;SELECT min(salary) ,  dept_name FROM instructor GROUP BY dept_name HAVING avg(salary)  >  (SELECT avg(salary) FROM instructor);ВЫБРАТЬ МИНИМУМ(salary) , dept_name ИЗ справочник.преподаватели СГРУППИРОВАТЬ ПО dept_name ИМЕЮЩИЕ СРЕДНЕЕ(salary) > (ВЫБРАТЬ СРЕДНЕЕ(salary) ИЗ справочник.преподаватели)
1402;SELECT count(*) ,  semester ,  YEAR FROM SECTION GROUP BY semester ,  YEAR;ВЫБРАТЬ КОЛИЧЕСТВО(*) , семестр , год FROM SECTION СГРУППИРОВАТЬ ПО семестр , год
1403;SELECT count(*) ,  semester ,  YEAR FROM SECTION GROUP BY semester ,  YEAR;ВЫБРАТЬ КОЛИЧЕСТВО(*) , семестр , год FROM SECTION СГРУППИРОВАТЬ ПО семестр , год
1404;SELECT YEAR FROM SECTION GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 год ИЗ регистрсведений.группыкурсов СГРУППИРОВАТЬ ПО год УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
1405;SELECT YEAR FROM SECTION GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 год ИЗ регистрсведений.группыкурсов СГРУППИРОВАТЬ ПО год УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
1406;SELECT semester ,  YEAR FROM SECTION GROUP BY semester ,  YEAR ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 семестр , год FROM SECTION СГРУППИРОВАТЬ ПО семестр , год ORDER BY КОЛИЧЕСТВО(*) УБЫВ
1407;SELECT semester ,  YEAR FROM SECTION GROUP BY semester ,  YEAR ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 семестр , год FROM SECTION СГРУППИРОВАТЬ ПО семестр , год ORDER BY КОЛИЧЕСТВО(*) УБЫВ
1408;SELECT dept_name FROM student GROUP BY dept_name ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 факультет ИЗ справочник.студенты СГРУППИРОВАТЬ ПО факультет УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
1409;SELECT dept_name FROM student GROUP BY dept_name ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 факультет ИЗ справочник.студенты СГРУППИРОВАТЬ ПО факультет УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
1410;SELECT count(*) ,  dept_name FROM student GROUP BY dept_name;ВЫБРАТЬ КОЛИЧЕСТВО(*) , факультет ИЗ справочник.студенты СГРУППИРОВАТЬ ПО факультет
1411;SELECT count(*) ,  dept_name FROM student GROUP BY dept_name;ВЫБРАТЬ КОЛИЧЕСТВО(*) , факультет ИЗ справочник.студенты СГРУППИРОВАТЬ ПО факультет
1412;SELECT semester ,  YEAR FROM takes GROUP BY semester ,  YEAR ORDER BY count(*) LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 семестр , год FROM takes СГРУППИРОВАТЬ ПО семестр , год ORDER BY КОЛИЧЕСТВО(*)
1413;SELECT semester ,  YEAR FROM takes GROUP BY semester ,  YEAR ORDER BY count(*) LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 семестр , год FROM takes СГРУППИРОВАТЬ ПО семестр , год ORDER BY КОЛИЧЕСТВО(*)
1414;SELECT i_id FROM advisor AS T1 JOIN student AS T2 ON T1.s_id  =  T2.id WHERE T2.dept_name  =  'History';"ВЫБРАТЬ i_id ИЗ регистрсведений.назначениенаставников КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК T2 ПО T1.студент = T2.ссылка ГДЕ T2.факультет = ""History"""
1415;SELECT i_id FROM advisor AS T1 JOIN student AS T2 ON T1.s_id  =  T2.id WHERE T2.dept_name  =  'History';"ВЫБРАТЬ i_id ИЗ регистрсведений.назначениенаставников КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК T2 ПО T1.студент = T2.ссылка ГДЕ T2.факультет = ""History"""
1416;SELECT T2.name ,  T2.salary FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id WHERE T3.dept_name  =  'History';"ВЫБРАТЬ T2.наименование , T2.зарплата ИЗ регистрсведений.назначениенаставников КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.преподаватели КАК T2 ПО T1.наставник = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК T3 ПО T1.студент = T3.ссылка ГДЕ T3.факультет = ""History"""
1417;SELECT T2.name ,  T2.salary FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id WHERE T3.dept_name  =  'History';"ВЫБРАТЬ T2.наименование , T2.зарплата ИЗ регистрсведений.назначениенаставников КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.преподаватели КАК T2 ПО T1.наставник = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК T3 ПО T1.студент = T3.ссылка ГДЕ T3.факультет = ""History"""
1420;SELECT title FROM course WHERE course_id NOT IN (SELECT course_id FROM prereq);ВЫБРАТЬ title ИЗ справочник.курсы ГДЕ course_id НЕ В (ВЫБРАТЬ course_id ИЗ регистрсведений.пререквизиты)
1421;SELECT title FROM course WHERE course_id NOT IN (SELECT course_id FROM prereq);ВЫБРАТЬ title ИЗ справочник.курсы ГДЕ course_id НЕ В (ВЫБРАТЬ course_id ИЗ регистрсведений.пререквизиты)
1422;SELECT title FROM course WHERE course_id IN (SELECT T1.prereq_id FROM prereq AS T1 JOIN course AS T2 ON T1.course_id  =  T2.course_id WHERE T2.title  =  'International Finance');"ВЫБРАТЬ title ИЗ справочник.курсы ГДЕ course_id В (ВЫБРАТЬ T1.курспререквизит ИЗ регистрсведений.пререквизиты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.курсы КАК T2 ПО T1.курс = T2.ссылка ГДЕ T2.наименование = ""International Finance"")"
1423;SELECT title FROM course WHERE course_id IN (SELECT T1.prereq_id FROM prereq AS T1 JOIN course AS T2 ON T1.course_id  =  T2.course_id WHERE T2.title  =  'International Finance');"ВЫБРАТЬ title ИЗ справочник.курсы ГДЕ course_id В (ВЫБРАТЬ T1.курспререквизит ИЗ регистрсведений.пререквизиты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.курсы КАК T2 ПО T1.курс = T2.ссылка ГДЕ T2.наименование = ""International Finance"")"
1424;SELECT title FROM course WHERE course_id IN (SELECT T1.course_id FROM prereq AS T1 JOIN course AS T2 ON T1.prereq_id  =  T2.course_id WHERE T2.title  =  'Differential Geometry');"ВЫБРАТЬ title ИЗ справочник.курсы ГДЕ course_id В (ВЫБРАТЬ T1.курс ИЗ регистрсведений.пререквизиты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.курсы КАК T2 ПО T1.курспререквизит = T2.ссылка ГДЕ T2.наименование = ""Differential Geometry"")"
1425;SELECT title FROM course WHERE course_id IN (SELECT T1.course_id FROM prereq AS T1 JOIN course AS T2 ON T1.prereq_id  =  T2.course_id WHERE T2.title  =  'Differential Geometry');"ВЫБРАТЬ title ИЗ справочник.курсы ГДЕ course_id В (ВЫБРАТЬ T1.курс ИЗ регистрсведений.пререквизиты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.курсы КАК T2 ПО T1.курспререквизит = T2.ссылка ГДЕ T2.наименование = ""Differential Geometry"")"
1426;SELECT name FROM student WHERE id IN (SELECT id FROM takes WHERE semester  =  'Fall' AND YEAR  =  2003);"ВЫБРАТЬ name ИЗ справочник.студенты ГДЕ студент В (ВЫБРАТЬ студент ИЗ регистрсведений.записинакурсы ГДЕ семестр = ""Fall"" И год = 2003)"
1427;SELECT name FROM student WHERE id IN (SELECT id FROM takes WHERE semester  =  'Fall' AND YEAR  =  2003);"ВЫБРАТЬ name ИЗ справочник.студенты ГДЕ студент В (ВЫБРАТЬ студент ИЗ регистрсведений.записинакурсы ГДЕ семестр = ""Fall"" И год = 2003)"
1428;SELECT T1.title FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id  =  T2.course_id WHERE building  =  'Chandler' AND semester  =  'Fall' AND YEAR  =  2010;"ВЫБРАТЬ T1.наименование ИЗ справочник.курсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.группыкурсов КАК T2 ПО T1.ссылка = T2.курс ГДЕ building = ""Chandler"" И semester = ""Fall"" И YEAR = 2010"
1429;SELECT T1.title FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id  =  T2.course_id WHERE building  =  'Chandler' AND semester  =  'Fall' AND YEAR  =  2010;"ВЫБРАТЬ T1.наименование ИЗ справочник.курсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.группыкурсов КАК T2 ПО T1.ссылка = T2.курс ГДЕ building = ""Chandler"" И semester = ""Fall"" И YEAR = 2010"
1430;SELECT T1.name FROM instructor AS T1 JOIN teaches AS T2 ON T1.id  =  T2.id JOIN course AS T3 ON T2.course_id  =  T3.course_id WHERE T3.title  =  'C Programming';"ВЫБРАТЬ T1.наименование ИЗ справочник.преподаватели КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.преподавателикурсов КАК T2 ПО T1.ссылка = T2.преподаватель ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.курсы КАК T3 ПО T2.курс = T3.ссылка ГДЕ T3.наименование = ""C Programming"""
1431;SELECT T1.name FROM instructor AS T1 JOIN teaches AS T2 ON T1.id  =  T2.id JOIN course AS T3 ON T2.course_id  =  T3.course_id WHERE T3.title  =  'C Programming';"ВЫБРАТЬ T1.наименование ИЗ справочник.преподаватели КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.преподавателикурсов КАК T2 ПО T1.ссылка = T2.преподаватель ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.курсы КАК T3 ПО T2.курс = T3.ссылка ГДЕ T3.наименование = ""C Programming"""
1432;SELECT T2.name ,  T2.salary FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id WHERE T3.dept_name  =  'Math';"ВЫБРАТЬ T2.наименование , T2.зарплата ИЗ регистрсведений.назначениенаставников КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.преподаватели КАК T2 ПО T1.наставник = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК T3 ПО T1.студент = T3.ссылка ГДЕ T3.факультет = ""Math"""
1433;SELECT T2.name ,  T2.salary FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id WHERE T3.dept_name  =  'Math';"ВЫБРАТЬ T2.наименование , T2.зарплата ИЗ регистрсведений.назначениенаставников КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.преподаватели КАК T2 ПО T1.наставник = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК T3 ПО T1.студент = T3.ссылка ГДЕ T3.факультет = ""Math"""
1434;SELECT T2.name FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id WHERE T3.dept_name  =  'Math' ORDER BY T3.tot_cred;"ВЫБРАТЬ T2.наименование ИЗ регистрсведений.назначениенаставников КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.преподаватели КАК T2 ПО T1.наставник = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК T3 ПО T1.студент = T3.ссылка ГДЕ T3.факультет = ""Math"" УПОРЯДОЧИТЬ ПО T3.кредитовнабрано"
1435;SELECT T2.name FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id WHERE T3.dept_name  =  'Math' ORDER BY T3.tot_cred;"ВЫБРАТЬ T2.наименование ИЗ регистрсведений.назначениенаставников КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.преподаватели КАК T2 ПО T1.наставник = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК T3 ПО T1.студент = T3.ссылка ГДЕ T3.факультет = ""Math"" УПОРЯДОЧИТЬ ПО T3.кредитовнабрано"
1436;SELECT title FROM course WHERE course_id IN (SELECT T1.prereq_id FROM prereq AS T1 JOIN course AS T2 ON T1.course_id  =  T2.course_id WHERE T2.title  =  'Mobile Computing');"ВЫБРАТЬ title ИЗ справочник.курсы ГДЕ course_id В (ВЫБРАТЬ T1.курспререквизит ИЗ регистрсведений.пререквизиты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.курсы КАК T2 ПО T1.курс = T2.ссылка ГДЕ T2.наименование = ""Mobile Computing"")"
1437;SELECT title FROM course WHERE course_id IN (SELECT T1.prereq_id FROM prereq AS T1 JOIN course AS T2 ON T1.course_id  =  T2.course_id WHERE T2.title  =  'Mobile Computing');"ВЫБРАТЬ title ИЗ справочник.курсы ГДЕ course_id В (ВЫБРАТЬ T1.курспререквизит ИЗ регистрсведений.пререквизиты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.курсы КАК T2 ПО T1.курс = T2.ссылка ГДЕ T2.наименование = ""Mobile Computing"")"
1438;SELECT T2.name FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id ORDER BY T3.tot_cred DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.наименование ИЗ регистрсведений.назначениенаставников КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.преподаватели КАК T2 ПО T1.наставник = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК T3 ПО T1.студент = T3.ссылка УПОРЯДОЧИТЬ ПО T3.кредитовнабрано УБЫВ
1439;SELECT T2.name FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id ORDER BY T3.tot_cred DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.наименование ИЗ регистрсведений.назначениенаставников КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.преподаватели КАК T2 ПО T1.наставник = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК T3 ПО T1.студент = T3.ссылка УПОРЯДОЧИТЬ ПО T3.кредитовнабрано УБЫВ
1440;SELECT name FROM instructor WHERE id NOT IN (SELECT id FROM teaches);ВЫБРАТЬ name ИЗ справочник.преподаватели ГДЕ id НЕ В (ВЫБРАТЬ id ИЗ регистрсведений.преподавателикурсов)
1441;SELECT name FROM instructor WHERE id NOT IN (SELECT id FROM teaches);ВЫБРАТЬ name ИЗ справочник.преподаватели ГДЕ id НЕ В (ВЫБРАТЬ id ИЗ регистрсведений.преподавателикурсов)
1444;SELECT name FROM instructor WHERE id NOT IN (SELECT id FROM teaches WHERE semester  =  'Spring');"ВЫБРАТЬ name ИЗ справочник.преподаватели ГДЕ преподаватель НЕ В (ВЫБРАТЬ преподаватель ИЗ регистрсведений.преподавателикурсов ГДЕ семестр = ""Spring"")"
1445;SELECT name FROM instructor WHERE id NOT IN (SELECT id FROM teaches WHERE semester  =  'Spring');"ВЫБРАТЬ name ИЗ справочник.преподаватели ГДЕ преподаватель НЕ В (ВЫБРАТЬ преподаватель ИЗ регистрсведений.преподавателикурсов ГДЕ семестр = ""Spring"")"
1446;SELECT dept_name FROM instructor GROUP BY dept_name ORDER BY avg(salary) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 факультет ИЗ справочник.преподаватели СГРУППИРОВАТЬ ПО факультет УПОРЯДОЧИТЬ ПО СРЕДНЕЕ(зарплата) УБЫВ
1447;SELECT dept_name FROM instructor GROUP BY dept_name ORDER BY avg(salary) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 факультет ИЗ справочник.преподаватели СГРУППИРОВАТЬ ПО факультет УПОРЯДОЧИТЬ ПО СРЕДНЕЕ(зарплата) УБЫВ
1448;SELECT avg(T1.salary) ,  count(*) FROM instructor AS T1 JOIN department AS T2 ON T1.dept_name  =  T2.dept_name ORDER BY T2.budget DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 СРЕДНЕЕ(T1.зарплата) , КОЛИЧЕСТВО(*) ИЗ справочник.преподаватели КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.факультеты КАК T2 ПО T1.факультет = T2.наименование УПОРЯДОЧИТЬ ПО T2.бюджет УБЫВ
1449;SELECT avg(T1.salary) ,  count(*) FROM instructor AS T1 JOIN department AS T2 ON T1.dept_name  =  T2.dept_name ORDER BY T2.budget DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 СРЕДНЕЕ(T1.зарплата) , КОЛИЧЕСТВО(*) ИЗ справочник.преподаватели КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.факультеты КАК T2 ПО T1.факультет = T2.наименование УПОРЯДОЧИТЬ ПО T2.бюджет УБЫВ
1450;SELECT T3.title ,  T3.credits FROM classroom AS T1 JOIN SECTION AS T2 ON T1.building  =  T2.building AND T1.room_number  =  T2.room_number JOIN course AS T3 ON T2.course_id  =  T3.course_id WHERE T1.capacity  =  (SELECT max(capacity) FROM classroom);ВЫБРАТЬ T3.наименование , T3.кредиты ИЗ справочник.аудитории КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.группыкурсов КАК T2 ПО T1.здание = T2.здание И T1.номераудитории = T2.аудитория ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.курсы КАК T3 ПО T2.курс = T3.ссылка ГДЕ T1.вместимость = (ВЫБРАТЬ МАКСИМУМ(capacity) ИЗ справочник.аудитории)
1451;SELECT T3.title ,  T3.credits FROM classroom AS T1 JOIN SECTION AS T2 ON T1.building  =  T2.building AND T1.room_number  =  T2.room_number JOIN course AS T3 ON T2.course_id  =  T3.course_id WHERE T1.capacity  =  (SELECT max(capacity) FROM classroom);ВЫБРАТЬ T3.наименование , T3.кредиты ИЗ справочник.аудитории КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.группыкурсов КАК T2 ПО T1.здание = T2.здание И T1.номераудитории = T2.аудитория ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.курсы КАК T3 ПО T2.курс = T3.ссылка ГДЕ T1.вместимость = (ВЫБРАТЬ МАКСИМУМ(capacity) ИЗ справочник.аудитории)
1452;SELECT name FROM student WHERE id NOT IN (SELECT T1.id FROM takes AS T1 JOIN course AS T2 ON T1.course_id  =  T2.course_id WHERE T2.dept_name  =  'Biology');"ВЫБРАТЬ name ИЗ справочник.студенты ГДЕ id НЕ В (ВЫБРАТЬ T1.студент ИЗ регистрсведений.записинакурсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.курсы КАК T2 ПО T1.курс = T2.ссылка ГДЕ T2.факультет = ""Biology"")"
1453;SELECT name FROM student WHERE id NOT IN (SELECT T1.id FROM takes AS T1 JOIN course AS T2 ON T1.course_id  =  T2.course_id WHERE T2.dept_name  =  'Biology');"ВЫБРАТЬ name ИЗ справочник.студенты ГДЕ id НЕ В (ВЫБРАТЬ T1.студент ИЗ регистрсведений.записинакурсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.курсы КАК T2 ПО T1.курс = T2.ссылка ГДЕ T2.факультет = ""Biology"")"
1454;SELECT count(DISTINCT T2.id) ,  count(DISTINCT T3.id) ,  T3.dept_name FROM department AS T1 JOIN student AS T2 ON T1.dept_name  =  T2.dept_name JOIN instructor AS T3 ON T1.dept_name  =  T3.dept_name GROUP BY T3.dept_name;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ T2.ссылка) , КОЛИЧЕСТВО(РАЗЛИЧНЫЕ T3.ссылка) , T3.факультет ИЗ справочник.факультеты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК T2 ПО T1.наименование = T2.факультет ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.преподаватели КАК T3 ПО T1.наименование = T3.факультет СГРУППИРОВАТЬ ПО T3.факультет
1455;SELECT count(DISTINCT T2.id) ,  count(DISTINCT T3.id) ,  T3.dept_name FROM department AS T1 JOIN student AS T2 ON T1.dept_name  =  T2.dept_name JOIN instructor AS T3 ON T1.dept_name  =  T3.dept_name GROUP BY T3.dept_name;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ T2.ссылка) , КОЛИЧЕСТВО(РАЗЛИЧНЫЕ T3.ссылка) , T3.факультет ИЗ справочник.факультеты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК T2 ПО T1.наименование = T2.факультет ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.преподаватели КАК T3 ПО T1.наименование = T3.факультет СГРУППИРОВАТЬ ПО T3.факультет
1456;SELECT T1.name FROM student AS T1 JOIN takes AS T2 ON T1.id  =  T2.id WHERE T2.course_id IN (SELECT T4.prereq_id FROM course AS T3 JOIN prereq AS T4 ON T3.course_id  =  T4.course_id WHERE T3.title  =  'International Finance');"ВЫБРАТЬ T1.наименование ИЗ справочник.студенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.записинакурсы КАК T2 ПО T1.ссылка = T2.студент ГДЕ T2.курс В (ВЫБРАТЬ T4.курспререквизит ИЗ справочник.курсы КАК T3 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.пререквизиты КАК T4 ПО T3.ссылка = T4.курс ГДЕ T3.наименование = ""International Finance"")"
1457;SELECT T1.name FROM student AS T1 JOIN takes AS T2 ON T1.id  =  T2.id WHERE T2.course_id IN (SELECT T4.prereq_id FROM course AS T3 JOIN prereq AS T4 ON T3.course_id  =  T4.course_id WHERE T3.title  =  'International Finance');"ВЫБРАТЬ T1.наименование ИЗ справочник.студенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.записинакурсы КАК T2 ПО T1.ссылка = T2.студент ГДЕ T2.курс В (ВЫБРАТЬ T4.курспререквизит ИЗ справочник.курсы КАК T3 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.пререквизиты КАК T4 ПО T3.ссылка = T4.курс ГДЕ T3.наименование = ""International Finance"")"
1458;SELECT name ,  salary FROM instructor WHERE salary  <  (SELECT avg(salary) FROM instructor WHERE dept_name  =  'Physics');"ВЫБРАТЬ наименование , зарплата ИЗ справочник.преподаватели ГДЕ зарплата < (ВЫБРАТЬ СРЕДНЕЕ(зарплата) ИЗ справочник.преподаватели ГДЕ факультет = ""Physics"")"
1459;SELECT name ,  salary FROM instructor WHERE salary  <  (SELECT avg(salary) FROM instructor WHERE dept_name  =  'Physics');"ВЫБРАТЬ наименование , зарплата ИЗ справочник.преподаватели ГДЕ зарплата < (ВЫБРАТЬ СРЕДНЕЕ(зарплата) ИЗ справочник.преподаватели ГДЕ факультет = ""Physics"")"
1460;SELECT T3.name FROM course AS T1 JOIN takes AS T2 ON T1.course_id  =  T2.course_id JOIN student AS T3 ON T2.id  =  T3.id WHERE T1.dept_name  =  'Statistics';"ВЫБРАТЬ T3.наименование ИЗ справочник.курсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.записинакурсы КАК T2 ПО T1.ссылка = T2.курс ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК T3 ПО T2.студент = T3.ссылка ГДЕ T1.факультет = ""Statistics"""
1461;SELECT T3.name FROM course AS T1 JOIN takes AS T2 ON T1.course_id  =  T2.course_id JOIN student AS T3 ON T2.id  =  T3.id WHERE T1.dept_name  =  'Statistics';"ВЫБРАТЬ T3.наименование ИЗ справочник.курсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.записинакурсы КАК T2 ПО T1.ссылка = T2.курс ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК T3 ПО T2.студент = T3.ссылка ГДЕ T1.факультет = ""Statistics"""
1462;SELECT T2.building ,  T2.room_number ,  T2.semester ,  T2.year FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id  =  T2.course_id WHERE T1.dept_name  =  'Psychology' ORDER BY T1.title;"ВЫБРАТЬ T2.здание , T2.аудитория , T2.семестр , T2.год ИЗ справочник.курсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.группыкурсов КАК T2 ПО T1.ссылка = T2.курс ГДЕ T1.факультет = ""Psychology"" УПОРЯДОЧИТЬ ПО T1.наименование"
1463;SELECT T2.building ,  T2.room_number ,  T2.semester ,  T2.year FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id  =  T2.course_id WHERE T1.dept_name  =  'Psychology' ORDER BY T1.title;"ВЫБРАТЬ T2.здание , T2.аудитория , T2.семестр , T2.год ИЗ справочник.курсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.группыкурсов КАК T2 ПО T1.ссылка = T2.курс ГДЕ T1.факультет = ""Psychology"" УПОРЯДОЧИТЬ ПО T1.наименование"
1464;SELECT name FROM instructor WHERE dept_name  =  'Comp. Sci.';"ВЫБРАТЬ наименование ИЗ справочник.преподаватели ГДЕ факультет = ""Comp. Sci."""
1465;SELECT name FROM instructor WHERE dept_name  =  'Comp. Sci.';"ВЫБРАТЬ наименование ИЗ справочник.преподаватели ГДЕ факультет = ""Comp. Sci."""
1466;SELECT name FROM instructor WHERE dept_name  =  'Comp. Sci.'  AND salary  >  80000;"ВЫБРАТЬ наименование ИЗ справочник.преподаватели ГДЕ факультет = ""Comp. Sci."" И зарплата > 80000"
1467;SELECT name FROM instructor WHERE dept_name  =  'Comp. Sci.'  AND salary  >  80000;"ВЫБРАТЬ наименование ИЗ справочник.преподаватели ГДЕ факультет = ""Comp. Sci."" И зарплата > 80000"
1468;SELECT name ,  course_id FROM instructor AS T1 JOIN teaches AS T2 ON T1.ID  =  T2.ID;ВЫБРАТЬ name , course_id ИЗ справочник.преподаватели КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.преподавателикурсов КАК T2 ПО T1.ссылка = T2.преподаватель
1469;SELECT name ,  course_id FROM instructor AS T1 JOIN teaches AS T2 ON T1.ID  =  T2.ID;ВЫБРАТЬ name , course_id ИЗ справочник.преподаватели КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.преподавателикурсов КАК T2 ПО T1.ссылка = T2.преподаватель
1470;SELECT name ,  course_id FROM instructor AS T1 JOIN teaches AS T2 ON T1.ID  =  T2.ID WHERE T1.dept_name  =  'Art';"ВЫБРАТЬ name , course_id ИЗ справочник.преподаватели КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.преподавателикурсов КАК T2 ПО T1.ссылка = T2.преподаватель ГДЕ T1.факультет = ""Art"""
1471;SELECT name ,  course_id FROM instructor AS T1 JOIN teaches AS T2 ON T1.ID  =  T2.ID WHERE T1.dept_name  =  'Art';"ВЫБРАТЬ name , course_id ИЗ справочник.преподаватели КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.преподавателикурсов КАК T2 ПО T1.ссылка = T2.преподаватель ГДЕ T1.факультет = ""Art"""
1472;SELECT name FROM instructor WHERE name LIKE '%dar%';"ВЫБРАТЬ наименование ИЗ справочник.преподаватели ГДЕ наименование ПОДОБНО ""%dar%"""
1473;SELECT name FROM instructor WHERE name LIKE '%dar%';"ВЫБРАТЬ наименование ИЗ справочник.преподаватели ГДЕ наименование ПОДОБНО ""%dar%"""
1474;SELECT DISTINCT name FROM  instructor ORDER BY name;ВЫБРАТЬ РАЗЛИЧНЫЕ наименование ИЗ справочник.преподаватели УПОРЯДОЧИТЬ ПО наименование
1475;SELECT DISTINCT name FROM  instructor ORDER BY name;ВЫБРАТЬ РАЗЛИЧНЫЕ наименование ИЗ справочник.преподаватели УПОРЯДОЧИТЬ ПО наименование
1476;SELECT course_id FROM SECTION WHERE semester  =  'Fall' AND YEAR  =  2009 UNION SELECT course_id FROM SECTION WHERE semester  =  'Spring' AND YEAR  =  2010;"ВЫБРАТЬ курс ИЗ регистрсведений.группыкурсов ГДЕ семестр = ""Fall"" И год = 2009 ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ курс ИЗ регистрсведений.группыкурсов ГДЕ семестр = ""Spring"" И год = 2010"
1477;SELECT course_id FROM SECTION WHERE semester  =  'Fall' AND YEAR  =  2009 UNION SELECT course_id FROM SECTION WHERE semester  =  'Spring' AND YEAR  =  2010;"ВЫБРАТЬ курс ИЗ регистрсведений.группыкурсов ГДЕ семестр = ""Fall"" И год = 2009 ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ курс ИЗ регистрсведений.группыкурсов ГДЕ семестр = ""Spring"" И год = 2010"
1482;SELECT DISTINCT salary FROM instructor WHERE salary  <  (SELECT max(salary) FROM instructor);ВЫБРАТЬ РАЗЛИЧНЫЕ salary ИЗ справочник.преподаватели ГДЕ salary < (ВЫБРАТЬ МАКСИМУМ(salary) ИЗ справочник.преподаватели)
1483;SELECT DISTINCT salary FROM instructor WHERE salary  <  (SELECT max(salary) FROM instructor);ВЫБРАТЬ РАЗЛИЧНЫЕ salary ИЗ справочник.преподаватели ГДЕ salary < (ВЫБРАТЬ МАКСИМУМ(salary) ИЗ справочник.преподаватели)
1484;SELECT COUNT (DISTINCT ID) FROM teaches WHERE semester  =  'Spring' AND YEAR  =  2010;"ВЫБРАТЬ КОЛИЧЕСТВО (РАЗЛИЧНЫЕ преподаватель) ИЗ регистрсведений.преподавателикурсов ГДЕ семестр = ""Spring"" И год = 2010"
1485;SELECT COUNT (DISTINCT ID) FROM teaches WHERE semester  =  'Spring' AND YEAR  =  2010;"ВЫБРАТЬ КОЛИЧЕСТВО (РАЗЛИЧНЫЕ преподаватель) ИЗ регистрсведений.преподавателикурсов ГДЕ семестр = ""Spring"" И год = 2010"
1486;SELECT dept_name ,  AVG (salary) FROM instructor GROUP BY dept_name HAVING AVG (salary)  >  42000;ВЫБРАТЬ факультет , AVG (зарплата) ИЗ справочник.преподаватели СГРУППИРОВАТЬ ПО факультет ИМЕЮЩИЕ AVG (зарплата) > 42000
1487;SELECT dept_name ,  AVG (salary) FROM instructor GROUP BY dept_name HAVING AVG (salary)  >  42000;ВЫБРАТЬ факультет , AVG (зарплата) ИЗ справочник.преподаватели СГРУППИРОВАТЬ ПО факультет ИМЕЮЩИЕ AVG (зарплата) > 42000
1488;SELECT name FROM instructor WHERE salary  >  (SELECT min(salary) FROM instructor WHERE dept_name  =  'Biology');"ВЫБРАТЬ наименование ИЗ справочник.преподаватели ГДЕ зарплата > (ВЫБРАТЬ МИНИМУМ(зарплата) ИЗ справочник.преподаватели ГДЕ факультет = ""Biology"")"
1489;SELECT name FROM instructor WHERE salary  >  (SELECT min(salary) FROM instructor WHERE dept_name  =  'Biology');"ВЫБРАТЬ наименование ИЗ справочник.преподаватели ГДЕ зарплата > (ВЫБРАТЬ МИНИМУМ(зарплата) ИЗ справочник.преподаватели ГДЕ факультет = ""Biology"")"
1490;SELECT name FROM instructor WHERE salary  >  (SELECT max(salary) FROM instructor WHERE dept_name  =  'Biology');"ВЫБРАТЬ наименование ИЗ справочник.преподаватели ГДЕ зарплата > (ВЫБРАТЬ МАКСИМУМ(зарплата) ИЗ справочник.преподаватели ГДЕ факультет = ""Biology"")"
1491;SELECT name FROM instructor WHERE salary  >  (SELECT max(salary) FROM instructor WHERE dept_name  =  'Biology');"ВЫБРАТЬ наименование ИЗ справочник.преподаватели ГДЕ зарплата > (ВЫБРАТЬ МАКСИМУМ(зарплата) ИЗ справочник.преподаватели ГДЕ факультет = ""Biology"")"
1492;SELECT count(*) FROM debate;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.дебаты
1493;SELECT Venue FROM debate ORDER BY Num_of_Audience ASC;ВЫБРАТЬ местопроведения ИЗ справочник.дебаты УПОРЯДОЧИТЬ ПО количествозрителей ВОЗР
1494;SELECT Date ,  Venue FROM debate;ВЫБРАТЬ дата , местопроведения ИЗ справочник.дебаты
1495;SELECT Date FROM debate WHERE Num_of_Audience  >  150;ВЫБРАТЬ дата ИЗ справочник.дебаты ГДЕ количествозрителей > 150
1496;SELECT Name FROM  people WHERE Age  =  35 OR Age  =  36;ВЫБРАТЬ наименование ИЗ справочник.люди ГДЕ возраст = 35 ИЛИ возраст = 36
1497;SELECT Party FROM people ORDER BY Age ASC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 партия ИЗ справочник.люди УПОРЯДОЧИТЬ ПО возраст ВОЗР
1498;SELECT Party ,  COUNT(*) FROM people GROUP BY Party;ВЫБРАТЬ партия , КОЛИЧЕСТВО(*) ИЗ справочник.люди СГРУППИРОВАТЬ ПО партия
1499;SELECT Party FROM people GROUP BY Party ORDER BY COUNT(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 партия ИЗ справочник.люди СГРУППИРОВАТЬ ПО партия УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
1500;SELECT DISTINCT Venue FROM debate;ВЫБРАТЬ РАЗЛИЧНЫЕ местопроведения ИЗ справочник.дебаты
1501;SELECT T3.Name ,  T2.Date ,  T2.Venue FROM debate_people AS T1 JOIN debate AS T2 ON T1.Debate_ID  =  T2.Debate_ID JOIN people AS T3 ON T1.Affirmative  =  T3.People_ID;ВЫБРАТЬ T3.наименование , T2.дата , T2.местопроведения ИЗ регистрсведений.участникидебатов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.дебаты КАК T2 ПО T1.дебаты = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.люди КАК T3 ПО T1.стороназа = T3.ссылка
1502;SELECT T3.Name ,  T2.Date ,  T2.Venue FROM debate_people AS T1 JOIN debate AS T2 ON T1.Debate_ID  =  T2.Debate_ID JOIN people AS T3 ON T1.Negative  =  T3.People_ID ORDER BY T3.Name ASC;ВЫБРАТЬ T3.наименование , T2.дата , T2.местопроведения ИЗ регистрсведений.участникидебатов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.дебаты КАК T2 ПО T1.дебаты = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.люди КАК T3 ПО T1.сторонапротив = T3.ссылка УПОРЯДОЧИТЬ ПО T3.наименование ВОЗР
1503;SELECT T3.Name FROM debate_people AS T1 JOIN debate AS T2 ON T1.Debate_ID  =  T2.Debate_ID JOIN people AS T3 ON T1.Affirmative  =  T3.People_ID WHERE T2.Num_of_Audience  >  200;ВЫБРАТЬ T3.наименование ИЗ регистрсведений.участникидебатов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.дебаты КАК T2 ПО T1.дебаты = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.люди КАК T3 ПО T1.стороназа = T3.ссылка ГДЕ T2.количествозрителей > 200
1504;SELECT T2.Name ,  COUNT(*) FROM debate_people AS T1 JOIN people AS T2 ON T1.Affirmative  =  T2.People_ID GROUP BY T2.Name;ВЫБРАТЬ T2.наименование , КОЛИЧЕСТВО(*) ИЗ регистрсведений.участникидебатов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.люди КАК T2 ПО T1.стороназа = T2.ссылка СГРУППИРОВАТЬ ПО T2.наименование
1505;SELECT T2.Name FROM debate_people AS T1 JOIN people AS T2 ON T1.Negative  =  T2.People_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2;ВЫБРАТЬ T2.наименование ИЗ регистрсведений.участникидебатов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.люди КАК T2 ПО T1.сторонапротив = T2.ссылка СГРУППИРОВАТЬ ПО T2.наименование ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
1506;SELECT Name FROM people WHERE People_id NOT IN (SELECT Affirmative FROM debate_people);ВЫБРАТЬ Name ИЗ справочник.люди ГДЕ People_id НЕ В (ВЫБРАТЬ Affirmative ИЗ регистрсведений.участникидебатов)
1507;SELECT customer_details FROM customers ORDER BY customer_details;ВЫБРАТЬ описание ИЗ справочник.клиенты УПОРЯДОЧИТЬ ПО описание
1508;SELECT customer_details FROM customers ORDER BY customer_details;ВЫБРАТЬ описание ИЗ справочник.клиенты УПОРЯДОЧИТЬ ПО описание
1509;"SELECT policy_type_code FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id WHERE t2.customer_details  =  ""Dayana Robel""";"ВЫБРАТЬ policy_type_code ИЗ документ.полис КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.клиенты КАК t2 ПО t1.клиент = t2.ссылка ГДЕ t2.описание = ""Dayana Robel"""
1510;"SELECT policy_type_code FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id WHERE t2.customer_details  =  ""Dayana Robel""";"ВЫБРАТЬ policy_type_code ИЗ документ.полис КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.клиенты КАК t2 ПО t1.клиент = t2.ссылка ГДЕ t2.описание = ""Dayana Robel"""
1511;SELECT policy_type_code FROM policies GROUP BY policy_type_code ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 видполиса ИЗ документ.полис СГРУППИРОВАТЬ ПО видполиса УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
1512;SELECT policy_type_code FROM policies GROUP BY policy_type_code ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 видполиса ИЗ документ.полис СГРУППИРОВАТЬ ПО видполиса УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
1513;SELECT policy_type_code FROM policies GROUP BY policy_type_code HAVING count(*)  >  2;ВЫБРАТЬ видполиса ИЗ документ.полис СГРУППИРОВАТЬ ПО видполиса ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 2
1514;SELECT policy_type_code FROM policies GROUP BY policy_type_code HAVING count(*)  >  2;ВЫБРАТЬ видполиса ИЗ документ.полис СГРУППИРОВАТЬ ПО видполиса ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 2
1515;SELECT sum(amount_piad) ,  avg(amount_piad) FROM claim_headers;ВЫБРАТЬ СУММА(суммавыплаты) , СРЕДНЕЕ(суммавыплаты) ИЗ документ.заявка
1516;SELECT sum(amount_piad) ,  avg(amount_piad) FROM claim_headers;ВЫБРАТЬ СУММА(суммавыплаты) , СРЕДНЕЕ(суммавыплаты) ИЗ документ.заявка
1517;SELECT sum(t1.amount_claimed) FROM claim_headers AS t1 JOIN claims_documents AS t2 ON t1.claim_header_id  =  t2.claim_id WHERE t2.created_date  =  (SELECT created_date FROM claims_documents ORDER BY created_date LIMIT 1);ВЫБРАТЬ СУММА(t1.суммазаявки) ИЗ документ.заявка КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.заявкидокументы КАК t2 ПО t1.ссылка = t2.заявка ГДЕ t2.датасоздания = (ВЫБРАТЬ created_date ИЗ регистрсведений.заявкидокументы УПОРЯДОЧИТЬ ПО created_date LIMIT 1)
1518;SELECT sum(t1.amount_claimed) FROM claim_headers AS t1 JOIN claims_documents AS t2 ON t1.claim_header_id  =  t2.claim_id WHERE t2.created_date  =  (SELECT created_date FROM claims_documents ORDER BY created_date LIMIT 1);ВЫБРАТЬ СУММА(t1.суммазаявки) ИЗ документ.заявка КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.заявкидокументы КАК t2 ПО t1.ссылка = t2.заявка ГДЕ t2.датасоздания = (ВЫБРАТЬ created_date ИЗ регистрсведений.заявкидокументы УПОРЯДОЧИТЬ ПО created_date LIMIT 1)
1519;SELECT t3.customer_details FROM claim_headers AS t1 JOIN policies AS t2 ON t1.policy_id  =  t2.policy_id JOIN customers AS t3 ON t2.customer_id  =  t3.customer_id WHERE t1.amount_claimed  =  (SELECT max(amount_claimed) FROM claim_headers);ВЫБРАТЬ t3.описание ИЗ документ.заявка КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.полис КАК t2 ПО t1.полис = t2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.клиенты КАК t3 ПО t2.клиент = t3.ссылка ГДЕ t1.суммазаявки = (ВЫБРАТЬ МАКСИМУМ(amount_claimed) ИЗ документ.заявка)
1520;SELECT t3.customer_details FROM claim_headers AS t1 JOIN policies AS t2 ON t1.policy_id  =  t2.policy_id JOIN customers AS t3 ON t2.customer_id  =  t3.customer_id WHERE t1.amount_claimed  =  (SELECT max(amount_claimed) FROM claim_headers);ВЫБРАТЬ t3.описание ИЗ документ.заявка КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.полис КАК t2 ПО t1.полис = t2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.клиенты КАК t3 ПО t2.клиент = t3.ссылка ГДЕ t1.суммазаявки = (ВЫБРАТЬ МАКСИМУМ(amount_claimed) ИЗ документ.заявка)
1521;SELECT t3.customer_details FROM claim_headers AS t1 JOIN policies AS t2 ON t1.policy_id  =  t2.policy_id JOIN customers AS t3 ON t2.customer_id  =  t3.customer_id WHERE t1.amount_piad  =  (SELECT min(amount_piad) FROM claim_headers);ВЫБРАТЬ t3.описание ИЗ документ.заявка КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.полис КАК t2 ПО t1.полис = t2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.клиенты КАК t3 ПО t2.клиент = t3.ссылка ГДЕ t1.суммавыплаты = (ВЫБРАТЬ МИНИМУМ(amount_piad) ИЗ документ.заявка)
1522;SELECT t3.customer_details FROM claim_headers AS t1 JOIN policies AS t2 ON t1.policy_id  =  t2.policy_id JOIN customers AS t3 ON t2.customer_id  =  t3.customer_id WHERE t1.amount_piad  =  (SELECT min(amount_piad) FROM claim_headers);ВЫБРАТЬ t3.описание ИЗ документ.заявка КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.полис КАК t2 ПО t1.полис = t2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.клиенты КАК t3 ПО t2.клиент = t3.ссылка ГДЕ t1.суммавыплаты = (ВЫБРАТЬ МИНИМУМ(amount_piad) ИЗ документ.заявка)
1525;SELECT count(*) FROM claims_processing_stages;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.этапыобработкизаявок
1526;SELECT count(*) FROM claims_processing_stages;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.этапыобработкизаявок
1527;SELECT t2.claim_status_name FROM claims_processing AS t1 JOIN claims_processing_stages AS t2 ON t1.claim_stage_id  =  t2.claim_stage_id GROUP BY t1.claim_stage_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 t2.наименованиестатуса ИЗ регистрсведений.обработказаявок КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.этапыобработкизаявок КАК t2 ПО t1.этап = t2.ссылка СГРУППИРОВАТЬ ПО t1.этап УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
1528;SELECT t2.claim_status_name FROM claims_processing AS t1 JOIN claims_processing_stages AS t2 ON t1.claim_stage_id  =  t2.claim_stage_id GROUP BY t1.claim_stage_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 t2.наименованиестатуса ИЗ регистрсведений.обработказаявок КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.этапыобработкизаявок КАК t2 ПО t1.этап = t2.ссылка СГРУППИРОВАТЬ ПО t1.этап УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
1529;"SELECT customer_details FROM customers WHERE customer_details LIKE ""%Diana%""";"ВЫБРАТЬ описание ИЗ справочник.клиенты ГДЕ описание ПОДОБНО ""%Diana%"""
1530;"SELECT customer_details FROM customers WHERE customer_details LIKE ""%Diana%""";"ВЫБРАТЬ описание ИЗ справочник.клиенты ГДЕ описание ПОДОБНО ""%Diana%"""
1531;"SELECT DISTINCT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.policy_type_code  =  ""Deputy""";"ВЫБРАТЬ РАЗЛИЧНЫЕ t2.описание ИЗ документ.полис КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.клиенты КАК t2 ПО t1.клиент = t2.ссылка ГДЕ t1.видполиса = ""Deputy"""
1532;"SELECT DISTINCT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.policy_type_code  =  ""Deputy""";"ВЫБРАТЬ РАЗЛИЧНЫЕ t2.описание ИЗ документ.полис КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.клиенты КАК t2 ПО t1.клиент = t2.ссылка ГДЕ t1.видполиса = ""Deputy"""
1533;"SELECT DISTINCT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.policy_type_code  =  ""Deputy"" OR t1.policy_type_code  =  ""Uniform""";"ВЫБРАТЬ РАЗЛИЧНЫЕ t2.описание ИЗ документ.полис КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.клиенты КАК t2 ПО t1.клиент = t2.ссылка ГДЕ t1.видполиса = ""Deputy"" ИЛИ t1.видполиса = ""Uniform"""
1534;"SELECT DISTINCT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.policy_type_code  =  ""Deputy"" OR t1.policy_type_code  =  ""Uniform""";"ВЫБРАТЬ РАЗЛИЧНЫЕ t2.описание ИЗ документ.полис КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.клиенты КАК t2 ПО t1.клиент = t2.ссылка ГДЕ t1.видполиса = ""Deputy"" ИЛИ t1.видполиса = ""Uniform"""
1535;SELECT customer_details FROM customers UNION SELECT staff_details FROM staff;ВЫБРАТЬ customer_details ИЗ справочник.клиенты ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ staff_details ИЗ справочник.сотрудники
1536;SELECT customer_details FROM customers UNION SELECT staff_details FROM staff;ВЫБРАТЬ customer_details ИЗ справочник.клиенты ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ staff_details ИЗ справочник.сотрудники
1537;SELECT policy_type_code ,  count(*) FROM policies GROUP BY policy_type_code;ВЫБРАТЬ видполиса , КОЛИЧЕСТВО(*) ИЗ документ.полис СГРУППИРОВАТЬ ПО видполиса
1538;SELECT policy_type_code ,  count(*) FROM policies GROUP BY policy_type_code;ВЫБРАТЬ видполиса , КОЛИЧЕСТВО(*) ИЗ документ.полис СГРУППИРОВАТЬ ПО видполиса
1539;SELECT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id GROUP BY t2.customer_details ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 t2.описание ИЗ документ.полис КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.клиенты КАК t2 ПО t1.клиент = t2.ссылка СГРУППИРОВАТЬ ПО t2.описание УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
1540;SELECT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id GROUP BY t2.customer_details ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 t2.описание ИЗ документ.полис КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.клиенты КАК t2 ПО t1.клиент = t2.ссылка СГРУППИРОВАТЬ ПО t2.описание УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
1541;"SELECT claim_status_description FROM claims_processing_stages WHERE claim_status_name  =  ""Open""";"ВЫБРАТЬ описаниестатуса ИЗ справочник.этапыобработкизаявок ГДЕ наименованиестатуса = ""Open"""
1542;"SELECT claim_status_description FROM claims_processing_stages WHERE claim_status_name  =  ""Open""";"ВЫБРАТЬ описаниестатуса ИЗ справочник.этапыобработкизаявок ГДЕ наименованиестатуса = ""Open"""
1543;SELECT count(DISTINCT claim_outcome_code) FROM claims_processing;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ результат) ИЗ регистрсведений.обработказаявок
1544;SELECT count(DISTINCT claim_outcome_code) FROM claims_processing;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ результат) ИЗ регистрсведений.обработказаявок
1545;SELECT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.start_date  =  (SELECT max(start_date) FROM policies);ВЫБРАТЬ t2.описание ИЗ документ.полис КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.клиенты КАК t2 ПО t1.клиент = t2.ссылка ГДЕ t1.датаначала = (ВЫБРАТЬ МАКСИМУМ(start_date) ИЗ документ.полис)
1546;SELECT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.start_date  =  (SELECT max(start_date) FROM policies);ВЫБРАТЬ t2.описание ИЗ документ.полис КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.клиенты КАК t2 ПО t1.клиент = t2.ссылка ГДЕ t1.датаначала = (ВЫБРАТЬ МАКСИМУМ(start_date) ИЗ документ.полис)
1547;SELECT count(*) FROM Accounts;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.счета
1548;SELECT count(*) FROM Accounts;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.счета
1549;SELECT count(DISTINCT customer_id) FROM Accounts;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ клиент) ИЗ справочник.счета
1550;SELECT count(DISTINCT customer_id) FROM Accounts;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ клиент) ИЗ справочник.счета
1551;SELECT account_id ,  date_account_opened ,  account_name ,  other_account_details FROM Accounts;ВЫБРАТЬ ссылка , датаоткрытия , наименование , прочее ИЗ справочник.счета
1552;SELECT account_id ,  date_account_opened ,  account_name ,  other_account_details FROM Accounts;ВЫБРАТЬ ссылка , датаоткрытия , наименование , прочее ИЗ справочник.счета
1553;SELECT T1.account_id ,  T1.date_account_opened ,  T1.account_name ,  T1.other_account_details FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_first_name  =  'Meaghan';"ВЫБРАТЬ T1.ссылка , T1.датаоткрытия , T1.наименование , T1.прочее ИЗ справочник.счета КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.клиенты КАК T2 ПО T1.клиент = T2.ссылка ГДЕ T2.имя = ""Meaghan"""
1554;SELECT T1.account_id ,  T1.date_account_opened ,  T1.account_name ,  T1.other_account_details FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_first_name  =  'Meaghan';"ВЫБРАТЬ T1.ссылка , T1.датаоткрытия , T1.наименование , T1.прочее ИЗ справочник.счета КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.клиенты КАК T2 ПО T1.клиент = T2.ссылка ГДЕ T2.имя = ""Meaghan"""
1555;"SELECT T1.account_name ,  T1.other_account_details FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_first_name  =  ""Meaghan"" AND T2.customer_last_name  =  ""Keeling""";"ВЫБРАТЬ T1.наименование , T1.прочее ИЗ справочник.счета КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.клиенты КАК T2 ПО T1.клиент = T2.ссылка ГДЕ T2.имя = ""Meaghan"" И T2.фамилия = ""Keeling"""
1556;"SELECT T1.account_name ,  T1.other_account_details FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_first_name  =  ""Meaghan"" AND T2.customer_last_name  =  ""Keeling""";"ВЫБРАТЬ T1.наименование , T1.прочее ИЗ справочник.счета КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.клиенты КАК T2 ПО T1.клиент = T2.ссылка ГДЕ T2.имя = ""Meaghan"" И T2.фамилия = ""Keeling"""
1557;"SELECT T2.customer_first_name ,  T2.customer_last_name FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.account_name  =  ""900""";"ВЫБРАТЬ T2.имя , T2.фамилия ИЗ справочник.счета КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.клиенты КАК T2 ПО T1.клиент = T2.ссылка ГДЕ T1.наименование = ""900"""
1558;"SELECT T2.customer_first_name ,  T2.customer_last_name FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.account_name  =  ""900""";"ВЫБРАТЬ T2.имя , T2.фамилия ИЗ справочник.счета КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.клиенты КАК T2 ПО T1.клиент = T2.ссылка ГДЕ T1.наименование = ""900"""
1559;SELECT count(*) FROM Customers WHERE customer_id NOT IN (SELECT customer_id FROM Accounts);ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.клиенты ГДЕ customer_id НЕ В (ВЫБРАТЬ customer_id ИЗ справочник.счета)
1560;SELECT count(*) FROM Customers WHERE customer_id NOT IN (SELECT customer_id FROM Accounts);ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.клиенты ГДЕ customer_id НЕ В (ВЫБРАТЬ customer_id ИЗ справочник.счета)
1561;SELECT DISTINCT T1.customer_first_name ,  T1.customer_last_name ,  T1.phone_number FROM Customers AS T1 JOIN Accounts AS T2 ON T1.customer_id  =  T2.customer_id;ВЫБРАТЬ РАЗЛИЧНЫЕ T1.имя , T1.фамилия , T1.телефон ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.счета КАК T2 ПО T1.ссылка = T2.клиент
1562;SELECT DISTINCT T1.customer_first_name ,  T1.customer_last_name ,  T1.phone_number FROM Customers AS T1 JOIN Accounts AS T2 ON T1.customer_id  =  T2.customer_id;ВЫБРАТЬ РАЗЛИЧНЫЕ T1.имя , T1.фамилия , T1.телефон ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.счета КАК T2 ПО T1.ссылка = T2.клиент
1565;SELECT count(*) ,  customer_id FROM Accounts GROUP BY customer_id;ВЫБРАТЬ КОЛИЧЕСТВО(*) , клиент ИЗ справочник.счета СГРУППИРОВАТЬ ПО клиент
1566;SELECT count(*) ,  customer_id FROM Accounts GROUP BY customer_id;ВЫБРАТЬ КОЛИЧЕСТВО(*) , клиент ИЗ справочник.счета СГРУППИРОВАТЬ ПО клиент
1567;SELECT T1.customer_id ,  T2.customer_first_name ,  T2.customer_last_name FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.клиент , T2.имя , T2.фамилия ИЗ справочник.счета КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.клиенты КАК T2 ПО T1.клиент = T2.ссылка СГРУППИРОВАТЬ ПО T1.клиент УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
1568;SELECT T1.customer_id ,  T2.customer_first_name ,  T2.customer_last_name FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.клиент , T2.имя , T2.фамилия ИЗ справочник.счета КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.клиенты КАК T2 ПО T1.клиент = T2.ссылка СГРУППИРОВАТЬ ПО T1.клиент УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
1569;SELECT T1.customer_id ,  T2.customer_first_name ,  T2.customer_last_name ,  count(*) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id;ВЫБРАТЬ T1.клиент , T2.имя , T2.фамилия , КОЛИЧЕСТВО(*) ИЗ справочник.счета КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.клиенты КАК T2 ПО T1.клиент = T2.ссылка СГРУППИРОВАТЬ ПО T1.клиент
1570;SELECT T1.customer_id ,  T2.customer_first_name ,  T2.customer_last_name ,  count(*) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id;ВЫБРАТЬ T1.клиент , T2.имя , T2.фамилия , КОЛИЧЕСТВО(*) ИЗ справочник.счета КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.клиенты КАК T2 ПО T1.клиент = T2.ссылка СГРУППИРОВАТЬ ПО T1.клиент
1571;SELECT T2.customer_first_name ,  T1.customer_id FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >=  2;ВЫБРАТЬ T2.имя , T1.клиент ИЗ справочник.счета КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.клиенты КАК T2 ПО T1.клиент = T2.ссылка СГРУППИРОВАТЬ ПО T1.клиент ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
1572;SELECT T2.customer_first_name ,  T1.customer_id FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >=  2;ВЫБРАТЬ T2.имя , T1.клиент ИЗ справочник.счета КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.клиенты КАК T2 ПО T1.клиент = T2.ссылка СГРУППИРОВАТЬ ПО T1.клиент ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
1573;SELECT count(*) FROM Customers;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.клиенты
1574;SELECT count(*) FROM Customers;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.клиенты
1575;SELECT gender ,  count(*) FROM Customers GROUP BY gender;ВЫБРАТЬ пол , КОЛИЧЕСТВО(*) ИЗ справочник.клиенты СГРУППИРОВАТЬ ПО пол
1576;SELECT gender ,  count(*) FROM Customers GROUP BY gender;ВЫБРАТЬ пол , КОЛИЧЕСТВО(*) ИЗ справочник.клиенты СГРУППИРОВАТЬ ПО пол
1577;SELECT count(*) FROM Financial_transactions;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.движениясредств
1578;SELECT count(*) FROM Financial_transactions;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.движениясредств
1579;SELECT count(*) ,  account_id FROM Financial_transactions;ВЫБРАТЬ КОЛИЧЕСТВО(*) , счет ИЗ регистрсведений.движениясредств
1580;SELECT count(*) ,  account_id FROM Financial_transactions;ВЫБРАТЬ КОЛИЧЕСТВО(*) , счет ИЗ регистрсведений.движениясредств
1581;"SELECT count(*) FROM Financial_transactions AS T1 JOIN Accounts AS T2 ON T1.account_id  =  T2.account_id WHERE T2.account_name  =  ""337""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.движениясредств КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.счета КАК T2 ПО T1.счет = T2.ссылка ГДЕ T2.наименование = ""337"""
1582;"SELECT count(*) FROM Financial_transactions AS T1 JOIN Accounts AS T2 ON T1.account_id  =  T2.account_id WHERE T2.account_name  =  ""337""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.движениясредств КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.счета КАК T2 ПО T1.счет = T2.ссылка ГДЕ T2.наименование = ""337"""
1583;SELECT avg(transaction_amount) ,  min(transaction_amount) ,  max(transaction_amount) ,   sum(transaction_amount) FROM Financial_transactions;ВЫБРАТЬ СРЕДНЕЕ(сумма) , МИНИМУМ(сумма) , МАКСИМУМ(сумма) , СУММА(сумма) ИЗ регистрсведений.движениясредств
1584;SELECT avg(transaction_amount) ,  min(transaction_amount) ,  max(transaction_amount) ,   sum(transaction_amount) FROM Financial_transactions;ВЫБРАТЬ СРЕДНЕЕ(сумма) , МИНИМУМ(сумма) , МАКСИМУМ(сумма) , СУММА(сумма) ИЗ регистрсведений.движениясредств
1585;SELECT transaction_id FROM Financial_transactions WHERE transaction_amount  >  (SELECT avg(transaction_amount) FROM Financial_transactions);ВЫБРАТЬ transaction_id ИЗ регистрсведений.движениясредств ГДЕ transaction_amount > (ВЫБРАТЬ СРЕДНЕЕ(transaction_amount) ИЗ регистрсведений.движениясредств)
1586;SELECT transaction_id FROM Financial_transactions WHERE transaction_amount  >  (SELECT avg(transaction_amount) FROM Financial_transactions);ВЫБРАТЬ transaction_id ИЗ регистрсведений.движениясредств ГДЕ transaction_amount > (ВЫБРАТЬ СРЕДНЕЕ(transaction_amount) ИЗ регистрсведений.движениясредств)
1587;SELECT transaction_type ,  sum(transaction_amount) FROM Financial_transactions GROUP BY transaction_type;ВЫБРАТЬ типоперации , СУММА(сумма) ИЗ регистрсведений.движениясредств СГРУППИРОВАТЬ ПО типоперации
1588;SELECT transaction_type ,  sum(transaction_amount) FROM Financial_transactions GROUP BY transaction_type;ВЫБРАТЬ типоперации , СУММА(сумма) ИЗ регистрсведений.движениясредств СГРУППИРОВАТЬ ПО типоперации
1589;SELECT T2.account_name ,  T1.account_id ,  count(*) FROM Financial_transactions AS T1 JOIN Accounts AS T2 ON T1.account_id  =  T2.account_id GROUP BY T1.account_id;ВЫБРАТЬ T2.наименование , T1.счет , КОЛИЧЕСТВО(*) ИЗ регистрсведений.движениясредств КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.счета КАК T2 ПО T1.счет = T2.ссылка СГРУППИРОВАТЬ ПО T1.счет
1590;SELECT T2.account_name ,  T1.account_id ,  count(*) FROM Financial_transactions AS T1 JOIN Accounts AS T2 ON T1.account_id  =  T2.account_id GROUP BY T1.account_id;ВЫБРАТЬ T2.наименование , T1.счет , КОЛИЧЕСТВО(*) ИЗ регистрсведений.движениясредств КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.счета КАК T2 ПО T1.счет = T2.ссылка СГРУППИРОВАТЬ ПО T1.счет
1591;SELECT account_id FROM Financial_transactions GROUP BY account_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 счет ИЗ регистрсведений.движениясредств СГРУППИРОВАТЬ ПО счет УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
1592;SELECT account_id FROM Financial_transactions GROUP BY account_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 счет ИЗ регистрсведений.движениясредств СГРУППИРОВАТЬ ПО счет УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
1593;SELECT T1.account_id ,  T2.account_name FROM Financial_transactions AS T1 JOIN Accounts AS T2 ON T1.account_id  =  T2.account_id GROUP BY T1.account_id HAVING count(*)  >=  4;ВЫБРАТЬ T1.счет , T2.наименование ИЗ регистрсведений.движениясредств КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.счета КАК T2 ПО T1.счет = T2.ссылка СГРУППИРОВАТЬ ПО T1.счет ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 4
1594;SELECT T1.account_id ,  T2.account_name FROM Financial_transactions AS T1 JOIN Accounts AS T2 ON T1.account_id  =  T2.account_id GROUP BY T1.account_id HAVING count(*)  >=  4;ВЫБРАТЬ T1.счет , T2.наименование ИЗ регистрсведений.движениясредств КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.счета КАК T2 ПО T1.счет = T2.ссылка СГРУППИРОВАТЬ ПО T1.счет ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 4
1595;SELECT DISTINCT product_size FROM Products;ВЫБРАТЬ РАЗЛИЧНЫЕ размер ИЗ справочник.товары
1596;SELECT DISTINCT product_size FROM Products;ВЫБРАТЬ РАЗЛИЧНЫЕ размер ИЗ справочник.товары
1597;SELECT DISTINCT product_color FROM Products;ВЫБРАТЬ РАЗЛИЧНЫЕ цветстрокой ИЗ справочник.товары
1598;SELECT DISTINCT product_color FROM Products;ВЫБРАТЬ РАЗЛИЧНЫЕ цветстрокой ИЗ справочник.товары
1599;SELECT invoice_number ,  count(*) FROM Financial_transactions GROUP BY invoice_number;ВЫБРАТЬ счетдокумент , КОЛИЧЕСТВО(*) ИЗ регистрсведений.движениясредств СГРУППИРОВАТЬ ПО счетдокумент
1600;SELECT invoice_number ,  count(*) FROM Financial_transactions GROUP BY invoice_number;ВЫБРАТЬ счетдокумент , КОЛИЧЕСТВО(*) ИЗ регистрсведений.движениясредств СГРУППИРОВАТЬ ПО счетдокумент
1601;SELECT T2.invoice_number ,  T2.invoice_date FROM Financial_transactions AS T1 JOIN Invoices AS T2 ON T1.invoice_number  =  T2.invoice_number GROUP BY T1.invoice_number ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.ссылка , T2.датасчета ИЗ регистрсведений.движениясредств КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.счет КАК T2 ПО T1.счетдокумент = T2.ссылка СГРУППИРОВАТЬ ПО T1.счетдокумент УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
1602;SELECT T2.invoice_number ,  T2.invoice_date FROM Financial_transactions AS T1 JOIN Invoices AS T2 ON T1.invoice_number  =  T2.invoice_number GROUP BY T1.invoice_number ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.ссылка , T2.датасчета ИЗ регистрсведений.движениясредств КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.счет КАК T2 ПО T1.счетдокумент = T2.ссылка СГРУППИРОВАТЬ ПО T1.счетдокумент УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
1603;SELECT count(*) FROM Invoices;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ документ.счет
1604;SELECT count(*) FROM Invoices;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ документ.счет
1605;SELECT T1.invoice_date ,  T1.order_id ,  T2.order_details FROM Invoices AS T1 JOIN Orders AS T2 ON T1.order_id  =  T2.order_id;ВЫБРАТЬ T1.датасчета , T1.заказ , T2.детали ИЗ документ.счет КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.заказ КАК T2 ПО T1.заказ = T2.ссылка
1606;SELECT T1.invoice_date ,  T1.order_id ,  T2.order_details FROM Invoices AS T1 JOIN Orders AS T2 ON T1.order_id  =  T2.order_id;ВЫБРАТЬ T1.датасчета , T1.заказ , T2.детали ИЗ документ.счет КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.заказ КАК T2 ПО T1.заказ = T2.ссылка
1607;SELECT order_id ,  count(*) FROM Invoices GROUP BY order_id;ВЫБРАТЬ заказ , КОЛИЧЕСТВО(*) ИЗ документ.счет СГРУППИРОВАТЬ ПО заказ
1608;SELECT order_id ,  count(*) FROM Invoices GROUP BY order_id;ВЫБРАТЬ заказ , КОЛИЧЕСТВО(*) ИЗ документ.счет СГРУППИРОВАТЬ ПО заказ
1609;SELECT T2.order_id ,  T2.order_details FROM Invoices AS T1 JOIN Orders AS T2 ON T1.order_id  =  T2.order_id GROUP BY T2.order_id HAVING count(*)  >  2;ВЫБРАТЬ T2.ссылка , T2.детали ИЗ документ.счет КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.заказ КАК T2 ПО T1.заказ = T2.ссылка СГРУППИРОВАТЬ ПО T2.ссылка ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 2
1610;SELECT T2.order_id ,  T2.order_details FROM Invoices AS T1 JOIN Orders AS T2 ON T1.order_id  =  T2.order_id GROUP BY T2.order_id HAVING count(*)  >  2;ВЫБРАТЬ T2.ссылка , T2.детали ИЗ документ.счет КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.заказ КАК T2 ПО T1.заказ = T2.ссылка СГРУППИРОВАТЬ ПО T2.ссылка ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 2
1611;SELECT T2.customer_last_name ,  T1.customer_id ,  T2.phone_number FROM Orders AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.фамилия , T1.клиент , T2.телефон ИЗ документ.заказ КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.клиенты КАК T2 ПО T1.клиент = T2.ссылка СГРУППИРОВАТЬ ПО T1.клиент УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
1612;SELECT T2.customer_last_name ,  T1.customer_id ,  T2.phone_number FROM Orders AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.фамилия , T1.клиент , T2.телефон ИЗ документ.заказ КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.клиенты КАК T2 ПО T1.клиент = T2.ссылка СГРУППИРОВАТЬ ПО T1.клиент УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
1615;SELECT T2.product_name ,  sum(T1.product_quantity) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id  =  T2.product_id GROUP BY T2.product_name;ВЫБРАТЬ T2.наименование , СУММА(T1.количество) ИЗ табличнаячасть.заказанныетовары КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.товары КАК T2 ПО T1.товар = T2.ссылка СГРУППИРОВАТЬ ПО T2.наименование
1616;SELECT T2.product_name ,  sum(T1.product_quantity) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id  =  T2.product_id GROUP BY T2.product_name;ВЫБРАТЬ T2.наименование , СУММА(T1.количество) ИЗ табличнаячасть.заказанныетовары КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.товары КАК T2 ПО T1.товар = T2.ссылка СГРУППИРОВАТЬ ПО T2.наименование
1617;SELECT order_id ,  count(*) FROM Order_items GROUP BY order_id;ВЫБРАТЬ заказ , КОЛИЧЕСТВО(*) ИЗ табличнаячасть.заказанныетовары СГРУППИРОВАТЬ ПО заказ
1618;SELECT order_id ,  count(*) FROM Order_items GROUP BY order_id;ВЫБРАТЬ заказ , КОЛИЧЕСТВО(*) ИЗ табличнаячасть.заказанныетовары СГРУППИРОВАТЬ ПО заказ
1619;SELECT product_id ,  count(DISTINCT order_id) FROM Order_items GROUP BY product_id;ВЫБРАТЬ товар , КОЛИЧЕСТВО(РАЗЛИЧНЫЕ заказ) ИЗ табличнаячасть.заказанныетовары СГРУППИРОВАТЬ ПО товар
1620;SELECT product_id ,  count(DISTINCT order_id) FROM Order_items GROUP BY product_id;ВЫБРАТЬ товар , КОЛИЧЕСТВО(РАЗЛИЧНЫЕ заказ) ИЗ табличнаячасть.заказанныетовары СГРУППИРОВАТЬ ПО товар
1621;SELECT T2.product_name ,  count(*) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id  =  T2.product_id JOIN Orders AS T3 ON T3.order_id  =  T1.order_id GROUP BY T2.product_name;ВЫБРАТЬ T2.наименование , КОЛИЧЕСТВО(*) ИЗ табличнаячасть.заказанныетовары КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.товары КАК T2 ПО T1.товар = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.заказ КАК T3 ПО T3.ссылка = T1.заказ СГРУППИРОВАТЬ ПО T2.наименование
1622;SELECT T2.product_name ,  count(*) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id  =  T2.product_id JOIN Orders AS T3 ON T3.order_id  =  T1.order_id GROUP BY T2.product_name;ВЫБРАТЬ T2.наименование , КОЛИЧЕСТВО(*) ИЗ табличнаячасть.заказанныетовары КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.товары КАК T2 ПО T1.товар = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.заказ КАК T3 ПО T3.ссылка = T1.заказ СГРУППИРОВАТЬ ПО T2.наименование
1623;SELECT order_id ,  count(DISTINCT product_id) FROM Order_items GROUP BY order_id;ВЫБРАТЬ заказ , КОЛИЧЕСТВО(РАЗЛИЧНЫЕ товар) ИЗ табличнаячасть.заказанныетовары СГРУППИРОВАТЬ ПО заказ
1624;SELECT order_id ,  count(DISTINCT product_id) FROM Order_items GROUP BY order_id;ВЫБРАТЬ заказ , КОЛИЧЕСТВО(РАЗЛИЧНЫЕ товар) ИЗ табличнаячасть.заказанныетовары СГРУППИРОВАТЬ ПО заказ
1625;SELECT order_id ,  sum(product_quantity) FROM Order_items GROUP BY order_id;ВЫБРАТЬ заказ , СУММА(количество) ИЗ табличнаячасть.заказанныетовары СГРУППИРОВАТЬ ПО заказ
1626;SELECT order_id ,  sum(product_quantity) FROM Order_items GROUP BY order_id;ВЫБРАТЬ заказ , СУММА(количество) ИЗ табличнаячасть.заказанныетовары СГРУППИРОВАТЬ ПО заказ
1627;SELECT count(*) FROM products WHERE product_id NOT IN ( SELECT product_id FROM Order_items );ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.товары ГДЕ product_id НЕ В ( ВЫБРАТЬ product_id ИЗ табличнаячасть.заказанныетовары )
1628;SELECT count(*) FROM products WHERE product_id NOT IN ( SELECT product_id FROM Order_items );ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.товары ГДЕ product_id НЕ В ( ВЫБРАТЬ product_id ИЗ табличнаячасть.заказанныетовары )
1629;SELECT count(*) FROM Church WHERE Open_Date  <  1850;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.церкви ГДЕ датаоткрытия < 1850
1630;SELECT name ,  open_date ,  organized_by FROM Church;ВЫБРАТЬ наименование , датаоткрытия , организованакем ИЗ справочник.церкви
1631;SELECT name FROM church ORDER BY open_date DESC;ВЫБРАТЬ наименование ИЗ справочник.церкви УПОРЯДОЧИТЬ ПО датаоткрытия УБЫВ
1632;SELECT open_date FROM church GROUP BY open_date HAVING count(*)  >=  2;ВЫБРАТЬ датаоткрытия ИЗ справочник.церкви СГРУППИРОВАТЬ ПО датаоткрытия ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
1633;SELECT organized_by ,  name FROM church WHERE open_date BETWEEN 1830 AND 1840;ВЫБРАТЬ организованакем , наименование ИЗ справочник.церкви ГДЕ датаоткрытия МЕЖДУ 1830 И 1840
1634;SELECT open_date ,  count(*) FROM church GROUP BY open_date;ВЫБРАТЬ датаоткрытия , КОЛИЧЕСТВО(*) ИЗ справочник.церкви СГРУППИРОВАТЬ ПО датаоткрытия
1635;SELECT name ,  open_date FROM church ORDER BY open_date DESC LIMIT 3;ВЫБРАТЬ ПЕРВЫЕ 3 наименование , датаоткрытия ИЗ справочник.церкви УПОРЯДОЧИТЬ ПО датаоткрытия УБЫВ
1636;SELECT count(*) FROM people WHERE is_male  =  'F' AND age  >  30;"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.люди ГДЕ полмужской = ""F"" И возраст > 30"
1638;SELECT min(age) ,  max(age) ,  avg(age) FROM people;ВЫБРАТЬ МИНИМУМ(возраст) , МАКСИМУМ(возраст) , СРЕДНЕЕ(возраст) ИЗ справочник.люди
1639;SELECT name ,  country FROM people WHERE age  <  (SELECT avg(age) FROM people);ВЫБРАТЬ name , country ИЗ справочник.люди ГДЕ age < (ВЫБРАТЬ СРЕДНЕЕ(age) ИЗ справочник.люди)
1640;SELECT T2.name ,  T3.name FROM wedding AS T1 JOIN people AS T2 ON T1.male_id  =  T2.people_id JOIN people AS T3 ON T1.female_id  =  T3.people_id WHERE T1.year  >  2014;ВЫБРАТЬ T2.наименование , T3.наименование ИЗ регистрсведений.браки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.люди КАК T2 ПО T1.муж = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.люди КАК T3 ПО T1.жена = T3.ссылка ГДЕ T1.год > 2014
1641;SELECT name ,  age FROM people WHERE is_male  =  'T' AND people_id NOT IN (SELECT male_id FROM wedding);"ВЫБРАТЬ name , age ИЗ справочник.люди ГДЕ is_male = ""T"" И people_id НЕ В (ВЫБРАТЬ male_id ИЗ регистрсведений.браки)"
1643;SELECT T1.name FROM church AS T1 JOIN wedding AS T2 ON T1.church_id  =  T2.church_id GROUP BY T1.church_id HAVING count(*)  >=  2;ВЫБРАТЬ T1.наименование ИЗ справочник.церкви КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.браки КАК T2 ПО T1.ссылка = T2.церковь СГРУППИРОВАТЬ ПО T1.ссылка ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
1644;SELECT T2.name FROM wedding AS T1 JOIN people AS T2 ON T1.female_id  =  T2.people_id WHERE T1.year  =  2016 AND T2.is_male  =  'F' AND T2.country  =  'Canada';"ВЫБРАТЬ T2.наименование ИЗ регистрсведений.браки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.люди КАК T2 ПО T1.жена = T2.ссылка ГДЕ T1.год = 2016 И T2.полмужской = ""F"" И T2.страна = ""Canada"""
1645;SELECT count(*) FROM wedding WHERE YEAR  =  2016;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.браки ГДЕ год = 2016
1646;SELECT T4.name FROM wedding AS T1 JOIN people AS T2 ON T1.male_id  =  T2.people_id JOIN people AS T3 ON T1.female_id  =  T3.people_id JOIN church AS T4 ON T4.church_id  =  T1.church_id WHERE T2.age  >  30 OR T3.age  >  30;ВЫБРАТЬ T4.наименование ИЗ регистрсведений.браки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.люди КАК T2 ПО T1.муж = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.люди КАК T3 ПО T1.жена = T3.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.церкви КАК T4 ПО T4.ссылка = T1.церковь ГДЕ T2.возраст > 30 ИЛИ T3.возраст > 30
1647;SELECT country ,  count(*) FROM people GROUP BY country;ВЫБРАТЬ страна , КОЛИЧЕСТВО(*) ИЗ справочник.люди СГРУППИРОВАТЬ ПО страна
1648;SELECT COUNT (DISTINCT church_id) FROM wedding WHERE YEAR  =  2016;ВЫБРАТЬ КОЛИЧЕСТВО (РАЗЛИЧНЫЕ церковь) ИЗ регистрсведений.браки ГДЕ год = 2016
1649;SELECT count(*) FROM artist;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.художники
1650;SELECT count(*) FROM artist;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.художники
1651;SELECT name ,  age ,  country FROM artist ORDER BY Year_Join;ВЫБРАТЬ наименование , возраст , страна ИЗ справочник.художники УПОРЯДОЧИТЬ ПО годприсоединения
1652;SELECT name ,  age ,  country FROM artist ORDER BY Year_Join;ВЫБРАТЬ наименование , возраст , страна ИЗ справочник.художники УПОРЯДОЧИТЬ ПО годприсоединения
1653;SELECT DISTINCT country FROM artist;ВЫБРАТЬ РАЗЛИЧНЫЕ страна ИЗ справочник.художники
1654;SELECT DISTINCT country FROM artist;ВЫБРАТЬ РАЗЛИЧНЫЕ страна ИЗ справочник.художники
1655;SELECT name ,  year_join FROM artist WHERE country != 'United States';"ВЫБРАТЬ name , year_join ИЗ справочник.художники ГДЕ country <> ""United States"""
1656;SELECT name ,  year_join FROM artist WHERE country != 'United States';"ВЫБРАТЬ name , year_join ИЗ справочник.художники ГДЕ country <> ""United States"""
1657;SELECT count(*) FROM artist WHERE age  >  46 AND year_join  >  1990;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.художники ГДЕ возраст > 46 И годприсоединения > 1990
1658;SELECT count(*) FROM artist WHERE age  >  46 AND year_join  >  1990;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.художники ГДЕ возраст > 46 И годприсоединения > 1990
1659;SELECT avg(age) ,  min(age) FROM artist WHERE country  =  'United States';"ВЫБРАТЬ СРЕДНЕЕ(возраст) , МИНИМУМ(возраст) ИЗ справочник.художники ГДЕ страна = ""United States"""
1660;SELECT avg(age) ,  min(age) FROM artist WHERE country  =  'United States';"ВЫБРАТЬ СРЕДНЕЕ(возраст) , МИНИМУМ(возраст) ИЗ справочник.художники ГДЕ страна = ""United States"""
1661;SELECT name FROM artist ORDER BY year_join DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 name ИЗ справочник.художники УПОРЯДОЧИТЬ ПО year_join УБЫВ
1662;SELECT name FROM artist ORDER BY year_join DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 name ИЗ справочник.художники УПОРЯДОЧИТЬ ПО year_join УБЫВ
1663;SELECT count(*) FROM exhibition WHERE YEAR  >=  2005;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.выставки ГДЕ год >= 2005
1664;SELECT count(*) FROM exhibition WHERE YEAR  >=  2005;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.выставки ГДЕ год >= 2005
1665;SELECT theme ,  YEAR FROM exhibition WHERE ticket_price  <  15;ВЫБРАТЬ тема , год FROM exhibition ГДЕ ценабилета < 15
1666;SELECT theme ,  YEAR FROM exhibition WHERE ticket_price  <  15;ВЫБРАТЬ тема , год FROM exhibition ГДЕ ценабилета < 15
1667;SELECT T2.name ,  count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id  =  T2.artist_id GROUP BY T1.artist_id;ВЫБРАТЬ T2.наименование , КОЛИЧЕСТВО(*) ИЗ справочник.выставки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.художники КАК T2 ПО T1.художник = T2.ссылка СГРУППИРОВАТЬ ПО T1.художник
1668;SELECT T2.name ,  count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id  =  T2.artist_id GROUP BY T1.artist_id;ВЫБРАТЬ T2.наименование , КОЛИЧЕСТВО(*) ИЗ справочник.выставки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.художники КАК T2 ПО T1.художник = T2.ссылка СГРУППИРОВАТЬ ПО T1.художник
1669;SELECT T2.name , T2.country FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id  =  T2.artist_id GROUP BY T1.artist_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.наименование , T2.страна ИЗ справочник.выставки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.художники КАК T2 ПО T1.художник = T2.ссылка СГРУППИРОВАТЬ ПО T1.художник УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
1670;SELECT T2.name , T2.country FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id  =  T2.artist_id GROUP BY T1.artist_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.наименование , T2.страна ИЗ справочник.выставки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.художники КАК T2 ПО T1.художник = T2.ссылка СГРУППИРОВАТЬ ПО T1.художник УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
1671;SELECT name FROM artist WHERE artist_id NOT IN (SELECT artist_id FROM exhibition);ВЫБРАТЬ name ИЗ справочник.художники ГДЕ artist_id НЕ В (ВЫБРАТЬ artist_id ИЗ справочник.выставки)
1672;SELECT name FROM artist WHERE artist_id NOT IN (SELECT artist_id FROM exhibition);ВЫБРАТЬ name ИЗ справочник.художники ГДЕ artist_id НЕ В (ВЫБРАТЬ artist_id ИЗ справочник.выставки)
1673;SELECT T1.theme ,  T2.name FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id  =  T2.artist_id WHERE T1.ticket_price  >  (SELECT avg(ticket_price) FROM exhibition);ВЫБРАТЬ T1.тема , T2.наименование ИЗ справочник.выставки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.художники КАК T2 ПО T1.художник = T2.ссылка ГДЕ T1.ценабилета > (ВЫБРАТЬ СРЕДНЕЕ(ticket_price) ИЗ справочник.выставки)
1674;SELECT T1.theme ,  T2.name FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id  =  T2.artist_id WHERE T1.ticket_price  >  (SELECT avg(ticket_price) FROM exhibition);ВЫБРАТЬ T1.тема , T2.наименование ИЗ справочник.выставки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.художники КАК T2 ПО T1.художник = T2.ссылка ГДЕ T1.ценабилета > (ВЫБРАТЬ СРЕДНЕЕ(ticket_price) ИЗ справочник.выставки)
1675;SELECT avg(ticket_price) ,  min(ticket_price) ,  max(ticket_price) FROM exhibition WHERE YEAR  <  2009;ВЫБРАТЬ СРЕДНЕЕ(ценабилета) , МИНИМУМ(ценабилета) , МАКСИМУМ(ценабилета) ИЗ справочник.выставки ГДЕ год < 2009
1676;SELECT avg(ticket_price) ,  min(ticket_price) ,  max(ticket_price) FROM exhibition WHERE YEAR  <  2009;ВЫБРАТЬ СРЕДНЕЕ(ценабилета) , МИНИМУМ(ценабилета) , МАКСИМУМ(ценабилета) ИЗ справочник.выставки ГДЕ год < 2009
1677;SELECT theme ,  YEAR FROM exhibition ORDER BY ticket_price DESC;ВЫБРАТЬ тема , год FROM exhibition УПОРЯДОЧИТЬ ПО ценабилета УБЫВ
1678;SELECT theme ,  YEAR FROM exhibition ORDER BY ticket_price DESC;ВЫБРАТЬ тема , год FROM exhibition УПОРЯДОЧИТЬ ПО ценабилета УБЫВ
1679;SELECT T2.theme ,  T1.date ,  T1.attendance FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id WHERE T2.year  =  2004;ВЫБРАТЬ T2.тема , T1.дата , T1.посещаемость ИЗ регистрсведений.посещениявыставок КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.выставки КАК T2 ПО T1.выставка = T2.ссылка ГДЕ T2.год = 2004
1680;SELECT T2.theme ,  T1.date ,  T1.attendance FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id WHERE T2.year  =  2004;ВЫБРАТЬ T2.тема , T1.дата , T1.посещаемость ИЗ регистрсведений.посещениявыставок КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.выставки КАК T2 ПО T1.выставка = T2.ссылка ГДЕ T2.год = 2004
1685;SELECT count(*) FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id WHERE T1.attendance  >  100 OR T2.ticket_price  <  10;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.посещениявыставок КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.выставки КАК T2 ПО T1.выставка = T2.ссылка ГДЕ T1.посещаемость > 100 ИЛИ T2.ценабилета < 10
1686;SELECT count(*) FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id WHERE T1.attendance  >  100 OR T2.ticket_price  <  10;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.посещениявыставок КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.выставки КАК T2 ПО T1.выставка = T2.ссылка ГДЕ T1.посещаемость > 100 ИЛИ T2.ценабилета < 10
1687;SELECT T3.name FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id JOIN artist AS T3 ON T3.artist_id  =  T2.artist_id GROUP BY T3.artist_id HAVING avg(T1.attendance)  >  200;ВЫБРАТЬ T3.наименование ИЗ регистрсведений.посещениявыставок КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.выставки КАК T2 ПО T1.выставка = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.художники КАК T3 ПО T3.ссылка = T2.художник СГРУППИРОВАТЬ ПО T3.ссылка ИМЕЮЩИЕ СРЕДНЕЕ(T1.посещаемость) > 200
1688;SELECT T3.name FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id JOIN artist AS T3 ON T3.artist_id  =  T2.artist_id GROUP BY T3.artist_id HAVING avg(T1.attendance)  >  200;ВЫБРАТЬ T3.наименование ИЗ регистрсведений.посещениявыставок КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.выставки КАК T2 ПО T1.выставка = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.художники КАК T3 ПО T3.ссылка = T2.художник СГРУППИРОВАТЬ ПО T3.ссылка ИМЕЮЩИЕ СРЕДНЕЕ(T1.посещаемость) > 200
1689;"SELECT i_id FROM item WHERE title  =  ""orange""";"ВЫБРАТЬ ссылка ИЗ справочник.товары ГДЕ наименование = ""orange"""
1690;SELECT * FROM item;ВЫБРАТЬ * ИЗ справочник.товары
1691;SELECT count(*) FROM review;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.пользователи
1692;SELECT count(*) FROM useracct;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.отзывы
1693;SELECT avg(rating) ,  max(rating) FROM review;ВЫБРАТЬ СРЕДНЕЕ(rating) , МАКСИМУМ(rating) ИЗ справочник.пользователи
1694;SELECT min(rank) FROM review;ВЫБРАТЬ МИНИМУМ(rank) ИЗ справочник.пользователи
1695;SELECT count(DISTINCT u_id) FROM review;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ наименование) ИЗ справочник.пользователи
1696;SELECT count(DISTINCT i_id) FROM review;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ i_id) ИЗ справочник.пользователи
1697;SELECT count(*) FROM item WHERE i_id NOT IN (SELECT i_id FROM review);ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.товары ГДЕ i_id НЕ В (ВЫБРАТЬ i_id ИЗ справочник.пользователи)
1698;SELECT name FROM useracct WHERE u_id NOT IN (SELECT u_id FROM review);ВЫБРАТЬ name ИЗ регистрсведений.отзывы ГДЕ u_id НЕ В (ВЫБРАТЬ u_id ИЗ справочник.пользователи)
1699;SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id  =  T2.i_id WHERE T2.rating  =  10;ВЫБРАТЬ T1.наименование ИЗ справочник.товары КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.пользователи КАК T2 ПО T1.ссылка = T2.i_id ГДЕ T2.rating = 10
1700;SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id  =  T2.i_id WHERE T2.rating  >  (SELECT avg(rating) FROM review);ВЫБРАТЬ T1.наименование ИЗ справочник.товары КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.пользователи КАК T2 ПО T1.ссылка = T2.i_id ГДЕ T2.rating > (ВЫБРАТЬ СРЕДНЕЕ(rating) ИЗ справочник.пользователи)
1701;SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id  =  T2.i_id WHERE T2.rating  <  5;ВЫБРАТЬ T1.наименование ИЗ справочник.товары КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.пользователи КАК T2 ПО T1.ссылка = T2.i_id ГДЕ T2.rating < 5
1704;SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id  =  T2.i_id GROUP BY T2.i_id ORDER BY avg(T2.rating) LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.наименование ИЗ справочник.товары КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.пользователи КАК T2 ПО T1.ссылка = T2.i_id СГРУППИРОВАТЬ ПО T2.i_id УПОРЯДОЧИТЬ ПО СРЕДНЕЕ(T2.rating)
1705;SELECT title FROM item ORDER BY title;ВЫБРАТЬ наименование ИЗ справочник.товары УПОРЯДОЧИТЬ ПО наименование
1706;SELECT T1.name FROM useracct AS T1 JOIN review AS T2 ON T1.u_id  =  T2.u_id GROUP BY T2.u_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.пользователь ИЗ регистрсведений.отзывы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.пользователи КАК T2 ПО T1.ссылка = T2.наименование СГРУППИРОВАТЬ ПО T2.наименование УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
1707;SELECT T1.title ,  T1.i_id FROM item AS T1 JOIN review AS T2 ON T1.i_id  =  T2.i_id GROUP BY T2.i_id ORDER BY avg(T2.rating) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.наименование , T1.ссылка ИЗ справочник.товары КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.пользователи КАК T2 ПО T1.ссылка = T2.i_id СГРУППИРОВАТЬ ПО T2.i_id УПОРЯДОЧИТЬ ПО СРЕДНЕЕ(T2.rating) УБЫВ
1708;SELECT T1.title ,  T1.i_id FROM item AS T1 JOIN review AS T2 ON T1.i_id  =  T2.i_id GROUP BY T2.i_id ORDER BY avg(T2.rank) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.наименование , T1.ссылка ИЗ справочник.товары КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.пользователи КАК T2 ПО T1.ссылка = T2.i_id СГРУППИРОВАТЬ ПО T2.i_id УПОРЯДОЧИТЬ ПО СРЕДНЕЕ(T2.rank) УБЫВ
1709;SELECT T1.name ,  avg(T2.rating) FROM useracct AS T1 JOIN review AS T2 ON T1.u_id  =  T2.u_id GROUP BY T2.u_id;ВЫБРАТЬ T1.пользователь , СРЕДНЕЕ(T2.rating) ИЗ регистрсведений.отзывы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.пользователи КАК T2 ПО T1.ссылка = T2.наименование СГРУППИРОВАТЬ ПО T2.наименование
1710;SELECT T1.name ,  count(*) FROM useracct AS T1 JOIN review AS T2 ON T1.u_id  =  T2.u_id GROUP BY T2.u_id;ВЫБРАТЬ T1.пользователь , КОЛИЧЕСТВО(*) ИЗ регистрсведений.отзывы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.пользователи КАК T2 ПО T1.ссылка = T2.наименование СГРУППИРОВАТЬ ПО T2.наименование
1711;SELECT T1.name FROM useracct AS T1 JOIN review AS T2 ON T1.u_id  =  T2.u_id ORDER BY T2.rating DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.пользователь ИЗ регистрсведений.отзывы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.пользователи КАК T2 ПО T1.ссылка = T2.наименование УПОРЯДОЧИТЬ ПО T2.rating УБЫВ
1712;SELECT T1.name FROM useracct AS T1 JOIN trust AS T2 ON T1.u_id  =  T2.source_u_id GROUP BY T2.source_u_id ORDER BY avg(trust) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.пользователь ИЗ регистрсведений.отзывы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.довериепользователей КАК T2 ПО T1.ссылка = T2.источник СГРУППИРОВАТЬ ПО T2.источник УПОРЯДОЧИТЬ ПО СРЕДНЕЕ(trust) УБЫВ
1713;SELECT T1.name ,  avg(trust) FROM useracct AS T1 JOIN trust AS T2 ON T1.u_id  =  T2.target_u_id GROUP BY T2.target_u_id;ВЫБРАТЬ T1.пользователь , СРЕДНЕЕ(trust) ИЗ регистрсведений.отзывы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.довериепользователей КАК T2 ПО T1.ссылка = T2.цель СГРУППИРОВАТЬ ПО T2.цель
1714;SELECT T1.name FROM useracct AS T1 JOIN trust AS T2 ON T1.u_id  =  T2.target_u_id ORDER BY trust LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.пользователь ИЗ регистрсведений.отзывы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.довериепользователей КАК T2 ПО T1.ссылка = T2.цель УПОРЯДОЧИТЬ ПО trust
1715;SELECT title FROM item WHERE i_id NOT IN (SELECT i_id FROM review);ВЫБРАТЬ title ИЗ справочник.товары ГДЕ i_id НЕ В (ВЫБРАТЬ i_id ИЗ справочник.пользователи)
1716;SELECT name FROM useracct WHERE u_id NOT IN (SELECT u_id FROM review);ВЫБРАТЬ name ИЗ регистрсведений.отзывы ГДЕ u_id НЕ В (ВЫБРАТЬ u_id ИЗ справочник.пользователи)
1717;SELECT count(*) FROM useracct WHERE u_id NOT IN (SELECT u_id FROM review);ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.отзывы ГДЕ u_id НЕ В (ВЫБРАТЬ u_id ИЗ справочник.пользователи)
1718;SELECT count(*) FROM item WHERE i_id NOT IN (SELECT i_id FROM review);ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.товары ГДЕ i_id НЕ В (ВЫБРАТЬ i_id ИЗ справочник.пользователи)
1719;SELECT count(*) FROM player;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.игроки
1720;SELECT Player_name FROM player ORDER BY Votes ASC;ВЫБРАТЬ наименование ИЗ справочник.игроки УПОРЯДОЧИТЬ ПО количествоголосов ВОЗР
1721;SELECT Gender ,  Occupation FROM player;ВЫБРАТЬ пол , профессия ИЗ справочник.игроки
1722;"SELECT Player_name ,  residence FROM player WHERE Occupation != ""Researcher""";"ВЫБРАТЬ наименование , местожительства ИЗ справочник.игроки ГДЕ профессия <> ""Researcher"""
1723;"SELECT Sponsor_name FROM player WHERE Residence  =  ""Brandon"" OR Residence  =  ""Birtle""";"ВЫБРАТЬ спонсор ИЗ справочник.игроки ГДЕ местожительства = ""Brandon"" ИЛИ местожительства = ""Birtle"""
1724;SELECT Player_name FROM player ORDER BY Votes DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование ИЗ справочник.игроки УПОРЯДОЧИТЬ ПО количествоголосов УБЫВ
1725;SELECT Occupation ,  COUNT(*) FROM player GROUP BY Occupation;ВЫБРАТЬ профессия , КОЛИЧЕСТВО(*) ИЗ справочник.игроки СГРУППИРОВАТЬ ПО профессия
1726;SELECT Occupation FROM player GROUP BY Occupation ORDER BY COUNT(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 профессия ИЗ справочник.игроки СГРУППИРОВАТЬ ПО профессия УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
1727;SELECT Residence FROM player GROUP BY Residence HAVING COUNT(*)  >=  2;ВЫБРАТЬ местожительства ИЗ справочник.игроки СГРУППИРОВАТЬ ПО местожительства ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
1728;SELECT T3.Player_name ,  T2.coach_name FROM player_coach AS T1 JOIN coach AS T2 ON T1.Coach_ID  =  T2.Coach_ID JOIN player AS T3 ON T1.Player_ID  =  T3.Player_ID;ВЫБРАТЬ T3.наименование , T2.наименование ИЗ регистрсведений.тренерыигроков КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.тренеры КАК T2 ПО T1.тренер = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.игроки КАК T3 ПО T1.игрок = T3.ссылка
1729;SELECT T3.Player_name FROM player_coach AS T1 JOIN coach AS T2 ON T1.Coach_ID  =  T2.Coach_ID JOIN player AS T3 ON T1.Player_ID  =  T3.Player_ID WHERE T2.Rank  =  1;ВЫБРАТЬ T3.наименование ИЗ регистрсведений.тренерыигроков КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.тренеры КАК T2 ПО T1.тренер = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.игроки КАК T3 ПО T1.игрок = T3.ссылка ГДЕ T2.ранг = 1
1730;SELECT T3.Player_name ,  T3.gender FROM player_coach AS T1 JOIN coach AS T2 ON T1.Coach_ID  =  T2.Coach_ID JOIN player AS T3 ON T1.Player_ID  =  T3.Player_ID WHERE T1.Starting_year  >  2011;ВЫБРАТЬ T3.наименование , T3.пол ИЗ регистрсведений.тренерыигроков КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.тренеры КАК T2 ПО T1.тренер = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.игроки КАК T3 ПО T1.игрок = T3.ссылка ГДЕ T1.годначала > 2011
1731;SELECT T3.Player_name ,  T2.coach_name FROM player_coach AS T1 JOIN coach AS T2 ON T1.Coach_ID  =  T2.Coach_ID JOIN player AS T3 ON T1.Player_ID  =  T3.Player_ID ORDER BY T3.Votes DESC;ВЫБРАТЬ T3.наименование , T2.наименование ИЗ регистрсведений.тренерыигроков КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.тренеры КАК T2 ПО T1.тренер = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.игроки КАК T3 ПО T1.игрок = T3.ссылка УПОРЯДОЧИТЬ ПО T3.количествоголосов УБЫВ
1732;SELECT Player_name FROM player WHERE Player_ID NOT IN (SELECT Player_ID FROM player_coach);ВЫБРАТЬ Player_name ИЗ справочник.игроки ГДЕ Player_ID НЕ В (ВЫБРАТЬ Player_ID ИЗ регистрсведений.тренерыигроков)
1734;SELECT T1.club_id ,  T1.club_name, count(*) FROM club AS T1 JOIN coach AS T2 ON T1.club_id  =  T2.club_id GROUP BY T1.club_id;ВЫБРАТЬ T1.ссылка , T1.наименование, КОЛИЧЕСТВО(*) ИЗ справочник.клубы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.тренеры КАК T2 ПО T1.ссылка = T2.клуб СГРУППИРОВАТЬ ПО T1.ссылка
1735;SELECT T1.club_id ,  T1.gold FROM match_result AS T1 JOIN coach AS T2 ON T1.club_id  =  T2.club_id GROUP BY T1.club_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.клуб , T1.золото ИЗ регистрсведений.результатыматчей КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.тренеры КАК T2 ПО T1.клуб = T2.клуб СГРУППИРОВАТЬ ПО T1.клуб УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
1736;SELECT count(*) FROM gymnast;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.гимнасты
1737;SELECT count(*) FROM gymnast;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.гимнасты
1738;SELECT Total_Points FROM gymnast ORDER BY Total_Points DESC;ВЫБРАТЬ общаясуммабаллов ИЗ справочник.гимнасты УПОРЯДОЧИТЬ ПО общаясуммабаллов УБЫВ
1739;SELECT Total_Points FROM gymnast ORDER BY Total_Points DESC;ВЫБРАТЬ общаясуммабаллов ИЗ справочник.гимнасты УПОРЯДОЧИТЬ ПО общаясуммабаллов УБЫВ
1740;SELECT Total_Points FROM gymnast ORDER BY Floor_Exercise_Points DESC;ВЫБРАТЬ общаясуммабаллов ИЗ справочник.гимнасты УПОРЯДОЧИТЬ ПО баллызавольныеупражнения УБЫВ
1741;SELECT Total_Points FROM gymnast ORDER BY Floor_Exercise_Points DESC;ВЫБРАТЬ общаясуммабаллов ИЗ справочник.гимнасты УПОРЯДОЧИТЬ ПО баллызавольныеупражнения УБЫВ
1742;SELECT avg(Horizontal_Bar_Points) FROM gymnast;ВЫБРАТЬ СРЕДНЕЕ(баллызаперекладину) ИЗ справочник.гимнасты
1743;SELECT avg(Horizontal_Bar_Points) FROM gymnast;ВЫБРАТЬ СРЕДНЕЕ(баллызаперекладину) ИЗ справочник.гимнасты
1744;SELECT Name FROM People ORDER BY Name ASC;ВЫБРАТЬ наименование ИЗ справочник.люди УПОРЯДОЧИТЬ ПО наименование ВОЗР
1745;SELECT Name FROM People ORDER BY Name ASC;ВЫБРАТЬ наименование ИЗ справочник.люди УПОРЯДОЧИТЬ ПО наименование ВОЗР
1746;SELECT T2.Name FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID;ВЫБРАТЬ T2.наименование ИЗ справочник.гимнасты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.люди КАК T2 ПО T1.ссылка = T2.ссылка
1747;SELECT T2.Name FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID;ВЫБРАТЬ T2.наименование ИЗ справочник.гимнасты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.люди КАК T2 ПО T1.ссылка = T2.ссылка
1748;"SELECT T2.Name FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID WHERE T2.Hometown != ""Santo Domingo""";"ВЫБРАТЬ T2.наименование ИЗ справочник.гимнасты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.люди КАК T2 ПО T1.ссылка = T2.ссылка ГДЕ T2.городродной <> ""Santo Domingo"""
1749;"SELECT T2.Name FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID WHERE T2.Hometown != ""Santo Domingo""";"ВЫБРАТЬ T2.наименование ИЗ справочник.гимнасты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.люди КАК T2 ПО T1.ссылка = T2.ссылка ГДЕ T2.городродной <> ""Santo Domingo"""
1750;SELECT Age FROM people ORDER BY Height DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 возраст ИЗ справочник.люди УПОРЯДОЧИТЬ ПО рост УБЫВ
1751;SELECT Age FROM people ORDER BY Height DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 возраст ИЗ справочник.люди УПОРЯДОЧИТЬ ПО рост УБЫВ
1752;SELECT Name FROM People ORDER BY Age DESC LIMIT 5;ВЫБРАТЬ ПЕРВЫЕ 5 наименование ИЗ справочник.люди УПОРЯДОЧИТЬ ПО возраст УБЫВ
1753;SELECT Name FROM People ORDER BY Age DESC LIMIT 5;ВЫБРАТЬ ПЕРВЫЕ 5 наименование ИЗ справочник.люди УПОРЯДОЧИТЬ ПО возраст УБЫВ
1754;SELECT T1.Total_Points FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID ORDER BY T2.Age ASC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.общаясуммабаллов ИЗ справочник.гимнасты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.люди КАК T2 ПО T1.ссылка = T2.ссылка УПОРЯДОЧИТЬ ПО T2.возраст ВОЗР
1755;SELECT T1.Total_Points FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID ORDER BY T2.Age ASC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.общаясуммабаллов ИЗ справочник.гимнасты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.люди КАК T2 ПО T1.ссылка = T2.ссылка УПОРЯДОЧИТЬ ПО T2.возраст ВОЗР
1756;SELECT avg(T2.Age) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID;ВЫБРАТЬ СРЕДНЕЕ(T2.возраст) ИЗ справочник.гимнасты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.люди КАК T2 ПО T1.ссылка = T2.ссылка
1757;SELECT avg(T2.Age) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID;ВЫБРАТЬ СРЕДНЕЕ(T2.возраст) ИЗ справочник.гимнасты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.люди КАК T2 ПО T1.ссылка = T2.ссылка
1758;SELECT DISTINCT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID WHERE T1.Total_Points  >  57.5;ВЫБРАТЬ РАЗЛИЧНЫЕ T2.городродной ИЗ справочник.гимнасты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.люди КАК T2 ПО T1.ссылка = T2.ссылка ГДЕ T1.общаясуммабаллов > 57.5
1759;SELECT DISTINCT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID WHERE T1.Total_Points  >  57.5;ВЫБРАТЬ РАЗЛИЧНЫЕ T2.городродной ИЗ справочник.гимнасты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.люди КАК T2 ПО T1.ссылка = T2.ссылка ГДЕ T1.общаясуммабаллов > 57.5
1760;SELECT T2.Hometown ,  COUNT(*) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID GROUP BY T2.Hometown;ВЫБРАТЬ T2.городродной , КОЛИЧЕСТВО(*) ИЗ справочник.гимнасты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.люди КАК T2 ПО T1.ссылка = T2.ссылка СГРУППИРОВАТЬ ПО T2.городродной
1761;SELECT T2.Hometown ,  COUNT(*) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID GROUP BY T2.Hometown;ВЫБРАТЬ T2.городродной , КОЛИЧЕСТВО(*) ИЗ справочник.гимнасты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.люди КАК T2 ПО T1.ссылка = T2.ссылка СГРУППИРОВАТЬ ПО T2.городродной
1762;SELECT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID GROUP BY T2.Hometown ORDER BY COUNT(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.городродной ИЗ справочник.гимнасты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.люди КАК T2 ПО T1.ссылка = T2.ссылка СГРУППИРОВАТЬ ПО T2.городродной УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
1763;SELECT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID GROUP BY T2.Hometown ORDER BY COUNT(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.городродной ИЗ справочник.гимнасты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.люди КАК T2 ПО T1.ссылка = T2.ссылка СГРУППИРОВАТЬ ПО T2.городродной УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
1764;SELECT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID GROUP BY T2.Hometown HAVING COUNT(*)  >=  2;ВЫБРАТЬ T2.городродной ИЗ справочник.гимнасты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.люди КАК T2 ПО T1.ссылка = T2.ссылка СГРУППИРОВАТЬ ПО T2.городродной ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
1765;SELECT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID GROUP BY T2.Hometown HAVING COUNT(*)  >=  2;ВЫБРАТЬ T2.городродной ИЗ справочник.гимнасты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.люди КАК T2 ПО T1.ссылка = T2.ссылка СГРУППИРОВАТЬ ПО T2.городродной ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
1766;SELECT T2.Name FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID ORDER BY T2.Height ASC;ВЫБРАТЬ T2.наименование ИЗ справочник.гимнасты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.люди КАК T2 ПО T1.ссылка = T2.ссылка УПОРЯДОЧИТЬ ПО T2.рост ВОЗР
1767;SELECT T2.Name FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID ORDER BY T2.Height ASC;ВЫБРАТЬ T2.наименование ИЗ справочник.гимнасты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.люди КАК T2 ПО T1.ссылка = T2.ссылка УПОРЯДОЧИТЬ ПО T2.рост ВОЗР
1772;SELECT count(DISTINCT Hometown) FROM people;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ городродной) ИЗ справочник.люди
1773;SELECT count(DISTINCT Hometown) FROM people;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ городродной) ИЗ справочник.люди
1774;SELECT T2.Age FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID ORDER BY T1.Total_Points DESC;ВЫБРАТЬ T2.возраст ИЗ справочник.гимнасты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.люди КАК T2 ПО T1.ссылка = T2.ссылка УПОРЯДОЧИТЬ ПО T1.общаясуммабаллов УБЫВ
1775;SELECT T2.Age FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID ORDER BY T1.Total_Points DESC;ВЫБРАТЬ T2.возраст ИЗ справочник.гимнасты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.люди КАК T2 ПО T1.ссылка = T2.ссылка УПОРЯДОЧИТЬ ПО T1.общаясуммабаллов УБЫВ
1776;SELECT sum(T2.balance) FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid WHERE T1.name != 'Brown';"ВЫБРАТЬ СУММА(T2.баланс) ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.сбережения КАК T2 ПО T1.ссылка = T2.клиент ГДЕ T1.наименование <> ""Brown"""
1777;SELECT sum(T2.balance) FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid WHERE T1.name != 'Brown';"ВЫБРАТЬ СУММА(T2.баланс) ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.сбережения КАК T2 ПО T1.ссылка = T2.клиент ГДЕ T1.наименование <> ""Brown"""
1778;SELECT count(*) FROM accounts;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.клиенты
1779;SELECT count(*) FROM accounts;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.клиенты
1780;SELECT sum(balance) FROM checking;ВЫБРАТЬ СУММА(баланс) ИЗ регистрсведений.текущиесчета
1781;SELECT sum(balance) FROM checking;ВЫБРАТЬ СУММА(баланс) ИЗ регистрсведений.текущиесчета
1782;SELECT avg(balance) FROM checking;ВЫБРАТЬ СРЕДНЕЕ(баланс) ИЗ регистрсведений.текущиесчета
1783;SELECT avg(balance) FROM checking;ВЫБРАТЬ СРЕДНЕЕ(баланс) ИЗ регистрсведений.текущиесчета
1784;SELECT count(*) FROM savings WHERE balance  >  (SELECT avg(balance) FROM savings);ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.сбережения ГДЕ balance > (ВЫБРАТЬ СРЕДНЕЕ(balance) ИЗ регистрсведений.сбережения)
1785;SELECT count(*) FROM savings WHERE balance  >  (SELECT avg(balance) FROM savings);ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.сбережения ГДЕ balance > (ВЫБРАТЬ СРЕДНЕЕ(balance) ИЗ регистрсведений.сбережения)
1786;SELECT T1.custid ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T2.balance  <  (SELECT max(balance) FROM checking);ВЫБРАТЬ T1.ссылка , T1.наименование ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.текущиесчета КАК T2 ПО T1.ссылка = T2.клиент ГДЕ T2.баланс < (ВЫБРАТЬ МАКСИМУМ(balance) ИЗ регистрсведений.текущиесчета)
1787;SELECT T1.custid ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T2.balance  <  (SELECT max(balance) FROM checking);ВЫБРАТЬ T1.ссылка , T1.наименование ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.текущиесчета КАК T2 ПО T1.ссылка = T2.клиент ГДЕ T2.баланс < (ВЫБРАТЬ МАКСИМУМ(balance) ИЗ регистрсведений.текущиесчета)
1788;SELECT T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T1.name LIKE '%ee%';"ВЫБРАТЬ T2.баланс ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.текущиесчета КАК T2 ПО T1.ссылка = T2.клиент ГДЕ T1.наименование ПОДОБНО ""%ee%"""
1789;SELECT T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T1.name LIKE '%ee%';"ВЫБРАТЬ T2.баланс ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.текущиесчета КАК T2 ПО T1.ссылка = T2.клиент ГДЕ T1.наименование ПОДОБНО ""%ee%"""
1790;SELECT T2.balance ,  T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid WHERE T1.name  =  'Brown';"ВЫБРАТЬ T2.баланс , T3.баланс ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.текущиесчета КАК T2 ПО T1.ссылка = T2.клиент ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.сбережения КАК T3 ПО T1.ссылка = T3.клиент ГДЕ T1.наименование = ""Brown"""
1791;SELECT T2.balance ,  T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid WHERE T1.name  =  'Brown';"ВЫБРАТЬ T2.баланс , T3.баланс ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.текущиесчета КАК T2 ПО T1.ссылка = T2.клиент ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.сбережения КАК T3 ПО T1.ссылка = T3.клиент ГДЕ T1.наименование = ""Brown"""
1794;SELECT T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T1.name IN (SELECT T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid WHERE T2.balance  >  (SELECT avg(balance) FROM savings));ВЫБРАТЬ T2.баланс ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.текущиесчета КАК T2 ПО T1.ссылка = T2.клиент ГДЕ T1.наименование В (ВЫБРАТЬ T1.наименование ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.сбережения КАК T2 ПО T1.ссылка = T2.клиент ГДЕ T2.баланс > (ВЫБРАТЬ СРЕДНЕЕ(balance) ИЗ регистрсведений.сбережения))
1795;SELECT T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T1.name IN (SELECT T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid WHERE T2.balance  >  (SELECT avg(balance) FROM savings));ВЫБРАТЬ T2.баланс ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.текущиесчета КАК T2 ПО T1.ссылка = T2.клиент ГДЕ T1.наименование В (ВЫБРАТЬ T1.наименование ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.сбережения КАК T2 ПО T1.ссылка = T2.клиент ГДЕ T2.баланс > (ВЫБРАТЬ СРЕДНЕЕ(balance) ИЗ регистрсведений.сбережения))
1796;SELECT name FROM accounts ORDER BY name;ВЫБРАТЬ наименование ИЗ справочник.клиенты УПОРЯДОЧИТЬ ПО наименование
1797;SELECT name FROM accounts ORDER BY name;ВЫБРАТЬ наименование ИЗ справочник.клиенты УПОРЯДОЧИТЬ ПО наименование
1798;SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T2.balance + T3.balance LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.наименование ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.текущиесчета КАК T2 ПО T1.ссылка = T2.клиент ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.сбережения КАК T3 ПО T1.ссылка = T3.клиент УПОРЯДОЧИТЬ ПО T2.баланс + T3.баланс
1799;SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T2.balance + T3.balance LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.наименование ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.текущиесчета КАК T2 ПО T1.ссылка = T2.клиент ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.сбережения КАК T3 ПО T1.ссылка = T3.клиент УПОРЯДОЧИТЬ ПО T2.баланс + T3.баланс
1800;SELECT T1.name ,  T2.balance + T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid WHERE T3.balance  >  (SELECT avg(balance) FROM savings);ВЫБРАТЬ T1.наименование , T2.баланс + T3.баланс ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.текущиесчета КАК T2 ПО T1.ссылка = T2.клиент ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.сбережения КАК T3 ПО T1.ссылка = T3.клиент ГДЕ T3.баланс > (ВЫБРАТЬ СРЕДНЕЕ(balance) ИЗ регистрсведений.сбережения)
1801;SELECT T1.name ,  T2.balance + T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid WHERE T3.balance  >  (SELECT avg(balance) FROM savings);ВЫБРАТЬ T1.наименование , T2.баланс + T3.баланс ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.текущиесчета КАК T2 ПО T1.ссылка = T2.клиент ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.сбережения КАК T3 ПО T1.ссылка = T3.клиент ГДЕ T3.баланс > (ВЫБРАТЬ СРЕДНЕЕ(balance) ИЗ регистрсведений.сбережения)
1802;SELECT T1.name ,  T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T3.balance LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.наименование , T2.баланс ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.текущиесчета КАК T2 ПО T1.ссылка = T2.клиент ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.сбережения КАК T3 ПО T1.ссылка = T3.клиент УПОРЯДОЧИТЬ ПО T3.баланс
1803;SELECT T1.name ,  T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T3.balance LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.наименование , T2.баланс ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.текущиесчета КАК T2 ПО T1.ссылка = T2.клиент ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.сбережения КАК T3 ПО T1.ссылка = T3.клиент УПОРЯДОЧИТЬ ПО T3.баланс
1804;SELECT count(*) ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid GROUP BY T1.name;ВЫБРАТЬ КОЛИЧЕСТВО(*) , T1.наименование ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.текущиесчета КАК T2 ПО T1.ссылка = T2.клиент СГРУППИРОВАТЬ ПО T1.наименование
1805;SELECT count(*) ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid GROUP BY T1.name;ВЫБРАТЬ КОЛИЧЕСТВО(*) , T1.наименование ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.текущиесчета КАК T2 ПО T1.ссылка = T2.клиент СГРУППИРОВАТЬ ПО T1.наименование
1806;SELECT sum(T2.balance) ,  T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid GROUP BY T1.name;ВЫБРАТЬ СУММА(T2.баланс) , T1.наименование ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.сбережения КАК T2 ПО T1.ссылка = T2.клиент СГРУППИРОВАТЬ ПО T1.наименование
1807;SELECT sum(T2.balance) ,  T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid GROUP BY T1.name;ВЫБРАТЬ СУММА(T2.баланс) , T1.наименование ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.сбережения КАК T2 ПО T1.ссылка = T2.клиент СГРУППИРОВАТЬ ПО T1.наименование
1808;SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T2.balance  <  (SELECT avg(balance) FROM checking);ВЫБРАТЬ T1.наименование ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.текущиесчета КАК T2 ПО T1.ссылка = T2.клиент ГДЕ T2.баланс < (ВЫБРАТЬ СРЕДНЕЕ(balance) ИЗ регистрсведений.текущиесчета)
1809;SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T2.balance  <  (SELECT avg(balance) FROM checking);ВЫБРАТЬ T1.наименование ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.текущиесчета КАК T2 ПО T1.ссылка = T2.клиент ГДЕ T2.баланс < (ВЫБРАТЬ СРЕДНЕЕ(balance) ИЗ регистрсведений.текущиесчета)
1810;SELECT T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T2.balance DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T3.баланс ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.текущиесчета КАК T2 ПО T1.ссылка = T2.клиент ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.сбережения КАК T3 ПО T1.ссылка = T3.клиент УПОРЯДОЧИТЬ ПО T2.баланс УБЫВ
1811;SELECT T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T2.balance DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T3.баланс ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.текущиесчета КАК T2 ПО T1.ссылка = T2.клиент ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.сбережения КАК T3 ПО T1.ссылка = T3.клиент УПОРЯДОЧИТЬ ПО T2.баланс УБЫВ
1812;SELECT T1.balance + T2.balance FROM checking AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid ORDER BY T1.balance + T2.balance;ВЫБРАТЬ T1.баланс + T2.баланс ИЗ регистрсведений.текущиесчета КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.сбережения КАК T2 ПО T1.клиент = T2.клиент УПОРЯДОЧИТЬ ПО T1.баланс + T2.баланс
1813;SELECT T1.balance + T2.balance FROM checking AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid ORDER BY T1.balance + T2.balance;ВЫБРАТЬ T1.баланс + T2.баланс ИЗ регистрсведений.текущиесчета КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.сбережения КАК T2 ПО T1.клиент = T2.клиент УПОРЯДОЧИТЬ ПО T1.баланс + T2.баланс
1814;SELECT T2.balance ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T3.balance LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.баланс , T1.наименование ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.текущиесчета КАК T2 ПО T1.ссылка = T2.клиент ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.сбережения КАК T3 ПО T1.ссылка = T3.клиент УПОРЯДОЧИТЬ ПО T3.баланс
1815;SELECT T2.balance ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T3.balance LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.баланс , T1.наименование ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.текущиесчета КАК T2 ПО T1.ссылка = T2.клиент ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.сбережения КАК T3 ПО T1.ссылка = T3.клиент УПОРЯДОЧИТЬ ПО T3.баланс
1816;SELECT T2.balance ,  T3.balance ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid;ВЫБРАТЬ T2.баланс , T3.баланс , T1.наименование ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.текущиесчета КАК T2 ПО T1.ссылка = T2.клиент ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.сбережения КАК T3 ПО T1.ссылка = T3.клиент
1817;SELECT T2.balance ,  T3.balance ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid;ВЫБРАТЬ T2.баланс , T3.баланс , T1.наименование ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.текущиесчета КАК T2 ПО T1.ссылка = T2.клиент ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.сбережения КАК T3 ПО T1.ссылка = T3.клиент
1818;SELECT T2.balance ,  T3.balance ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T2.balance + T3.balance DESC;ВЫБРАТЬ T2.баланс , T3.баланс , T1.наименование ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.текущиесчета КАК T2 ПО T1.ссылка = T2.клиент ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.сбережения КАК T3 ПО T1.ссылка = T3.клиент УПОРЯДОЧИТЬ ПО T2.баланс + T3.баланс УБЫВ
1819;SELECT T2.balance ,  T3.balance ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T2.balance + T3.balance DESC;ВЫБРАТЬ T2.баланс , T3.баланс , T1.наименование ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.текущиесчета КАК T2 ПО T1.ссылка = T2.клиент ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.сбережения КАК T3 ПО T1.ссылка = T3.клиент УПОРЯДОЧИТЬ ПО T2.баланс + T3.баланс УБЫВ
1820;SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid WHERE T2.balance  >  T3.balance;ВЫБРАТЬ T1.наименование ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.текущиесчета КАК T2 ПО T1.ссылка = T2.клиент ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.сбережения КАК T3 ПО T1.ссылка = T3.клиент ГДЕ T2.баланс > T3.баланс
1821;SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid WHERE T2.balance  >  T3.balance;ВЫБРАТЬ T1.наименование ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.текущиесчета КАК T2 ПО T1.ссылка = T2.клиент ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.сбережения КАК T3 ПО T1.ссылка = T3.клиент ГДЕ T2.баланс > T3.баланс
1822;SELECT T1.name ,  T3.balance + T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid WHERE T3.balance  <  T2.balance;ВЫБРАТЬ T1.наименование , T3.баланс + T2.баланс ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.текущиесчета КАК T2 ПО T1.ссылка = T2.клиент ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.сбережения КАК T3 ПО T1.ссылка = T3.клиент ГДЕ T3.баланс < T2.баланс
1823;SELECT T1.name ,  T3.balance + T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid WHERE T3.balance  <  T2.balance;ВЫБРАТЬ T1.наименование , T3.баланс + T2.баланс ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.текущиесчета КАК T2 ПО T1.ссылка = T2.клиент ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.сбережения КАК T3 ПО T1.ссылка = T3.клиент ГДЕ T3.баланс < T2.баланс
1824;SELECT T1.name ,  T2.balance FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid ORDER BY T2.balance DESC LIMIT 3;ВЫБРАТЬ ПЕРВЫЕ 3 T1.наименование , T2.баланс ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.сбережения КАК T2 ПО T1.ссылка = T2.клиент УПОРЯДОЧИТЬ ПО T2.баланс УБЫВ
1825;SELECT T1.name ,  T2.balance FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid ORDER BY T2.balance DESC LIMIT 3;ВЫБРАТЬ ПЕРВЫЕ 3 T1.наименование , T2.баланс ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.сбережения КАК T2 ПО T1.ссылка = T2.клиент УПОРЯДОЧИТЬ ПО T2.баланс УБЫВ
1826;SELECT count(*) FROM browser WHERE market_share  >=  5;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.браузеры ГДЕ долярынка >= 5
1827;SELECT name FROM browser ORDER BY market_share DESC;ВЫБРАТЬ наименование ИЗ справочник.браузеры УПОРЯДОЧИТЬ ПО долярынка УБЫВ
1828;SELECT id ,  name ,  market_share FROM browser;ВЫБРАТЬ ссылка , наименование , долярынка ИЗ справочник.браузеры
1829;SELECT max(market_share) ,  min(market_share) ,  avg(market_share) FROM browser;ВЫБРАТЬ МАКСИМУМ(долярынка) , МИНИМУМ(долярынка) , СРЕДНЕЕ(долярынка) ИЗ справочник.браузеры
1830;SELECT id ,  market_share FROM browser WHERE name  =  'Safari';"ВЫБРАТЬ ссылка , долярынка ИЗ справочник.браузеры ГДЕ наименование = ""Safari"""
1831;SELECT name ,  operating_system FROM web_client_accelerator WHERE CONNECTION != 'Broadband';"ВЫБРАТЬ наименование , операционнаясистема ИЗ справочник.вебклиентускорители ГДЕ типсоединения <> ""Broadband"""
1832;SELECT T1.name FROM browser AS T1 JOIN accelerator_compatible_browser AS T2 ON T1.id  =  T2.browser_id JOIN web_client_accelerator AS T3 ON T2.accelerator_id  =  T3.id WHERE T3.name  =  'CProxy' AND T2.compatible_since_year  >  1998;"ВЫБРАТЬ T1.наименование ИЗ справочник.браузеры КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.совместимостьускорителей КАК T2 ПО T1.ссылка = T2.браузер ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.вебклиентускорители КАК T3 ПО T2.ускоритель = T3.ссылка ГДЕ T3.наименование = ""CProxy"" И T2.годсовместимости > 1998"
1833;SELECT T1.id ,  T1.Name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id  =  T1.id GROUP BY T1.id HAVING count(*)  >=  2;ВЫБРАТЬ T1.ссылка , T1.наименование ИЗ справочник.вебклиентускорители КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.совместимостьускорителей КАК T2 ПО T2.ускоритель = T1.ссылка СГРУППИРОВАТЬ ПО T1.ссылка ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
1834;SELECT T1.id ,  T1.name FROM browser AS T1 JOIN accelerator_compatible_browser AS T2 ON T1.id  =  T2.browser_id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.ссылка , T1.наименование ИЗ справочник.браузеры КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.совместимостьускорителей КАК T2 ПО T1.ссылка = T2.браузер СГРУППИРОВАТЬ ПО T1.ссылка УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
1835;SELECT T1.compatible_since_year FROM accelerator_compatible_browser AS T1 JOIN browser AS T2 ON T1.browser_id  =  T2.id JOIN web_client_accelerator AS T3 ON T1.accelerator_id  =  T3.id WHERE T3.name  =  'CACHEbox' AND T2.name  =  'Internet Explorer';"ВЫБРАТЬ T1.годсовместимости ИЗ регистрсведений.совместимостьускорителей КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.браузеры КАК T2 ПО T1.браузер = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.вебклиентускорители КАК T3 ПО T1.ускоритель = T3.ссылка ГДЕ T3.наименование = ""CACHEbox"" И T2.наименование = ""Internet Explorer"""
1836;SELECT count(DISTINCT client) FROM web_client_accelerator;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ клиент) ИЗ справочник.вебклиентускорители
1837;"SELECT count(*) FROM web_client_accelerator WHERE id NOT IN ( SELECT accelerator_id FROM accelerator_compatible_browser );";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.вебклиентускорители ГДЕ id НЕ В ( ВЫБРАТЬ accelerator_id ИЗ регистрсведений.совместимостьускорителей );"
1838;"SELECT DISTINCT T1.name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id  =  T1.id JOIN browser AS T3 ON T2.browser_id  =  T3.id WHERE T3.market_share  >  15;";"ВЫБРАТЬ РАЗЛИЧНЫЕ T1.наименование ИЗ справочник.вебклиентускорители КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.совместимостьускорителей КАК T2 ПО T2.ускоритель = T1.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.браузеры КАК T3 ПО T2.браузер = T3.ссылка ГДЕ T3.долярынка > 15;"
1841;"SELECT name FROM web_client_accelerator WHERE name LIKE ""%Opera%""";"ВЫБРАТЬ наименование ИЗ справочник.вебклиентускорители ГДЕ наименование ПОДОБНО ""%Opera%"""
1842;SELECT Operating_system ,  count(*) FROM web_client_accelerator GROUP BY Operating_system;ВЫБРАТЬ операционнаясистема , КОЛИЧЕСТВО(*) ИЗ справочник.вебклиентускорители СГРУППИРОВАТЬ ПО операционнаясистема
1843;SELECT T2.name ,  T3.name FROM accelerator_compatible_browser AS T1 JOIN browser AS T2 ON T1.browser_id  =  T2.id JOIN web_client_accelerator AS T3 ON T1.accelerator_id  =  T3.id ORDER BY T1.compatible_since_year DESC;ВЫБРАТЬ T2.наименование , T3.наименование ИЗ регистрсведений.совместимостьускорителей КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.браузеры КАК T2 ПО T1.браузер = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.вебклиентускорители КАК T3 ПО T1.ускоритель = T3.ссылка УПОРЯДОЧИТЬ ПО T1.годсовместимости УБЫВ
1844;SELECT count(*) FROM wrestler;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.реслеры
1845;SELECT count(*) FROM wrestler;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.реслеры
1846;SELECT Name FROM wrestler ORDER BY Days_held DESC;ВЫБРАТЬ наименование ИЗ справочник.реслеры УПОРЯДОЧИТЬ ПО днейвдолжности УБЫВ
1847;SELECT Name FROM wrestler ORDER BY Days_held DESC;ВЫБРАТЬ наименование ИЗ справочник.реслеры УПОРЯДОЧИТЬ ПО днейвдолжности УБЫВ
1848;SELECT Name FROM wrestler ORDER BY Days_held ASC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование ИЗ справочник.реслеры УПОРЯДОЧИТЬ ПО днейвдолжности ВОЗР
1849;SELECT Name FROM wrestler ORDER BY Days_held ASC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование ИЗ справочник.реслеры УПОРЯДОЧИТЬ ПО днейвдолжности ВОЗР
1850;"SELECT DISTINCT Reign FROM wrestler WHERE LOCATION != ""Tokyo , Japan""";"ВЫБРАТЬ РАЗЛИЧНЫЕ правление ИЗ справочник.реслеры ГДЕ локация <> ""Tokyo , Japan"""
1851;"SELECT DISTINCT Reign FROM wrestler WHERE LOCATION != ""Tokyo , Japan""";"ВЫБРАТЬ РАЗЛИЧНЫЕ правление ИЗ справочник.реслеры ГДЕ локация <> ""Tokyo , Japan"""
1852;SELECT Name ,  LOCATION FROM wrestler;ВЫБРАТЬ наименование , локация ИЗ справочник.реслеры
1853;SELECT Name ,  LOCATION FROM wrestler;ВЫБРАТЬ наименование , локация ИЗ справочник.реслеры
1854;"SELECT Elimination_Move FROM Elimination WHERE Team  =  ""Team Orton""";"ВЫБРАТЬ прием ИЗ регистрсведений.элиминации ГДЕ команда = ""команда Orton"""
1855;"SELECT Elimination_Move FROM Elimination WHERE Team  =  ""Team Orton""";"ВЫБРАТЬ прием ИЗ регистрсведений.элиминации ГДЕ команда = ""команда Orton"""
1856;SELECT T2.Name ,  T1.Elimination_Move FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID  =  T2.Wrestler_ID;ВЫБРАТЬ T2.наименование , T1.прием ИЗ регистрсведений.элиминации КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.реслеры КАК T2 ПО T1.реслер = T2.ссылка
1857;SELECT T2.Name ,  T1.Elimination_Move FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID  =  T2.Wrestler_ID;ВЫБРАТЬ T2.наименование , T1.прием ИЗ регистрсведений.элиминации КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.реслеры КАК T2 ПО T1.реслер = T2.ссылка
1858;SELECT T2.Name ,  T1.Team FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID  =  T2.Wrestler_ID ORDER BY T2.Days_held DESC;ВЫБРАТЬ T2.наименование , T1.команда ИЗ регистрсведений.элиминации КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.реслеры КАК T2 ПО T1.реслер = T2.ссылка УПОРЯДОЧИТЬ ПО T2.днейвдолжности УБЫВ
1859;SELECT T2.Name ,  T1.Team FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID  =  T2.Wrestler_ID ORDER BY T2.Days_held DESC;ВЫБРАТЬ T2.наименование , T1.команда ИЗ регистрсведений.элиминации КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.реслеры КАК T2 ПО T1.реслер = T2.ссылка УПОРЯДОЧИТЬ ПО T2.днейвдолжности УБЫВ
1860;SELECT T1.Time FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID  =  T2.Wrestler_ID ORDER BY T2.Days_held DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.время ИЗ регистрсведений.элиминации КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.реслеры КАК T2 ПО T1.реслер = T2.ссылка УПОРЯДОЧИТЬ ПО T2.днейвдолжности УБЫВ
1861;SELECT T1.Time FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID  =  T2.Wrestler_ID ORDER BY T2.Days_held DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.время ИЗ регистрсведений.элиминации КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.реслеры КАК T2 ПО T1.реслер = T2.ссылка УПОРЯДОЧИТЬ ПО T2.днейвдолжности УБЫВ
1862;SELECT T1.Time FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID  =  T2.Wrestler_ID WHERE T2.Days_held  >  50;ВЫБРАТЬ T1.время ИЗ регистрсведений.элиминации КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.реслеры КАК T2 ПО T1.реслер = T2.ссылка ГДЕ T2.днейвдолжности > 50
1863;SELECT T1.Time FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID  =  T2.Wrestler_ID WHERE T2.Days_held  >  50;ВЫБРАТЬ T1.время ИЗ регистрсведений.элиминации КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.реслеры КАК T2 ПО T1.реслер = T2.ссылка ГДЕ T2.днейвдолжности > 50
1864;SELECT Team ,  COUNT(*) FROM elimination GROUP BY Team;ВЫБРАТЬ команда , КОЛИЧЕСТВО(*) ИЗ регистрсведений.элиминации СГРУППИРОВАТЬ ПО команда
1865;SELECT Team ,  COUNT(*) FROM elimination GROUP BY Team;ВЫБРАТЬ команда , КОЛИЧЕСТВО(*) ИЗ регистрсведений.элиминации СГРУППИРОВАТЬ ПО команда
1866;SELECT Team FROM elimination GROUP BY Team HAVING COUNT(*)  >  3;ВЫБРАТЬ команда ИЗ регистрсведений.элиминации СГРУППИРОВАТЬ ПО команда ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 3
1867;SELECT Team FROM elimination GROUP BY Team HAVING COUNT(*)  >  3;ВЫБРАТЬ команда ИЗ регистрсведений.элиминации СГРУППИРОВАТЬ ПО команда ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 3
1868;SELECT Reign ,  Days_held FROM wrestler;ВЫБРАТЬ правление , днейвдолжности ИЗ справочник.реслеры
1869;SELECT Reign ,  Days_held FROM wrestler;ВЫБРАТЬ правление , днейвдолжности ИЗ справочник.реслеры
1870;SELECT Name FROM wrestler WHERE Days_held  <  100;ВЫБРАТЬ наименование ИЗ справочник.реслеры ГДЕ днейвдолжности < 100
1871;SELECT Name FROM wrestler WHERE Days_held  <  100;ВЫБРАТЬ наименование ИЗ справочник.реслеры ГДЕ днейвдолжности < 100
1872;SELECT Reign FROM wrestler GROUP BY Reign ORDER BY COUNT(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 правление ИЗ справочник.реслеры СГРУППИРОВАТЬ ПО правление УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
1873;SELECT Reign FROM wrestler GROUP BY Reign ORDER BY COUNT(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 правление ИЗ справочник.реслеры СГРУППИРОВАТЬ ПО правление УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
1874;SELECT LOCATION FROM wrestler GROUP BY LOCATION HAVING COUNT(*)  >  2;ВЫБРАТЬ локация ИЗ справочник.реслеры СГРУППИРОВАТЬ ПО локация ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 2
1875;SELECT LOCATION FROM wrestler GROUP BY LOCATION HAVING COUNT(*)  >  2;ВЫБРАТЬ локация ИЗ справочник.реслеры СГРУППИРОВАТЬ ПО локация ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 2
1876;SELECT Name FROM wrestler WHERE Wrestler_ID NOT IN (SELECT Wrestler_ID FROM elimination);ВЫБРАТЬ Name ИЗ справочник.реслеры ГДЕ Wrestler_ID НЕ В (ВЫБРАТЬ Wrestler_ID ИЗ регистрсведений.элиминации)
1877;SELECT Name FROM wrestler WHERE Wrestler_ID NOT IN (SELECT Wrestler_ID FROM elimination);ВЫБРАТЬ Name ИЗ справочник.реслеры ГДЕ Wrestler_ID НЕ В (ВЫБРАТЬ Wrestler_ID ИЗ регистрсведений.элиминации)
1880;SELECT COUNT (DISTINCT team) FROM elimination;ВЫБРАТЬ КОЛИЧЕСТВО (РАЗЛИЧНЫЕ команда) ИЗ регистрсведений.элиминации
1881;SELECT COUNT (DISTINCT team) FROM elimination;ВЫБРАТЬ КОЛИЧЕСТВО (РАЗЛИЧНЫЕ команда) ИЗ регистрсведений.элиминации
1882;"SELECT TIME FROM elimination WHERE Eliminated_By  =  ""Punk"" OR Eliminated_By  =  ""Orton""";"ВЫБРАТЬ время ИЗ регистрсведений.элиминации ГДЕ элиминированкем = ""Punk"" ИЛИ элиминированкем = ""Orton"""
1883;"SELECT TIME FROM elimination WHERE Eliminated_By  =  ""Punk"" OR Eliminated_By  =  ""Orton""";"ВЫБРАТЬ время ИЗ регистрсведений.элиминации ГДЕ элиминированкем = ""Punk"" ИЛИ элиминированкем = ""Orton"""
1884;SELECT count(*) FROM school;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.школы
1885;SELECT count(*) FROM school;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.школы
1886;SELECT school_name FROM school ORDER BY school_name;ВЫБРАТЬ наименование ИЗ справочник.школы УПОРЯДОЧИТЬ ПО наименование
1887;SELECT school_name ,  LOCATION ,  mascot FROM school;ВЫБРАТЬ наименование , местоположение , талисман ИЗ справочник.школы
1888;SELECT sum(enrollment) ,  avg(enrollment) FROM school;ВЫБРАТЬ СУММА(количествоучащихся) , СРЕДНЕЕ(количествоучащихся) ИЗ справочник.школы
1889;SELECT mascot FROM school WHERE enrollment  >  (SELECT avg(enrollment) FROM school);ВЫБРАТЬ mascot ИЗ справочник.школы ГДЕ enrollment > (ВЫБРАТЬ СРЕДНЕЕ(enrollment) ИЗ справочник.школы)
1890;SELECT school_name FROM school ORDER BY enrollment LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование ИЗ справочник.школы УПОРЯДОЧИТЬ ПО количествоучащихся
1891;SELECT avg(enrollment) ,  max(enrollment) ,  min(enrollment) FROM school;ВЫБРАТЬ СРЕДНЕЕ(количествоучащихся) , МАКСИМУМ(количествоучащихся) , МИНИМУМ(количествоучащихся) ИЗ справочник.школы
1892;SELECT county ,  count(*) ,  sum(enrollment) FROM school GROUP BY county;ВЫБРАТЬ округ , КОЛИЧЕСТВО(*) , СУММА(количествоучащихся) ИЗ справочник.школы СГРУППИРОВАТЬ ПО округ
1893;"SELECT count(DISTINCT T1.donator_name) FROM endowment AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id WHERE T2.school_name  =  ""Glenn""";"ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ T1.имядонатора) ИЗ регистрсведений.эндаументы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.школы КАК T2 ПО T1.школа = T2.ссылка ГДЕ T2.наименование = ""Glenn"""
1894;SELECT donator_name ,  sum(amount) FROM endowment GROUP BY donator_name ORDER BY sum(amount) DESC;ВЫБРАТЬ имядонатора , СУММА(сумма) ИЗ регистрсведений.эндаументы СГРУППИРОВАТЬ ПО имядонатора УПОРЯДОЧИТЬ ПО СУММА(сумма) УБЫВ
1895;SELECT school_name FROM school WHERE school_id NOT IN (SELECT school_id FROM endowment);ВЫБРАТЬ school_name ИЗ справочник.школы ГДЕ school_id НЕ В (ВЫБРАТЬ school_id ИЗ регистрсведений.эндаументы)
1896;SELECT T2.school_name FROM endowment AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id GROUP BY T1.school_id HAVING sum(T1.amount)  <=  10;ВЫБРАТЬ T2.наименование ИЗ регистрсведений.эндаументы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.школы КАК T2 ПО T1.школа = T2.ссылка СГРУППИРОВАТЬ ПО T1.школа ИМЕЮЩИЕ СУММА(T1.сумма) <= 10
1899;SELECT amount ,  donator_name FROM endowment ORDER BY amount DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 сумма , имядонатора ИЗ регистрсведений.эндаументы УПОРЯДОЧИТЬ ПО сумма УБЫВ
1900;SELECT count(*) FROM budget WHERE budgeted  >  3000 AND YEAR  <=  2001;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.бюджет ГДЕ запланировано > 3000 И год <= 2001
1901;SELECT count(*) FROM budget WHERE budgeted  >  3000 AND YEAR  <=  2001;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.бюджет ГДЕ запланировано > 3000 И год <= 2001
1902;SELECT T2.school_name ,  T1.budgeted ,  T1.invested FROM budget AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id WHERE T1.year  >=  2002;ВЫБРАТЬ T2.наименование , T1.запланировано , T1.инвестировано ИЗ регистрсведений.бюджет КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.школы КАК T2 ПО T1.школа = T2.ссылка ГДЕ T1.год >= 2002
1903;SELECT DISTINCT donator_name FROM endowment;ВЫБРАТЬ РАЗЛИЧНЫЕ имядонатора ИЗ регистрсведений.эндаументы
1904;SELECT count(*) FROM budget WHERE budgeted  <  invested;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.бюджет ГДЕ запланировано < инвестировано
1905;SELECT sum(T1.budgeted) FROM budget AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id WHERE T2.school_name  =  'Glenn';"ВЫБРАТЬ СУММА(T1.запланировано) ИЗ регистрсведений.бюджет КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.школы КАК T2 ПО T1.школа = T2.ссылка ГДЕ T2.наименование = ""Glenn"""
1906;SELECT T2.school_name FROM budget AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id JOIN endowment AS T3 ON T2.school_id  =  T3.school_id GROUP BY T2.school_name HAVING sum(T1.budgeted)  >  100 OR sum(T3.amount)  >  10;ВЫБРАТЬ T2.наименование ИЗ регистрсведений.бюджет КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.школы КАК T2 ПО T1.школа = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.эндаументы КАК T3 ПО T2.ссылка = T3.школа СГРУППИРОВАТЬ ПО T2.наименование ИМЕЮЩИЕ СУММА(T1.запланировано) > 100 ИЛИ СУММА(T3.сумма) > 10
1907;SELECT T2.School_name FROM endowment AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id WHERE T1.amount  >  8.5 GROUP BY T1.school_id HAVING count(*)  >  1;ВЫБРАТЬ T2.наименование ИЗ регистрсведений.эндаументы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.школы КАК T2 ПО T1.школа = T2.ссылка ГДЕ T1.сумма > 8.5 СГРУППИРОВАТЬ ПО T1.школа ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 1
1908;SELECT count(*) FROM (SELECT * FROM endowment WHERE amount  >  8.5 GROUP BY school_id HAVING count(*)  >  1);ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ (ВЫБРАТЬ * ИЗ регистрсведений.эндаументы ГДЕ сумма > 8.5 СГРУППИРОВАТЬ ПО школа ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 1)
1909;SELECT T1.School_name ,  T1.Mascot ,  T1.IHSAA_Football_Class FROM school AS T1 JOIN budget AS T2 ON T1.school_id  =  T2.school_id WHERE Budgeted  >  6000 OR YEAR  <  2003 ORDER BY T2.total_budget_percent_invested ,  T2.total_budget_percent_budgeted;ВЫБРАТЬ T1.наименование , T1.талисман , T1.футбольныйклассihsaa ИЗ справочник.школы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.бюджет КАК T2 ПО T1.ссылка = T2.школа ГДЕ Budgeted > 6000 ИЛИ YEAR < 2003 УПОРЯДОЧИТЬ ПО T2.процентбюджетаинвестировано , T2.процентбюджетазапланировано
1910;SELECT count(*) FROM building;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.здания
1911;SELECT name ,  street_address ,  floors FROM building ORDER BY floors;ВЫБРАТЬ наименование , адрес , этажей ИЗ справочник.здания УПОРЯДОЧИТЬ ПО этажей
1912;SELECT name FROM building ORDER BY height_feet DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование ИЗ справочник.здания УПОРЯДОЧИТЬ ПО высотавфутах УБЫВ
1913;SELECT avg(floors) ,  max(floors) ,  min(floors) FROM building;ВЫБРАТЬ СРЕДНЕЕ(этажей) , МАКСИМУМ(этажей) , МИНИМУМ(этажей) ИЗ справочник.здания
1914;SELECT count(*) FROM building WHERE height_feet  >  (SELECT avg(height_feet) FROM building) OR floors  >  (SELECT avg(floors) FROM building);ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.здания ГДЕ height_feet > (ВЫБРАТЬ СРЕДНЕЕ(height_feet) ИЗ справочник.здания) ИЛИ floors > (ВЫБРАТЬ СРЕДНЕЕ(floors) ИЗ справочник.здания)
1915;SELECT name FROM building WHERE height_feet  >=  200 AND floors  >=  20;ВЫБРАТЬ наименование ИЗ справочник.здания ГДЕ высотавфутах >= 200 И этажей >= 20
1916;SELECT institution ,  LOCATION FROM institution WHERE founded  >  1990 AND TYPE  =  'Private';"ВЫБРАТЬ наименование , местоположение ИЗ наименование ГДЕ годоснования > 1990 И тип = ""Private"""
1917;SELECT TYPE ,  count(*) ,  sum(enrollment) FROM institution GROUP BY TYPE;ВЫБРАТЬ тип , КОЛИЧЕСТВО(*) , СУММА(количествостудентов) ИЗ наименование СГРУППИРОВАТЬ ПО тип
1918;SELECT TYPE FROM institution GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 тип ИЗ наименование СГРУППИРОВАТЬ ПО тип УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
1919;SELECT TYPE FROM institution WHERE founded  >  1990 AND enrollment  >=  1000;ВЫБРАТЬ тип ИЗ наименование ГДЕ годоснования > 1990 И количествостудентов >= 1000
1920;SELECT name FROM building WHERE building_id NOT IN (SELECT building_id FROM institution);ВЫБРАТЬ name ИЗ справочник.здания ГДЕ building_id НЕ В (ВЫБРАТЬ building_id ИЗ справочник.учреждения)
1922;SELECT T1.name ,  count(*) FROM building AS T1 JOIN institution AS T2 ON T1.building_id  =  T2.building_id GROUP BY T1.building_id;ВЫБРАТЬ T1.наименование , КОЛИЧЕСТВО(*) ИЗ справочник.здания КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.учреждения КАК T2 ПО T1.код = T2.здание СГРУППИРОВАТЬ ПО T1.код
1923;SELECT T1.name ,  T1.height_feet FROM building AS T1 JOIN institution AS T2 ON T1.building_id  =  T2.building_id WHERE T2.founded  >  1880 GROUP BY T1.building_id HAVING count(*)  >=  2;ВЫБРАТЬ T1.наименование , T1.высотавфутах ИЗ справочник.здания КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.учреждения КАК T2 ПО T1.код = T2.здание ГДЕ T2.годоснования > 1880 СГРУППИРОВАТЬ ПО T1.код ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
1924;SELECT DISTINCT TYPE FROM institution;ВЫБРАТЬ РАЗЛИЧНЫЕ тип ИЗ наименование
1925;SELECT T1.institution ,  count(*) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id  =  T2.institution_id GROUP BY T1.institution_id;ВЫБРАТЬ T1.наименование , КОЛИЧЕСТВО(*) ИЗ справочник.учреждения КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.белки КАК T2 ПО T1.код = T2.учреждение СГРУППИРОВАТЬ ПО T1.код
1926;SELECT count(*) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id  =  T2.institution_id WHERE T1.founded  >  1880 OR T1.type  =  'Private';"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.учреждения КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.белки КАК T2 ПО T1.код = T2.учреждение ГДЕ T1.годоснования > 1880 ИЛИ T1.тип = ""Private"""
1927;SELECT T2.protein_name ,  T1.institution FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id  =  T2.institution_id;ВЫБРАТЬ T2.наименование , T1.наименование ИЗ справочник.учреждения КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.белки КАК T2 ПО T1.код = T2.учреждение
1928;SELECT count(*) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id  =  T2.institution_id JOIN building AS T3 ON T3.building_id  =  T1.building_id WHERE T3.floors  >=  20;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.учреждения КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.белки КАК T2 ПО T1.код = T2.учреждение ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.здания КАК T3 ПО T3.код = T1.здание ГДЕ T3.этажей >= 20
1929;SELECT count(*) FROM institution WHERE institution_id NOT IN (SELECT institution_id FROM protein);ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.учреждения ГДЕ institution_id НЕ В (ВЫБРАТЬ institution_id ИЗ справочник.белки)
1932;SELECT count(*) FROM cinema;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.кинотеатры
1933;SELECT count(*) FROM cinema;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.кинотеатры
1934;SELECT name ,  openning_year ,  capacity FROM cinema;ВЫБРАТЬ наименование , годоткрытия , вместимость ИЗ справочник.кинотеатры
1935;SELECT name ,  LOCATION FROM cinema WHERE capacity  >  (SELECT avg(capacity) FROM cinema);ВЫБРАТЬ name , LOCATION ИЗ справочник.кинотеатры ГДЕ capacity > (ВЫБРАТЬ СРЕДНЕЕ(capacity) ИЗ справочник.кинотеатры)
1936;SELECT DISTINCT LOCATION FROM cinema;ВЫБРАТЬ РАЗЛИЧНЫЕ местоположение ИЗ справочник.кинотеатры
1937;SELECT DISTINCT LOCATION FROM cinema;ВЫБРАТЬ РАЗЛИЧНЫЕ местоположение ИЗ справочник.кинотеатры
1938;SELECT name ,  openning_year FROM cinema ORDER BY openning_year DESC;ВЫБРАТЬ наименование , годоткрытия ИЗ справочник.кинотеатры УПОРЯДОЧИТЬ ПО годоткрытия УБЫВ
1939;SELECT name ,  LOCATION FROM cinema ORDER BY capacity DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование , местоположение ИЗ справочник.кинотеатры УПОРЯДОЧИТЬ ПО вместимость УБЫВ
1940;SELECT avg(capacity) ,  min(capacity) ,  max(capacity) FROM cinema WHERE openning_year  >=  2011;ВЫБРАТЬ СРЕДНЕЕ(вместимость) , МИНИМУМ(вместимость) , МАКСИМУМ(вместимость) ИЗ справочник.кинотеатры ГДЕ годоткрытия >= 2011
1941;SELECT LOCATION ,  count(*) FROM cinema GROUP BY LOCATION;ВЫБРАТЬ местоположение , КОЛИЧЕСТВО(*) ИЗ справочник.кинотеатры СГРУППИРОВАТЬ ПО местоположение
1942;SELECT LOCATION FROM cinema WHERE openning_year  >=  2010 GROUP BY LOCATION ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 местоположение ИЗ справочник.кинотеатры ГДЕ годоткрытия >= 2010 СГРУППИРОВАТЬ ПО местоположение УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
1943;SELECT LOCATION FROM cinema WHERE capacity  >  300 GROUP BY LOCATION HAVING count(*)  >=  2;ВЫБРАТЬ местоположение ИЗ справочник.кинотеатры ГДЕ вместимость > 300 СГРУППИРОВАТЬ ПО местоположение ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
1944;SELECT LOCATION FROM cinema WHERE capacity  >  300 GROUP BY LOCATION HAVING count(*)  >=  2;ВЫБРАТЬ местоположение ИЗ справочник.кинотеатры ГДЕ вместимость > 300 СГРУППИРОВАТЬ ПО местоположение ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
1945;SELECT title ,  directed_by FROM film;ВЫБРАТЬ наименование , режиссер ИЗ справочник.фильмы
1946;SELECT title ,  directed_by FROM film;ВЫБРАТЬ наименование , режиссер ИЗ справочник.фильмы
1947;SELECT DISTINCT directed_by FROM film;ВЫБРАТЬ РАЗЛИЧНЫЕ режиссер ИЗ справочник.фильмы
1948;SELECT DISTINCT directed_by FROM film;ВЫБРАТЬ РАЗЛИЧНЫЕ режиссер ИЗ справочник.фильмы
1949;SELECT directed_by ,  count(*) FROM film GROUP BY directed_by;ВЫБРАТЬ режиссер , КОЛИЧЕСТВО(*) ИЗ справочник.фильмы СГРУППИРОВАТЬ ПО режиссер
1950;SELECT T2.name ,  sum(T1.show_times_per_day) FROM schedule AS T1 JOIN cinema AS T2 ON T1.cinema_id  =  T2.cinema_id GROUP BY T1.cinema_id;ВЫБРАТЬ T2.наименование , СУММА(T1.количествосеансоввдень) ИЗ регистрсведений.расписаниепоказов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.кинотеатры КАК T2 ПО T1.кинотеатр = T2.ссылка СГРУППИРОВАТЬ ПО T1.кинотеатр
1951;SELECT T2.title ,  max(T1.price) FROM schedule AS T1 JOIN film AS T2 ON T1.film_id  =  T2.film_id GROUP BY T1.film_id;ВЫБРАТЬ T2.наименование , МАКСИМУМ(T1.ценабилета) ИЗ регистрсведений.расписаниепоказов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.фильмы КАК T2 ПО T1.фильм = T2.ссылка СГРУППИРОВАТЬ ПО T1.фильм
1952;SELECT T2.title ,  max(T1.price) FROM schedule AS T1 JOIN film AS T2 ON T1.film_id  =  T2.film_id GROUP BY T1.film_id;ВЫБРАТЬ T2.наименование , МАКСИМУМ(T1.ценабилета) ИЗ регистрсведений.расписаниепоказов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.фильмы КАК T2 ПО T1.фильм = T2.ссылка СГРУППИРОВАТЬ ПО T1.фильм
1953;SELECT T3.name ,  T2.title ,  T1.date ,  T1.price FROM schedule AS T1 JOIN film AS T2 ON T1.film_id  =  T2.film_id JOIN cinema AS T3 ON T1.cinema_id  =  T3.cinema_id;ВЫБРАТЬ T3.наименование , T2.наименование , T1.датапоказа , T1.ценабилета ИЗ регистрсведений.расписаниепоказов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.фильмы КАК T2 ПО T1.фильм = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.кинотеатры КАК T3 ПО T1.кинотеатр = T3.ссылка
1954;SELECT title ,  directed_by FROM film WHERE film_id NOT IN (SELECT film_id FROM schedule);ВЫБРАТЬ title , directed_by ИЗ справочник.фильмы ГДЕ film_id НЕ В (ВЫБРАТЬ film_id ИЗ регистрсведений.расписаниепоказов)
1955;SELECT T2.directed_by FROM schedule AS T1 JOIN film AS T2 ON T1.film_id  =  T2.film_id GROUP BY T2.directed_by ORDER BY sum(T1.show_times_per_day) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.режиссер ИЗ регистрсведений.расписаниепоказов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.фильмы КАК T2 ПО T1.фильм = T2.ссылка СГРУППИРОВАТЬ ПО T2.режиссер УПОРЯДОЧИТЬ ПО СУММА(T1.количествосеансоввдень) УБЫВ
1956;SELECT LOCATION FROM cinema WHERE capacity  >  300 GROUP BY LOCATION HAVING count(*)  >  1;ВЫБРАТЬ местоположение ИЗ справочник.кинотеатры ГДЕ вместимость > 300 СГРУППИРОВАТЬ ПО местоположение ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 1
1957;SELECT LOCATION FROM cinema WHERE capacity  >  300 GROUP BY LOCATION HAVING count(*)  >  1;ВЫБРАТЬ местоположение ИЗ справочник.кинотеатры ГДЕ вместимость > 300 СГРУППИРОВАТЬ ПО местоположение ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 1
1958;"SELECT count(*) FROM film WHERE title LIKE ""%Dummy%""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.фильмы ГДЕ наименование ПОДОБНО ""%Dummy%"""
1959;"SELECT count(*) FROM film WHERE title LIKE ""%Dummy%""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.фильмы ГДЕ наименование ПОДОБНО ""%Dummy%"""
1960;SELECT T1.good_or_bad_customer FROM customers AS T1 JOIN discount_coupons AS T2 ON T1.coupon_id  =  T2.coupon_id WHERE T2.coupon_amount  =  500;ВЫБРАТЬ T1.качествоклиента ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.скидочныекупоны КАК T2 ПО T1.купон = T2.ссылка ГДЕ T2.суммакупона = 500
1961;SELECT T1.customer_id ,  T1.first_name ,  count(*) FROM Customers AS T1 JOIN bookings AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id;ВЫБРАТЬ T1.ссылка , T1.имя , КОЛИЧЕСТВО(*) ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.бронирования КАК T2 ПО T1.ссылка = T2.клиент СГРУППИРОВАТЬ ПО T1.ссылка
1962;SELECT customer_id ,  sum(amount_paid) FROM Payments GROUP BY customer_id ORDER BY sum(amount_paid) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 клиент , СУММА(суммаоплачено) ИЗ документ.платежи СГРУППИРОВАТЬ ПО клиент УПОРЯДОЧИТЬ ПО СУММА(суммаоплачено) УБЫВ
1963;SELECT T1.booking_id ,  T1.amount_of_refund FROM Bookings AS T1 JOIN Payments AS T2 ON T1.booking_id  =  T2.booking_id GROUP BY T1.booking_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.ссылка , T1.суммавозврата ИЗ документ.бронирования КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.платежи КАК T2 ПО T1.ссылка = T2.бронирование СГРУППИРОВАТЬ ПО T1.ссылка УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
1964;SELECT product_id FROM products_booked GROUP BY product_id HAVING count(*)  =  3;ВЫБРАТЬ товар ИЗ регистрсведений.товарывбронировании СГРУППИРОВАТЬ ПО товар ИМЕЮЩИЕ КОЛИЧЕСТВО(*) = 3
1965;SELECT T2.product_description FROM products_booked AS T1 JOIN products_for_hire AS T2 ON T1.product_id  =  T2.product_id WHERE T1.booked_amount  =  102.76;ВЫБРАТЬ T2.описание ИЗ регистрсведений.товарывбронировании КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.товарываренду КАК T2 ПО T1.товар = T2.ссылка ГДЕ T1.суммазабронировано = 102.76
1966;SELECT T3.booking_start_date ,   T3.booking_end_date FROM Products_for_hire AS T1 JOIN products_booked AS T2 ON T1.product_id  =  T2.product_id JOIN bookings AS T3 ON T2.booking_id  =  T3.booking_id WHERE T1.product_name  =  'Book collection A';"ВЫБРАТЬ T3.датаначалабронирования , T3.датаокончаниябронирования ИЗ справочник.товарываренду КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.товарывбронировании КАК T2 ПО T1.ссылка = T2.товар ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.бронирования КАК T3 ПО T2.бронирование = T3.ссылка ГДЕ T1.наименование = ""Book collection A"""
1967;SELECT T2.product_name FROM view_product_availability AS T1 JOIN products_for_hire AS T2 ON T1.product_id  =  T2.product_id WHERE T1.available_yn  =  1;ВЫБРАТЬ T2.наименование ИЗ регистрсведений.доступностьтоваров КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.товарываренду КАК T2 ПО T1.товар = T2.ссылка ГДЕ T1.доступен = 1
1968;SELECT count(DISTINCT product_type_code) FROM products_for_hire;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ кодтипатовара) ИЗ справочник.товарываренду
1969;SELECT first_name ,  last_name ,  gender_mf FROM customers WHERE good_or_bad_customer  =  'good' ORDER BY last_name;"ВЫБРАТЬ имя , фамилия , пол ИЗ справочник.клиенты ГДЕ качествоклиента = ""good"" УПОРЯДОЧИТЬ ПО фамилия"
1970;SELECT avg(amount_due) FROM payments;ВЫБРАТЬ СРЕДНЕЕ(суммакоплате) ИЗ документ.платежи
1971;SELECT max(booked_count) ,  min(booked_count) ,  avg(booked_count) FROM products_booked;ВЫБРАТЬ МАКСИМУМ(количествозабронировано) , МИНИМУМ(количествозабронировано) , СРЕДНЕЕ(количествозабронировано) ИЗ регистрсведений.товарывбронировании
1972;SELECT DISTINCT payment_type_code FROM payments;ВЫБРАТЬ РАЗЛИЧНЫЕ кодтипаплатежа ИЗ документ.платежи
1973;SELECT daily_hire_cost FROM Products_for_hire WHERE product_name LIKE '%Book%';"ВЫБРАТЬ стоимостьарендывдень ИЗ справочник.товарываренду ГДЕ наименование ПОДОБНО ""%Book%"""
1974;SELECT count(*) FROM Products_for_hire WHERE product_id NOT IN ( SELECT product_id FROM products_booked WHERE booked_amount  >  200 );ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.товарываренду ГДЕ товар НЕ В ( ВЫБРАТЬ товар ИЗ регистрсведений.товарывбронировании ГДЕ суммазабронировано > 200 )
1976;SELECT payment_date FROM payments WHERE amount_paid  >  300 OR payment_type_code  =  'Check';"ВЫБРАТЬ датаплатежа ИЗ документ.платежи ГДЕ суммаоплачено > 300 ИЛИ кодтипаплатежа = ""Check"""
1977;SELECT product_name ,  product_description FROM products_for_hire WHERE product_type_code  =  'Cutlery' AND daily_hire_cost  <  20;"ВЫБРАТЬ наименование , описание ИЗ справочник.товарываренду ГДЕ кодтипатовара = ""Cutlery"" И стоимостьарендывдень < 20"
1978;SELECT count(*) FROM phone;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.смартфоны
1979;SELECT Name FROM phone ORDER BY Price ASC;ВЫБРАТЬ ссылка ИЗ справочник.смартфоны УПОРЯДОЧИТЬ ПО цена ВОЗР
1980;SELECT Memory_in_G ,  Carrier FROM phone;ВЫБРАТЬ объемпамятигб , операторсвязи ИЗ справочник.смартфоны
1981;SELECT DISTINCT Carrier FROM phone WHERE Memory_in_G  >  32;ВЫБРАТЬ РАЗЛИЧНЫЕ операторсвязи ИЗ справочник.смартфоны ГДЕ объемпамятигб > 32
1982;"SELECT Name FROM phone WHERE Carrier  =  ""Sprint"" OR Carrier  =  ""TMobile""";"ВЫБРАТЬ ссылка ИЗ справочник.смартфоны ГДЕ операторсвязи = ""Sprint"" ИЛИ операторсвязи = ""TMobile"""
1983;SELECT Carrier FROM phone ORDER BY Price DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 операторсвязи ИЗ справочник.смартфоны УПОРЯДОЧИТЬ ПО цена УБЫВ
1984;SELECT Carrier ,  COUNT(*) FROM phone GROUP BY Carrier;ВЫБРАТЬ операторсвязи , КОЛИЧЕСТВО(*) ИЗ справочник.смартфоны СГРУППИРОВАТЬ ПО операторсвязи
1985;SELECT Carrier FROM phone GROUP BY Carrier ORDER BY COUNT(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 операторсвязи ИЗ справочник.смартфоны СГРУППИРОВАТЬ ПО операторсвязи УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
1987;SELECT T3.Name ,  T2.District FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID  =  T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID  =  T3.Phone_ID;ВЫБРАТЬ T3.ссылка , T2.район ИЗ регистрсведений.наличиетелефоновнарынке КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.рынки КАК T2 ПО T1.рынок = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.смартфоны КАК T3 ПО T1.смартфон = T3.наименование
1988;SELECT T3.Name ,  T2.District FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID  =  T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID  =  T3.Phone_ID ORDER BY T2.Ranking;ВЫБРАТЬ T3.ссылка , T2.район ИЗ регистрсведений.наличиетелефоновнарынке КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.рынки КАК T2 ПО T1.рынок = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.смартфоны КАК T3 ПО T1.смартфон = T3.наименование УПОРЯДОЧИТЬ ПО T2.рейтинг
1989;SELECT T3.Name FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID  =  T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID  =  T3.Phone_ID WHERE T2.Num_of_shops  >  50;ВЫБРАТЬ T3.ссылка ИЗ регистрсведений.наличиетелефоновнарынке КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.рынки КАК T2 ПО T1.рынок = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.смартфоны КАК T3 ПО T1.смартфон = T3.наименование ГДЕ T2.количествомагазинов > 50
1990;SELECT T2.Name ,  sum(T1.Num_of_stock) FROM phone_market AS T1 JOIN phone AS T2 ON T1.Phone_ID  =  T2.Phone_ID GROUP BY T2.Name;ВЫБРАТЬ T2.ссылка , СУММА(T1.количествонаскладе) ИЗ регистрсведений.наличиетелефоновнарынке КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.смартфоны КАК T2 ПО T1.смартфон = T2.наименование СГРУППИРОВАТЬ ПО T2.ссылка
1991;SELECT T2.Name FROM phone_market AS T1 JOIN phone AS T2 ON T1.Phone_ID  =  T2.Phone_ID GROUP BY T2.Name HAVING sum(T1.Num_of_stock)  >=  2000 ORDER BY sum(T1.Num_of_stock) DESC;ВЫБРАТЬ T2.ссылка ИЗ регистрсведений.наличиетелефоновнарынке КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.смартфоны КАК T2 ПО T1.смартфон = T2.наименование СГРУППИРОВАТЬ ПО T2.ссылка ИМЕЮЩИЕ СУММА(T1.количествонаскладе) >= 2000 УПОРЯДОЧИТЬ ПО СУММА(T1.количествонаскладе) УБЫВ
1992;SELECT Name FROM phone WHERE Phone_id NOT IN (SELECT Phone_ID FROM phone_market);ВЫБРАТЬ Name ИЗ справочник.смартфоны ГДЕ Phone_id НЕ В (ВЫБРАТЬ Phone_ID ИЗ регистрсведений.наличиетелефоновнарынке)
1993;SELECT count(*) FROM company;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ наименование
1994;SELECT count(*) FROM company;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ наименование
1995;SELECT company ,  rank FROM company ORDER BY Sales_billion DESC;ВЫБРАТЬ наименование , ранг ИЗ наименование УПОРЯДОЧИТЬ ПО продаживмлрд УБЫВ
1996;SELECT company ,  rank FROM company ORDER BY Sales_billion DESC;ВЫБРАТЬ наименование , ранг ИЗ наименование УПОРЯДОЧИТЬ ПО продаживмлрд УБЫВ
1997;SELECT company ,  main_industry FROM company WHERE headquarters != 'USA';"ВЫБРАТЬ наименование , основнаяотрасль ИЗ наименование ГДЕ штабквартира <> ""USA"""
1998;SELECT company ,  main_industry FROM company WHERE headquarters != 'USA';"ВЫБРАТЬ наименование , основнаяотрасль ИЗ наименование ГДЕ штабквартира <> ""USA"""
1999;SELECT company ,  headquarters FROM company ORDER BY market_value DESC;ВЫБРАТЬ наименование , штабквартира ИЗ наименование УПОРЯДОЧИТЬ ПО рыночнаястоимость УБЫВ
2000;SELECT company ,  headquarters FROM company ORDER BY market_value DESC;ВЫБРАТЬ наименование , штабквартира ИЗ наименование УПОРЯДОЧИТЬ ПО рыночнаястоимость УБЫВ
2001;SELECT min(market_value) ,  max(market_value) ,  avg(market_value) FROM company;ВЫБРАТЬ МИНИМУМ(рыночнаястоимость) , МАКСИМУМ(рыночнаястоимость) , СРЕДНЕЕ(рыночнаястоимость) ИЗ наименование
2002;SELECT min(market_value) ,  max(market_value) ,  avg(market_value) FROM company;ВЫБРАТЬ МИНИМУМ(рыночнаястоимость) , МАКСИМУМ(рыночнаястоимость) , СРЕДНЕЕ(рыночнаястоимость) ИЗ наименование
2003;SELECT DISTINCT main_industry FROM company;ВЫБРАТЬ РАЗЛИЧНЫЕ основнаяотрасль ИЗ наименование
2004;SELECT DISTINCT main_industry FROM company;ВЫБРАТЬ РАЗЛИЧНЫЕ основнаяотрасль ИЗ наименование
2005;SELECT headquarters ,  count(*) FROM company GROUP BY headquarters;ВЫБРАТЬ штабквартира , КОЛИЧЕСТВО(*) ИЗ наименование СГРУППИРОВАТЬ ПО штабквартира
2006;SELECT headquarters ,  count(*) FROM company GROUP BY headquarters;ВЫБРАТЬ штабквартира , КОЛИЧЕСТВО(*) ИЗ наименование СГРУППИРОВАТЬ ПО штабквартира
2007;SELECT main_industry ,  sum(market_value) FROM company GROUP BY main_industry;ВЫБРАТЬ основнаяотрасль , СУММА(рыночнаястоимость) ИЗ наименование СГРУППИРОВАТЬ ПО основнаяотрасль
2008;SELECT main_industry ,  sum(market_value) FROM company GROUP BY main_industry;ВЫБРАТЬ основнаяотрасль , СУММА(рыночнаястоимость) ИЗ наименование СГРУППИРОВАТЬ ПО основнаяотрасль
2009;SELECT main_industry ,  count(*) FROM company GROUP BY main_industry ORDER BY sum(market_value) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 основнаяотрасль , КОЛИЧЕСТВО(*) ИЗ наименование СГРУППИРОВАТЬ ПО основнаяотрасль УПОРЯДОЧИТЬ ПО СУММА(рыночнаястоимость) УБЫВ
2010;SELECT main_industry ,  count(*) FROM company GROUP BY main_industry ORDER BY sum(market_value) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 основнаяотрасль , КОЛИЧЕСТВО(*) ИЗ наименование СГРУППИРОВАТЬ ПО основнаяотрасль УПОРЯДОЧИТЬ ПО СУММА(рыночнаястоимость) УБЫВ
2011;SELECT headquarters FROM company WHERE main_industry  =  'Banking' GROUP BY headquarters HAVING count(*)  >=  2;"ВЫБРАТЬ штабквартира ИЗ наименование ГДЕ основнаяотрасль = ""Banking"" СГРУППИРОВАТЬ ПО штабквартира ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2"
2012;SELECT headquarters FROM company WHERE main_industry  =  'Banking' GROUP BY headquarters HAVING count(*)  >=  2;"ВЫБРАТЬ штабквартира ИЗ наименование ГДЕ основнаяотрасль = ""Banking"" СГРУППИРОВАТЬ ПО штабквартира ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2"
2013;SELECT station_id ,  LOCATION ,  manager_name FROM gas_station ORDER BY open_year;ВЫБРАТЬ ссылка , местоположение , имяменеджера ИЗ справочник.заправочныестанции УПОРЯДОЧИТЬ ПО годоткрытия
2014;SELECT station_id ,  LOCATION ,  manager_name FROM gas_station ORDER BY open_year;ВЫБРАТЬ ссылка , местоположение , имяменеджера ИЗ справочник.заправочныестанции УПОРЯДОЧИТЬ ПО годоткрытия
2015;SELECT count(*) FROM gas_station WHERE open_year BETWEEN 2000 AND 2005;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.заправочныестанции ГДЕ годоткрытия МЕЖДУ 2000 И 2005
2016;SELECT count(*) FROM gas_station WHERE open_year BETWEEN 2000 AND 2005;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.заправочныестанции ГДЕ годоткрытия МЕЖДУ 2000 И 2005
2017;SELECT LOCATION ,  count(*) FROM gas_station GROUP BY LOCATION ORDER BY count(*);ВЫБРАТЬ местоположение , КОЛИЧЕСТВО(*) ИЗ справочник.заправочныестанции СГРУППИРОВАТЬ ПО местоположение УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*)
2018;SELECT LOCATION ,  count(*) FROM gas_station GROUP BY LOCATION ORDER BY count(*);ВЫБРАТЬ местоположение , КОЛИЧЕСТВО(*) ИЗ справочник.заправочныестанции СГРУППИРОВАТЬ ПО местоположение УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*)
2023;SELECT T2.company ,  count(*) FROM station_company AS T1 JOIN company AS T2 ON T1.company_id  =  T2.company_id GROUP BY T1.company_id;ВЫБРАТЬ T2.наименование , КОЛИЧЕСТВО(*) ИЗ регистрсведений.принадлежностьстанцийкомпании КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.компании КАК T2 ПО T1.компания = T2.ссылка СГРУППИРОВАТЬ ПО T1.компания
2024;SELECT T2.company ,  count(*) FROM station_company AS T1 JOIN company AS T2 ON T1.company_id  =  T2.company_id GROUP BY T1.company_id;ВЫБРАТЬ T2.наименование , КОЛИЧЕСТВО(*) ИЗ регистрсведений.принадлежностьстанцийкомпании КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.компании КАК T2 ПО T1.компания = T2.ссылка СГРУППИРОВАТЬ ПО T1.компания
2025;SELECT company ,  main_industry FROM company WHERE company_id NOT IN (SELECT company_id FROM station_company);ВЫБРАТЬ company , main_industry ИЗ справочник.компании ГДЕ company_id НЕ В (ВЫБРАТЬ company_id ИЗ регистрсведений.принадлежностьстанцийкомпании)
2026;SELECT company ,  main_industry FROM company WHERE company_id NOT IN (SELECT company_id FROM station_company);ВЫБРАТЬ company , main_industry ИЗ справочник.компании ГДЕ company_id НЕ В (ВЫБРАТЬ company_id ИЗ регистрсведений.принадлежностьстанцийкомпании)
2027;SELECT T3.manager_name FROM station_company AS T1 JOIN company AS T2 ON T1.company_id  =  T2.company_id JOIN gas_station AS T3 ON T1.station_id  =  T3.station_id WHERE T2.company  =  'ExxonMobil';"ВЫБРАТЬ T3.имяменеджера ИЗ регистрсведений.принадлежностьстанцийкомпании КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.компании КАК T2 ПО T1.компания = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.заправочныестанции КАК T3 ПО T1.станция = T3.ссылка ГДЕ T2.наименование = ""ExxonMobil"""
2028;SELECT T3.manager_name FROM station_company AS T1 JOIN company AS T2 ON T1.company_id  =  T2.company_id JOIN gas_station AS T3 ON T1.station_id  =  T3.station_id WHERE T2.company  =  'ExxonMobil';"ВЫБРАТЬ T3.имяменеджера ИЗ регистрсведений.принадлежностьстанцийкомпании КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.компании КАК T2 ПО T1.компания = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.заправочныестанции КАК T3 ПО T1.станция = T3.ссылка ГДЕ T2.наименование = ""ExxonMobil"""
2029;SELECT T3.location FROM station_company AS T1 JOIN company AS T2 ON T1.company_id  =  T2.company_id JOIN gas_station AS T3 ON T1.station_id  =  T3.station_id WHERE T2.market_value  >  100;ВЫБРАТЬ T3.местоположение ИЗ регистрсведений.принадлежностьстанцийкомпании КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.компании КАК T2 ПО T1.компания = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.заправочныестанции КАК T3 ПО T1.станция = T3.ссылка ГДЕ T2.рыночнаястоимость > 100
2030;SELECT T3.location FROM station_company AS T1 JOIN company AS T2 ON T1.company_id  =  T2.company_id JOIN gas_station AS T3 ON T1.station_id  =  T3.station_id WHERE T2.market_value  >  100;ВЫБРАТЬ T3.местоположение ИЗ регистрсведений.принадлежностьстанцийкомпании КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.компании КАК T2 ПО T1.компания = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.заправочныестанции КАК T3 ПО T1.станция = T3.ссылка ГДЕ T2.рыночнаястоимость > 100
2031;SELECT manager_name FROM gas_station WHERE open_year  >  2000 GROUP BY manager_name ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 имяменеджера ИЗ справочник.заправочныестанции ГДЕ годоткрытия > 2000 СГРУППИРОВАТЬ ПО имяменеджера УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
2032;SELECT manager_name FROM gas_station WHERE open_year  >  2000 GROUP BY manager_name ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 имяменеджера ИЗ справочник.заправочныестанции ГДЕ годоткрытия > 2000 СГРУППИРОВАТЬ ПО имяменеджера УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
2033;SELECT LOCATION FROM gas_station ORDER BY open_year;ВЫБРАТЬ местоположение ИЗ справочник.заправочныестанции УПОРЯДОЧИТЬ ПО годоткрытия
2034;SELECT LOCATION FROM gas_station ORDER BY open_year;ВЫБРАТЬ местоположение ИЗ справочник.заправочныестанции УПОРЯДОЧИТЬ ПО годоткрытия
2035;SELECT rank ,  company ,  market_value FROM company WHERE main_industry  =  'Banking' ORDER BY sales_billion ,  profits_billion;"ВЫБРАТЬ ранг , наименование , рыночнаястоимость ИЗ наименование ГДЕ основнаяотрасль = ""Banking"" УПОРЯДОЧИТЬ ПО продаживмлрд , прибыльвмлрд"
2036;SELECT rank ,  company ,  market_value FROM company WHERE main_industry  =  'Banking' ORDER BY sales_billion ,  profits_billion;"ВЫБРАТЬ ранг , наименование , рыночнаястоимость ИЗ наименование ГДЕ основнаяотрасль = ""Banking"" УПОРЯДОЧИТЬ ПО продаживмлрд , прибыльвмлрд"
2037;SELECT T3.location ,  T3.Representative_Name FROM station_company AS T1 JOIN company AS T2 ON T1.company_id  =  T2.company_id JOIN gas_station AS T3 ON T1.station_id  =  T3.station_id ORDER BY T2.Assets_billion DESC LIMIT 3;ВЫБРАТЬ ПЕРВЫЕ 3 T3.местоположение , T3.имяпредставителя ИЗ регистрсведений.принадлежностьстанцийкомпании КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.компании КАК T2 ПО T1.компания = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.заправочныестанции КАК T3 ПО T1.станция = T3.ссылка УПОРЯДОЧИТЬ ПО T2.активывмлрд УБЫВ
2038;SELECT T3.location ,  T3.Representative_Name FROM station_company AS T1 JOIN company AS T2 ON T1.company_id  =  T2.company_id JOIN gas_station AS T3 ON T1.station_id  =  T3.station_id ORDER BY T2.Assets_billion DESC LIMIT 3;ВЫБРАТЬ ПЕРВЫЕ 3 T3.местоположение , T3.имяпредставителя ИЗ регистрсведений.принадлежностьстанцийкомпании КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.компании КАК T2 ПО T1.компания = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.заправочныестанции КАК T3 ПО T1.станция = T3.ссылка УПОРЯДОЧИТЬ ПО T2.активывмлрд УБЫВ
2039;SELECT count(*) FROM region;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.регионы
2040;SELECT count(*) FROM region;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.регионы
2041;SELECT DISTINCT region_name FROM region ORDER BY Label;ВЫБРАТЬ РАЗЛИЧНЫЕ наименование ИЗ справочник.регионы УПОРЯДОЧИТЬ ПО метка
2042;SELECT DISTINCT region_name FROM region ORDER BY Label;ВЫБРАТЬ РАЗЛИЧНЫЕ наименование ИЗ справочник.регионы УПОРЯДОЧИТЬ ПО метка
2043;SELECT count(DISTINCT party_name) FROM party;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ наименование) ИЗ справочник.партии
2044;SELECT count(DISTINCT party_name) FROM party;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ наименование) ИЗ справочник.партии
2045;SELECT minister ,  took_office ,  left_office FROM party ORDER BY left_office;ВЫБРАТЬ министр , датаначалаполномочий , датаокончанияполномочий ИЗ справочник.партии УПОРЯДОЧИТЬ ПО датаокончанияполномочий
2046;SELECT minister ,  took_office ,  left_office FROM party ORDER BY left_office;ВЫБРАТЬ министр , датаначалаполномочий , датаокончанияполномочий ИЗ справочник.партии УПОРЯДОЧИТЬ ПО датаокончанияполномочий
2047;SELECT minister FROM party WHERE took_office  >  1961 OR took_office  <  1959;ВЫБРАТЬ министр ИЗ справочник.партии ГДЕ датаначалаполномочий > 1961 ИЛИ датаначалаполномочий < 1959
2048;SELECT minister FROM party WHERE took_office  >  1961 OR took_office  <  1959;ВЫБРАТЬ министр ИЗ справочник.партии ГДЕ датаначалаполномочий > 1961 ИЛИ датаначалаполномочий < 1959
2049;SELECT minister FROM party WHERE party_name != 'Progress Party';"ВЫБРАТЬ министр ИЗ справочник.партии ГДЕ наименование <> ""Progress Party"""
2050;SELECT minister FROM party WHERE party_name != 'Progress Party';"ВЫБРАТЬ министр ИЗ справочник.партии ГДЕ наименование <> ""Progress Party"""
2051;SELECT minister ,  party_name FROM party ORDER BY took_office DESC;ВЫБРАТЬ министр , наименование ИЗ справочник.партии УПОРЯДОЧИТЬ ПО датаначалаполномочий УБЫВ
2052;SELECT minister ,  party_name FROM party ORDER BY took_office DESC;ВЫБРАТЬ министр , наименование ИЗ справочник.партии УПОРЯДОЧИТЬ ПО датаначалаполномочий УБЫВ
2053;SELECT minister FROM party ORDER BY left_office DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 министр ИЗ справочник.партии УПОРЯДОЧИТЬ ПО датаокончанияполномочий УБЫВ
2054;SELECT minister FROM party ORDER BY left_office DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 министр ИЗ справочник.партии УПОРЯДОЧИТЬ ПО датаокончанияполномочий УБЫВ
2055;SELECT T1.member_name ,  T2.party_name FROM Member AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id;ВЫБРАТЬ T1.наименование , T2.наименование ИЗ справочник.депутаты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.партии КАК T2 ПО T1.партия = T2.ссылка
2056;SELECT T1.member_name ,  T2.party_name FROM Member AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id;ВЫБРАТЬ T1.наименование , T2.наименование ИЗ справочник.депутаты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.партии КАК T2 ПО T1.партия = T2.ссылка
2057;SELECT T2.party_name ,  count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id GROUP BY T1.party_id;ВЫБРАТЬ T2.наименование , КОЛИЧЕСТВО(*) ИЗ справочник.депутаты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.партии КАК T2 ПО T1.партия = T2.ссылка СГРУППИРОВАТЬ ПО T1.партия
2058;SELECT T2.party_name ,  count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id GROUP BY T1.party_id;ВЫБРАТЬ T2.наименование , КОЛИЧЕСТВО(*) ИЗ справочник.депутаты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.партии КАК T2 ПО T1.партия = T2.ссылка СГРУППИРОВАТЬ ПО T1.партия
2059;SELECT T2.party_name FROM Member AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id GROUP BY T1.party_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.наименование ИЗ справочник.депутаты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.партии КАК T2 ПО T1.партия = T2.ссылка СГРУППИРОВАТЬ ПО T1.партия УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
2060;SELECT T2.party_name FROM Member AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id GROUP BY T1.party_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.наименование ИЗ справочник.депутаты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.партии КАК T2 ПО T1.партия = T2.ссылка СГРУППИРОВАТЬ ПО T1.партия УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
2061;SELECT T1.party_name ,  T2.region_name FROM party AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id;ВЫБРАТЬ T1.наименование , T2.наименование ИЗ справочник.партии КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.регионы КАК T2 ПО T1.регион = T2.ссылка
2062;SELECT T1.party_name ,  T2.region_name FROM party AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id;ВЫБРАТЬ T1.наименование , T2.наименование ИЗ справочник.партии КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.регионы КАК T2 ПО T1.регион = T2.ссылка
2063;SELECT party_name FROM party WHERE party_id NOT IN (SELECT party_id FROM Member);ВЫБРАТЬ party_name ИЗ справочник.партии ГДЕ party_id НЕ В (ВЫБРАТЬ party_id ИЗ справочник.депутаты)
2064;SELECT party_name FROM party WHERE party_id NOT IN (SELECT party_id FROM Member);ВЫБРАТЬ party_name ИЗ справочник.партии ГДЕ party_id НЕ В (ВЫБРАТЬ party_id ИЗ справочник.депутаты)
2067;"SELECT T1.member_name FROM Member AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id WHERE T2.Party_name != ""Progress Party""";"ВЫБРАТЬ T1.наименование ИЗ справочник.депутаты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.партии КАК T2 ПО T1.партия = T2.ссылка ГДЕ T2.наименование <> ""Progress Party"""
2068;"SELECT T1.member_name FROM Member AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id WHERE T2.Party_name != ""Progress Party""";"ВЫБРАТЬ T1.наименование ИЗ справочник.депутаты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.партии КАК T2 ПО T1.партия = T2.ссылка ГДЕ T2.наименование <> ""Progress Party"""
2069;SELECT count(*) FROM party_events;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.событияпартий
2070;SELECT count(*) FROM party_events;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.событияпартий
2071;SELECT T2.party_name ,  count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id GROUP BY T1.party_id;ВЫБРАТЬ T2.наименование , КОЛИЧЕСТВО(*) ИЗ регистрсведений.событияпартий КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.партии КАК T2 ПО T1.партия = T2.ссылка СГРУППИРОВАТЬ ПО T1.партия
2072;SELECT T2.party_name ,  count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id GROUP BY T1.party_id;ВЫБРАТЬ T2.наименование , КОЛИЧЕСТВО(*) ИЗ регистрсведений.событияпартий КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.партии КАК T2 ПО T1.партия = T2.ссылка СГРУППИРОВАТЬ ПО T1.партия
2075;SELECT T2.party_name FROM party_events AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id GROUP BY T1.party_id HAVING count(*)  >=  2;ВЫБРАТЬ T2.наименование ИЗ регистрсведений.событияпартий КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.партии КАК T2 ПО T1.партия = T2.ссылка СГРУППИРОВАТЬ ПО T1.партия ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
2076;SELECT T2.party_name FROM party_events AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id GROUP BY T1.party_id HAVING count(*)  >=  2;ВЫБРАТЬ T2.наименование ИЗ регистрсведений.событияпартий КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.партии КАК T2 ПО T1.партия = T2.ссылка СГРУППИРОВАТЬ ПО T1.партия ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
2077;SELECT T1.member_name FROM member AS T1 JOIN party_events AS T2 ON T1.member_id  =  T2.member_in_charge_id GROUP BY T2.member_in_charge_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.наименование ИЗ справочник.депутаты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.событияпартий КАК T2 ПО T1.ссылка = T2.ответственныйдепутат СГРУППИРОВАТЬ ПО T2.ответственныйдепутат УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
2078;SELECT T1.member_name FROM member AS T1 JOIN party_events AS T2 ON T1.member_id  =  T2.member_in_charge_id GROUP BY T2.member_in_charge_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.наименование ИЗ справочник.депутаты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.событияпартий КАК T2 ПО T1.ссылка = T2.ответственныйдепутат СГРУППИРОВАТЬ ПО T2.ответственныйдепутат УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
2079;SELECT event_name FROM party_events GROUP BY event_name HAVING count(*)  >  2;ВЫБРАТЬ наименование ИЗ регистрсведений.событияпартий СГРУППИРОВАТЬ ПО наименование ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 2
2080;SELECT event_name FROM party_events GROUP BY event_name HAVING count(*)  >  2;ВЫБРАТЬ наименование ИЗ регистрсведений.событияпартий СГРУППИРОВАТЬ ПО наименование ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 2
2081;"SELECT count(*) FROM region AS t1 JOIN party AS t2 ON t1.region_id  =  t2.region_id JOIN party_events AS t3 ON t2.party_id  =  t3.party_id WHERE t1.region_name  =  ""United Kingdom"" AND t3.Event_Name  =  ""Annaual Meeting""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.регионы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.партии КАК t2 ПО t1.ссылка = t2.регион ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.событияпартий КАК t3 ПО t2.ссылка = t3.партия ГДЕ t1.наименование = ""United Kingdom"" И t3.наименование = ""Annaual Meeting"""
2082;"SELECT count(*) FROM region AS t1 JOIN party AS t2 ON t1.region_id  =  t2.region_id JOIN party_events AS t3 ON t2.party_id  =  t3.party_id WHERE t1.region_name  =  ""United Kingdom"" AND t3.Event_Name  =  ""Annaual Meeting""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.регионы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.партии КАК t2 ПО t1.ссылка = t2.регион ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.событияпартий КАК t3 ПО t2.ссылка = t3.партия ГДЕ t1.наименование = ""United Kingdom"" И t3.наименование = ""Annaual Meeting"""
2083;SELECT count(*) FROM pilot;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.пилоты
2084;SELECT Pilot_name FROM pilot ORDER BY Rank ASC;ВЫБРАТЬ наименование ИЗ справочник.пилоты УПОРЯДОЧИТЬ ПО ранг ВОЗР
2085;SELECT POSITION ,  Team FROM pilot;ВЫБРАТЬ должность , команда ИЗ справочник.пилоты
2086;SELECT DISTINCT POSITION FROM pilot WHERE Age  >  30;ВЫБРАТЬ РАЗЛИЧНЫЕ должность ИЗ справочник.пилоты ГДЕ возраст > 30
2087;"SELECT Pilot_name FROM pilot WHERE Team  =  ""Bradley"" OR Team  =  ""Fordham""";"ВЫБРАТЬ наименование ИЗ справочник.пилоты ГДЕ команда = ""Bradley"" ИЛИ команда = ""Fordham"""
2088;SELECT Join_Year FROM pilot ORDER BY Rank ASC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 годприсоединения ИЗ справочник.пилоты УПОРЯДОЧИТЬ ПО ранг ВОЗР
2089;SELECT Nationality ,  COUNT(*) FROM pilot GROUP BY Nationality;ВЫБРАТЬ национальность , КОЛИЧЕСТВО(*) ИЗ справочник.пилоты СГРУППИРОВАТЬ ПО национальность
2090;SELECT Nationality FROM pilot GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 национальность ИЗ справочник.пилоты СГРУППИРОВАТЬ ПО национальность УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
2092;SELECT T3.Pilot_name ,  T2.Model FROM pilot_record AS T1 JOIN aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN pilot AS T3 ON T1.Pilot_ID  =  T3.Pilot_ID;ВЫБРАТЬ T3.наименование , T2.модель ИЗ регистрсведений.рейсыпилотов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.самолеты КАК T2 ПО T1.самолет = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.пилоты КАК T3 ПО T1.пилот = T3.ссылка
2093;SELECT T3.Pilot_name ,  T2.Fleet_Series FROM pilot_record AS T1 JOIN aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN pilot AS T3 ON T1.Pilot_ID  =  T3.Pilot_ID ORDER BY T3.Rank;ВЫБРАТЬ T3.наименование , T2.серияпарка ИЗ регистрсведений.рейсыпилотов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.самолеты КАК T2 ПО T1.самолет = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.пилоты КАК T3 ПО T1.пилот = T3.ссылка УПОРЯДОЧИТЬ ПО T3.ранг
2094;SELECT T2.Fleet_Series FROM pilot_record AS T1 JOIN aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN pilot AS T3 ON T1.Pilot_ID  =  T3.Pilot_ID WHERE T3.Age  <  34;ВЫБРАТЬ T2.серияпарка ИЗ регистрсведений.рейсыпилотов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.самолеты КАК T2 ПО T1.самолет = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.пилоты КАК T3 ПО T1.пилот = T3.ссылка ГДЕ T3.возраст < 34
2095;SELECT T2.Pilot_name ,  COUNT(*) FROM pilot_record AS T1 JOIN pilot AS T2 ON T1.pilot_ID  =  T2.pilot_ID GROUP BY T2.Pilot_name;ВЫБРАТЬ T2.наименование , КОЛИЧЕСТВО(*) ИЗ регистрсведений.рейсыпилотов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.пилоты КАК T2 ПО T1.пилот = T2.ссылка СГРУППИРОВАТЬ ПО T2.наименование
2096;SELECT T2.Pilot_name ,  COUNT(*) FROM pilot_record AS T1 JOIN pilot AS T2 ON T1.pilot_ID  =  T2.pilot_ID GROUP BY T2.Pilot_name HAVING COUNT(*)  >  1;ВЫБРАТЬ T2.наименование , КОЛИЧЕСТВО(*) ИЗ регистрсведений.рейсыпилотов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.пилоты КАК T2 ПО T1.пилот = T2.ссылка СГРУППИРОВАТЬ ПО T2.наименование ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 1
2097;SELECT Pilot_name FROM pilot WHERE Pilot_ID NOT IN (SELECT Pilot_ID FROM pilot_record);ВЫБРАТЬ Pilot_name ИЗ справочник.пилоты ГДЕ Pilot_ID НЕ В (ВЫБРАТЬ Pilot_ID ИЗ регистрсведений.рейсыпилотов)
2098;"SELECT document_status_code FROM Ref_Document_Status;";"ВЫБРАТЬ кодстатусадокумента ИЗ справочник.статусыдокументов;"
2099;"SELECT document_status_description FROM Ref_Document_Status WHERE document_status_code = ""working"";";"ВЫБРАТЬ описаниестатусадокумента ИЗ справочник.статусыдокументов ГДЕ кодстатусадокумента = ""working"";"
2100;"SELECT document_type_code FROM Ref_Document_Types;";"ВЫБРАТЬ кодвидадокумента ИЗ справочник.видыдокументов;"
2101;"SELECT document_type_description FROM Ref_Document_Types WHERE document_type_code = ""Paper"";";"ВЫБРАТЬ описаниевидадокумента ИЗ справочник.видыдокументов ГДЕ кодвидадокумента = ""Paper"";"
2102;"SELECT shipping_agent_name FROM Ref_Shipping_Agents;";"ВЫБРАТЬ наименованиеэкспедитора ИЗ справочник.экспедиторы;"
2103;"SELECT shipping_agent_code FROM Ref_Shipping_Agents WHERE shipping_agent_name = ""UPS"";";"ВЫБРАТЬ кодэкспедитора ИЗ справочник.экспедиторы ГДЕ наименованиеэкспедитора = ""UPS"";"
2104;"SELECT role_code FROM ROLES;";"ВЫБРАТЬ кодроли ИЗ справочник.роли;"
2105;"SELECT role_description FROM ROLES WHERE role_code = ""ED"";";"ВЫБРАТЬ описаниероли ИЗ справочник.роли ГДЕ кодроли = ""ED"";"
2106;"SELECT count(*) FROM Employees;";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.сотрудники;"
2107;"SELECT T1.role_description FROM ROLES AS T1 JOIN Employees AS T2 ON T1.role_code = T2.role_code WHERE T2.employee_name = ""Koby"";";"ВЫБРАТЬ T1.описаниероли ИЗ справочник.роли КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сотрудники КАК T2 ПО T1.кодроли = T2.кодроли ГДЕ T2.наименование = ""Koby"";"
2108;"SELECT document_id ,  receipt_date FROM Documents;";"ВЫБРАТЬ ссылка , датапоступления ИЗ документ.документы;"
2109;"SELECT T1.role_description ,  T2.role_code ,  count(*) FROM ROLES AS T1 JOIN Employees AS T2 ON T1.role_code = T2.role_code GROUP BY T2.role_code;";"ВЫБРАТЬ T1.описаниероли , T2.кодроли , КОЛИЧЕСТВО(*) ИЗ справочник.роли КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сотрудники КАК T2 ПО T1.кодроли = T2.кодроли СГРУППИРОВАТЬ ПО T2.кодроли;"
2110;"SELECT Roles.role_description , count(Employees.employee_id) FROM ROLES JOIN Employees ON Employees.role_code = Roles.role_code GROUP BY Employees.role_code HAVING count(Employees.employee_id)  >  1;";"ВЫБРАТЬ Roles.описаниероли , КОЛИЧЕСТВО(Employees.employee_id) ИЗ справочник.роли ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сотрудники ПО Employees.кодроли = Roles.кодроли СГРУППИРОВАТЬ ПО Employees.кодроли ИМЕЮЩИЕ КОЛИЧЕСТВО(Employees.employee_id) > 1;"
2111;"SELECT Ref_Document_Status.document_status_description FROM Ref_Document_Status JOIN Documents ON Documents.document_status_code = Ref_Document_Status.document_status_code WHERE Documents.document_id = 1;";"ВЫБРАТЬ Ref_Document_Status.описаниестатусадокумента ИЗ справочник.статусыдокументов ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.документы ПО Documents.кодстатусадокумента = Ref_Document_Status.кодстатусадокумента ГДЕ Documents.document_id = 1;"
2112;"SELECT count(*) FROM Documents WHERE document_status_code = ""done"";";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ документ.документы ГДЕ кодстатусадокумента = ""done"";"
2113;"SELECT document_type_code FROM Documents WHERE document_id = 2;";"ВЫБРАТЬ кодвидадокумента ИЗ документ.документы ГДЕ ссылка = 2;"
2114;"SELECT document_id FROM Documents WHERE document_status_code = ""done"" AND document_type_code = ""Paper"";";"ВЫБРАТЬ ссылка ИЗ документ.документы ГДЕ кодстатусадокумента = ""done"" И кодвидадокумента = ""Paper"";"
2115;"SELECT Ref_Shipping_Agents.shipping_agent_name FROM Ref_Shipping_Agents JOIN Documents ON Documents.shipping_agent_code = Ref_Shipping_Agents.shipping_agent_code WHERE Documents.document_id = 2;";"ВЫБРАТЬ Ref_Shipping_Agents.наименованиеэкспедитора ИЗ справочник.экспедиторы ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.документы ПО Documents.кодэкспедитора = Ref_Shipping_Agents.кодэкспедитора ГДЕ Documents.document_id = 2;"
2116;"SELECT count(*) FROM Ref_Shipping_Agents JOIN Documents ON Documents.shipping_agent_code = Ref_Shipping_Agents.shipping_agent_code WHERE Ref_Shipping_Agents.shipping_agent_name = ""USPS"";";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.экспедиторы ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.документы ПО Documents.кодэкспедитора = Ref_Shipping_Agents.кодэкспедитора ГДЕ Ref_Shipping_Agents.наименованиеэкспедитора = ""USPS"";"
2117;"SELECT Ref_Shipping_Agents.shipping_agent_name , count(Documents.document_id) FROM Ref_Shipping_Agents JOIN Documents ON Documents.shipping_agent_code = Ref_Shipping_Agents.shipping_agent_code GROUP BY Ref_Shipping_Agents.shipping_agent_code ORDER BY count(Documents.document_id) DESC LIMIT 1;";"ВЫБРАТЬ Ref_Shipping_Agents.наименованиеэкспедитора , КОЛИЧЕСТВО(Documents.document_id) ИЗ справочник.экспедиторы ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.документы ПО Documents.кодэкспедитора = Ref_Shipping_Agents.кодэкспедитора СГРУППИРОВАТЬ ПО Ref_Shipping_Agents.кодэкспедитора УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(Documents.document_id) УБЫВ LIMIT 1;"
2118;"SELECT receipt_date FROM Documents WHERE document_id = 3;";"ВЫБРАТЬ датапоступления ИЗ документ.документы ГДЕ ссылка = 3;"
2119;"SELECT Addresses.address_details FROM Addresses JOIN Documents_Mailed ON Documents_Mailed.mailed_to_address_id = Addresses.address_id WHERE document_id = 4;";"ВЫБРАТЬ Addresses.описаниеадреса ИЗ справочник.адреса ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.отправленныедокументы ПО Documents_Mailed.mailed_to_address_id = Addresses.ссылка ГДЕ document_id = 4;"
2120;"SELECT mailing_date FROM Documents_Mailed WHERE document_id = 7;";"ВЫБРАТЬ датаотправки ИЗ регистрсведений.отправленныедокументы ГДЕ документ = 7;"
2123;"SELECT draft_details FROM Document_Drafts WHERE document_id = 7;";"ВЫБРАТЬ описаниечерновика ИЗ регистрсведений.черновикидокументов ГДЕ документ = 7;"
2124;"SELECT count(*) FROM Draft_Copies WHERE document_id = 2;";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.копиичерновиков ГДЕ документ = 2;"
2125;"SELECT document_id , count(copy_number) FROM Draft_Copies GROUP BY document_id ORDER BY count(copy_number) DESC LIMIT 1;";"ВЫБРАТЬ документ , КОЛИЧЕСТВО(номеркопии) ИЗ регистрсведений.копиичерновиков СГРУППИРОВАТЬ ПО документ УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(номеркопии) УБЫВ LIMIT 1;"
2126;"SELECT document_id , count(*) FROM Draft_Copies GROUP BY document_id HAVING count(*)  >  1;";"ВЫБРАТЬ документ , КОЛИЧЕСТВО(*) ИЗ регистрсведений.копиичерновиков СГРУППИРОВАТЬ ПО документ ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 1;"
2127;"SELECT Employees.employee_name FROM Employees JOIN Circulation_History ON Circulation_History.employee_id = Employees.employee_id WHERE Circulation_History.document_id = 1;";"ВЫБРАТЬ Employees.наименование ИЗ справочник.сотрудники ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.историяциркуляции ПО Circulation_History.ссылка = Employees.ссылка ГДЕ Circulation_History.document_id = 1;"
2129;"SELECT Employees.employee_name , count(*) FROM Employees JOIN Circulation_History ON Circulation_History.employee_id = Employees.employee_id GROUP BY Circulation_History.document_id , Circulation_History.draft_number , Circulation_History.copy_number ORDER BY count(*) DESC LIMIT 1;";"ВЫБРАТЬ Employees.наименование , КОЛИЧЕСТВО(*) ИЗ справочник.сотрудники ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.историяциркуляции ПО Circulation_History.ссылка = Employees.ссылка СГРУППИРОВАТЬ ПО Circulation_History.document_id , Circulation_History.draft_number , Circulation_History.copy_number УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ LIMIT 1;"
2130;"SELECT document_id ,  count(DISTINCT employee_id) FROM Circulation_History GROUP BY document_id;";"ВЫБРАТЬ документ , КОЛИЧЕСТВО(РАЗЛИЧНЫЕ сотрудник) ИЗ регистрсведений.историяциркуляции СГРУППИРОВАТЬ ПО документ;"
2131;SELECT dname FROM department ORDER BY mgr_start_date;ВЫБРАТЬ наименование ИЗ справочник.подразделения УПОРЯДОЧИТЬ ПО датаназначения
2132;SELECT Dependent_name FROM dependent WHERE relationship  =  'Spouse';"ВЫБРАТЬ имяиждивенца ИЗ регистрсведений.иждивенцы ГДЕ родство = ""Spouse"""
2133;SELECT count(*) FROM dependent WHERE sex  =  'F';"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.иждивенцы ГДЕ пол = ""F"""
2134;SELECT t1.dname FROM department AS t1 JOIN dept_locations AS t2 ON t1.dnumber  =  t2.dnumber WHERE t2.dlocation  =  'Houston';"ВЫБРАТЬ t1.наименование ИЗ справочник.подразделения КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.локацииподразделений КАК t2 ПО t1.ссылка = t2.подразделение ГДЕ t2.локация = ""Houston"""
2135;SELECT fname ,  lname FROM employee WHERE salary  >  30000;ВЫБРАТЬ имя , фамилия ИЗ справочник.сотрудники ГДЕ зарплата > 30000
2136;SELECT count(*) ,  sex FROM employee WHERE salary  <  50000 GROUP BY sex;ВЫБРАТЬ КОЛИЧЕСТВО(*) , пол ИЗ справочник.сотрудники ГДЕ зарплата < 50000 СГРУППИРОВАТЬ ПО пол
2137;SELECT fname ,  lname ,  address FROM employee ORDER BY Bdate;ВЫБРАТЬ имя , фамилия , адрес ИЗ справочник.сотрудники УПОРЯДОЧИТЬ ПО датарождения
2138;SELECT T1.event_details FROM EVENTS AS T1 JOIN Services AS T2 ON T1.Service_ID  =  T2.Service_ID WHERE T2.Service_Type_Code  =  'Marriage';"ВЫБРАТЬ T1.деталисобытия ИЗ документ.события КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сервисы КАК T2 ПО T1.сервис = T2.ссылка ГДЕ T2.кодтипасервиса = ""Marriage"""
2139;SELECT T1.event_id ,  T1.event_details FROM EVENTS AS T1 JOIN Participants_in_Events AS T2 ON T1.Event_ID  =  T2.Event_ID GROUP BY T1.Event_ID HAVING count(*)  >  1;ВЫБРАТЬ T1.ссылка , T1.деталисобытия ИЗ документ.события КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.участникивсобытиях КАК T2 ПО T1.ссылка = T2.событие СГРУППИРОВАТЬ ПО T1.ссылка ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 1
2140;SELECT T1.Participant_ID ,  T1.Participant_Type_Code ,  count(*) FROM Participants AS T1 JOIN Participants_in_Events AS T2 ON T1.Participant_ID  =  T2.Participant_ID GROUP BY T1.Participant_ID;ВЫБРАТЬ T1.ссылка , T1.кодтипаучастника , КОЛИЧЕСТВО(*) ИЗ справочник.участники КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.участникивсобытиях КАК T2 ПО T1.ссылка = T2.участник СГРУППИРОВАТЬ ПО T1.ссылка
2141;SELECT Participant_ID ,  Participant_Type_Code ,  Participant_Details FROM  Participants;ВЫБРАТЬ ссылка , кодтипаучастника , детали ИЗ справочник.участники
2142;SELECT count(*) FROM participants WHERE participant_type_code  =  'Organizer';"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.участники ГДЕ кодтипаучастника = ""Organizer"""
2143;SELECT service_type_code FROM services ORDER BY service_type_code;ВЫБРАТЬ кодтипасервиса ИЗ справочник.сервисы УПОРЯДОЧИТЬ ПО кодтипасервиса
2144;SELECT service_id ,  event_details FROM EVENTS;ВЫБРАТЬ сервис , деталисобытия ИЗ документ.события
2145;SELECT count(*) FROM participants AS T1 JOIN Participants_in_Events AS T2 ON T1.Participant_ID  =  T2.Participant_ID WHERE T1.participant_details LIKE '%Dr.%';"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.участники КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.участникивсобытиях КАК T2 ПО T1.ссылка = T2.участник ГДЕ T1.детали ПОДОБНО ""%Dr.%"""
2146;SELECT participant_type_code FROM participants GROUP BY participant_type_code ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 кодтипаучастника ИЗ справочник.участники СГРУППИРОВАТЬ ПО кодтипаучастника УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
2147;SELECT T3.service_id ,  T4.Service_Type_Code FROM participants AS T1 JOIN Participants_in_Events AS T2 ON T1.Participant_ID  =  T2.Participant_ID JOIN EVENTS AS T3 ON T2.Event_ID   =  T3.Event_ID JOIN services AS T4 ON T3.service_id  =  T4.service_id GROUP BY T3.service_id ORDER BY count(*) ASC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T3.сервис , T4.кодтипасервиса ИЗ справочник.участники КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.участникивсобытиях КАК T2 ПО T1.ссылка = T2.участник ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.события КАК T3 ПО T2.событие = T3.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сервисы КАК T4 ПО T3.сервис = T4.ссылка СГРУППИРОВАТЬ ПО T3.сервис УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) ВОЗР
2148;SELECT Event_ID FROM Participants_in_Events GROUP BY Event_ID ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 событие ИЗ регистрсведений.участникивсобытиях СГРУППИРОВАТЬ ПО событие УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
2151;SELECT count(*) FROM EVENTS WHERE event_id NOT IN (SELECT event_id FROM Participants_in_Events);ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ документ.события ГДЕ event_id НЕ В (ВЫБРАТЬ event_id ИЗ регистрсведений.участникивсобытиях)
2152;SELECT count(DISTINCT participant_id) FROM participants_in_Events;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ участник) ИЗ регистрсведений.участникивсобытиях
2153;SELECT name FROM races ORDER BY date DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование ИЗ справочник.гонки УПОРЯДОЧИТЬ ПО дата УБЫВ
2154;SELECT name FROM races ORDER BY date DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование ИЗ справочник.гонки УПОРЯДОЧИТЬ ПО дата УБЫВ
2155;SELECT name ,  date FROM races ORDER BY date DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование , дата ИЗ справочник.гонки УПОРЯДОЧИТЬ ПО дата УБЫВ
2156;SELECT name ,  date FROM races ORDER BY date DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование , дата ИЗ справочник.гонки УПОРЯДОЧИТЬ ПО дата УБЫВ
2157;SELECT name FROM races WHERE YEAR = 2017;ВЫБРАТЬ наименование ИЗ справочник.гонки ГДЕ год = 2017
2158;SELECT name FROM races WHERE YEAR = 2017;ВЫБРАТЬ наименование ИЗ справочник.гонки ГДЕ год = 2017
2159;SELECT DISTINCT name FROM races WHERE YEAR BETWEEN 2014 AND 2017;ВЫБРАТЬ РАЗЛИЧНЫЕ наименование ИЗ справочник.гонки ГДЕ год МЕЖДУ 2014 И 2017
2160;SELECT DISTINCT name FROM races WHERE YEAR BETWEEN 2014 AND 2017;ВЫБРАТЬ РАЗЛИЧНЫЕ наименование ИЗ справочник.гонки ГДЕ год МЕЖДУ 2014 И 2017
2161;SELECT DISTINCT T1.forename ,  T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid WHERE T2.milliseconds < 93000;ВЫБРАТЬ РАЗЛИЧНЫЕ T1.имя , T1.фамилия ИЗ справочник.гонщики КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.временакругов КАК T2 ПО T1.ссылка = T2.гонщик ГДЕ T2.миллисекунд < 93000
2162;SELECT DISTINCT T1.forename ,  T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid WHERE T2.milliseconds < 93000;ВЫБРАТЬ РАЗЛИЧНЫЕ T1.имя , T1.фамилия ИЗ справочник.гонщики КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.временакругов КАК T2 ПО T1.ссылка = T2.гонщик ГДЕ T2.миллисекунд < 93000
2163;SELECT DISTINCT T1.driverid ,  T1.nationality FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid WHERE T2.milliseconds >  100000;ВЫБРАТЬ РАЗЛИЧНЫЕ T1.ссылка , T1.национальность ИЗ справочник.гонщики КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.временакругов КАК T2 ПО T1.ссылка = T2.гонщик ГДЕ T2.миллисекунд > 100000
2164;SELECT DISTINCT T1.driverid ,  T1.nationality FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid WHERE T2.milliseconds >  100000;ВЫБРАТЬ РАЗЛИЧНЫЕ T1.ссылка , T1.национальность ИЗ справочник.гонщики КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.временакругов КАК T2 ПО T1.ссылка = T2.гонщик ГДЕ T2.миллисекунд > 100000
2165;SELECT T1.forename ,  T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid ORDER BY T2.milliseconds LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.имя , T1.фамилия ИЗ справочник.гонщики КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.временакругов КАК T2 ПО T1.ссылка = T2.гонщик УПОРЯДОЧИТЬ ПО T2.миллисекунд
2166;SELECT T1.forename ,  T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid ORDER BY T2.milliseconds LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.имя , T1.фамилия ИЗ справочник.гонщики КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.временакругов КАК T2 ПО T1.ссылка = T2.гонщик УПОРЯДОЧИТЬ ПО T2.миллисекунд
2167;SELECT T1.driverid ,  T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid ORDER BY T2.milliseconds DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.ссылка , T1.фамилия ИЗ справочник.гонщики КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.временакругов КАК T2 ПО T1.ссылка = T2.гонщик УПОРЯДОЧИТЬ ПО T2.миллисекунд УБЫВ
2168;SELECT T1.driverid ,  T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid ORDER BY T2.milliseconds DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.ссылка , T1.фамилия ИЗ справочник.гонщики КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.временакругов КАК T2 ПО T1.ссылка = T2.гонщик УПОРЯДОЧИТЬ ПО T2.миллисекунд УБЫВ
2169;SELECT T1.driverid ,  T1.forename ,  T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid WHERE POSITION  =  '1' GROUP BY T1.driverid HAVING count(*)  >=  2;"ВЫБРАТЬ T1.ссылка , T1.имя , T1.фамилия ИЗ справочник.гонщики КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.временакругов КАК T2 ПО T1.ссылка = T2.гонщик ГДЕ POSITION = ""1"" СГРУППИРОВАТЬ ПО T1.ссылка ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2"
2170;SELECT T1.driverid ,  T1.forename ,  T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid WHERE POSITION  =  '1' GROUP BY T1.driverid HAVING count(*)  >=  2;"ВЫБРАТЬ T1.ссылка , T1.имя , T1.фамилия ИЗ справочник.гонщики КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.временакругов КАК T2 ПО T1.ссылка = T2.гонщик ГДЕ POSITION = ""1"" СГРУППИРОВАТЬ ПО T1.ссылка ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2"
2171;"SELECT count(*) FROM results AS T1 JOIN races AS T2 ON T1.raceid = T2.raceid WHERE T2.name = ""Australian Grand Prix"" AND YEAR = 2009";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.результатыгонок КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.гонки КАК T2 ПО T1.гонка = T2.ссылка ГДЕ T2.наименование = ""Australian Grand Prix"" И YEAR = 2009"
2172;"SELECT count(*) FROM results AS T1 JOIN races AS T2 ON T1.raceid = T2.raceid WHERE T2.name = ""Australian Grand Prix"" AND YEAR = 2009";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.результатыгонок КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.гонки КАК T2 ПО T1.гонка = T2.ссылка ГДЕ T2.наименование = ""Australian Grand Prix"" И YEAR = 2009"
2173;SELECT count(DISTINCT driverId) FROM results WHERE raceId NOT IN( SELECT raceId FROM races WHERE YEAR != 2009 );ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ driverId) ИЗ регистрсведений.результатыгонок ГДЕ ссылка NOT IN( ВЫБРАТЬ ссылка ИЗ справочник.гонки ГДЕ год <> 2009 )
2174;SELECT count(DISTINCT driverId) FROM results WHERE raceId NOT IN( SELECT raceId FROM races WHERE YEAR != 2009 );ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ driverId) ИЗ регистрсведений.результатыгонок ГДЕ ссылка NOT IN( ВЫБРАТЬ ссылка ИЗ справочник.гонки ГДЕ год <> 2009 )
2175;"SELECT T2.name ,  T2.year FROM results AS T1 JOIN races AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T1.driverid = T3.driverid WHERE T3.forename = ""Lewis""";"ВЫБРАТЬ T2.наименование , T2.год ИЗ регистрсведений.результатыгонок КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.гонки КАК T2 ПО T1.гонка = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.гонщики КАК T3 ПО T1.гонщик = T3.ссылка ГДЕ T3.имя = ""Lewis"""
2176;"SELECT T2.name ,  T2.year FROM results AS T1 JOIN races AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T1.driverid = T3.driverid WHERE T3.forename = ""Lewis""";"ВЫБРАТЬ T2.наименование , T2.год ИЗ регистрсведений.результатыгонок КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.гонки КАК T2 ПО T1.гонка = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.гонщики КАК T3 ПО T1.гонщик = T3.ссылка ГДЕ T3.имя = ""Lewis"""
2177;"SELECT forename ,  surname FROM drivers WHERE nationality = ""German""";"ВЫБРАТЬ имя , фамилия ИЗ справочник.гонщики ГДЕ национальность = ""German"""
2178;"SELECT forename ,  surname FROM drivers WHERE nationality = ""German""";"ВЫБРАТЬ имя , фамилия ИЗ справочник.гонщики ГДЕ национальность = ""German"""
2183;SELECT DISTINCT T1.forename FROM drivers AS T1 JOIN driverstandings AS T2 ON T1.driverid = T2.driverid WHERE T2.position = 1 AND T2.wins = 1;ВЫБРАТЬ РАЗЛИЧНЫЕ T1.имя ИЗ справочник.гонщики КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.зачетгонщиков КАК T2 ПО T1.ссылка = T2.гонщик ГДЕ T2.позиция = 1 И T2.побед = 1
2184;SELECT DISTINCT T1.forename FROM drivers AS T1 JOIN driverstandings AS T2 ON T1.driverid = T2.driverid WHERE T2.position = 1 AND T2.wins = 1;ВЫБРАТЬ РАЗЛИЧНЫЕ T1.имя ИЗ справочник.гонщики КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.зачетгонщиков КАК T2 ПО T1.ссылка = T2.гонщик ГДЕ T2.позиция = 1 И T2.побед = 1
2185;SELECT DISTINCT T1.forename FROM drivers AS T1 JOIN driverstandings AS T2 ON T1.driverid = T2.driverid WHERE T2.position = 1 AND T2.wins = 1 AND T2.points > 20;ВЫБРАТЬ РАЗЛИЧНЫЕ T1.имя ИЗ справочник.гонщики КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.зачетгонщиков КАК T2 ПО T1.ссылка = T2.гонщик ГДЕ T2.позиция = 1 И T2.побед = 1 И T2.очки > 20
2186;SELECT DISTINCT T1.forename FROM drivers AS T1 JOIN driverstandings AS T2 ON T1.driverid = T2.driverid WHERE T2.position = 1 AND T2.wins = 1 AND T2.points > 20;ВЫБРАТЬ РАЗЛИЧНЫЕ T1.имя ИЗ справочник.гонщики КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.зачетгонщиков КАК T2 ПО T1.ссылка = T2.гонщик ГДЕ T2.позиция = 1 И T2.побед = 1 И T2.очки > 20
2187;SELECT count(*) ,  nationality FROM constructors GROUP BY nationality;ВЫБРАТЬ КОЛИЧЕСТВО(*) , национальность ИЗ справочник.конструкторы СГРУППИРОВАТЬ ПО национальность
2188;SELECT count(*) ,  nationality FROM constructors GROUP BY nationality;ВЫБРАТЬ КОЛИЧЕСТВО(*) , национальность ИЗ справочник.конструкторы СГРУППИРОВАТЬ ПО национальность
2189;SELECT count(*) ,  constructorid FROM constructorStandings GROUP BY constructorid;ВЫБРАТЬ КОЛИЧЕСТВО(*) , конструктор ИЗ регистрсведений.зачетконструкторов СГРУППИРОВАТЬ ПО конструктор
2190;SELECT count(*) ,  constructorid FROM constructorStandings GROUP BY constructorid;ВЫБРАТЬ КОЛИЧЕСТВО(*) , конструктор ИЗ регистрсведений.зачетконструкторов СГРУППИРОВАТЬ ПО конструктор
2191;"SELECT T1.name FROM races AS T1 JOIN circuits AS T2 ON T1.circuitid = T2.circuitid WHERE T2.country = ""Spain"" AND T1.year > 2017";"ВЫБРАТЬ T1.наименование ИЗ справочник.гонки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.трассы КАК T2 ПО T1.трасса = T2.ссылка ГДЕ T2.страна = ""Spain"" И T1.год > 2017"
2192;"SELECT T1.name FROM races AS T1 JOIN circuits AS T2 ON T1.circuitid = T2.circuitid WHERE T2.country = ""Spain"" AND T1.year > 2017";"ВЫБРАТЬ T1.наименование ИЗ справочник.гонки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.трассы КАК T2 ПО T1.трасса = T2.ссылка ГДЕ T2.страна = ""Spain"" И T1.год > 2017"
2193;"SELECT DISTINCT T1.name FROM races AS T1 JOIN circuits AS T2 ON T1.circuitid = T2.circuitid WHERE T2.country = ""Spain"" AND T1.year > 2000";"ВЫБРАТЬ РАЗЛИЧНЫЕ T1.наименование ИЗ справочник.гонки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.трассы КАК T2 ПО T1.трасса = T2.ссылка ГДЕ T2.страна = ""Spain"" И T1.год > 2000"
2194;"SELECT DISTINCT T1.name FROM races AS T1 JOIN circuits AS T2 ON T1.circuitid = T2.circuitid WHERE T2.country = ""Spain"" AND T1.year > 2000";"ВЫБРАТЬ РАЗЛИЧНЫЕ T1.наименование ИЗ справочник.гонки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.трассы КАК T2 ПО T1.трасса = T2.ссылка ГДЕ T2.страна = ""Spain"" И T1.год > 2000"
2195;SELECT DISTINCT driverid ,  STOP FROM pitstops WHERE duration  <  (SELECT max(duration) FROM pitstops WHERE raceid  =  841);ВЫБРАТЬ РАЗЛИЧНЫЕ гонщик , питстоп ИЗ регистрсведений.питстопы ГДЕ длительность < (ВЫБРАТЬ МАКСИМУМ(длительность) ИЗ регистрсведений.питстопы ГДЕ гонка = 841)
2196;SELECT DISTINCT driverid ,  STOP FROM pitstops WHERE duration  <  (SELECT max(duration) FROM pitstops WHERE raceid  =  841);ВЫБРАТЬ РАЗЛИЧНЫЕ гонщик , питстоп ИЗ регистрсведений.питстопы ГДЕ длительность < (ВЫБРАТЬ МАКСИМУМ(длительность) ИЗ регистрсведений.питстопы ГДЕ гонка = 841)
2197;SELECT DISTINCT driverid ,  STOP FROM pitstops WHERE duration  >  (SELECT min(duration) FROM pitstops WHERE raceid  =  841);ВЫБРАТЬ РАЗЛИЧНЫЕ гонщик , питстоп ИЗ регистрсведений.питстопы ГДЕ длительность > (ВЫБРАТЬ МИНИМУМ(длительность) ИЗ регистрсведений.питстопы ГДЕ гонка = 841)
2198;SELECT DISTINCT driverid ,  STOP FROM pitstops WHERE duration  >  (SELECT min(duration) FROM pitstops WHERE raceid  =  841);ВЫБРАТЬ РАЗЛИЧНЫЕ гонщик , питстоп ИЗ регистрсведений.питстопы ГДЕ длительность > (ВЫБРАТЬ МИНИМУМ(длительность) ИЗ регистрсведений.питстопы ГДЕ гонка = 841)
2199;SELECT DISTINCT forename FROM drivers ORDER BY forename ASC;ВЫБРАТЬ РАЗЛИЧНЫЕ имя ИЗ справочник.гонщики УПОРЯДОЧИТЬ ПО имя ВОЗР
2200;SELECT DISTINCT forename FROM drivers ORDER BY forename ASC;ВЫБРАТЬ РАЗЛИЧНЫЕ имя ИЗ справочник.гонщики УПОРЯДОЧИТЬ ПО имя ВОЗР
2201;SELECT DISTINCT name FROM races ORDER BY name DESC;ВЫБРАТЬ РАЗЛИЧНЫЕ наименование ИЗ справочник.гонки УПОРЯДОЧИТЬ ПО наименование УБЫВ
2202;SELECT DISTINCT name FROM races ORDER BY name DESC;ВЫБРАТЬ РАЗЛИЧНЫЕ наименование ИЗ справочник.гонки УПОРЯДОЧИТЬ ПО наименование УБЫВ
2203;SELECT name FROM races WHERE YEAR BETWEEN 2009 AND 2011;ВЫБРАТЬ наименование ИЗ справочник.гонки ГДЕ год МЕЖДУ 2009 И 2011
2204;SELECT name FROM races WHERE YEAR BETWEEN 2009 AND 2011;ВЫБРАТЬ наименование ИЗ справочник.гонки ГДЕ год МЕЖДУ 2009 И 2011
2205;"SELECT name FROM races WHERE TIME > ""12:00:00"" OR TIME < ""09:00:00""";"ВЫБРАТЬ наименование ИЗ справочник.гонки ГДЕ время > ""12:00:00"" ИЛИ время < ""09:00:00"""
2206;"SELECT name FROM races WHERE TIME > ""12:00:00"" OR TIME < ""09:00:00""";"ВЫБРАТЬ наименование ИЗ справочник.гонки ГДЕ время > ""12:00:00"" ИЛИ время < ""09:00:00"""
2207;SELECT T1.forename ,  T1.surname ,  T1.driverid FROM drivers AS T1 JOIN pitstops AS T2 ON T1.driverid  =  T2.driverid GROUP BY T1.driverid HAVING count(*)  >  8 UNION SELECT T1.forename ,  T1.surname ,  T1.driverid FROM drivers AS T1 JOIN results AS T2 ON T1.driverid  =  T2.driverid GROUP BY T1.driverid HAVING count(*)  >  5;ВЫБРАТЬ T1.имя , T1.фамилия , T1.ссылка ИЗ справочник.гонщики КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.питстопы КАК T2 ПО T1.ссылка = T2.гонщик СГРУППИРОВАТЬ ПО T1.ссылка ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 8 ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ T1.имя , T1.фамилия , T1.ссылка ИЗ справочник.гонщики КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.результатыгонок КАК T2 ПО T1.ссылка = T2.гонщик СГРУППИРОВАТЬ ПО T1.ссылка ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 5
2208;SELECT T1.forename ,  T1.surname ,  T1.driverid FROM drivers AS T1 JOIN pitstops AS T2 ON T1.driverid  =  T2.driverid GROUP BY T1.driverid HAVING count(*)  >  8 UNION SELECT T1.forename ,  T1.surname ,  T1.driverid FROM drivers AS T1 JOIN results AS T2 ON T1.driverid  =  T2.driverid GROUP BY T1.driverid HAVING count(*)  >  5;ВЫБРАТЬ T1.имя , T1.фамилия , T1.ссылка ИЗ справочник.гонщики КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.питстопы КАК T2 ПО T1.ссылка = T2.гонщик СГРУППИРОВАТЬ ПО T1.ссылка ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 8 ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ T1.имя , T1.фамилия , T1.ссылка ИЗ справочник.гонщики КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.результатыгонок КАК T2 ПО T1.ссылка = T2.гонщик СГРУППИРОВАТЬ ПО T1.ссылка ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 5
2211;SELECT T1.driverid ,  T1.surname FROM drivers AS T1 JOIN results AS T2 ON T1.driverid  =  T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid WHERE T3.year > 2010 GROUP BY T1.driverid ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.ссылка , T1.фамилия ИЗ справочник.гонщики КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.результатыгонок КАК T2 ПО T1.ссылка = T2.гонщик ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.гонки КАК T3 ПО T2.гонка = T3.ссылка ГДЕ T3.год > 2010 СГРУППИРОВАТЬ ПО T1.ссылка УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
2212;SELECT T1.driverid ,  T1.surname FROM drivers AS T1 JOIN results AS T2 ON T1.driverid  =  T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid WHERE T3.year > 2010 GROUP BY T1.driverid ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.ссылка , T1.фамилия ИЗ справочник.гонщики КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.результатыгонок КАК T2 ПО T1.ссылка = T2.гонщик ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.гонки КАК T3 ПО T2.гонка = T3.ссылка ГДЕ T3.год > 2010 СГРУППИРОВАТЬ ПО T1.ссылка УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
2213;"SELECT name FROM circuits WHERE country = ""UK"" OR country = ""Malaysia""";"ВЫБРАТЬ наименование ИЗ справочник.трассы ГДЕ страна = ""UK"" ИЛИ страна = ""Malaysia"""
2214;"SELECT name FROM circuits WHERE country = ""UK"" OR country = ""Malaysia""";"ВЫБРАТЬ наименование ИЗ справочник.трассы ГДЕ страна = ""UK"" ИЛИ страна = ""Malaysia"""
2215;"SELECT circuitid ,  LOCATION FROM circuits WHERE country = ""France"" OR country = ""Belgium""";"ВЫБРАТЬ ссылка , местоположение ИЗ справочник.трассы ГДЕ страна = ""France"" ИЛИ страна = ""Belgium"""
2216;"SELECT circuitid ,  LOCATION FROM circuits WHERE country = ""France"" OR country = ""Belgium""";"ВЫБРАТЬ ссылка , местоположение ИЗ справочник.трассы ГДЕ страна = ""France"" ИЛИ страна = ""Belgium"""
2217;"SELECT T1.name FROM constructors AS T1 JOIN constructorstandings AS T2 ON T1.constructorid = T2.constructorid WHERE T1.nationality = ""Japanese"" AND T2.points > 5";"ВЫБРАТЬ T1.наименование ИЗ справочник.конструкторы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.зачетконструкторов КАК T2 ПО T1.ссылка = T2.конструктор ГДЕ T1.национальность = ""Japanese"" И T2.очки > 5"
2218;"SELECT T1.name FROM constructors AS T1 JOIN constructorstandings AS T2 ON T1.constructorid = T2.constructorid WHERE T1.nationality = ""Japanese"" AND T2.points > 5";"ВЫБРАТЬ T1.наименование ИЗ справочник.конструкторы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.зачетконструкторов КАК T2 ПО T1.ссылка = T2.конструктор ГДЕ T1.национальность = ""Japanese"" И T2.очки > 5"
2219;"SELECT avg(T2.fastestlapspeed) FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year = 2008 AND T1.name = ""Monaco Grand Prix""";"ВЫБРАТЬ СРЕДНЕЕ(T2.скоростьбыстрогокруга) ИЗ справочник.гонки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.результатыгонок КАК T2 ПО T1.ссылка = T2.гонка ГДЕ T1.год = 2008 И T1.наименование = ""Monaco Grand Prix"""
2220;"SELECT avg(T2.fastestlapspeed) FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year = 2008 AND T1.name = ""Monaco Grand Prix""";"ВЫБРАТЬ СРЕДНЕЕ(T2.скоростьбыстрогокруга) ИЗ справочник.гонки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.результатыгонок КАК T2 ПО T1.ссылка = T2.гонка ГДЕ T1.год = 2008 И T1.наименование = ""Monaco Grand Prix"""
2221;"SELECT max(T2.fastestlapspeed) FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year = 2008 AND T1.name = ""Monaco Grand Prix""";"ВЫБРАТЬ МАКСИМУМ(T2.скоростьбыстрогокруга) ИЗ справочник.гонки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.результатыгонок КАК T2 ПО T1.ссылка = T2.гонка ГДЕ T1.год = 2008 И T1.наименование = ""Monaco Grand Prix"""
2222;"SELECT max(T2.fastestlapspeed) FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year = 2008 AND T1.name = ""Monaco Grand Prix""";"ВЫБРАТЬ МАКСИМУМ(T2.скоростьбыстрогокруга) ИЗ справочник.гонки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.результатыгонок КАК T2 ПО T1.ссылка = T2.гонка ГДЕ T1.год = 2008 И T1.наименование = ""Monaco Grand Prix"""
2223;SELECT max(T2.fastestlapspeed) ,  T1.name ,  T1.year FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year > 2014 GROUP BY T1.name ORDER BY T1.year;ВЫБРАТЬ МАКСИМУМ(T2.скоростьбыстрогокруга) , T1.наименование , T1.год ИЗ справочник.гонки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.результатыгонок КАК T2 ПО T1.ссылка = T2.гонка ГДЕ T1.год > 2014 СГРУППИРОВАТЬ ПО T1.наименование УПОРЯДОЧИТЬ ПО T1.год
2224;SELECT max(T2.fastestlapspeed) ,  T1.name ,  T1.year FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year > 2014 GROUP BY T1.name ORDER BY T1.year;ВЫБРАТЬ МАКСИМУМ(T2.скоростьбыстрогокруга) , T1.наименование , T1.год ИЗ справочник.гонки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.результатыгонок КАК T2 ПО T1.ссылка = T2.гонка ГДЕ T1.год > 2014 СГРУППИРОВАТЬ ПО T1.наименование УПОРЯДОЧИТЬ ПО T1.год
2225;SELECT avg(T2.fastestlapspeed) ,  T1.name ,  T1.year FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year > 2014 GROUP BY T1.name ORDER BY T1.year;ВЫБРАТЬ СРЕДНЕЕ(T2.скоростьбыстрогокруга) , T1.наименование , T1.год ИЗ справочник.гонки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.результатыгонок КАК T2 ПО T1.ссылка = T2.гонка ГДЕ T1.год > 2014 СГРУППИРОВАТЬ ПО T1.наименование УПОРЯДОЧИТЬ ПО T1.год
2226;SELECT avg(T2.fastestlapspeed) ,  T1.name ,  T1.year FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year > 2014 GROUP BY T1.name ORDER BY T1.year;ВЫБРАТЬ СРЕДНЕЕ(T2.скоростьбыстрогокруга) , T1.наименование , T1.год ИЗ справочник.гонки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.результатыгонок КАК T2 ПО T1.ссылка = T2.гонка ГДЕ T1.год > 2014 СГРУППИРОВАТЬ ПО T1.наименование УПОРЯДОЧИТЬ ПО T1.год
2227;SELECT T1.driverid ,  T1.forename ,  count(*) FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid GROUP BY T1.driverid HAVING count(*)  >=  2;ВЫБРАТЬ T1.ссылка , T1.имя , КОЛИЧЕСТВО(*) ИЗ справочник.гонщики КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.результатыгонок КАК T2 ПО T1.ссылка = T2.гонщик ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.гонки КАК T3 ПО T2.гонка = T3.ссылка СГРУППИРОВАТЬ ПО T1.ссылка ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
2228;SELECT T1.driverid ,  T1.forename ,  count(*) FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid GROUP BY T1.driverid HAVING count(*)  >=  2;ВЫБРАТЬ T1.ссылка , T1.имя , КОЛИЧЕСТВО(*) ИЗ справочник.гонщики КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.результатыгонок КАК T2 ПО T1.ссылка = T2.гонщик ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.гонки КАК T3 ПО T2.гонка = T3.ссылка СГРУППИРОВАТЬ ПО T1.ссылка ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
2229;SELECT T1.driverid ,  count(*) FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid GROUP BY T1.driverid HAVING count(*)  <=  30;ВЫБРАТЬ T1.ссылка , КОЛИЧЕСТВО(*) ИЗ справочник.гонщики КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.результатыгонок КАК T2 ПО T1.ссылка = T2.гонщик ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.гонки КАК T3 ПО T2.гонка = T3.ссылка СГРУППИРОВАТЬ ПО T1.ссылка ИМЕЮЩИЕ КОЛИЧЕСТВО(*) <= 30
2230;SELECT T1.driverid ,  count(*) FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid GROUP BY T1.driverid HAVING count(*)  <=  30;ВЫБРАТЬ T1.ссылка , КОЛИЧЕСТВО(*) ИЗ справочник.гонщики КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.результатыгонок КАК T2 ПО T1.ссылка = T2.гонщик ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.гонки КАК T3 ПО T2.гонка = T3.ссылка СГРУППИРОВАТЬ ПО T1.ссылка ИМЕЮЩИЕ КОЛИЧЕСТВО(*) <= 30
2231;SELECT T1.driverid ,  T1.surname FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid GROUP BY T1.driverid ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.ссылка , T1.фамилия ИЗ справочник.гонщики КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.результатыгонок КАК T2 ПО T1.ссылка = T2.гонщик ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.гонки КАК T3 ПО T2.гонка = T3.ссылка СГРУППИРОВАТЬ ПО T1.ссылка УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
2232;SELECT T1.driverid ,  T1.surname FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid GROUP BY T1.driverid ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.ссылка , T1.фамилия ИЗ справочник.гонщики КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.результатыгонок КАК T2 ПО T1.ссылка = T2.гонщик ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.гонки КАК T3 ПО T2.гонка = T3.ссылка СГРУППИРОВАТЬ ПО T1.ссылка УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
2233;SELECT count(*) FROM technician;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.техники
2234;SELECT count(*) FROM technician;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.техники
2235;SELECT Name FROM technician ORDER BY Age ASC;ВЫБРАТЬ наименование ИЗ справочник.техники УПОРЯДОЧИТЬ ПО возраст ВОЗР
2236;SELECT Name FROM technician ORDER BY Age ASC;ВЫБРАТЬ наименование ИЗ справочник.техники УПОРЯДОЧИТЬ ПО возраст ВОЗР
2237;SELECT Team ,  Starting_Year FROM technician;ВЫБРАТЬ команда , годначалаработы ИЗ справочник.техники
2238;SELECT Team ,  Starting_Year FROM technician;ВЫБРАТЬ команда , годначалаработы ИЗ справочник.техники
2239;"SELECT Name FROM technician WHERE Team != ""NYY""";"ВЫБРАТЬ наименование ИЗ справочник.техники ГДЕ команда <> ""NYY"""
2240;"SELECT Name FROM technician WHERE Team != ""NYY""";"ВЫБРАТЬ наименование ИЗ справочник.техники ГДЕ команда <> ""NYY"""
2241;SELECT Name FROM technician WHERE Age  =  36 OR Age  =  37;ВЫБРАТЬ наименование ИЗ справочник.техники ГДЕ возраст = 36 ИЛИ возраст = 37
2242;SELECT Name FROM technician WHERE Age  =  36 OR Age  =  37;ВЫБРАТЬ наименование ИЗ справочник.техники ГДЕ возраст = 36 ИЛИ возраст = 37
2243;SELECT Starting_Year FROM technician ORDER BY Age DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 годначалаработы ИЗ справочник.техники УПОРЯДОЧИТЬ ПО возраст УБЫВ
2244;SELECT Starting_Year FROM technician ORDER BY Age DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 годначалаработы ИЗ справочник.техники УПОРЯДОЧИТЬ ПО возраст УБЫВ
2245;SELECT Team ,  COUNT(*) FROM technician GROUP BY Team;ВЫБРАТЬ команда , КОЛИЧЕСТВО(*) ИЗ справочник.техники СГРУППИРОВАТЬ ПО команда
2246;SELECT Team ,  COUNT(*) FROM technician GROUP BY Team;ВЫБРАТЬ команда , КОЛИЧЕСТВО(*) ИЗ справочник.техники СГРУППИРОВАТЬ ПО команда
2247;SELECT Team FROM technician GROUP BY Team ORDER BY COUNT(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 команда ИЗ справочник.техники СГРУППИРОВАТЬ ПО команда УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
2248;SELECT Team FROM technician GROUP BY Team ORDER BY COUNT(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 команда ИЗ справочник.техники СГРУППИРОВАТЬ ПО команда УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
2249;SELECT Team FROM technician GROUP BY Team HAVING COUNT(*)  >=  2;ВЫБРАТЬ команда ИЗ справочник.техники СГРУППИРОВАТЬ ПО команда ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
2250;SELECT Team FROM technician GROUP BY Team HAVING COUNT(*)  >=  2;ВЫБРАТЬ команда ИЗ справочник.техники СГРУППИРОВАТЬ ПО команда ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
2251;SELECT T3.Name ,  T2.Machine_series FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id  =  T2.machine_id JOIN technician AS T3 ON T1.technician_ID  =  T3.technician_ID;ВЫБРАТЬ T3.наименование , T2.сериямашины ИЗ регистрсведений.назначениянаремонт КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.машины КАК T2 ПО T1.машина = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.техники КАК T3 ПО T1.техник = T3.ссылка
2252;SELECT T3.Name ,  T2.Machine_series FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id  =  T2.machine_id JOIN technician AS T3 ON T1.technician_ID  =  T3.technician_ID;ВЫБРАТЬ T3.наименование , T2.сериямашины ИЗ регистрсведений.назначениянаремонт КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.машины КАК T2 ПО T1.машина = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.техники КАК T3 ПО T1.техник = T3.ссылка
2253;SELECT T3.Name FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id  =  T2.machine_id JOIN technician AS T3 ON T1.technician_ID  =  T3.technician_ID ORDER BY T2.quality_rank;ВЫБРАТЬ T3.наименование ИЗ регистрсведений.назначениянаремонт КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.машины КАК T2 ПО T1.машина = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.техники КАК T3 ПО T1.техник = T3.ссылка УПОРЯДОЧИТЬ ПО T2.рейтингкачества
2254;SELECT T3.Name FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id  =  T2.machine_id JOIN technician AS T3 ON T1.technician_ID  =  T3.technician_ID ORDER BY T2.quality_rank;ВЫБРАТЬ T3.наименование ИЗ регистрсведений.назначениянаремонт КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.машины КАК T2 ПО T1.машина = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.техники КАК T3 ПО T1.техник = T3.ссылка УПОРЯДОЧИТЬ ПО T2.рейтингкачества
2255;SELECT T3.Name FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id  =  T2.machine_id JOIN technician AS T3 ON T1.technician_ID  =  T3.technician_ID WHERE T2.value_points  >  70;ВЫБРАТЬ T3.наименование ИЗ регистрсведений.назначениянаремонт КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.машины КАК T2 ПО T1.машина = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.техники КАК T3 ПО T1.техник = T3.ссылка ГДЕ T2.баллыценности > 70
2256;SELECT T3.Name FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id  =  T2.machine_id JOIN technician AS T3 ON T1.technician_ID  =  T3.technician_ID WHERE T2.value_points  >  70;ВЫБРАТЬ T3.наименование ИЗ регистрсведений.назначениянаремонт КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.машины КАК T2 ПО T1.машина = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.техники КАК T3 ПО T1.техник = T3.ссылка ГДЕ T2.баллыценности > 70
2257;SELECT T2.Name ,  COUNT(*) FROM repair_assignment AS T1 JOIN technician AS T2 ON T1.technician_ID  =  T2.technician_ID GROUP BY T2.Name;ВЫБРАТЬ T2.наименование , КОЛИЧЕСТВО(*) ИЗ регистрсведений.назначениянаремонт КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.техники КАК T2 ПО T1.техник = T2.ссылка СГРУППИРОВАТЬ ПО T2.наименование
2258;SELECT T2.Name ,  COUNT(*) FROM repair_assignment AS T1 JOIN technician AS T2 ON T1.technician_ID  =  T2.technician_ID GROUP BY T2.Name;ВЫБРАТЬ T2.наименование , КОЛИЧЕСТВО(*) ИЗ регистрсведений.назначениянаремонт КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.техники КАК T2 ПО T1.техник = T2.ссылка СГРУППИРОВАТЬ ПО T2.наименование
2259;SELECT Name FROM technician WHERE technician_id NOT IN (SELECT technician_id FROM repair_assignment);ВЫБРАТЬ Name ИЗ справочник.техники ГДЕ technician_id НЕ В (ВЫБРАТЬ technician_id ИЗ регистрсведений.назначениянаремонт)
2260;SELECT Name FROM technician WHERE technician_id NOT IN (SELECT technician_id FROM repair_assignment);ВЫБРАТЬ Name ИЗ справочник.техники ГДЕ technician_id НЕ В (ВЫБРАТЬ technician_id ИЗ регистрсведений.назначениянаремонт)
2263;SELECT count(*) FROM entrepreneur;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.люди
2264;SELECT count(*) FROM entrepreneur;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.люди
2265;SELECT Company FROM entrepreneur ORDER BY Money_Requested DESC;ВЫБРАТЬ рост ИЗ справочник.люди УПОРЯДОЧИТЬ ПО вес УБЫВ
2266;SELECT Company FROM entrepreneur ORDER BY Money_Requested DESC;ВЫБРАТЬ рост ИЗ справочник.люди УПОРЯДОЧИТЬ ПО вес УБЫВ
2267;SELECT Company ,  Investor FROM entrepreneur;ВЫБРАТЬ рост , датарождения ИЗ справочник.люди
2268;SELECT Company ,  Investor FROM entrepreneur;ВЫБРАТЬ рост , датарождения ИЗ справочник.люди
2269;SELECT avg(Money_Requested) FROM entrepreneur;ВЫБРАТЬ СРЕДНЕЕ(вес) ИЗ справочник.люди
2270;SELECT avg(Money_Requested) FROM entrepreneur;ВЫБРАТЬ СРЕДНЕЕ(вес) ИЗ справочник.люди
2271;SELECT Name FROM People ORDER BY Weight ASC;ВЫБРАТЬ человек ИЗ справочник.предприниматели УПОРЯДОЧИТЬ ПО запрошеносредств ВОЗР
2272;SELECT Name FROM People ORDER BY Weight ASC;ВЫБРАТЬ человек ИЗ справочник.предприниматели УПОРЯДОЧИТЬ ПО запрошеносредств ВОЗР
2273;SELECT T2.Name FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID;ВЫБРАТЬ T2.человек ИЗ справочник.люди КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.предприниматели КАК T2 ПО T1.наименование = T2.ссылка
2274;SELECT T2.Name FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID;ВЫБРАТЬ T2.человек ИЗ справочник.люди КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.предприниматели КАК T2 ПО T1.наименование = T2.ссылка
2275;"SELECT T2.Name FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Investor != ""Rachel Elnaugh""";"ВЫБРАТЬ T2.человек ИЗ справочник.люди КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.предприниматели КАК T2 ПО T1.наименование = T2.ссылка ГДЕ T1.датарождения <> ""Rachel Elnaugh"""
2276;"SELECT T2.Name FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Investor != ""Rachel Elnaugh""";"ВЫБРАТЬ T2.человек ИЗ справочник.люди КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.предприниматели КАК T2 ПО T1.наименование = T2.ссылка ГДЕ T1.датарождения <> ""Rachel Elnaugh"""
2277;SELECT Weight FROM people ORDER BY Height ASC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 запрошеносредств ИЗ справочник.предприниматели УПОРЯДОЧИТЬ ПО компания ВОЗР
2278;SELECT Weight FROM people ORDER BY Height ASC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 запрошеносредств ИЗ справочник.предприниматели УПОРЯДОЧИТЬ ПО компания ВОЗР
2279;SELECT T2.Name FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Weight DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.человек ИЗ справочник.люди КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.предприниматели КАК T2 ПО T1.наименование = T2.ссылка УПОРЯДОЧИТЬ ПО T2.запрошеносредств УБЫВ
2280;SELECT T2.Name FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Weight DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.человек ИЗ справочник.люди КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.предприниматели КАК T2 ПО T1.наименование = T2.ссылка УПОРЯДОЧИТЬ ПО T2.запрошеносредств УБЫВ
2281;SELECT sum(T1.Money_Requested) FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Height  >  1.85;ВЫБРАТЬ СУММА(T1.вес) ИЗ справочник.люди КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.предприниматели КАК T2 ПО T1.наименование = T2.ссылка ГДЕ T2.компания > 1.85
2282;SELECT sum(T1.Money_Requested) FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Height  >  1.85;ВЫБРАТЬ СУММА(T1.вес) ИЗ справочник.люди КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.предприниматели КАК T2 ПО T1.наименование = T2.ссылка ГДЕ T2.компания > 1.85
2283;"SELECT T2.Date_of_Birth FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Investor  =  ""Simon Woodroffe"" OR T1.Investor  =  ""Peter Jones""";"ВЫБРАТЬ T2.инвестор ИЗ справочник.люди КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.предприниматели КАК T2 ПО T1.наименование = T2.ссылка ГДЕ T1.датарождения = ""Simon Woodroffe"" ИЛИ T1.датарождения = ""Peter Jones"""
2284;"SELECT T2.Date_of_Birth FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Investor  =  ""Simon Woodroffe"" OR T1.Investor  =  ""Peter Jones""";"ВЫБРАТЬ T2.инвестор ИЗ справочник.люди КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.предприниматели КАК T2 ПО T1.наименование = T2.ссылка ГДЕ T1.датарождения = ""Simon Woodroffe"" ИЛИ T1.датарождения = ""Peter Jones"""
2285;SELECT T2.Weight FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Money_Requested DESC;ВЫБРАТЬ T2.запрошеносредств ИЗ справочник.люди КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.предприниматели КАК T2 ПО T1.наименование = T2.ссылка УПОРЯДОЧИТЬ ПО T1.вес УБЫВ
2286;SELECT T2.Weight FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Money_Requested DESC;ВЫБРАТЬ T2.запрошеносредств ИЗ справочник.люди КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.предприниматели КАК T2 ПО T1.наименование = T2.ссылка УПОРЯДОЧИТЬ ПО T1.вес УБЫВ
2287;SELECT Investor ,  COUNT(*) FROM entrepreneur GROUP BY Investor;ВЫБРАТЬ датарождения , КОЛИЧЕСТВО(*) ИЗ справочник.люди СГРУППИРОВАТЬ ПО датарождения
2288;SELECT Investor ,  COUNT(*) FROM entrepreneur GROUP BY Investor;ВЫБРАТЬ датарождения , КОЛИЧЕСТВО(*) ИЗ справочник.люди СГРУППИРОВАТЬ ПО датарождения
2289;SELECT Investor FROM entrepreneur GROUP BY Investor ORDER BY COUNT(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 датарождения ИЗ справочник.люди СГРУППИРОВАТЬ ПО датарождения УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
2290;SELECT Investor FROM entrepreneur GROUP BY Investor ORDER BY COUNT(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 датарождения ИЗ справочник.люди СГРУППИРОВАТЬ ПО датарождения УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
2291;SELECT Investor FROM entrepreneur GROUP BY Investor HAVING COUNT(*)  >=  2;ВЫБРАТЬ датарождения ИЗ справочник.люди СГРУППИРОВАТЬ ПО датарождения ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
2292;SELECT Investor FROM entrepreneur GROUP BY Investor HAVING COUNT(*)  >=  2;ВЫБРАТЬ датарождения ИЗ справочник.люди СГРУППИРОВАТЬ ПО датарождения ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
2293;SELECT T2.Name ,  T1.Company FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Money_Requested;ВЫБРАТЬ T2.человек , T1.рост ИЗ справочник.люди КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.предприниматели КАК T2 ПО T1.наименование = T2.ссылка УПОРЯДОЧИТЬ ПО T1.вес
2294;SELECT T2.Name ,  T1.Company FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Money_Requested;ВЫБРАТЬ T2.человек , T1.рост ИЗ справочник.люди КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.предприниматели КАК T2 ПО T1.наименование = T2.ссылка УПОРЯДОЧИТЬ ПО T1.вес
2295;SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM entrepreneur);ВЫБРАТЬ Name ИЗ справочник.предприниматели ГДЕ People_ID НЕ В (ВЫБРАТЬ People_ID ИЗ справочник.люди)
2296;SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM entrepreneur);ВЫБРАТЬ Name ИЗ справочник.предприниматели ГДЕ People_ID НЕ В (ВЫБРАТЬ People_ID ИЗ справочник.люди)
2299;SELECT count(DISTINCT Company) FROM entrepreneur;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ рост) ИЗ справочник.люди
2300;SELECT count(DISTINCT Company) FROM entrepreneur;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ рост) ИЗ справочник.люди
2301;SELECT T1.Company FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Height DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.рост ИЗ справочник.люди КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.предприниматели КАК T2 ПО T1.наименование = T2.ссылка УПОРЯДОЧИТЬ ПО T2.компания УБЫВ
2302;SELECT T1.Company FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Height DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.рост ИЗ справочник.люди КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.предприниматели КАК T2 ПО T1.наименование = T2.ссылка УПОРЯДОЧИТЬ ПО T2.компания УБЫВ
2303;SELECT count(*) FROM perpetrator;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.люди
2304;SELECT Date FROM perpetrator ORDER BY Killed DESC;ВЫБРАТЬ рост ИЗ справочник.люди УПОРЯДОЧИТЬ ПО Killed УБЫВ
2305;SELECT Injured FROM perpetrator ORDER BY Injured ASC;ВЫБРАТЬ Injured ИЗ справочник.люди УПОРЯДОЧИТЬ ПО Injured ВОЗР
2306;SELECT avg(Injured) FROM perpetrator;ВЫБРАТЬ СРЕДНЕЕ(Injured) ИЗ справочник.люди
2307;SELECT LOCATION FROM perpetrator ORDER BY Killed DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 роднойгород ИЗ справочник.люди УПОРЯДОЧИТЬ ПО Killed УБЫВ
2308;SELECT Name FROM People ORDER BY Height ASC;ВЫБРАТЬ человек ИЗ регистрсведений.происшествия УПОРЯДОЧИТЬ ПО дата ВОЗР
2309;SELECT T1.Name FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID  =  T2.People_ID;ВЫБРАТЬ T1.человек ИЗ регистрсведений.происшествия КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.люди КАК T2 ПО T1.ссылка = T2.наименование
2310;"SELECT T1.Name FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Country != ""China""";"ВЫБРАТЬ T1.человек ИЗ регистрсведений.происшествия КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.люди КАК T2 ПО T1.ссылка = T2.наименование ГДЕ T2.Country <> ""China"""
2311;SELECT T1.Name FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Weight DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.человек ИЗ регистрсведений.происшествия КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.люди КАК T2 ПО T1.ссылка = T2.наименование УПОРЯДОЧИТЬ ПО T1.год УБЫВ
2312;SELECT sum(T2.Killed) FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  1.84;ВЫБРАТЬ СУММА(T2.Killed) ИЗ регистрсведений.происшествия КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.люди КАК T2 ПО T1.ссылка = T2.наименование ГДЕ T1.дата > 1.84
2313;"SELECT T1.Name FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Country  =  ""China"" OR T2.Country  =  ""Japan""";"ВЫБРАТЬ T1.человек ИЗ регистрсведений.происшествия КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.люди КАК T2 ПО T1.ссылка = T2.наименование ГДЕ T2.Country = ""China"" ИЛИ T2.Country = ""Japan"""
2314;SELECT T1.Height FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Injured DESC;ВЫБРАТЬ T1.дата ИЗ регистрсведений.происшествия КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.люди КАК T2 ПО T1.ссылка = T2.наименование УПОРЯДОЧИТЬ ПО T2.Injured УБЫВ
2315;SELECT Country ,  COUNT(*) FROM perpetrator GROUP BY Country;ВЫБРАТЬ Country , КОЛИЧЕСТВО(*) ИЗ справочник.люди СГРУППИРОВАТЬ ПО Country
2316;SELECT Country ,  COUNT(*) FROM perpetrator GROUP BY Country ORDER BY COUNT(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 Country , КОЛИЧЕСТВО(*) ИЗ справочник.люди СГРУППИРОВАТЬ ПО Country УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
2317;SELECT Country ,  COUNT(*) FROM perpetrator GROUP BY Country HAVING COUNT(*)  >=  2;ВЫБРАТЬ Country , КОЛИЧЕСТВО(*) ИЗ справочник.люди СГРУППИРОВАТЬ ПО Country ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
2318;SELECT T1.Name FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Year DESC;ВЫБРАТЬ T1.человек ИЗ регистрсведений.происшествия КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.люди КАК T2 ПО T1.ссылка = T2.наименование УПОРЯДОЧИТЬ ПО T2.вес УБЫВ
2319;SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM perpetrator);ВЫБРАТЬ Name ИЗ регистрсведений.происшествия ГДЕ People_ID НЕ В (ВЫБРАТЬ People_ID ИЗ справочник.люди)
2321;SELECT count(DISTINCT LOCATION) FROM perpetrator;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ роднойгород) ИЗ справочник.люди
2322;SELECT T2.Date FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.рост ИЗ регистрсведений.происшествия КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.люди КАК T2 ПО T1.ссылка = T2.наименование УПОРЯДОЧИТЬ ПО T1.дата УБЫВ
2323;"SELECT max(YEAR) FROM perpetrator;";"ВЫБРАТЬ МАКСИМУМ(вес) ИЗ справочник.люди;"
2324;"SELECT campus FROM campuses WHERE county  =  ""Los Angeles""";"ВЫБРАТЬ наименование ИЗ справочник.кампусы ГДЕ округ = ""Los Angeles"""
2325;"SELECT campus FROM campuses WHERE county  =  ""Los Angeles""";"ВЫБРАТЬ наименование ИЗ справочник.кампусы ГДЕ округ = ""Los Angeles"""
2326;"SELECT campus FROM campuses WHERE LOCATION  =  ""Chico""";"ВЫБРАТЬ наименование ИЗ справочник.кампусы ГДЕ местоположение = ""Chico"""
2327;"SELECT campus FROM campuses WHERE LOCATION  =  ""Chico""";"ВЫБРАТЬ наименование ИЗ справочник.кампусы ГДЕ местоположение = ""Chico"""
2328;SELECT campus FROM campuses WHERE YEAR  =  1958;ВЫБРАТЬ наименование ИЗ справочник.кампусы ГДЕ годоткрытия = 1958
2329;SELECT campus FROM campuses WHERE YEAR  =  1958;ВЫБРАТЬ наименование ИЗ справочник.кампусы ГДЕ годоткрытия = 1958
2330;SELECT campus FROM campuses WHERE YEAR  <  1800;ВЫБРАТЬ наименование ИЗ справочник.кампусы ГДЕ годоткрытия < 1800
2331;SELECT campus FROM campuses WHERE YEAR  <  1800;ВЫБРАТЬ наименование ИЗ справочник.кампусы ГДЕ годоткрытия < 1800
2332;SELECT campus FROM campuses WHERE YEAR  >=  1935 AND YEAR  <=  1939;ВЫБРАТЬ наименование ИЗ справочник.кампусы ГДЕ годоткрытия >= 1935 И годоткрытия <= 1939
2333;SELECT campus FROM campuses WHERE YEAR  >=  1935 AND YEAR  <=  1939;ВЫБРАТЬ наименование ИЗ справочник.кампусы ГДЕ годоткрытия >= 1935 И годоткрытия <= 1939
2334;"SELECT campus FROM campuses WHERE LOCATION  =  ""Northridge"" AND county  =  ""Los Angeles"" UNION SELECT campus FROM campuses WHERE LOCATION  =  ""San Francisco"" AND county  =  ""San Francisco""";"ВЫБРАТЬ наименование ИЗ справочник.кампусы ГДЕ местоположение = ""Northridge"" И округ = ""Los Angeles"" ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ наименование ИЗ справочник.кампусы ГДЕ местоположение = ""San Francisco"" И округ = ""San Francisco"""
2335;"SELECT campus FROM campuses WHERE LOCATION  =  ""Northridge"" AND county  =  ""Los Angeles"" UNION SELECT campus FROM campuses WHERE LOCATION  =  ""San Francisco"" AND county  =  ""San Francisco""";"ВЫБРАТЬ наименование ИЗ справочник.кампусы ГДЕ местоположение = ""Northridge"" И округ = ""Los Angeles"" ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ наименование ИЗ справочник.кампусы ГДЕ местоположение = ""San Francisco"" И округ = ""San Francisco"""
2336;"SELECT campusfee FROM campuses AS T1 JOIN csu_fees AS T2 ON T1.id  =  t2.campus WHERE t1.campus  =  ""San Jose State University"" AND T2.year  =  1996";"ВЫБРАТЬ campusfee ИЗ справочник.кампусы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.платежикампусов КАК T2 ПО T1.ссылка = t2.campus ГДЕ t1.campus = ""San Jose State University"" И T2.год = 1996"
2337;"SELECT campusfee FROM campuses AS T1 JOIN csu_fees AS T2 ON T1.id  =  t2.campus WHERE t1.campus  =  ""San Jose State University"" AND T2.year  =  1996";"ВЫБРАТЬ campusfee ИЗ справочник.кампусы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.платежикампусов КАК T2 ПО T1.ссылка = t2.campus ГДЕ t1.campus = ""San Jose State University"" И T2.год = 1996"
2338;"SELECT campusfee FROM campuses AS T1 JOIN csu_fees AS T2 ON T1.id  =  t2.campus WHERE t1.campus  =  ""San Francisco State University"" AND T2.year  =  1996";"ВЫБРАТЬ campusfee ИЗ справочник.кампусы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.платежикампусов КАК T2 ПО T1.ссылка = t2.campus ГДЕ t1.campus = ""San Francisco State University"" И T2.год = 1996"
2339;"SELECT campusfee FROM campuses AS T1 JOIN csu_fees AS T2 ON T1.id  =  t2.campus WHERE t1.campus  =  ""San Francisco State University"" AND T2.year  =  1996";"ВЫБРАТЬ campusfee ИЗ справочник.кампусы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.платежикампусов КАК T2 ПО T1.ссылка = t2.campus ГДЕ t1.campus = ""San Francisco State University"" И T2.год = 1996"
2340;SELECT count(*) FROM csu_fees WHERE campusfee  >  (SELECT avg(campusfee) FROM csu_fees);ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.платежикампусов ГДЕ campusfee > (ВЫБРАТЬ СРЕДНЕЕ(campusfee) ИЗ регистрсведений.платежикампусов)
2341;SELECT count(*) FROM csu_fees WHERE campusfee  >  (SELECT avg(campusfee) FROM csu_fees);ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.платежикампусов ГДЕ campusfee > (ВЫБРАТЬ СРЕДНЕЕ(campusfee) ИЗ регистрсведений.платежикампусов)
2342;SELECT count(*) FROM csu_fees WHERE campusfee  >  (SELECT avg(campusfee) FROM csu_fees);ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.платежикампусов ГДЕ campusfee > (ВЫБРАТЬ СРЕДНЕЕ(campusfee) ИЗ регистрсведений.платежикампусов)
2343;SELECT count(*) FROM csu_fees WHERE campusfee  >  (SELECT avg(campusfee) FROM csu_fees);ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.платежикампусов ГДЕ campusfee > (ВЫБРАТЬ СРЕДНЕЕ(campusfee) ИЗ регистрсведений.платежикампусов)
2344;"SELECT campus FROM campuses WHERE county  =  ""Los Angeles"" AND YEAR  >  1950";"ВЫБРАТЬ наименование ИЗ справочник.кампусы ГДЕ округ = ""Los Angeles"" И годоткрытия > 1950"
2345;"SELECT campus FROM campuses WHERE county  =  ""Los Angeles"" AND YEAR  >  1950";"ВЫБРАТЬ наименование ИЗ справочник.кампусы ГДЕ округ = ""Los Angeles"" И годоткрытия > 1950"
2346;SELECT YEAR FROM degrees GROUP BY YEAR ORDER BY sum(degrees) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 год ИЗ количествостепеней СГРУППИРОВАТЬ ПО год УПОРЯДОЧИТЬ ПО СУММА(количествостепеней) УБЫВ
2347;SELECT YEAR FROM degrees GROUP BY YEAR ORDER BY sum(degrees) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 год ИЗ количествостепеней СГРУППИРОВАТЬ ПО год УПОРЯДОЧИТЬ ПО СУММА(количествостепеней) УБЫВ
2348;SELECT campus FROM degrees GROUP BY campus ORDER BY sum(degrees) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 кампус ИЗ количествостепеней СГРУППИРОВАТЬ ПО кампус УПОРЯДОЧИТЬ ПО СУММА(количествостепеней) УБЫВ
2349;SELECT campus FROM degrees GROUP BY campus ORDER BY sum(degrees) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 кампус ИЗ количествостепеней СГРУППИРОВАТЬ ПО кампус УПОРЯДОЧИТЬ ПО СУММА(количествостепеней) УБЫВ
2350;SELECT T1.campus FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  T2.campus WHERE T2.year  =  2003 ORDER BY T2.faculty DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.наименование ИЗ справочник.кампусы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.преподаватели КАК T2 ПО T1.ссылка = T2.кампус ГДЕ T2.год = 2003 УПОРЯДОЧИТЬ ПО T2.количествопреподавателей УБЫВ
2351;SELECT T1.campus FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  T2.campus WHERE T2.year  =  2003 ORDER BY T2.faculty DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.наименование ИЗ справочник.кампусы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.преподаватели КАК T2 ПО T1.ссылка = T2.кампус ГДЕ T2.год = 2003 УПОРЯДОЧИТЬ ПО T2.количествопреподавателей УБЫВ
2352;SELECT avg(campusfee) FROM csu_fees WHERE YEAR  =  1996;ВЫБРАТЬ СРЕДНЕЕ(платакампуса) ИЗ регистрсведений.платежикампусов ГДЕ год = 1996
2353;SELECT avg(campusfee) FROM csu_fees WHERE YEAR  =  1996;ВЫБРАТЬ СРЕДНЕЕ(платакампуса) ИЗ регистрсведений.платежикампусов ГДЕ год = 1996
2354;SELECT avg(campusfee) FROM csu_fees WHERE YEAR  =  2005;ВЫБРАТЬ СРЕДНЕЕ(платакампуса) ИЗ регистрсведений.платежикампусов ГДЕ год = 2005
2355;SELECT avg(campusfee) FROM csu_fees WHERE YEAR  =  2005;ВЫБРАТЬ СРЕДНЕЕ(платакампуса) ИЗ регистрсведений.платежикампусов ГДЕ год = 2005
2356;SELECT T1.campus ,  sum(T2.degrees) FROM campuses AS T1 JOIN degrees AS T2 ON T1.id  =  T2.campus WHERE T2.year  >=  1998 AND T2.year  <=  2002 GROUP BY T1.campus;ВЫБРАТЬ T1.наименование , СУММА(T2.количествостепеней) ИЗ справочник.кампусы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.выдачастепеней КАК T2 ПО T1.ссылка = T2.кампус ГДЕ T2.год >= 1998 И T2.год <= 2002 СГРУППИРОВАТЬ ПО T1.наименование
2357;SELECT T1.campus ,  sum(T2.degrees) FROM campuses AS T1 JOIN degrees AS T2 ON T1.id  =  T2.campus WHERE T2.year  >=  1998 AND T2.year  <=  2002 GROUP BY T1.campus;ВЫБРАТЬ T1.наименование , СУММА(T2.количествостепеней) ИЗ справочник.кампусы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.выдачастепеней КАК T2 ПО T1.ссылка = T2.кампус ГДЕ T2.год >= 1998 И T2.год <= 2002 СГРУППИРОВАТЬ ПО T1.наименование
2358;"SELECT T1.campus ,  sum(T2.degrees) FROM campuses AS T1 JOIN degrees AS T2 ON T1.id  =  T2.campus WHERE T1.county  =  ""Orange"" AND T2.year  >=  2000 GROUP BY T1.campus";"ВЫБРАТЬ T1.наименование , СУММА(T2.количествостепеней) ИЗ справочник.кампусы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.выдачастепеней КАК T2 ПО T1.ссылка = T2.кампус ГДЕ T1.округ = ""Orange"" И T2.год >= 2000 СГРУППИРОВАТЬ ПО T1.наименование"
2359;"SELECT T1.campus ,  sum(T2.degrees) FROM campuses AS T1 JOIN degrees AS T2 ON T1.id  =  T2.campus WHERE T1.county  =  ""Orange"" AND T2.year  >=  2000 GROUP BY T1.campus";"ВЫБРАТЬ T1.наименование , СУММА(T2.количествостепеней) ИЗ справочник.кампусы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.выдачастепеней КАК T2 ПО T1.ссылка = T2.кампус ГДЕ T1.округ = ""Orange"" И T2.год >= 2000 СГРУППИРОВАТЬ ПО T1.наименование"
2360;"SELECT T1.campus FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  T2.campus WHERE T2.year  =  2002 AND faculty  >  (SELECT max(faculty) FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  T2.campus WHERE T2.year  =  2002 AND T1.county  =  ""Orange"")";"ВЫБРАТЬ T1.наименование ИЗ справочник.кампусы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.преподаватели КАК T2 ПО T1.ссылка = T2.кампус ГДЕ T2.год = 2002 И faculty > (ВЫБРАТЬ МАКСИМУМ(faculty) ИЗ справочник.кампусы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.преподаватели КАК T2 ПО T1.ссылка = T2.кампус ГДЕ T2.год = 2002 И T1.округ = ""Orange"")"
2361;"SELECT T1.campus FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  T2.campus WHERE T2.year  =  2002 AND faculty  >  (SELECT max(faculty) FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  T2.campus WHERE T2.year  =  2002 AND T1.county  =  ""Orange"")";"ВЫБРАТЬ T1.наименование ИЗ справочник.кампусы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.преподаватели КАК T2 ПО T1.ссылка = T2.кампус ГДЕ T2.год = 2002 И faculty > (ВЫБРАТЬ МАКСИМУМ(faculty) ИЗ справочник.кампусы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.преподаватели КАК T2 ПО T1.ссылка = T2.кампус ГДЕ T2.год = 2002 И T1.округ = ""Orange"")"
2362;SELECT T1.campus FROM campuses AS t1 JOIN enrollments AS t2 ON t1.id  =  t2.campus WHERE t2.year  =  1956 AND totalenrollment_ay  >  400 AND FTE_AY  >  200;ВЫБРАТЬ T1.campus ИЗ справочник.кампусы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.записанныестуденты КАК t2 ПО t1.ссылка = t2.кампус ГДЕ t2.год = 1956 И totalenrollment_ay > 400 И FTE_AY > 200
2363;SELECT T1.campus FROM campuses AS t1 JOIN enrollments AS t2 ON t1.id  =  t2.campus WHERE t2.year  =  1956 AND totalenrollment_ay  >  400 AND FTE_AY  >  200;ВЫБРАТЬ T1.campus ИЗ справочник.кампусы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.записанныестуденты КАК t2 ПО t1.ссылка = t2.кампус ГДЕ t2.год = 1956 И totalenrollment_ay > 400 И FTE_AY > 200
2364;"SELECT count(*) FROM campuses WHERE county  =  ""Los Angeles""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.кампусы ГДЕ округ = ""Los Angeles"""
2365;"SELECT count(*) FROM campuses WHERE county  =  ""Los Angeles""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.кампусы ГДЕ округ = ""Los Angeles"""
2366;"SELECT campus FROM campuses WHERE county  =  ""Los Angeles""";"ВЫБРАТЬ наименование ИЗ справочник.кампусы ГДЕ округ = ""Los Angeles"""
2367;"SELECT campus FROM campuses WHERE county  =  ""Los Angeles""";"ВЫБРАТЬ наименование ИЗ справочник.кампусы ГДЕ округ = ""Los Angeles"""
2368;"SELECT degrees FROM campuses AS T1 JOIN degrees AS T2 ON t1.id  =  t2.campus WHERE t1.campus  =  ""San Jose State University"" AND t2.year  =  2000";"ВЫБРАТЬ degrees ИЗ справочник.кампусы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.выдачастепеней КАК T2 ПО t1.id = t2.campus ГДЕ t1.campus = ""San Jose State University"" И t2.year = 2000"
2369;"SELECT degrees FROM campuses AS T1 JOIN degrees AS T2 ON t1.id  =  t2.campus WHERE t1.campus  =  ""San Jose State University"" AND t2.year  =  2000";"ВЫБРАТЬ degrees ИЗ справочник.кампусы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.выдачастепеней КАК T2 ПО t1.id = t2.campus ГДЕ t1.campus = ""San Jose State University"" И t2.year = 2000"
2370;"SELECT degrees FROM campuses AS T1 JOIN degrees AS T2 ON t1.id  =  t2.campus WHERE t1.campus  =  ""San Francisco State University"" AND t2.year  =  2001";"ВЫБРАТЬ degrees ИЗ справочник.кампусы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.выдачастепеней КАК T2 ПО t1.id = t2.campus ГДЕ t1.campus = ""San Francisco State University"" И t2.year = 2001"
2371;"SELECT degrees FROM campuses AS T1 JOIN degrees AS T2 ON t1.id  =  t2.campus WHERE t1.campus  =  ""San Francisco State University"" AND t2.year  =  2001";"ВЫБРАТЬ degrees ИЗ справочник.кампусы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.выдачастепеней КАК T2 ПО t1.id = t2.campus ГДЕ t1.campus = ""San Francisco State University"" И t2.year = 2001"
2372;SELECT sum(faculty) FROM faculty WHERE YEAR  =  2002;ВЫБРАТЬ СУММА(количествопреподавателей) ИЗ количествопреподавателей ГДЕ год = 2002
2373;SELECT sum(faculty) FROM faculty WHERE YEAR  =  2002;ВЫБРАТЬ СУММА(количествопреподавателей) ИЗ количествопреподавателей ГДЕ год = 2002
2374;"SELECT faculty FROM faculty AS T1 JOIN campuses AS T2 ON T1.campus  =  T2.id WHERE T1.year  =  2002 AND T2.campus  =  ""Long Beach State University""";"ВЫБРАТЬ faculty ИЗ регистрсведений.преподаватели КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.кампусы КАК T2 ПО T1.кампус = T2.ссылка ГДЕ T1.год = 2002 И T2.наименование = ""Long Beach State University"""
2375;"SELECT faculty FROM faculty AS T1 JOIN campuses AS T2 ON T1.campus  =  T2.id WHERE T1.year  =  2002 AND T2.campus  =  ""Long Beach State University""";"ВЫБРАТЬ faculty ИЗ регистрсведений.преподаватели КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.кампусы КАК T2 ПО T1.кампус = T2.ссылка ГДЕ T1.год = 2002 И T2.наименование = ""Long Beach State University"""
2376;"SELECT faculty FROM faculty AS T1 JOIN campuses AS T2 ON T1.campus  =  T2.id WHERE T1.year  =  2004 AND T2.campus  =  ""San Francisco State University""";"ВЫБРАТЬ faculty ИЗ регистрсведений.преподаватели КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.кампусы КАК T2 ПО T1.кампус = T2.ссылка ГДЕ T1.год = 2004 И T2.наименование = ""San Francisco State University"""
2377;"SELECT faculty FROM faculty AS T1 JOIN campuses AS T2 ON T1.campus  =  T2.id WHERE T1.year  =  2004 AND T2.campus  =  ""San Francisco State University""";"ВЫБРАТЬ faculty ИЗ регистрсведений.преподаватели КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.кампусы КАК T2 ПО T1.кампус = T2.ссылка ГДЕ T1.год = 2004 И T2.наименование = ""San Francisco State University"""
2378;SELECT T1.campus FROM campuses AS t1 JOIN faculty AS t2 ON t1.id  =  t2.campus WHERE t2.faculty  >=  600 AND t2.faculty  <=  1000 AND T1.year  =  2004;ВЫБРАТЬ T1.campus ИЗ справочник.кампусы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.преподаватели КАК t2 ПО t1.ссылка = t2.кампус ГДЕ t2.количествопреподавателей >= 600 И t2.количествопреподавателей <= 1000 И T1.year = 2004
2379;SELECT T1.campus FROM campuses AS t1 JOIN faculty AS t2 ON t1.id  =  t2.campus WHERE t2.faculty  >=  600 AND t2.faculty  <=  1000 AND T1.year  =  2004;ВЫБРАТЬ T1.campus ИЗ справочник.кампусы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.преподаватели КАК t2 ПО t1.ссылка = t2.кампус ГДЕ t2.количествопреподавателей >= 600 И t2.количествопреподавателей <= 1000 И T1.year = 2004
2380;SELECT T2.faculty FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  t2.campus JOIN degrees AS T3 ON T1.id  =  t3.campus AND t2.year  =  t3.year WHERE t2.year  =  2002 ORDER BY t3.degrees DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.количествопреподавателей ИЗ справочник.кампусы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.преподаватели КАК T2 ПО T1.ссылка = t2.campus ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.выдачастепеней КАК T3 ПО T1.ссылка = t3.campus И t2.year = t3.year ГДЕ t2.year = 2002 УПОРЯДОЧИТЬ ПО t3.degrees УБЫВ
2381;SELECT T2.faculty FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  t2.campus JOIN degrees AS T3 ON T1.id  =  t3.campus AND t2.year  =  t3.year WHERE t2.year  =  2002 ORDER BY t3.degrees DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.количествопреподавателей ИЗ справочник.кампусы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.преподаватели КАК T2 ПО T1.ссылка = t2.campus ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.выдачастепеней КАК T3 ПО T1.ссылка = t3.campus И t2.year = t3.year ГДЕ t2.year = 2002 УПОРЯДОЧИТЬ ПО t3.degrees УБЫВ
2382;SELECT T2.faculty FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  t2.campus JOIN degrees AS T3 ON T1.id  =  t3.campus AND t2.year  =  t3.year WHERE t2.year  =  2001 ORDER BY t3.degrees LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.количествопреподавателей ИЗ справочник.кампусы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.преподаватели КАК T2 ПО T1.ссылка = t2.campus ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.выдачастепеней КАК T3 ПО T1.ссылка = t3.campus И t2.year = t3.year ГДЕ t2.year = 2001 УПОРЯДОЧИТЬ ПО t3.degrees
2383;SELECT T2.faculty FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  t2.campus JOIN degrees AS T3 ON T1.id  =  t3.campus AND t2.year  =  t3.year WHERE t2.year  =  2001 ORDER BY t3.degrees LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.количествопреподавателей ИЗ справочник.кампусы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.преподаватели КАК T2 ПО T1.ссылка = t2.campus ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.выдачастепеней КАК T3 ПО T1.ссылка = t3.campus И t2.year = t3.year ГДЕ t2.year = 2001 УПОРЯДОЧИТЬ ПО t3.degrees
2384;"SELECT sum(t1.undergraduate) FROM discipline_enrollments AS t1 JOIN campuses AS t2 ON t1.campus  =  t2.id WHERE t1.year  =  2004 AND t2.campus  =  ""San Jose State University""";"ВЫБРАТЬ СУММА(t1.бакалавриат) ИЗ регистрсведений.записанныеподисциплинам КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.кампусы КАК t2 ПО t1.кампус = t2.ссылка ГДЕ t1.год = 2004 И t2.наименование = ""San Jose State University"""
2385;"SELECT sum(t1.undergraduate) FROM discipline_enrollments AS t1 JOIN campuses AS t2 ON t1.campus  =  t2.id WHERE t1.year  =  2004 AND t2.campus  =  ""San Jose State University""";"ВЫБРАТЬ СУММА(t1.бакалавриат) ИЗ регистрсведений.записанныеподисциплинам КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.кампусы КАК t2 ПО t1.кампус = t2.ссылка ГДЕ t1.год = 2004 И t2.наименование = ""San Jose State University"""
2386;"SELECT sum(t1.graduate) FROM discipline_enrollments AS t1 JOIN campuses AS t2 ON t1.campus  =  t2.id WHERE t1.year  =  2004 AND t2.campus  =  ""San Francisco State University""";"ВЫБРАТЬ СУММА(t1.магистратура) ИЗ регистрсведений.записанныеподисциплинам КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.кампусы КАК t2 ПО t1.кампус = t2.ссылка ГДЕ t1.год = 2004 И t2.наименование = ""San Francisco State University"""
2387;"SELECT sum(t1.graduate) FROM discipline_enrollments AS t1 JOIN campuses AS t2 ON t1.campus  =  t2.id WHERE t1.year  =  2004 AND t2.campus  =  ""San Francisco State University""";"ВЫБРАТЬ СУММА(t1.магистратура) ИЗ регистрсведений.записанныеподисциплинам КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.кампусы КАК t2 ПО t1.кампус = t2.ссылка ГДЕ t1.год = 2004 И t2.наименование = ""San Francisco State University"""
2388;"SELECT t1.campusfee FROM csu_fees AS t1 JOIN campuses AS t2 ON t1.campus  =  t2.id WHERE t2.campus  =  ""San Francisco State University"" AND t1.year  =  2000";"ВЫБРАТЬ t1.платакампуса ИЗ регистрсведений.платежикампусов КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.кампусы КАК t2 ПО t1.кампус = t2.ссылка ГДЕ t2.наименование = ""San Francisco State University"" И t1.год = 2000"
2389;"SELECT t1.campusfee FROM csu_fees AS t1 JOIN campuses AS t2 ON t1.campus  =  t2.id WHERE t2.campus  =  ""San Francisco State University"" AND t1.year  =  2000";"ВЫБРАТЬ t1.платакампуса ИЗ регистрсведений.платежикампусов КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.кампусы КАК t2 ПО t1.кампус = t2.ссылка ГДЕ t2.наименование = ""San Francisco State University"" И t1.год = 2000"
2390;"SELECT t1.campusfee FROM csu_fees AS t1 JOIN campuses AS t2 ON t1.campus  =  t2.id WHERE t2.campus  =  ""San Jose State University"" AND t1.year  =  2000";"ВЫБРАТЬ t1.платакампуса ИЗ регистрсведений.платежикампусов КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.кампусы КАК t2 ПО t1.кампус = t2.ссылка ГДЕ t2.наименование = ""San Jose State University"" И t1.год = 2000"
2391;"SELECT t1.campusfee FROM csu_fees AS t1 JOIN campuses AS t2 ON t1.campus  =  t2.id WHERE t2.campus  =  ""San Jose State University"" AND t1.year  =  2000";"ВЫБРАТЬ t1.платакампуса ИЗ регистрсведений.платежикампусов КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.кампусы КАК t2 ПО t1.кампус = t2.ссылка ГДЕ t2.наименование = ""San Jose State University"" И t1.год = 2000"
2392;SELECT count(*) FROM campuses;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.кампусы
2393;SELECT count(*) FROM campuses;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.кампусы
2394;SELECT count(*) FROM candidate;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.люди
2395;SELECT count(*) FROM candidate;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.люди
2396;SELECT poll_source FROM candidate GROUP BY poll_source ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование ИЗ справочник.люди СГРУППИРОВАТЬ ПО наименование УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
2397;SELECT poll_source FROM candidate GROUP BY poll_source ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование ИЗ справочник.люди СГРУППИРОВАТЬ ПО наименование УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
2398;SELECT support_rate FROM candidate ORDER BY support_rate DESC LIMIT 3;ВЫБРАТЬ ПЕРВЫЕ 3 рост ИЗ справочник.люди УПОРЯДОЧИТЬ ПО рост УБЫВ
2399;SELECT support_rate FROM candidate ORDER BY support_rate DESC LIMIT 3;ВЫБРАТЬ ПЕРВЫЕ 3 рост ИЗ справочник.люди УПОРЯДОЧИТЬ ПО рост УБЫВ
2400;SELECT Candidate_ID FROM candidate ORDER BY oppose_rate LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 ссылка ИЗ справочник.люди УПОРЯДОЧИТЬ ПО oppose_rate
2401;SELECT Candidate_ID FROM candidate ORDER BY oppose_rate LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 ссылка ИЗ справочник.люди УПОРЯДОЧИТЬ ПО oppose_rate
2402;SELECT Support_rate ,  Consider_rate ,  Oppose_rate FROM candidate ORDER BY unsure_rate;ВЫБРАТЬ рост , вес , Oppose_rate ИЗ справочник.люди УПОРЯДОЧИТЬ ПО unsure_rate
2403;SELECT Support_rate ,  Consider_rate ,  Oppose_rate FROM candidate ORDER BY unsure_rate;ВЫБРАТЬ рост , вес , Oppose_rate ИЗ справочник.люди УПОРЯДОЧИТЬ ПО unsure_rate
2404;SELECT poll_source FROM candidate ORDER BY oppose_rate DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование ИЗ справочник.люди УПОРЯДОЧИТЬ ПО oppose_rate УБЫВ
2405;SELECT poll_source FROM candidate ORDER BY oppose_rate DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование ИЗ справочник.люди УПОРЯДОЧИТЬ ПО oppose_rate УБЫВ
2406;SELECT name FROM people ORDER BY date_of_birth;ВЫБРАТЬ источникопроса ИЗ регистрсведений.рейтингикандидатов УПОРЯДОЧИТЬ ПО датаопроса
2407;SELECT name FROM people ORDER BY date_of_birth;ВЫБРАТЬ источникопроса ИЗ регистрсведений.рейтингикандидатов УПОРЯДОЧИТЬ ПО датаопроса
2408;SELECT avg(height) ,  avg(weight) FROM people WHERE sex  =  'M';"ВЫБРАТЬ СРЕДНЕЕ(рейтингподдержки) , СРЕДНЕЕ(рейтинграссматривающих) ИЗ регистрсведений.рейтингикандидатов ГДЕ кандидат = ""M"""
2409;SELECT avg(height) ,  avg(weight) FROM people WHERE sex  =  'M';"ВЫБРАТЬ СРЕДНЕЕ(рейтингподдержки) , СРЕДНЕЕ(рейтинграссматривающих) ИЗ регистрсведений.рейтингикандидатов ГДЕ кандидат = ""M"""
2410;SELECT name FROM people WHERE height  >  200 OR height  <  190;ВЫБРАТЬ источникопроса ИЗ регистрсведений.рейтингикандидатов ГДЕ рейтингподдержки > 200 ИЛИ рейтингподдержки < 190
2411;SELECT name FROM people WHERE height  >  200 OR height  <  190;ВЫБРАТЬ источникопроса ИЗ регистрсведений.рейтингикандидатов ГДЕ рейтингподдержки > 200 ИЛИ рейтингподдержки < 190
2412;SELECT avg(weight) ,  min(weight) ,  sex FROM people GROUP BY sex;ВЫБРАТЬ СРЕДНЕЕ(рейтинграссматривающих) , МИНИМУМ(рейтинграссматривающих) , кандидат ИЗ регистрсведений.рейтингикандидатов СГРУППИРОВАТЬ ПО кандидат
2413;SELECT avg(weight) ,  min(weight) ,  sex FROM people GROUP BY sex;ВЫБРАТЬ СРЕДНЕЕ(рейтинграссматривающих) , МИНИМУМ(рейтинграссматривающих) , кандидат ИЗ регистрсведений.рейтингикандидатов СГРУППИРОВАТЬ ПО кандидат
2414;SELECT t1.name ,  t1.sex FROM people AS t1 JOIN candidate AS t2 ON t1.people_id  =  t2.people_id ORDER BY t2.support_rate DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 t1.источникопроса , t1.кандидат ИЗ регистрсведений.рейтингикандидатов КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.люди КАК t2 ПО t1.ссылка = t2.пол УПОРЯДОЧИТЬ ПО t2.рост УБЫВ
2415;SELECT t1.name ,  t1.sex FROM people AS t1 JOIN candidate AS t2 ON t1.people_id  =  t2.people_id ORDER BY t2.support_rate DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 t1.источникопроса , t1.кандидат ИЗ регистрсведений.рейтингикандидатов КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.люди КАК t2 ПО t1.ссылка = t2.пол УПОРЯДОЧИТЬ ПО t2.рост УБЫВ
2416;SELECT t1.name ,  t1.sex ,  min(oppose_rate) FROM people AS t1 JOIN candidate AS t2 ON t1.people_id  =  t2.people_id GROUP BY t1.sex;ВЫБРАТЬ t1.источникопроса , t1.кандидат , МИНИМУМ(oppose_rate) ИЗ регистрсведений.рейтингикандидатов КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.люди КАК t2 ПО t1.ссылка = t2.пол СГРУППИРОВАТЬ ПО t1.кандидат
2417;SELECT t1.name ,  t1.sex ,  min(oppose_rate) FROM people AS t1 JOIN candidate AS t2 ON t1.people_id  =  t2.people_id GROUP BY t1.sex;ВЫБРАТЬ t1.источникопроса , t1.кандидат , МИНИМУМ(oppose_rate) ИЗ регистрсведений.рейтингикандидатов КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.люди КАК t2 ПО t1.ссылка = t2.пол СГРУППИРОВАТЬ ПО t1.кандидат
2418;SELECT t1.sex FROM people AS t1 JOIN candidate AS t2 ON t1.people_id  =  t2.people_id GROUP BY t1.sex ORDER BY avg(t2.unsure_rate) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 t1.кандидат ИЗ регистрсведений.рейтингикандидатов КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.люди КАК t2 ПО t1.ссылка = t2.пол СГРУППИРОВАТЬ ПО t1.кандидат УПОРЯДОЧИТЬ ПО СРЕДНЕЕ(t2.unsure_rate) УБЫВ
2419;SELECT t1.sex FROM people AS t1 JOIN candidate AS t2 ON t1.people_id  =  t2.people_id GROUP BY t1.sex ORDER BY avg(t2.unsure_rate) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 t1.кандидат ИЗ регистрсведений.рейтингикандидатов КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.люди КАК t2 ПО t1.ссылка = t2.пол СГРУППИРОВАТЬ ПО t1.кандидат УПОРЯДОЧИТЬ ПО СРЕДНЕЕ(t2.unsure_rate) УБЫВ
2420;SELECT name FROM people WHERE people_id NOT IN (SELECT people_id FROM candidate);ВЫБРАТЬ name ИЗ регистрсведений.рейтингикандидатов ГДЕ people_id НЕ В (ВЫБРАТЬ people_id ИЗ справочник.люди)
2421;SELECT name FROM people WHERE people_id NOT IN (SELECT people_id FROM candidate);ВЫБРАТЬ name ИЗ регистрсведений.рейтингикандидатов ГДЕ people_id НЕ В (ВЫБРАТЬ people_id ИЗ справочник.люди)
2422;SELECT t1.name FROM people AS t1 JOIN candidate AS t2 ON t1.people_id  =  t2.people_id WHERE t2.support_rate  <  t2.oppose_rate;ВЫБРАТЬ t1.источникопроса ИЗ регистрсведений.рейтингикандидатов КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.люди КАК t2 ПО t1.ссылка = t2.пол ГДЕ t2.рост < t2.oppose_rate
2423;SELECT t1.name FROM people AS t1 JOIN candidate AS t2 ON t1.people_id  =  t2.people_id WHERE t2.support_rate  <  t2.oppose_rate;ВЫБРАТЬ t1.источникопроса ИЗ регистрсведений.рейтингикандидатов КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.люди КАК t2 ПО t1.ссылка = t2.пол ГДЕ t2.рост < t2.oppose_rate
2424;SELECT count(*) ,  sex FROM people WHERE weight  >  85 GROUP BY sex;ВЫБРАТЬ КОЛИЧЕСТВО(*) , кандидат ИЗ регистрсведений.рейтингикандидатов ГДЕ рейтинграссматривающих > 85 СГРУППИРОВАТЬ ПО кандидат
2425;SELECT count(*) ,  sex FROM people WHERE weight  >  85 GROUP BY sex;ВЫБРАТЬ КОЛИЧЕСТВО(*) , кандидат ИЗ регистрсведений.рейтингикандидатов ГДЕ рейтинграссматривающих > 85 СГРУППИРОВАТЬ ПО кандидат
2426;SELECT max(support_rate) ,  min(consider_rate) ,  min(oppose_rate) FROM candidate;ВЫБРАТЬ МАКСИМУМ(рост) , МИНИМУМ(вес) , МИНИМУМ(oppose_rate) ИЗ справочник.люди
2427;SELECT max(support_rate) ,  min(consider_rate) ,  min(oppose_rate) FROM candidate;ВЫБРАТЬ МАКСИМУМ(рост) , МИНИМУМ(вес) , МИНИМУМ(oppose_rate) ИЗ справочник.люди
2428;SELECT t1.name FROM people AS t1 JOIN candidate AS t2 ON t1.people_id  =  t2.people_id WHERE t1.sex  =  'F' ORDER BY t1.name;"ВЫБРАТЬ t1.источникопроса ИЗ регистрсведений.рейтингикандидатов КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.люди КАК t2 ПО t1.ссылка = t2.пол ГДЕ t1.кандидат = ""F"" УПОРЯДОЧИТЬ ПО t1.источникопроса"
2429;SELECT t1.name FROM people AS t1 JOIN candidate AS t2 ON t1.people_id  =  t2.people_id WHERE t1.sex  =  'F' ORDER BY t1.name;"ВЫБРАТЬ t1.источникопроса ИЗ регистрсведений.рейтингикандидатов КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.люди КАК t2 ПО t1.ссылка = t2.пол ГДЕ t1.кандидат = ""F"" УПОРЯДОЧИТЬ ПО t1.источникопроса"
2430;SELECT name FROM people WHERE height  <  (SELECT avg(height) FROM people);ВЫБРАТЬ name ИЗ регистрсведений.рейтингикандидатов ГДЕ height < (ВЫБРАТЬ СРЕДНЕЕ(height) ИЗ регистрсведений.рейтингикандидатов)
2431;SELECT name FROM people WHERE height  <  (SELECT avg(height) FROM people);ВЫБРАТЬ name ИЗ регистрсведений.рейтингикандидатов ГДЕ height < (ВЫБРАТЬ СРЕДНЕЕ(height) ИЗ регистрсведений.рейтингикандидатов)
2432;SELECT * FROM people;ВЫБРАТЬ * ИЗ регистрсведений.рейтингикандидатов
2433;SELECT * FROM people;ВЫБРАТЬ * ИЗ регистрсведений.рейтингикандидатов
2434;SELECT title FROM Movie WHERE director = 'Steven Spielberg';"ВЫБРАТЬ название ИЗ справочник.фильмы ГДЕ режиссер = ""Steven Spielberg"""
2435;SELECT title FROM Movie WHERE director = 'Steven Spielberg';"ВЫБРАТЬ название ИЗ справочник.фильмы ГДЕ режиссер = ""Steven Spielberg"""
2436;SELECT title FROM Movie WHERE director = 'James Cameron' AND YEAR  >  2000;"ВЫБРАТЬ название ИЗ справочник.фильмы ГДЕ режиссер = ""James Cameron"" И год > 2000"
2437;SELECT title FROM Movie WHERE director = 'James Cameron' AND YEAR  >  2000;"ВЫБРАТЬ название ИЗ справочник.фильмы ГДЕ режиссер = ""James Cameron"" И год > 2000"
2438;SELECT count(*) FROM Movie WHERE YEAR  <  2000;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.фильмы ГДЕ год < 2000
2439;SELECT count(*) FROM Movie WHERE YEAR  <  2000;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.фильмы ГДЕ год < 2000
2440;SELECT director FROM Movie WHERE title  = 'Avatar';"ВЫБРАТЬ режиссер ИЗ справочник.фильмы ГДЕ название = ""Avatar"""
2441;SELECT director FROM Movie WHERE title  = 'Avatar';"ВЫБРАТЬ режиссер ИЗ справочник.фильмы ГДЕ название = ""Avatar"""
2442;SELECT count(*) FROM Reviewer;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.рецензенты
2443;SELECT count(*) FROM Reviewer;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.рецензенты
2444;"SELECT rID FROM Reviewer WHERE name LIKE ""%Mike%""";"ВЫБРАТЬ ссылка ИЗ справочник.рецензенты ГДЕ наименование ПОДОБНО ""%Mike%"""
2445;"SELECT rID FROM Reviewer WHERE name LIKE ""%Mike%""";"ВЫБРАТЬ ссылка ИЗ справочник.рецензенты ГДЕ наименование ПОДОБНО ""%Mike%"""
2446;"SELECT rID FROM Reviewer WHERE name  =  ""Daniel Lewis""";"ВЫБРАТЬ ссылка ИЗ справочник.рецензенты ГДЕ наименование = ""Daniel Lewis"""
2447;"SELECT rID FROM Reviewer WHERE name  =  ""Daniel Lewis""";"ВЫБРАТЬ ссылка ИЗ справочник.рецензенты ГДЕ наименование = ""Daniel Lewis"""
2448;SELECT count(*) FROM Rating WHERE stars  >  3;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.оценкифильмов ГДЕ звезд > 3
2449;SELECT count(*) FROM Rating WHERE stars  >  3;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.оценкифильмов ГДЕ звезд > 3
2450;SELECT max(stars) ,  min(stars) FROM Rating;ВЫБРАТЬ МАКСИМУМ(звезд) , МИНИМУМ(звезд) ИЗ регистрсведений.оценкифильмов
2451;SELECT max(stars) ,  min(stars) FROM Rating;ВЫБРАТЬ МАКСИМУМ(звезд) , МИНИМУМ(звезд) ИЗ регистрсведений.оценкифильмов
2452;SELECT DISTINCT YEAR FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID  =  T2.mID WHERE T2.stars  >=  4 ORDER BY T1.year;ВЫБРАТЬ РАЗЛИЧНЫЕ YEAR ИЗ справочник.фильмы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.оценкифильмов КАК T2 ПО T1.ссылка = T2.фильм ГДЕ T2.звезд >= 4 УПОРЯДОЧИТЬ ПО T1.год
2453;SELECT DISTINCT YEAR FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID  =  T2.mID WHERE T2.stars  >=  4 ORDER BY T1.year;ВЫБРАТЬ РАЗЛИЧНЫЕ YEAR ИЗ справочник.фильмы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.оценкифильмов КАК T2 ПО T1.ссылка = T2.фильм ГДЕ T2.звезд >= 4 УПОРЯДОЧИТЬ ПО T1.год
2454;SELECT T1.director ,  T1.title FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID  =  T2.mID WHERE T2.stars  =  5;ВЫБРАТЬ T1.режиссер , T1.название ИЗ справочник.фильмы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.оценкифильмов КАК T2 ПО T1.ссылка = T2.фильм ГДЕ T2.звезд = 5
2455;SELECT T1.director ,  T1.title FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID  =  T2.mID WHERE T2.stars  =  5;ВЫБРАТЬ T1.режиссер , T1.название ИЗ справочник.фильмы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.оценкифильмов КАК T2 ПО T1.ссылка = T2.фильм ГДЕ T2.звезд = 5
2456;SELECT T2.name ,  avg(T1.stars) FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID GROUP BY T2.name;ВЫБРАТЬ T2.наименование , СРЕДНЕЕ(T1.звезд) ИЗ регистрсведений.оценкифильмов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.рецензенты КАК T2 ПО T1.рецензент = T2.ссылка СГРУППИРОВАТЬ ПО T2.наименование
2457;SELECT T2.name ,  avg(T1.stars) FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID GROUP BY T2.name;ВЫБРАТЬ T2.наименование , СРЕДНЕЕ(T1.звезд) ИЗ регистрсведений.оценкифильмов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.рецензенты КАК T2 ПО T1.рецензент = T2.ссылка СГРУППИРОВАТЬ ПО T2.наименование
2458;SELECT title FROM Movie WHERE mID NOT IN (SELECT mID FROM Rating);ВЫБРАТЬ title ИЗ справочник.фильмы ГДЕ mID НЕ В (ВЫБРАТЬ mID ИЗ регистрсведений.оценкифильмов)
2459;SELECT title FROM Movie WHERE mID NOT IN (SELECT mID FROM Rating);ВЫБРАТЬ title ИЗ справочник.фильмы ГДЕ mID НЕ В (ВЫБРАТЬ mID ИЗ регистрсведений.оценкифильмов)
2460;"SELECT DISTINCT name FROM Reviewer AS T1 JOIN Rating AS T2 ON T1.rID  =  T2.rID WHERE ratingDate  =  ""null""";"ВЫБРАТЬ РАЗЛИЧНЫЕ name ИЗ справочник.рецензенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.оценкифильмов КАК T2 ПО T1.ссылка = T2.рецензент ГДЕ ratingDate = ""null"""
2461;"SELECT DISTINCT name FROM Reviewer AS T1 JOIN Rating AS T2 ON T1.rID  =  T2.rID WHERE ratingDate  =  ""null""";"ВЫБРАТЬ РАЗЛИЧНЫЕ name ИЗ справочник.рецензенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.оценкифильмов КАК T2 ПО T1.ссылка = T2.рецензент ГДЕ ratingDate = ""null"""
2462;SELECT avg(T1.stars) ,  T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T2.year  =  (SELECT min(YEAR) FROM Movie);ВЫБРАТЬ СРЕДНЕЕ(T1.звезд) , T2.название ИЗ регистрсведений.оценкифильмов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.фильмы КАК T2 ПО T1.фильм = T2.ссылка ГДЕ T2.год = (ВЫБРАТЬ МИНИМУМ(YEAR) ИЗ справочник.фильмы)
2463;SELECT avg(T1.stars) ,  T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T2.year  =  (SELECT min(YEAR) FROM Movie);ВЫБРАТЬ СРЕДНЕЕ(T1.звезд) , T2.название ИЗ регистрсведений.оценкифильмов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.фильмы КАК T2 ПО T1.фильм = T2.ссылка ГДЕ T2.год = (ВЫБРАТЬ МИНИМУМ(YEAR) ИЗ справочник.фильмы)
2464;SELECT title FROM Movie WHERE YEAR  =  (SELECT max(YEAR) FROM Movie);ВЫБРАТЬ title ИЗ справочник.фильмы ГДЕ YEAR = (ВЫБРАТЬ МАКСИМУМ(YEAR) ИЗ справочник.фильмы)
2465;SELECT title FROM Movie WHERE YEAR  =  (SELECT max(YEAR) FROM Movie);ВЫБРАТЬ title ИЗ справочник.фильмы ГДЕ YEAR = (ВЫБРАТЬ МАКСИМУМ(YEAR) ИЗ справочник.фильмы)
2466;SELECT max(T1.stars) ,  T2.year FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T2.year  =  (SELECT max(YEAR) FROM Movie);ВЫБРАТЬ МАКСИМУМ(T1.звезд) , T2.год ИЗ регистрсведений.оценкифильмов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.фильмы КАК T2 ПО T1.фильм = T2.ссылка ГДЕ T2.год = (ВЫБРАТЬ МАКСИМУМ(YEAR) ИЗ справочник.фильмы)
2467;SELECT max(T1.stars) ,  T2.year FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T2.year  =  (SELECT max(YEAR) FROM Movie);ВЫБРАТЬ МАКСИМУМ(T1.звезд) , T2.год ИЗ регистрсведений.оценкифильмов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.фильмы КАК T2 ПО T1.фильм = T2.ссылка ГДЕ T2.год = (ВЫБРАТЬ МАКСИМУМ(YEAR) ИЗ справочник.фильмы)
2468;"SELECT title FROM Movie WHERE YEAR  >  (SELECT max(YEAR) FROM Movie WHERE director  =  ""Steven Spielberg"")";"ВЫБРАТЬ название ИЗ справочник.фильмы ГДЕ год > (ВЫБРАТЬ МАКСИМУМ(год) ИЗ справочник.фильмы ГДЕ режиссер = ""Steven Spielberg"")"
2469;"SELECT title FROM Movie WHERE YEAR  >  (SELECT max(YEAR) FROM Movie WHERE director  =  ""Steven Spielberg"")";"ВЫБРАТЬ название ИЗ справочник.фильмы ГДЕ год > (ВЫБРАТЬ МАКСИМУМ(год) ИЗ справочник.фильмы ГДЕ режиссер = ""Steven Spielberg"")"
2470;"SELECT T2.title ,  T2.director FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T1.stars  >  (SELECT avg(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T2.director  =  ""James Cameron"")";"ВЫБРАТЬ T2.название , T2.режиссер ИЗ регистрсведений.оценкифильмов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.фильмы КАК T2 ПО T1.фильм = T2.ссылка ГДЕ T1.звезд > (ВЫБРАТЬ СРЕДНЕЕ(T1.звезд) ИЗ регистрсведений.оценкифильмов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.фильмы КАК T2 ПО T1.фильм = T2.ссылка ГДЕ T2.режиссер = ""James Cameron"")"
2471;"SELECT T2.title ,  T2.director FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T1.stars  >  (SELECT avg(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T2.director  =  ""James Cameron"")";"ВЫБРАТЬ T2.название , T2.режиссер ИЗ регистрсведений.оценкифильмов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.фильмы КАК T2 ПО T1.фильм = T2.ссылка ГДЕ T1.звезд > (ВЫБРАТЬ СРЕДНЕЕ(T1.звезд) ИЗ регистрсведений.оценкифильмов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.фильмы КАК T2 ПО T1.фильм = T2.ссылка ГДЕ T2.режиссер = ""James Cameron"")"
2472;SELECT T3.name ,  T2.title ,  T1.stars ,  T1.ratingDate FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID ORDER BY T3.name ,  T2.title ,  T1.stars;ВЫБРАТЬ T3.наименование , T2.название , T1.звезд , T1.датаоценки ИЗ регистрсведений.оценкифильмов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.фильмы КАК T2 ПО T1.фильм = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.рецензенты КАК T3 ПО T1.рецензент = T3.ссылка УПОРЯДОЧИТЬ ПО T3.наименование , T2.название , T1.звезд
2473;SELECT T3.name ,  T2.title ,  T1.stars ,  T1.ratingDate FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID ORDER BY T3.name ,  T2.title ,  T1.stars;ВЫБРАТЬ T3.наименование , T2.название , T1.звезд , T1.датаоценки ИЗ регистрсведений.оценкифильмов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.фильмы КАК T2 ПО T1.фильм = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.рецензенты КАК T3 ПО T1.рецензент = T3.ссылка УПОРЯДОЧИТЬ ПО T3.наименование , T2.название , T1.звезд
2474;SELECT T2.name FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID GROUP BY T1.rID HAVING COUNT(*)  >=  3;ВЫБРАТЬ T2.наименование ИЗ регистрсведений.оценкифильмов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.рецензенты КАК T2 ПО T1.рецензент = T2.ссылка СГРУППИРОВАТЬ ПО T1.рецензент ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 3
2475;SELECT T2.name FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID GROUP BY T1.rID HAVING COUNT(*)  >=  3;ВЫБРАТЬ T2.наименование ИЗ регистрсведений.оценкифильмов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.рецензенты КАК T2 ПО T1.рецензент = T2.ссылка СГРУППИРОВАТЬ ПО T1.рецензент ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 3
2476;SELECT DISTINCT T3.name FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T2.title  =  'Gone with the Wind';"ВЫБРАТЬ РАЗЛИЧНЫЕ T3.наименование ИЗ регистрсведений.оценкифильмов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.фильмы КАК T2 ПО T1.фильм = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.рецензенты КАК T3 ПО T1.рецензент = T3.ссылка ГДЕ T2.название = ""Gone with the Wind"""
2477;SELECT DISTINCT T3.name FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T2.title  =  'Gone with the Wind';"ВЫБРАТЬ РАЗЛИЧНЫЕ T3.наименование ИЗ регистрсведений.оценкифильмов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.фильмы КАК T2 ПО T1.фильм = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.рецензенты КАК T3 ПО T1.рецензент = T3.ссылка ГДЕ T2.название = ""Gone with the Wind"""
2478;SELECT DISTINCT T2.director FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T3.name  =  'Sarah Martinez';"ВЫБРАТЬ РАЗЛИЧНЫЕ T2.режиссер ИЗ регистрсведений.оценкифильмов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.фильмы КАК T2 ПО T1.фильм = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.рецензенты КАК T3 ПО T1.рецензент = T3.ссылка ГДЕ T3.наименование = ""Sarah Martinez"""
2479;SELECT DISTINCT T2.director FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T3.name  =  'Sarah Martinez';"ВЫБРАТЬ РАЗЛИЧНЫЕ T2.режиссер ИЗ регистрсведений.оценкифильмов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.фильмы КАК T2 ПО T1.фильм = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.рецензенты КАК T3 ПО T1.рецензент = T3.ссылка ГДЕ T3.наименование = ""Sarah Martinez"""
2480;SELECT DISTINCT T3.name ,  T2.title ,  T1.stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T2.director  =  T3.name;ВЫБРАТЬ РАЗЛИЧНЫЕ T3.наименование , T2.название , T1.звезд ИЗ регистрсведений.оценкифильмов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.фильмы КАК T2 ПО T1.фильм = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.рецензенты КАК T3 ПО T1.рецензент = T3.ссылка ГДЕ T2.режиссер = T3.наименование
2481;SELECT DISTINCT T3.name ,  T2.title ,  T1.stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T2.director  =  T3.name;ВЫБРАТЬ РАЗЛИЧНЫЕ T3.наименование , T2.название , T1.звезд ИЗ регистрсведений.оценкифильмов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.фильмы КАК T2 ПО T1.фильм = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.рецензенты КАК T3 ПО T1.рецензент = T3.ссылка ГДЕ T2.режиссер = T3.наименование
2482;SELECT name FROM Reviewer UNION SELECT title FROM Movie;ВЫБРАТЬ name ИЗ справочник.рецензенты ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ title ИЗ справочник.фильмы
2483;SELECT name FROM Reviewer UNION SELECT title FROM Movie;ВЫБРАТЬ name ИЗ справочник.рецензенты ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ title ИЗ справочник.фильмы
2486;SELECT T1.title ,  T1.director FROM Movie AS T1 JOIN Movie AS T2 ON T1.director  =  T2.director WHERE T1.title != T2.title ORDER BY T1.director ,  T1.title;ВЫБРАТЬ T1.название , T1.режиссер ИЗ справочник.фильмы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.фильмы КАК T2 ПО T1.режиссер = T2.режиссер ГДЕ T1.название <> T2.название УПОРЯДОЧИТЬ ПО T1.режиссер , T1.название
2487;SELECT T1.title ,  T1.director FROM Movie AS T1 JOIN Movie AS T2 ON T1.director  =  T2.director WHERE T1.title != T2.title ORDER BY T1.director ,  T1.title;ВЫБРАТЬ T1.название , T1.режиссер ИЗ справочник.фильмы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.фильмы КАК T2 ПО T1.режиссер = T2.режиссер ГДЕ T1.название <> T2.название УПОРЯДОЧИТЬ ПО T1.режиссер , T1.название
2488;SELECT T1.title ,  T1.year FROM Movie AS T1 JOIN Movie AS T2 ON T1.director  =  T2.director WHERE T1.title != T2.title;ВЫБРАТЬ T1.название , T1.год ИЗ справочник.фильмы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.фильмы КАК T2 ПО T1.режиссер = T2.режиссер ГДЕ T1.название <> T2.название
2489;SELECT T1.title ,  T1.year FROM Movie AS T1 JOIN Movie AS T2 ON T1.director  =  T2.director WHERE T1.title != T2.title;ВЫБРАТЬ T1.название , T1.год ИЗ справочник.фильмы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.фильмы КАК T2 ПО T1.режиссер = T2.режиссер ГДЕ T1.название <> T2.название
2490;SELECT director FROM Movie GROUP BY director HAVING count(*)  =  1;ВЫБРАТЬ режиссер ИЗ справочник.фильмы СГРУППИРОВАТЬ ПО режиссер ИМЕЮЩИЕ КОЛИЧЕСТВО(*) = 1
2491;SELECT director FROM Movie GROUP BY director HAVING count(*)  =  1;ВЫБРАТЬ режиссер ИЗ справочник.фильмы СГРУППИРОВАТЬ ПО режиссер ИМЕЮЩИЕ КОЛИЧЕСТВО(*) = 1
2492;"SELECT director FROM Movie WHERE director != ""null"" GROUP BY director HAVING count(*)  =  1";"ВЫБРАТЬ режиссер ИЗ справочник.фильмы ГДЕ режиссер <> ""null"" СГРУППИРОВАТЬ ПО режиссер ИМЕЮЩИЕ КОЛИЧЕСТВО(*) = 1"
2493;"SELECT director FROM Movie WHERE director != ""null"" GROUP BY director HAVING count(*)  =  1";"ВЫБРАТЬ режиссер ИЗ справочник.фильмы ГДЕ режиссер <> ""null"" СГРУППИРОВАТЬ ПО режиссер ИМЕЮЩИЕ КОЛИЧЕСТВО(*) = 1"
2494;SELECT count(*) ,  T1.director FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID  =  T2.mID GROUP BY T1.director;ВЫБРАТЬ КОЛИЧЕСТВО(*) , T1.режиссер ИЗ справочник.фильмы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.оценкифильмов КАК T2 ПО T1.ссылка = T2.фильм СГРУППИРОВАТЬ ПО T1.режиссер
2495;SELECT count(*) ,  T1.director FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID  =  T2.mID GROUP BY T1.director;ВЫБРАТЬ КОЛИЧЕСТВО(*) , T1.режиссер ИЗ справочник.фильмы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.оценкифильмов КАК T2 ПО T1.ссылка = T2.фильм СГРУППИРОВАТЬ ПО T1.режиссер
2496;SELECT T2.title ,  avg(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T1.mID ORDER BY avg(T1.stars) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.название , СРЕДНЕЕ(T1.звезд) ИЗ регистрсведений.оценкифильмов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.фильмы КАК T2 ПО T1.фильм = T2.ссылка СГРУППИРОВАТЬ ПО T1.фильм УПОРЯДОЧИТЬ ПО СРЕДНЕЕ(T1.звезд) УБЫВ
2497;SELECT T2.title ,  avg(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T1.mID ORDER BY avg(T1.stars) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.название , СРЕДНЕЕ(T1.звезд) ИЗ регистрсведений.оценкифильмов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.фильмы КАК T2 ПО T1.фильм = T2.ссылка СГРУППИРОВАТЬ ПО T1.фильм УПОРЯДОЧИТЬ ПО СРЕДНЕЕ(T1.звезд) УБЫВ
2498;SELECT T2.title ,  avg(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T1.mID ORDER BY avg(T1.stars) LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.название , СРЕДНЕЕ(T1.звезд) ИЗ регистрсведений.оценкифильмов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.фильмы КАК T2 ПО T1.фильм = T2.ссылка СГРУППИРОВАТЬ ПО T1.фильм УПОРЯДОЧИТЬ ПО СРЕДНЕЕ(T1.звезд)
2499;SELECT T2.title ,  avg(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T1.mID ORDER BY avg(T1.stars) LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.название , СРЕДНЕЕ(T1.звезд) ИЗ регистрсведений.оценкифильмов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.фильмы КАК T2 ПО T1.фильм = T2.ссылка СГРУППИРОВАТЬ ПО T1.фильм УПОРЯДОЧИТЬ ПО СРЕДНЕЕ(T1.звезд)
2500;SELECT T2.title ,  T2.year FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID ORDER BY T1.stars DESC LIMIT 3;ВЫБРАТЬ ПЕРВЫЕ 3 T2.название , T2.год ИЗ регистрсведений.оценкифильмов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.фильмы КАК T2 ПО T1.фильм = T2.ссылка УПОРЯДОЧИТЬ ПО T1.звезд УБЫВ
2501;SELECT T2.title ,  T2.year FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID ORDER BY T1.stars DESC LIMIT 3;ВЫБРАТЬ ПЕРВЫЕ 3 T2.название , T2.год ИЗ регистрсведений.оценкифильмов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.фильмы КАК T2 ПО T1.фильм = T2.ссылка УПОРЯДОЧИТЬ ПО T1.звезд УБЫВ
2502;"SELECT T2.title ,  T1.stars ,  T2.director ,  max(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE director != ""null"" GROUP BY director";"ВЫБРАТЬ T2.название , T1.звезд , T2.режиссер , МАКСИМУМ(T1.звезд) ИЗ регистрсведений.оценкифильмов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.фильмы КАК T2 ПО T1.фильм = T2.ссылка ГДЕ director <> ""null"" СГРУППИРОВАТЬ ПО director"
2503;"SELECT T2.title ,  T1.stars ,  T2.director ,  max(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE director != ""null"" GROUP BY director";"ВЫБРАТЬ T2.название , T1.звезд , T2.режиссер , МАКСИМУМ(T1.звезд) ИЗ регистрсведений.оценкифильмов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.фильмы КАК T2 ПО T1.фильм = T2.ссылка ГДЕ director <> ""null"" СГРУППИРОВАТЬ ПО director"
2504;SELECT T2.title ,  T1.rID ,  T1.stars ,  min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T1.rID;ВЫБРАТЬ T2.название , T1.рецензент , T1.звезд , МИНИМУМ(T1.звезд) ИЗ регистрсведений.оценкифильмов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.фильмы КАК T2 ПО T1.фильм = T2.ссылка СГРУППИРОВАТЬ ПО T1.рецензент
2505;SELECT T2.title ,  T1.rID ,  T1.stars ,  min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T1.rID;ВЫБРАТЬ T2.название , T1.рецензент , T1.звезд , МИНИМУМ(T1.звезд) ИЗ регистрсведений.оценкифильмов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.фильмы КАК T2 ПО T1.фильм = T2.ссылка СГРУППИРОВАТЬ ПО T1.рецензент
2506;SELECT T2.title ,  T1.stars ,  T2.director ,  min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T2.director;ВЫБРАТЬ T2.название , T1.звезд , T2.режиссер , МИНИМУМ(T1.звезд) ИЗ регистрсведений.оценкифильмов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.фильмы КАК T2 ПО T1.фильм = T2.ссылка СГРУППИРОВАТЬ ПО T2.режиссер
2507;SELECT T2.title ,  T1.stars ,  T2.director ,  min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T2.director;ВЫБРАТЬ T2.название , T1.звезд , T2.режиссер , МИНИМУМ(T1.звезд) ИЗ регистрсведений.оценкифильмов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.фильмы КАК T2 ПО T1.фильм = T2.ссылка СГРУППИРОВАТЬ ПО T2.режиссер
2508;SELECT T2.title ,  T1.mID FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T1.mID ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.название , T1.фильм ИЗ регистрсведений.оценкифильмов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.фильмы КАК T2 ПО T1.фильм = T2.ссылка СГРУППИРОВАТЬ ПО T1.фильм УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
2509;SELECT T2.title ,  T1.mID FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T1.mID ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.название , T1.фильм ИЗ регистрсведений.оценкифильмов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.фильмы КАК T2 ПО T1.фильм = T2.ссылка СГРУППИРОВАТЬ ПО T1.фильм УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
2510;SELECT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T1.stars BETWEEN 3 AND 5;ВЫБРАТЬ T2.название ИЗ регистрсведений.оценкифильмов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.фильмы КАК T2 ПО T1.фильм = T2.ссылка ГДЕ T1.звезд МЕЖДУ 3 И 5
2511;SELECT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T1.stars BETWEEN 3 AND 5;ВЫБРАТЬ T2.название ИЗ регистрсведений.оценкифильмов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.фильмы КАК T2 ПО T1.фильм = T2.ссылка ГДЕ T1.звезд МЕЖДУ 3 И 5
2512;SELECT T2.name FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID WHERE T1.stars  >  3;ВЫБРАТЬ T2.наименование ИЗ регистрсведений.оценкифильмов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.рецензенты КАК T2 ПО T1.рецензент = T2.ссылка ГДЕ T1.звезд > 3
2513;SELECT T2.name FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID WHERE T1.stars  >  3;ВЫБРАТЬ T2.наименование ИЗ регистрсведений.оценкифильмов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.рецензенты КАК T2 ПО T1.рецензент = T2.ссылка ГДЕ T1.звезд > 3
2514;"SELECT mID ,  avg(stars) FROM Rating WHERE mID NOT IN (SELECT T1.mID FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID WHERE T2.name  =  ""Brittany Harris"") GROUP BY mID";"ВЫБРАТЬ mID , СРЕДНЕЕ(stars) ИЗ регистрсведений.оценкифильмов ГДЕ mID НЕ В (ВЫБРАТЬ T1.фильм ИЗ регистрсведений.оценкифильмов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.рецензенты КАК T2 ПО T1.рецензент = T2.ссылка ГДЕ T2.наименование = ""Brittany Harris"") СГРУППИРОВАТЬ ПО mID"
2515;"SELECT mID ,  avg(stars) FROM Rating WHERE mID NOT IN (SELECT T1.mID FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID WHERE T2.name  =  ""Brittany Harris"") GROUP BY mID";"ВЫБРАТЬ mID , СРЕДНЕЕ(stars) ИЗ регистрсведений.оценкифильмов ГДЕ mID НЕ В (ВЫБРАТЬ T1.фильм ИЗ регистрсведений.оценкифильмов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.рецензенты КАК T2 ПО T1.рецензент = T2.ссылка ГДЕ T2.наименование = ""Brittany Harris"") СГРУППИРОВАТЬ ПО mID"
2518;SELECT mID ,  avg(stars) FROM Rating GROUP BY mID HAVING count(*)  >=  2;ВЫБРАТЬ фильм , СРЕДНЕЕ(звезд) ИЗ регистрсведений.оценкифильмов СГРУППИРОВАТЬ ПО фильм ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
2519;SELECT mID ,  avg(stars) FROM Rating GROUP BY mID HAVING count(*)  >=  2;ВЫБРАТЬ фильм , СРЕДНЕЕ(звезд) ИЗ регистрсведений.оценкифильмов СГРУППИРОВАТЬ ПО фильм ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
2522;SELECT rID FROM Rating WHERE stars != 4;ВЫБРАТЬ рецензент ИЗ регистрсведений.оценкифильмов ГДЕ звезд <> 4
2523;SELECT rID FROM Rating WHERE stars != 4;ВЫБРАТЬ рецензент ИЗ регистрсведений.оценкифильмов ГДЕ звезд <> 4
2524;SELECT DISTINCT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T3.name  =  'Brittany Harris' OR T2.year  >  2000;"ВЫБРАТЬ РАЗЛИЧНЫЕ T2.название ИЗ регистрсведений.оценкифильмов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.фильмы КАК T2 ПО T1.фильм = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.рецензенты КАК T3 ПО T1.рецензент = T3.ссылка ГДЕ T3.наименование = ""Brittany Harris"" ИЛИ T2.год > 2000"
2525;SELECT DISTINCT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T3.name  =  'Brittany Harris' OR T2.year  >  2000;"ВЫБРАТЬ РАЗЛИЧНЫЕ T2.название ИЗ регистрсведений.оценкифильмов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.фильмы КАК T2 ПО T1.фильм = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.рецензенты КАК T3 ПО T1.рецензент = T3.ссылка ГДЕ T3.наименование = ""Brittany Harris"" ИЛИ T2.год > 2000"
2526;"SELECT title FROM Movie WHERE director  =  ""James Cameron"" OR YEAR   <  1980";"ВЫБРАТЬ название ИЗ справочник.фильмы ГДЕ режиссер = ""James Cameron"" ИЛИ год < 1980"
2527;"SELECT title FROM Movie WHERE director  =  ""James Cameron"" OR YEAR   <  1980";"ВЫБРАТЬ название ИЗ справочник.фильмы ГДЕ режиссер = ""James Cameron"" ИЛИ год < 1980"
2532;SELECT count(*) FROM county_public_safety;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.округабезопасности
2533;SELECT count(*) FROM county_public_safety;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.округабезопасности
2534;SELECT Name FROM county_public_safety ORDER BY Population DESC;ВЫБРАТЬ наименование ИЗ справочник.округабезопасности УПОРЯДОЧИТЬ ПО население УБЫВ
2535;SELECT Name FROM county_public_safety ORDER BY Population DESC;ВЫБРАТЬ наименование ИЗ справочник.округабезопасности УПОРЯДОЧИТЬ ПО население УБЫВ
2536;"SELECT DISTINCT Police_force FROM county_public_safety WHERE LOCATION != ""East""";"ВЫБРАТЬ РАЗЛИЧНЫЕ полицейскоеподразделение ИЗ справочник.округабезопасности ГДЕ местоположение <> ""East"""
2537;"SELECT DISTINCT Police_force FROM county_public_safety WHERE LOCATION != ""East""";"ВЫБРАТЬ РАЗЛИЧНЫЕ полицейскоеподразделение ИЗ справочник.округабезопасности ГДЕ местоположение <> ""East"""
2538;SELECT min(Crime_rate) ,  max(Crime_rate) FROM county_public_safety;ВЫБРАТЬ МИНИМУМ(уровеньпреступности) , МАКСИМУМ(уровеньпреступности) ИЗ справочник.округабезопасности
2539;SELECT min(Crime_rate) ,  max(Crime_rate) FROM county_public_safety;ВЫБРАТЬ МИНИМУМ(уровеньпреступности) , МАКСИМУМ(уровеньпреступности) ИЗ справочник.округабезопасности
2540;SELECT Crime_rate FROM county_public_safety ORDER BY Police_officers ASC;ВЫБРАТЬ уровеньпреступности ИЗ справочник.округабезопасности УПОРЯДОЧИТЬ ПО числоофицеровполиции ВОЗР
2541;SELECT Crime_rate FROM county_public_safety ORDER BY Police_officers ASC;ВЫБРАТЬ уровеньпреступности ИЗ справочник.округабезопасности УПОРЯДОЧИТЬ ПО числоофицеровполиции ВОЗР
2542;SELECT Name FROM city ORDER BY Name ASC;ВЫБРАТЬ наименование ИЗ справочник.города УПОРЯДОЧИТЬ ПО наименование ВОЗР
2543;SELECT Name FROM city ORDER BY Name ASC;ВЫБРАТЬ наименование ИЗ справочник.города УПОРЯДОЧИТЬ ПО наименование ВОЗР
2544;SELECT Hispanic FROM city WHERE Black  >  10;ВЫБРАТЬ латиноамериканцы ИЗ справочник.города ГДЕ афроамериканцы > 10
2545;SELECT Hispanic FROM city WHERE Black  >  10;ВЫБРАТЬ латиноамериканцы ИЗ справочник.города ГДЕ афроамериканцы > 10
2546;SELECT Name FROM county_public_safety ORDER BY Population DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование ИЗ справочник.округабезопасности УПОРЯДОЧИТЬ ПО население УБЫВ
2547;SELECT Name FROM county_public_safety ORDER BY Population DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование ИЗ справочник.округабезопасности УПОРЯДОЧИТЬ ПО население УБЫВ
2548;SELECT Name FROM city ORDER BY White DESC LIMIT 5;ВЫБРАТЬ ПЕРВЫЕ 5 наименование ИЗ справочник.города УПОРЯДОЧИТЬ ПО белые УБЫВ
2549;SELECT Name FROM city ORDER BY White DESC LIMIT 5;ВЫБРАТЬ ПЕРВЫЕ 5 наименование ИЗ справочник.города УПОРЯДОЧИТЬ ПО белые УБЫВ
2550;SELECT T1.Name ,  T2.Name FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID  =  T2.County_ID;ВЫБРАТЬ T1.наименование , T2.наименование ИЗ справочник.города КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.округабезопасности КАК T2 ПО T1.округ = T2.ссылка
2551;SELECT T1.Name ,  T2.Name FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID  =  T2.County_ID;ВЫБРАТЬ T1.наименование , T2.наименование ИЗ справочник.города КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.округабезопасности КАК T2 ПО T1.округ = T2.ссылка
2552;SELECT T1.White ,  T2.Crime_rate FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID  =  T2.County_ID;ВЫБРАТЬ T1.белые , T2.уровеньпреступности ИЗ справочник.города КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.округабезопасности КАК T2 ПО T1.округ = T2.ссылка
2553;SELECT T1.White ,  T2.Crime_rate FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID  =  T2.County_ID;ВЫБРАТЬ T1.белые , T2.уровеньпреступности ИЗ справочник.города КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.округабезопасности КАК T2 ПО T1.округ = T2.ссылка
2554;SELECT name FROM city WHERE county_ID  =  (SELECT county_ID FROM county_public_safety ORDER BY Police_officers DESC LIMIT 1);ВЫБРАТЬ name ИЗ справочник.города ГДЕ county_ID = (ВЫБРАТЬ county_ID ИЗ справочник.округабезопасности УПОРЯДОЧИТЬ ПО Police_officers УБЫВ LIMIT 1)
2555;SELECT name FROM city WHERE county_ID  =  (SELECT county_ID FROM county_public_safety ORDER BY Police_officers DESC LIMIT 1);ВЫБРАТЬ name ИЗ справочник.города ГДЕ county_ID = (ВЫБРАТЬ county_ID ИЗ справочник.округабезопасности УПОРЯДОЧИТЬ ПО Police_officers УБЫВ LIMIT 1)
2556;SELECT count(*) FROM city WHERE county_ID IN (SELECT county_ID FROM county_public_safety WHERE population  >  20000);ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.города ГДЕ ссылка В (ВЫБРАТЬ ссылка ИЗ справочник.округабезопасности ГДЕ население > 20000)
2557;SELECT count(*) FROM city WHERE county_ID IN (SELECT county_ID FROM county_public_safety WHERE population  >  20000);ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.города ГДЕ ссылка В (ВЫБРАТЬ ссылка ИЗ справочник.округабезопасности ГДЕ население > 20000)
2558;SELECT T2.Crime_rate FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID  =  T2.County_ID WHERE T1.White  >  90;ВЫБРАТЬ T2.уровеньпреступности ИЗ справочник.города КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.округабезопасности КАК T2 ПО T1.округ = T2.ссылка ГДЕ T1.белые > 90
2559;SELECT T2.Crime_rate FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID  =  T2.County_ID WHERE T1.White  >  90;ВЫБРАТЬ T2.уровеньпреступности ИЗ справочник.города КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.округабезопасности КАК T2 ПО T1.округ = T2.ссылка ГДЕ T1.белые > 90
2560;SELECT Police_force ,  COUNT(*) FROM county_public_safety GROUP BY Police_force;ВЫБРАТЬ полицейскоеподразделение , КОЛИЧЕСТВО(*) ИЗ справочник.округабезопасности СГРУППИРОВАТЬ ПО полицейскоеподразделение
2561;SELECT Police_force ,  COUNT(*) FROM county_public_safety GROUP BY Police_force;ВЫБРАТЬ полицейскоеподразделение , КОЛИЧЕСТВО(*) ИЗ справочник.округабезопасности СГРУППИРОВАТЬ ПО полицейскоеподразделение
2562;SELECT LOCATION FROM county_public_safety GROUP BY LOCATION ORDER BY COUNT(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 местоположение ИЗ справочник.округабезопасности СГРУППИРОВАТЬ ПО местоположение УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
2563;SELECT LOCATION FROM county_public_safety GROUP BY LOCATION ORDER BY COUNT(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 местоположение ИЗ справочник.округабезопасности СГРУППИРОВАТЬ ПО местоположение УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
2564;SELECT Name FROM county_public_safety WHERE County_ID NOT IN (SELECT County_ID FROM city);ВЫБРАТЬ Name ИЗ справочник.округабезопасности ГДЕ County_ID НЕ В (ВЫБРАТЬ County_ID ИЗ справочник.города)
2565;SELECT Name FROM county_public_safety WHERE County_ID NOT IN (SELECT County_ID FROM city);ВЫБРАТЬ Name ИЗ справочник.округабезопасности ГДЕ County_ID НЕ В (ВЫБРАТЬ County_ID ИЗ справочник.города)
2568;SELECT name FROM city WHERE county_id IN (SELECT county_id FROM county_public_safety WHERE Crime_rate  <  100);ВЫБРАТЬ наименование ИЗ справочник.города ГДЕ ссылка В (ВЫБРАТЬ ссылка ИЗ справочник.округабезопасности ГДЕ уровеньпреступности < 100)
2569;SELECT name FROM city WHERE county_id IN (SELECT county_id FROM county_public_safety WHERE Crime_rate  <  100);ВЫБРАТЬ наименование ИЗ справочник.города ГДЕ ссылка В (ВЫБРАТЬ ссылка ИЗ справочник.округабезопасности ГДЕ уровеньпреступности < 100)
2570;SELECT Case_burden FROM county_public_safety ORDER BY Population DESC;ВЫБРАТЬ нагрузкаподелам ИЗ справочник.округабезопасности УПОРЯДОЧИТЬ ПО население УБЫВ
2571;SELECT Case_burden FROM county_public_safety ORDER BY Population DESC;ВЫБРАТЬ нагрузкаподелам ИЗ справочник.округабезопасности УПОРЯДОЧИТЬ ПО население УБЫВ
2572;"SELECT roomName FROM Rooms WHERE basePrice  <  160 AND beds =  2 AND decor  =  'modern';";"ВЫБРАТЬ наименование ИЗ справочник.номера ГДЕ базоваяцена < 160 И количествокроватей = 2 И декор = ""modern"";"
2573;"SELECT roomName FROM Rooms WHERE basePrice  <  160 AND beds =  2 AND decor  =  'modern';";"ВЫБРАТЬ наименование ИЗ справочник.номера ГДЕ базоваяцена < 160 И количествокроватей = 2 И декор = ""modern"";"
2574;"SELECT roomName ,  RoomId FROM Rooms WHERE basePrice  >  160 AND maxOccupancy  >  2;";"ВЫБРАТЬ наименование , ссылка ИЗ справочник.номера ГДЕ базоваяцена > 160 И максимальнаявместимость > 2;"
2575;"SELECT roomName ,  RoomId FROM Rooms WHERE basePrice  >  160 AND maxOccupancy  >  2;";"ВЫБРАТЬ наименование , ссылка ИЗ справочник.номера ГДЕ базоваяцена > 160 И максимальнаявместимость > 2;"
2576;"SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T1.Room ORDER BY count(*) DESC LIMIT 1;";"ВЫБРАТЬ T2.наименование ИЗ регистрсведений.бронирование КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.номера КАК T2 ПО T1.номер = T2.ссылка СГРУППИРОВАТЬ ПО T1.номер УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ LIMIT 1;"
2577;"SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T1.Room ORDER BY count(*) DESC LIMIT 1;";"ВЫБРАТЬ T2.наименование ИЗ регистрсведений.бронирование КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.номера КАК T2 ПО T1.номер = T2.ссылка СГРУППИРОВАТЬ ПО T1.номер УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ LIMIT 1;"
2578;"SELECT kids FROM Reservations WHERE FirstName = ""ROY"" AND LastName  =  ""SWEAZY"";";"ВЫБРАТЬ детей ИЗ регистрсведений.бронирование ГДЕ имя = ""ROY"" И фамилия = ""SWEAZY"";"
2579;"SELECT kids FROM Reservations WHERE FirstName = ""ROY"" AND LastName  =  ""SWEAZY"";";"ВЫБРАТЬ детей ИЗ регистрсведений.бронирование ГДЕ имя = ""ROY"" И фамилия = ""SWEAZY"";"
2580;"SELECT count(*) FROM Reservations WHERE FirstName = ""ROY"" AND LastName  =  ""SWEAZY"";";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.бронирование ГДЕ имя = ""ROY"" И фамилия = ""SWEAZY"";"
2581;"SELECT count(*) FROM Reservations WHERE FirstName = ""ROY"" AND LastName  =  ""SWEAZY"";";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.бронирование ГДЕ имя = ""ROY"" И фамилия = ""SWEAZY"";"
2582;"SELECT T2.roomName ,  T1.Rate ,  T1.CheckIn ,  T1.CheckOut FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T1.Room ORDER BY T1.Rate DESC LIMIT 1;";"ВЫБРАТЬ T2.наименование , T1.тариф , T1.датазаезда , T1.датавыезда ИЗ регистрсведений.бронирование КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.номера КАК T2 ПО T1.номер = T2.ссылка СГРУППИРОВАТЬ ПО T1.номер УПОРЯДОЧИТЬ ПО T1.тариф УБЫВ LIMIT 1;"
2583;"SELECT T2.roomName ,  T1.Rate ,  T1.CheckIn ,  T1.CheckOut FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T1.Room ORDER BY T1.Rate DESC LIMIT 1;";"ВЫБРАТЬ T2.наименование , T1.тариф , T1.датазаезда , T1.датавыезда ИЗ регистрсведений.бронирование КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.номера КАК T2 ПО T1.номер = T2.ссылка СГРУППИРОВАТЬ ПО T1.номер УПОРЯДОЧИТЬ ПО T1.тариф УБЫВ LIMIT 1;"
2584;"SELECT Adults FROM Reservations WHERE CheckIn  =  ""2010-10-23"" AND FirstName  =  ""CONRAD"" AND LastName  =  ""SELBIG"";";"ВЫБРАТЬ взрослых ИЗ регистрсведений.бронирование ГДЕ датазаезда = ""2010-10-23"" И имя = ""CONRAD"" И фамилия = ""SELBIG"";"
2585;"SELECT Adults FROM Reservations WHERE CheckIn  =  ""2010-10-23"" AND FirstName  =  ""CONRAD"" AND LastName  =  ""SELBIG"";";"ВЫБРАТЬ взрослых ИЗ регистрсведений.бронирование ГДЕ датазаезда = ""2010-10-23"" И имя = ""CONRAD"" И фамилия = ""SELBIG"";"
2586;"SELECT Kids FROM Reservations WHERE CheckIn  =  ""2010-09-21"" AND FirstName  =  ""DAMIEN"" AND LastName  =  ""TRACHSEL"";";"ВЫБРАТЬ детей ИЗ регистрсведений.бронирование ГДЕ датазаезда = ""2010-09-21"" И имя = ""DAMIEN"" И фамилия = ""TRACHSEL"";"
2587;"SELECT Kids FROM Reservations WHERE CheckIn  =  ""2010-09-21"" AND FirstName  =  ""DAMIEN"" AND LastName  =  ""TRACHSEL"";";"ВЫБРАТЬ детей ИЗ регистрсведений.бронирование ГДЕ датазаезда = ""2010-09-21"" И имя = ""DAMIEN"" И фамилия = ""TRACHSEL"";"
2588;"SELECT sum(beds) FROM Rooms WHERE bedtype  =  'King';";"ВЫБРАТЬ СУММА(количествокроватей) ИЗ справочник.номера ГДЕ типкровати = ""King"";"
2589;"SELECT sum(beds) FROM Rooms WHERE bedtype  =  'King';";"ВЫБРАТЬ СУММА(количествокроватей) ИЗ справочник.номера ГДЕ типкровати = ""King"";"
2590;"SELECT roomName ,  decor FROM Rooms WHERE bedtype  =  'King' ORDER BY basePrice;";"ВЫБРАТЬ наименование , декор ИЗ справочник.номера ГДЕ типкровати = ""King"" УПОРЯДОЧИТЬ ПО базоваяцена;"
2591;"SELECT roomName ,  decor FROM Rooms WHERE bedtype  =  'King' ORDER BY basePrice;";"ВЫБРАТЬ наименование , декор ИЗ справочник.номера ГДЕ типкровати = ""King"" УПОРЯДОЧИТЬ ПО базоваяцена;"
2592;"SELECT roomName ,  basePrice FROM Rooms ORDER BY basePrice ASC LIMIT 1;";"ВЫБРАТЬ наименование , базоваяцена ИЗ справочник.номера УПОРЯДОЧИТЬ ПО базоваяцена ВОЗР LIMIT 1;"
2593;"SELECT roomName ,  basePrice FROM Rooms ORDER BY basePrice ASC LIMIT 1;";"ВЫБРАТЬ наименование , базоваяцена ИЗ справочник.номера УПОРЯДОЧИТЬ ПО базоваяцена ВОЗР LIMIT 1;"
2594;"SELECT decor FROM Rooms WHERE roomName  =  ""Recluse and defiance"";";"ВЫБРАТЬ декор ИЗ справочник.номера ГДЕ наименование = ""Recluse and defiance"";"
2595;"SELECT decor FROM Rooms WHERE roomName  =  ""Recluse and defiance"";";"ВЫБРАТЬ декор ИЗ справочник.номера ГДЕ наименование = ""Recluse and defiance"";"
2596;"SELECT bedType ,  avg(basePrice) FROM Rooms GROUP BY bedType;";"ВЫБРАТЬ типкровати , СРЕДНЕЕ(базоваяцена) ИЗ справочник.номера СГРУППИРОВАТЬ ПО типкровати;"
2597;"SELECT bedType ,  avg(basePrice) FROM Rooms GROUP BY bedType;";"ВЫБРАТЬ типкровати , СРЕДНЕЕ(базоваяцена) ИЗ справочник.номера СГРУППИРОВАТЬ ПО типкровати;"
2598;"SELECT sum(maxOccupancy) FROM Rooms WHERE decor  =  'modern';";"ВЫБРАТЬ СУММА(максимальнаявместимость) ИЗ справочник.номера ГДЕ декор = ""modern"";"
2599;"SELECT sum(maxOccupancy) FROM Rooms WHERE decor  =  'modern';";"ВЫБРАТЬ СУММА(максимальнаявместимость) ИЗ справочник.номера ГДЕ декор = ""modern"";"
2600;"SELECT T2.decor FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T2.decor ORDER BY count(T2.decor) ASC LIMIT 1;";"ВЫБРАТЬ T2.декор ИЗ регистрсведений.бронирование КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.номера КАК T2 ПО T1.номер = T2.ссылка СГРУППИРОВАТЬ ПО T2.декор УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(T2.декор) ВОЗР LIMIT 1;"
2601;"SELECT T2.decor FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T2.decor ORDER BY count(T2.decor) ASC LIMIT 1;";"ВЫБРАТЬ T2.декор ИЗ регистрсведений.бронирование КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.номера КАК T2 ПО T1.номер = T2.ссылка СГРУППИРОВАТЬ ПО T2.декор УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(T2.декор) ВОЗР LIMIT 1;"
2602;"SELECT count(*) FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId WHERE T2.maxOccupancy  =  T1.Adults + T1.Kids;";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.бронирование КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.номера КАК T2 ПО T1.номер = T2.ссылка ГДЕ T2.максимальнаявместимость = T1.взрослых + T1.детей;"
2603;"SELECT count(*) FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId WHERE T2.maxOccupancy  =  T1.Adults + T1.Kids;";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.бронирование КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.номера КАК T2 ПО T1.номер = T2.ссылка ГДЕ T2.максимальнаявместимость = T1.взрослых + T1.детей;"
2604;SELECT T1.firstname ,  T1.lastname FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId WHERE T1.Rate - T2.basePrice  >  0;ВЫБРАТЬ T1.имя , T1.фамилия ИЗ регистрсведений.бронирование КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.номера КАК T2 ПО T1.номер = T2.ссылка ГДЕ T1.тариф - T2.базоваяцена > 0
2605;SELECT T1.firstname ,  T1.lastname FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId WHERE T1.Rate - T2.basePrice  >  0;ВЫБРАТЬ T1.имя , T1.фамилия ИЗ регистрсведений.бронирование КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.номера КАК T2 ПО T1.номер = T2.ссылка ГДЕ T1.тариф - T2.базоваяцена > 0
2606;"SELECT count(*) FROM Rooms;";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.номера;"
2607;"SELECT count(*) FROM Rooms;";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.номера;"
2608;"SELECT count(*) FROM Rooms WHERE bedType  =  ""King"";";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.номера ГДЕ типкровати = ""King"";"
2609;"SELECT count(*) FROM Rooms WHERE bedType  =  ""King"";";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.номера ГДЕ типкровати = ""King"";"
2610;"SELECT bedType ,  count(*) FROM Rooms GROUP BY bedType;";"ВЫБРАТЬ типкровати , КОЛИЧЕСТВО(*) ИЗ справочник.номера СГРУППИРОВАТЬ ПО типкровати;"
2611;"SELECT bedType ,  count(*) FROM Rooms GROUP BY bedType;";"ВЫБРАТЬ типкровати , КОЛИЧЕСТВО(*) ИЗ справочник.номера СГРУППИРОВАТЬ ПО типкровати;"
2612;"SELECT roomName FROM Rooms ORDER BY maxOccupancy DESC LIMIT 1;";"ВЫБРАТЬ наименование ИЗ справочник.номера УПОРЯДОЧИТЬ ПО максимальнаявместимость УБЫВ LIMIT 1;"
2613;"SELECT roomName FROM Rooms ORDER BY maxOccupancy DESC LIMIT 1;";"ВЫБРАТЬ наименование ИЗ справочник.номера УПОРЯДОЧИТЬ ПО максимальнаявместимость УБЫВ LIMIT 1;"
2614;"SELECT RoomId ,  roomName FROM Rooms ORDER BY basePrice DESC LIMIT 1;";"ВЫБРАТЬ ссылка , наименование ИЗ справочник.номера УПОРЯДОЧИТЬ ПО базоваяцена УБЫВ LIMIT 1;"
2615;"SELECT RoomId ,  roomName FROM Rooms ORDER BY basePrice DESC LIMIT 1;";"ВЫБРАТЬ ссылка , наименование ИЗ справочник.номера УПОРЯДОЧИТЬ ПО базоваяцена УБЫВ LIMIT 1;"
2616;"SELECT roomName ,  bedType FROM Rooms WHERE decor = ""traditional"";";"ВЫБРАТЬ наименование , типкровати ИЗ справочник.номера ГДЕ декор = ""traditional"";"
2617;"SELECT roomName ,  bedType FROM Rooms WHERE decor = ""traditional"";";"ВЫБРАТЬ наименование , типкровати ИЗ справочник.номера ГДЕ декор = ""traditional"";"
2618;"SELECT decor ,  count(*) FROM Rooms WHERE bedType = ""King"" GROUP BY decor;";"ВЫБРАТЬ декор , КОЛИЧЕСТВО(*) ИЗ справочник.номера ГДЕ типкровати = ""King"" СГРУППИРОВАТЬ ПО декор;"
2619;"SELECT decor ,  count(*) FROM Rooms WHERE bedType = ""King"" GROUP BY decor;";"ВЫБРАТЬ декор , КОЛИЧЕСТВО(*) ИЗ справочник.номера ГДЕ типкровати = ""King"" СГРУППИРОВАТЬ ПО декор;"
2620;"SELECT decor , avg(basePrice) ,  min(basePrice) FROM Rooms GROUP BY decor;";"ВЫБРАТЬ декор , СРЕДНЕЕ(базоваяцена) , МИНИМУМ(базоваяцена) ИЗ справочник.номера СГРУППИРОВАТЬ ПО декор;"
2621;"SELECT decor , avg(basePrice) ,  min(basePrice) FROM Rooms GROUP BY decor;";"ВЫБРАТЬ декор , СРЕДНЕЕ(базоваяцена) , МИНИМУМ(базоваяцена) ИЗ справочник.номера СГРУППИРОВАТЬ ПО декор;"
2622;"SELECT roomName FROM Rooms ORDER BY basePrice;";"ВЫБРАТЬ наименование ИЗ справочник.номера УПОРЯДОЧИТЬ ПО базоваяцена;"
2623;"SELECT roomName FROM Rooms ORDER BY basePrice;";"ВЫБРАТЬ наименование ИЗ справочник.номера УПОРЯДОЧИТЬ ПО базоваяцена;"
2624;"SELECT decor , count(*) FROM Rooms WHERE basePrice  >  120 GROUP BY decor;";"ВЫБРАТЬ декор , КОЛИЧЕСТВО(*) ИЗ справочник.номера ГДЕ базоваяцена > 120 СГРУППИРОВАТЬ ПО декор;"
2625;"SELECT decor , count(*) FROM Rooms WHERE basePrice  >  120 GROUP BY decor;";"ВЫБРАТЬ декор , КОЛИЧЕСТВО(*) ИЗ справочник.номера ГДЕ базоваяцена > 120 СГРУППИРОВАТЬ ПО декор;"
2626;"SELECT bedType ,  avg(basePrice) FROM Rooms GROUP BY bedType;";"ВЫБРАТЬ типкровати , СРЕДНЕЕ(базоваяцена) ИЗ справочник.номера СГРУППИРОВАТЬ ПО типкровати;"
2627;"SELECT bedType ,  avg(basePrice) FROM Rooms GROUP BY bedType;";"ВЫБРАТЬ типкровати , СРЕДНЕЕ(базоваяцена) ИЗ справочник.номера СГРУППИРОВАТЬ ПО типкровати;"
2628;"SELECT roomName FROM Rooms WHERE bedType  =  ""King"" OR bedType  =  ""Queen"";";"ВЫБРАТЬ наименование ИЗ справочник.номера ГДЕ типкровати = ""King"" ИЛИ типкровати = ""Queen"";"
2629;"SELECT roomName FROM Rooms WHERE bedType  =  ""King"" OR bedType  =  ""Queen"";";"ВЫБРАТЬ наименование ИЗ справочник.номера ГДЕ типкровати = ""King"" ИЛИ типкровати = ""Queen"";"
2630;"SELECT count(DISTINCT bedType) FROM Rooms;";"ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ типкровати) ИЗ справочник.номера;"
2631;"SELECT count(DISTINCT bedType) FROM Rooms;";"ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ типкровати) ИЗ справочник.номера;"
2632;"SELECT RoomId ,  roomName FROM Rooms ORDER BY basePrice DESC LIMIT 3;";"ВЫБРАТЬ ссылка , наименование ИЗ справочник.номера УПОРЯДОЧИТЬ ПО базоваяцена УБЫВ LIMIT 3;"
2633;"SELECT RoomId ,  roomName FROM Rooms ORDER BY basePrice DESC LIMIT 3;";"ВЫБРАТЬ ссылка , наименование ИЗ справочник.номера УПОРЯДОЧИТЬ ПО базоваяцена УБЫВ LIMIT 3;"
2634;"SELECT roomName FROM Rooms WHERE basePrice  >  ( SELECT avg(basePrice) FROM Rooms );";"ВЫБРАТЬ roomName ИЗ справочник.номера ГДЕ basePrice > ( ВЫБРАТЬ СРЕДНЕЕ(basePrice) ИЗ справочник.номера );"
2635;"SELECT roomName FROM Rooms WHERE basePrice  >  ( SELECT avg(basePrice) FROM Rooms );";"ВЫБРАТЬ roomName ИЗ справочник.номера ГДЕ basePrice > ( ВЫБРАТЬ СРЕДНЕЕ(basePrice) ИЗ справочник.номера );"
2636;SELECT count(*) FROM rooms WHERE roomid NOT IN (SELECT DISTINCT room FROM reservations);ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.номера ГДЕ roomid НЕ В (ВЫБРАТЬ РАЗЛИЧНЫЕ room ИЗ регистрсведений.бронирование)
2637;SELECT count(*) FROM rooms WHERE roomid NOT IN (SELECT DISTINCT room FROM reservations);ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.номера ГДЕ roomid НЕ В (ВЫБРАТЬ РАЗЛИЧНЫЕ room ИЗ регистрсведений.бронирование)
2638;SELECT T2.roomName ,  count(*) ,  T1.Room FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T1.Room;ВЫБРАТЬ T2.наименование , КОЛИЧЕСТВО(*) , T1.номер ИЗ регистрсведений.бронирование КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.номера КАК T2 ПО T1.номер = T2.ссылка СГРУППИРОВАТЬ ПО T1.номер
2639;SELECT T2.roomName ,  count(*) ,  T1.Room FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T1.Room;ВЫБРАТЬ T2.наименование , КОЛИЧЕСТВО(*) , T1.номер ИЗ регистрсведений.бронирование КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.номера КАК T2 ПО T1.номер = T2.ссылка СГРУППИРОВАТЬ ПО T1.номер
2640;SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T1.Room HAVING count(*)  >  60;ВЫБРАТЬ T2.наименование ИЗ регистрсведений.бронирование КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.номера КАК T2 ПО T1.номер = T2.ссылка СГРУППИРОВАТЬ ПО T1.номер ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 60
2641;SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T1.Room HAVING count(*)  >  60;ВЫБРАТЬ T2.наименование ИЗ регистрсведений.бронирование КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.номера КАК T2 ПО T1.номер = T2.ссылка СГРУППИРОВАТЬ ПО T1.номер ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 60
2642;SELECT roomname FROM rooms WHERE baseprice BETWEEN 120 AND 150;ВЫБРАТЬ наименование ИЗ справочник.номера ГДЕ базоваяцена МЕЖДУ 120 И 150
2643;SELECT roomname FROM rooms WHERE baseprice BETWEEN 120 AND 150;ВЫБРАТЬ наименование ИЗ справочник.номера ГДЕ базоваяцена МЕЖДУ 120 И 150
2644;SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId WHERE firstname LIKE '%ROY%';"ВЫБРАТЬ T2.наименование ИЗ регистрсведений.бронирование КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.номера КАК T2 ПО T1.номер = T2.ссылка ГДЕ firstname ПОДОБНО ""%ROY%"""
2645;SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId WHERE firstname LIKE '%ROY%';"ВЫБРАТЬ T2.наименование ИЗ регистрсведений.бронирование КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.номера КАК T2 ПО T1.номер = T2.ссылка ГДЕ firstname ПОДОБНО ""%ROY%"""
2646;SELECT T1.cmi_details FROM Customer_Master_Index AS T1 JOIN CMI_Cross_References AS T2 ON T1.master_customer_id  =  T2.master_customer_id WHERE T2.source_system_code  =  'Tax';"ВЫБРАТЬ T1.описание ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.кроссссылкикми КАК T2 ПО T1.ссылка = T2.клиент ГДЕ T2.кодсистемыисточник = ""Tax"""
2647;SELECT T1.cmi_cross_ref_id ,  T1.source_system_code FROM CMI_Cross_References AS T1 JOIN Council_Tax AS T2 ON T1.cmi_cross_ref_id  =  T2.cmi_cross_ref_id GROUP BY T1.cmi_cross_ref_id HAVING count(*)  >=  1;ВЫБРАТЬ T1.ссылка , T1.кодсистемыисточник ИЗ справочник.кроссссылкикми КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.налогнанедвижимость КАК T2 ПО T1.ссылка = T2.кроссссылкакми СГРУППИРОВАТЬ ПО T1.ссылка ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 1
2648;SELECT T2.cmi_cross_ref_id ,  T2.master_customer_id ,  count(*) FROM Business_Rates AS T1 JOIN CMI_Cross_References AS T2 ON T1.cmi_cross_ref_id  =  T2.cmi_cross_ref_id GROUP BY T2.cmi_cross_ref_id;ВЫБРАТЬ T2.ссылка , T2.клиент , КОЛИЧЕСТВО(*) ИЗ регистрсведений.налогнабизнес КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.кроссссылкикми КАК T2 ПО T1.кроссссылкакми = T2.ссылка СГРУППИРОВАТЬ ПО T2.ссылка
2649;SELECT T1.source_system_code ,  T2.council_tax_id FROM CMI_Cross_References AS T1 JOIN Benefits_Overpayments AS T2 ON T1.cmi_cross_ref_id  =  T2.cmi_cross_ref_id ORDER BY T2.council_tax_id;ВЫБРАТЬ T1.кодсистемыисточник , T2.налогнанедвижимость ИЗ справочник.кроссссылкикми КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.переплатыпопособиям КАК T2 ПО T1.ссылка = T2.кроссссылкакми УПОРЯДОЧИТЬ ПО T2.налогнанедвижимость
2650;SELECT T1.source_system_code ,  T1.master_customer_id ,  T2.council_tax_id FROM CMI_Cross_References AS T1 JOIN Parking_Fines AS T2 ON T1.cmi_cross_ref_id  =  T2.cmi_cross_ref_id;ВЫБРАТЬ T1.кодсистемыисточник , T1.клиент , T2.налогнанедвижимость ИЗ справочник.кроссссылкикми КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.штрафызапарковку КАК T2 ПО T1.ссылка = T2.кроссссылкакми
2651;SELECT T1.council_tax_id FROM Rent_Arrears AS T1 JOIN CMI_Cross_References AS T2 ON T1.cmi_cross_ref_id  =  T2.cmi_cross_ref_id JOIN Customer_Master_Index AS T3 ON T3.master_customer_id  =  T2.master_customer_id WHERE T3.cmi_details != 'Schmidt ,  Kertzmann and Lubowitz';"ВЫБРАТЬ T1.налогнанедвижимость ИЗ регистрсведений.долгипоаренде КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.кроссссылкикми КАК T2 ПО T1.кроссссылкакми = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.клиенты КАК T3 ПО T3.ссылка = T2.клиент ГДЕ T3.описание <> ""Schmidt , Kertzmann and Lubowitz"""
2652;SELECT T1.electoral_register_id FROM Electoral_Register AS T1 JOIN CMI_Cross_References AS T2 ON T1.cmi_cross_ref_id  =  T2.cmi_cross_ref_id WHERE T2.source_system_code  =  'Electoral' OR T2.source_system_code  =  'Tax';"ВЫБРАТЬ T1.ссылка ИЗ регистрсведений.избирательныйрегистр КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.кроссссылкикми КАК T2 ПО T1.кроссссылкакми = T2.ссылка ГДЕ T2.кодсистемыисточник = ""Electoral"" ИЛИ T2.кодсистемыисточник = ""Tax"""
2653;SELECT count(DISTINCT source_system_code) FROM CMI_cross_references;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ кодсистемыисточник) ИЗ справочник.кроссссылкикми
2654;SELECT * FROM customer_master_index ORDER BY cmi_details DESC;ВЫБРАТЬ * ИЗ справочник.клиенты УПОРЯДОЧИТЬ ПО описание УБЫВ
2655;SELECT council_tax_id ,  cmi_cross_ref_id FROM parking_fines;ВЫБРАТЬ налогнанедвижимость , кроссссылкакми ИЗ регистрсведений.штрафызапарковку
2656;SELECT count(*) FROM rent_arrears;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.долгипоаренде
2657;SELECT DISTINCT T2.source_system_code FROM customer_master_index AS T1 JOIN cmi_cross_references AS T2 ON T1.master_customer_id  =  T2.master_customer_id WHERE T1.cmi_details  =  'Gottlieb ,  Becker and Wyman';"ВЫБРАТЬ РАЗЛИЧНЫЕ T2.кодсистемыисточник ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.кроссссылкикми КАК T2 ПО T1.ссылка = T2.клиент ГДЕ T1.описание = ""Gottlieb , Becker and Wyman"""
2659;SELECT DISTINCT source_system_code FROM cmi_cross_references WHERE source_system_code LIKE '%en%';"ВЫБРАТЬ РАЗЛИЧНЫЕ кодсистемыисточник ИЗ справочник.кроссссылкикми ГДЕ кодсистемыисточник ПОДОБНО ""%en%"""
2660;SELECT count(*) FROM party;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.вечеринки
2661;SELECT count(*) FROM party;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.вечеринки
2662;SELECT Party_Theme FROM party ORDER BY Number_of_hosts ASC;ВЫБРАТЬ тема ИЗ справочник.вечеринки УПОРЯДОЧИТЬ ПО количествоорганизаторов ВОЗР
2663;SELECT Party_Theme FROM party ORDER BY Number_of_hosts ASC;ВЫБРАТЬ тема ИЗ справочник.вечеринки УПОРЯДОЧИТЬ ПО количествоорганизаторов ВОЗР
2664;SELECT Party_Theme ,  LOCATION FROM party;ВЫБРАТЬ тема , местопроведения ИЗ справочник.вечеринки
2665;SELECT Party_Theme ,  LOCATION FROM party;ВЫБРАТЬ тема , местопроведения ИЗ справочник.вечеринки
2666;"SELECT First_year ,  Last_year FROM party WHERE Party_Theme  =  ""Spring"" OR Party_Theme  =  ""Teqnology""";"ВЫБРАТЬ первыйгод , последнийгод ИЗ справочник.вечеринки ГДЕ тема = ""Spring"" ИЛИ тема = ""Teqnology"""
2667;"SELECT First_year ,  Last_year FROM party WHERE Party_Theme  =  ""Spring"" OR Party_Theme  =  ""Teqnology""";"ВЫБРАТЬ первыйгод , последнийгод ИЗ справочник.вечеринки ГДЕ тема = ""Spring"" ИЛИ тема = ""Teqnology"""
2668;SELECT avg(Number_of_hosts) FROM party;ВЫБРАТЬ СРЕДНЕЕ(количествоорганизаторов) ИЗ справочник.вечеринки
2669;SELECT avg(Number_of_hosts) FROM party;ВЫБРАТЬ СРЕДНЕЕ(количествоорганизаторов) ИЗ справочник.вечеринки
2670;SELECT LOCATION FROM party ORDER BY Number_of_hosts DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 местопроведения ИЗ справочник.вечеринки УПОРЯДОЧИТЬ ПО количествоорганизаторов УБЫВ
2671;SELECT LOCATION FROM party ORDER BY Number_of_hosts DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 местопроведения ИЗ справочник.вечеринки УПОРЯДОЧИТЬ ПО количествоорганизаторов УБЫВ
2672;SELECT Nationality ,  COUNT(*) FROM HOST GROUP BY Nationality;ВЫБРАТЬ национальность , КОЛИЧЕСТВО(*) ИЗ справочник.организаторы СГРУППИРОВАТЬ ПО национальность
2673;SELECT Nationality ,  COUNT(*) FROM HOST GROUP BY Nationality;ВЫБРАТЬ национальность , КОЛИЧЕСТВО(*) ИЗ справочник.организаторы СГРУППИРОВАТЬ ПО национальность
2674;SELECT Nationality FROM HOST GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 национальность ИЗ справочник.организаторы СГРУППИРОВАТЬ ПО национальность УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
2675;SELECT Nationality FROM HOST GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 национальность ИЗ справочник.организаторы СГРУППИРОВАТЬ ПО национальность УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
2678;SELECT T3.Party_Theme ,  T2.Name FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID  =  T2.Host_ID JOIN party AS T3 ON T1.Party_ID  =  T3.Party_ID;ВЫБРАТЬ T3.тема , T2.наименование ИЗ регистрсведений.организаторывечеринок КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.организаторы КАК T2 ПО T1.организатор = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.вечеринки КАК T3 ПО T1.вечеринка = T3.ссылка
2679;SELECT T3.Party_Theme ,  T2.Name FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID  =  T2.Host_ID JOIN party AS T3 ON T1.Party_ID  =  T3.Party_ID;ВЫБРАТЬ T3.тема , T2.наименование ИЗ регистрсведений.организаторывечеринок КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.организаторы КАК T2 ПО T1.организатор = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.вечеринки КАК T3 ПО T1.вечеринка = T3.ссылка
2680;SELECT T3.Location ,  T2.Name FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID  =  T2.Host_ID JOIN party AS T3 ON T1.Party_ID  =  T3.Party_ID ORDER BY T2.Age;ВЫБРАТЬ T3.местопроведения , T2.наименование ИЗ регистрсведений.организаторывечеринок КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.организаторы КАК T2 ПО T1.организатор = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.вечеринки КАК T3 ПО T1.вечеринка = T3.ссылка УПОРЯДОЧИТЬ ПО T2.возраст
2681;SELECT T3.Location ,  T2.Name FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID  =  T2.Host_ID JOIN party AS T3 ON T1.Party_ID  =  T3.Party_ID ORDER BY T2.Age;ВЫБРАТЬ T3.местопроведения , T2.наименование ИЗ регистрсведений.организаторывечеринок КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.организаторы КАК T2 ПО T1.организатор = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.вечеринки КАК T3 ПО T1.вечеринка = T3.ссылка УПОРЯДОЧИТЬ ПО T2.возраст
2682;SELECT T3.Location FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID  =  T2.Host_ID JOIN party AS T3 ON T1.Party_ID  =  T3.Party_ID WHERE T2.Age  >  50;ВЫБРАТЬ T3.местопроведения ИЗ регистрсведений.организаторывечеринок КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.организаторы КАК T2 ПО T1.организатор = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.вечеринки КАК T3 ПО T1.вечеринка = T3.ссылка ГДЕ T2.возраст > 50
2683;SELECT T3.Location FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID  =  T2.Host_ID JOIN party AS T3 ON T1.Party_ID  =  T3.Party_ID WHERE T2.Age  >  50;ВЫБРАТЬ T3.местопроведения ИЗ регистрсведений.организаторывечеринок КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.организаторы КАК T2 ПО T1.организатор = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.вечеринки КАК T3 ПО T1.вечеринка = T3.ссылка ГДЕ T2.возраст > 50
2684;SELECT T2.Name FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID  =  T2.Host_ID JOIN party AS T3 ON T1.Party_ID  =  T3.Party_ID WHERE T3.Number_of_hosts  >  20;ВЫБРАТЬ T2.наименование ИЗ регистрсведений.организаторывечеринок КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.организаторы КАК T2 ПО T1.организатор = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.вечеринки КАК T3 ПО T1.вечеринка = T3.ссылка ГДЕ T3.количествоорганизаторов > 20
2685;SELECT T2.Name FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID  =  T2.Host_ID JOIN party AS T3 ON T1.Party_ID  =  T3.Party_ID WHERE T3.Number_of_hosts  >  20;ВЫБРАТЬ T2.наименование ИЗ регистрсведений.организаторывечеринок КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.организаторы КАК T2 ПО T1.организатор = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.вечеринки КАК T3 ПО T1.вечеринка = T3.ссылка ГДЕ T3.количествоорганизаторов > 20
2686;SELECT Name ,  Nationality FROM HOST ORDER BY Age DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование , национальность ИЗ справочник.организаторы УПОРЯДОЧИТЬ ПО возраст УБЫВ
2687;SELECT Name ,  Nationality FROM HOST ORDER BY Age DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование , национальность ИЗ справочник.организаторы УПОРЯДОЧИТЬ ПО возраст УБЫВ
2688;SELECT Name FROM HOST WHERE Host_ID NOT IN (SELECT Host_ID FROM party_host);ВЫБРАТЬ Name ИЗ справочник.организаторы ГДЕ Host_ID НЕ В (ВЫБРАТЬ Host_ID ИЗ регистрсведений.организаторывечеринок)
2689;SELECT Name FROM HOST WHERE Host_ID NOT IN (SELECT Host_ID FROM party_host);ВЫБРАТЬ Name ИЗ справочник.организаторы ГДЕ Host_ID НЕ В (ВЫБРАТЬ Host_ID ИЗ регистрсведений.организаторывечеринок)
2690;SELECT count(*) FROM region;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.регионы
2691;SELECT count(*) FROM region;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.регионы
2692;SELECT region_code ,  region_name FROM region ORDER BY region_code;ВЫБРАТЬ кодрегиона , наименование ИЗ справочник.регионы УПОРЯДОЧИТЬ ПО кодрегиона
2693;SELECT region_code ,  region_name FROM region ORDER BY region_code;ВЫБРАТЬ кодрегиона , наименование ИЗ справочник.регионы УПОРЯДОЧИТЬ ПО кодрегиона
2694;SELECT region_name FROM region ORDER BY region_name;ВЫБРАТЬ наименование ИЗ справочник.регионы УПОРЯДОЧИТЬ ПО наименование
2695;SELECT region_name FROM region ORDER BY region_name;ВЫБРАТЬ наименование ИЗ справочник.регионы УПОРЯДОЧИТЬ ПО наименование
2696;SELECT region_name FROM region WHERE region_name != 'Denmark';"ВЫБРАТЬ наименование ИЗ справочник.регионы ГДЕ наименование <> ""Denmark"""
2697;SELECT region_name FROM region WHERE region_name != 'Denmark';"ВЫБРАТЬ наименование ИЗ справочник.регионы ГДЕ наименование <> ""Denmark"""
2698;SELECT count(*) FROM storm WHERE Number_Deaths  >  0;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.штормы ГДЕ количествопогибших > 0
2699;SELECT count(*) FROM storm WHERE Number_Deaths  >  0;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.штормы ГДЕ количествопогибших > 0
2700;SELECT name ,  dates_active ,  number_deaths FROM storm WHERE number_deaths  >=  1;ВЫБРАТЬ наименование , периодактивности , количествопогибших ИЗ справочник.штормы ГДЕ количествопогибших >= 1
2701;SELECT name ,  dates_active ,  number_deaths FROM storm WHERE number_deaths  >=  1;ВЫБРАТЬ наименование , периодактивности , количествопогибших ИЗ справочник.штормы ГДЕ количествопогибших >= 1
2702;SELECT avg(damage_millions_USD) ,  max(damage_millions_USD) FROM storm WHERE max_speed  >  1000;ВЫБРАТЬ СРЕДНЕЕ(ущербвсшамлн) , МАКСИМУМ(ущербвсшамлн) ИЗ справочник.штормы ГДЕ максимальнаяскорость > 1000
2703;SELECT avg(damage_millions_USD) ,  max(damage_millions_USD) FROM storm WHERE max_speed  >  1000;ВЫБРАТЬ СРЕДНЕЕ(ущербвсшамлн) , МАКСИМУМ(ущербвсшамлн) ИЗ справочник.штормы ГДЕ максимальнаяскорость > 1000
2704;SELECT sum(number_deaths) ,  sum(damage_millions_USD) FROM storm WHERE max_speed  >  (SELECT avg(max_speed) FROM storm);ВЫБРАТЬ СУММА(number_deaths) , СУММА(damage_millions_USD) ИЗ справочник.штормы ГДЕ max_speed > (ВЫБРАТЬ СРЕДНЕЕ(max_speed) ИЗ справочник.штормы)
2705;SELECT sum(number_deaths) ,  sum(damage_millions_USD) FROM storm WHERE max_speed  >  (SELECT avg(max_speed) FROM storm);ВЫБРАТЬ СУММА(number_deaths) , СУММА(damage_millions_USD) ИЗ справочник.штормы ГДЕ max_speed > (ВЫБРАТЬ СРЕДНЕЕ(max_speed) ИЗ справочник.штормы)
2706;SELECT name ,  damage_millions_USD FROM storm ORDER BY max_speed DESC;ВЫБРАТЬ наименование , ущербвсшамлн ИЗ справочник.штормы УПОРЯДОЧИТЬ ПО максимальнаяскорость УБЫВ
2707;SELECT name ,  damage_millions_USD FROM storm ORDER BY max_speed DESC;ВЫБРАТЬ наименование , ущербвсшамлн ИЗ справочник.штормы УПОРЯДОЧИТЬ ПО максимальнаяскорость УБЫВ
2708;SELECT count(DISTINCT region_id) FROM affected_region;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ регион) ИЗ регистрсведений.пораженныерегионы
2709;SELECT count(DISTINCT region_id) FROM affected_region;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ регион) ИЗ регистрсведений.пораженныерегионы
2710;SELECT region_name FROM region WHERE region_id NOT IN (SELECT region_id FROM affected_region);ВЫБРАТЬ region_name ИЗ справочник.регионы ГДЕ region_id НЕ В (ВЫБРАТЬ region_id ИЗ регистрсведений.пораженныерегионы)
2711;SELECT region_name FROM region WHERE region_id NOT IN (SELECT region_id FROM affected_region);ВЫБРАТЬ region_name ИЗ справочник.регионы ГДЕ region_id НЕ В (ВЫБРАТЬ region_id ИЗ регистрсведений.пораженныерегионы)
2712;SELECT T1.region_name ,  count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id;ВЫБРАТЬ T1.наименование , КОЛИЧЕСТВО(*) ИЗ справочник.регионы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.пораженныерегионы КАК T2 ПО T1.ссылка = T2.регион СГРУППИРОВАТЬ ПО T1.ссылка
2713;SELECT T1.region_name ,  count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id;ВЫБРАТЬ T1.наименование , КОЛИЧЕСТВО(*) ИЗ справочник.регионы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.пораженныерегионы КАК T2 ПО T1.ссылка = T2.регион СГРУППИРОВАТЬ ПО T1.ссылка
2714;SELECT T1.name ,  count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id;ВЫБРАТЬ T1.наименование , КОЛИЧЕСТВО(*) ИЗ справочник.штормы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.пораженныерегионы КАК T2 ПО T1.ссылка = T2.шторм СГРУППИРОВАТЬ ПО T1.ссылка
2715;SELECT T1.name ,  count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id;ВЫБРАТЬ T1.наименование , КОЛИЧЕСТВО(*) ИЗ справочник.штормы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.пораженныерегионы КАК T2 ПО T1.ссылка = T2.шторм СГРУППИРОВАТЬ ПО T1.ссылка
2716;SELECT T1.name ,  T1.max_speed FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.наименование , T1.максимальнаяскорость ИЗ справочник.штормы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.пораженныерегионы КАК T2 ПО T1.ссылка = T2.шторм СГРУППИРОВАТЬ ПО T1.ссылка УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
2717;SELECT T1.name ,  T1.max_speed FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.наименование , T1.максимальнаяскорость ИЗ справочник.штормы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.пораженныерегионы КАК T2 ПО T1.ссылка = T2.шторм СГРУППИРОВАТЬ ПО T1.ссылка УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
2718;SELECT name FROM storm WHERE storm_id NOT IN (SELECT storm_id FROM affected_region);ВЫБРАТЬ name ИЗ справочник.штормы ГДЕ storm_id НЕ В (ВЫБРАТЬ storm_id ИЗ регистрсведений.пораженныерегионы)
2719;SELECT name FROM storm WHERE storm_id NOT IN (SELECT storm_id FROM affected_region);ВЫБРАТЬ name ИЗ справочник.штормы ГДЕ storm_id НЕ В (ВЫБРАТЬ storm_id ИЗ регистрсведений.пораженныерегионы)
2724;SELECT T2.region_name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id WHERE T3.number_deaths  >=  10;ВЫБРАТЬ T2.наименование ИЗ регистрсведений.пораженныерегионы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.регионы КАК T2 ПО T1.регион = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.штормы КАК T3 ПО T1.шторм = T3.ссылка ГДЕ T3.количествопогибших >= 10
2725;SELECT T2.region_name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id WHERE T3.number_deaths  >=  10;ВЫБРАТЬ T2.наименование ИЗ регистрсведений.пораженныерегионы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.регионы КАК T2 ПО T1.регион = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.штормы КАК T3 ПО T1.шторм = T3.ссылка ГДЕ T3.количествопогибших >= 10
2726;SELECT T3.name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id WHERE T2.region_name  =  'Denmark';"ВЫБРАТЬ T3.наименование ИЗ регистрсведений.пораженныерегионы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.регионы КАК T2 ПО T1.регион = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.штормы КАК T3 ПО T1.шторм = T3.ссылка ГДЕ T2.наименование = ""Denmark"""
2727;SELECT T3.name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id WHERE T2.region_name  =  'Denmark';"ВЫБРАТЬ T3.наименование ИЗ регистрсведений.пораженныерегионы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.регионы КАК T2 ПО T1.регион = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.штормы КАК T3 ПО T1.шторм = T3.ссылка ГДЕ T2.наименование = ""Denmark"""
2728;SELECT T1.region_name FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id HAVING count(*)  >=  2;ВЫБРАТЬ T1.наименование ИЗ справочник.регионы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.пораженныерегионы КАК T2 ПО T1.ссылка = T2.регион СГРУППИРОВАТЬ ПО T1.ссылка ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
2729;SELECT T1.region_name FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id HAVING count(*)  >=  2;ВЫБРАТЬ T1.наименование ИЗ справочник.регионы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.пораженныерегионы КАК T2 ПО T1.ссылка = T2.регион СГРУППИРОВАТЬ ПО T1.ссылка ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
2730;SELECT T2.region_name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id ORDER BY T3.Number_Deaths DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.наименование ИЗ регистрсведений.пораженныерегионы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.регионы КАК T2 ПО T1.регион = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.штормы КАК T3 ПО T1.шторм = T3.ссылка УПОРЯДОЧИТЬ ПО T3.количествопогибших УБЫВ
2731;SELECT T2.region_name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id ORDER BY T3.Number_Deaths DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.наименование ИЗ регистрсведений.пораженныерегионы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.регионы КАК T2 ПО T1.регион = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.штормы КАК T3 ПО T1.шторм = T3.ссылка УПОРЯДОЧИТЬ ПО T3.количествопогибших УБЫВ
2734;SELECT count(*) FROM county;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.округа
2735;SELECT count(*) FROM county;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.округа
2736;SELECT County_name ,  Population FROM county;ВЫБРАТЬ наименование , население ИЗ справочник.округа
2737;SELECT County_name ,  Population FROM county;ВЫБРАТЬ наименование , население ИЗ справочник.округа
2738;SELECT avg(Population) FROM county;ВЫБРАТЬ СРЕДНЕЕ(население) ИЗ справочник.округа
2739;SELECT avg(Population) FROM county;ВЫБРАТЬ СРЕДНЕЕ(население) ИЗ справочник.округа
2740;SELECT max(Population) ,  min(Population) FROM county;ВЫБРАТЬ МАКСИМУМ(население) , МИНИМУМ(население) ИЗ справочник.округа
2741;SELECT max(Population) ,  min(Population) FROM county;ВЫБРАТЬ МАКСИМУМ(население) , МИНИМУМ(население) ИЗ справочник.округа
2742;SELECT DISTINCT District FROM election;ВЫБРАТЬ РАЗЛИЧНЫЕ округ ИЗ регистрсведений.выборы
2743;SELECT DISTINCT District FROM election;ВЫБРАТЬ РАЗЛИЧНЫЕ округ ИЗ регистрсведений.выборы
2744;"SELECT Zip_code FROM county WHERE County_name  =  ""Howard""";"ВЫБРАТЬ почтовыйиндекс ИЗ справочник.округа ГДЕ наименование = ""Howard"""
2745;"SELECT Zip_code FROM county WHERE County_name  =  ""Howard""";"ВЫБРАТЬ почтовыйиндекс ИЗ справочник.округа ГДЕ наименование = ""Howard"""
2746;SELECT Delegate FROM election WHERE District  =  1;ВЫБРАТЬ делегат ИЗ регистрсведений.выборы ГДЕ округ = 1
2747;SELECT Delegate FROM election WHERE District  =  1;ВЫБРАТЬ делегат ИЗ регистрсведений.выборы ГДЕ округ = 1
2748;SELECT Delegate ,  Committee FROM election;ВЫБРАТЬ делегат , комитет ИЗ регистрсведений.выборы
2749;SELECT Delegate ,  Committee FROM election;ВЫБРАТЬ делегат , комитет ИЗ регистрсведений.выборы
2750;SELECT count(DISTINCT Governor) FROM party;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ губернатор) ИЗ наименованиепартии
2751;SELECT count(DISTINCT Governor) FROM party;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ губернатор) ИЗ наименованиепартии
2752;"SELECT Lieutenant_Governor ,  Comptroller FROM party WHERE Party  =  ""Democratic""";"ВЫБРАТЬ вицегубернатор , контролер ИЗ наименованиепартии ГДЕ наименованиепартии = ""Democratic"""
2753;"SELECT Lieutenant_Governor ,  Comptroller FROM party WHERE Party  =  ""Democratic""";"ВЫБРАТЬ вицегубернатор , контролер ИЗ наименованиепартии ГДЕ наименованиепартии = ""Democratic"""
2754;"SELECT DISTINCT YEAR FROM party WHERE Governor  =  ""Eliot Spitzer""";"ВЫБРАТЬ РАЗЛИЧНЫЕ год ИЗ наименованиепартии ГДЕ губернатор = ""Eliot Spitzer"""
2755;"SELECT DISTINCT YEAR FROM party WHERE Governor  =  ""Eliot Spitzer""";"ВЫБРАТЬ РАЗЛИЧНЫЕ год ИЗ наименованиепартии ГДЕ губернатор = ""Eliot Spitzer"""
2756;SELECT * FROM election;ВЫБРАТЬ * ИЗ регистрсведений.выборы
2757;SELECT * FROM election;ВЫБРАТЬ * ИЗ регистрсведений.выборы
2758;SELECT T2.Delegate ,  T1.County_name FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District;ВЫБРАТЬ T2.делегат , T1.наименование ИЗ справочник.округа КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.выборы КАК T2 ПО T1.ссылка = T2.округ
2759;SELECT T2.Delegate ,  T1.County_name FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District;ВЫБРАТЬ T2.делегат , T1.наименование ИЗ справочник.округа КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.выборы КАК T2 ПО T1.ссылка = T2.округ
2760;SELECT T2.Delegate FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District WHERE T1.Population  <  100000;ВЫБРАТЬ T2.делегат ИЗ справочник.округа КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.выборы КАК T2 ПО T1.ссылка = T2.округ ГДЕ T1.население < 100000
2761;SELECT T2.Delegate FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District WHERE T1.Population  <  100000;ВЫБРАТЬ T2.делегат ИЗ справочник.округа КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.выборы КАК T2 ПО T1.ссылка = T2.округ ГДЕ T1.население < 100000
2762;SELECT count(DISTINCT T2.Delegate) FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District WHERE T1.Population  >  50000;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ T2.делегат) ИЗ справочник.округа КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.выборы КАК T2 ПО T1.ссылка = T2.округ ГДЕ T1.население > 50000
2763;SELECT count(DISTINCT T2.Delegate) FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District WHERE T1.Population  >  50000;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ T2.делегат) ИЗ справочник.округа КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.выборы КАК T2 ПО T1.ссылка = T2.округ ГДЕ T1.население > 50000
2764;"SELECT T1.County_name FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District WHERE T2.Committee  =  ""Appropriations""";"ВЫБРАТЬ T1.наименование ИЗ справочник.округа КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.выборы КАК T2 ПО T1.ссылка = T2.округ ГДЕ T2.комитет = ""Appropriations"""
2765;"SELECT T1.County_name FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District WHERE T2.Committee  =  ""Appropriations""";"ВЫБРАТЬ T1.наименование ИЗ справочник.округа КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.выборы КАК T2 ПО T1.ссылка = T2.округ ГДЕ T2.комитет = ""Appropriations"""
2766;SELECT T1.Delegate ,  T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID;ВЫБРАТЬ T1.делегат , T2.наименованиепартии ИЗ регистрсведений.выборы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.партии КАК T2 ПО T1.партия = T2.ссылка
2767;SELECT T1.Delegate ,  T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID;ВЫБРАТЬ T1.делегат , T2.наименованиепартии ИЗ регистрсведений.выборы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.партии КАК T2 ПО T1.партия = T2.ссылка
2768;SELECT T2.Governor FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T1.District  =  1;ВЫБРАТЬ T2.губернатор ИЗ регистрсведений.выборы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.партии КАК T2 ПО T1.партия = T2.ссылка ГДЕ T1.округ = 1
2769;SELECT T2.Governor FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T1.District  =  1;ВЫБРАТЬ T2.губернатор ИЗ регистрсведений.выборы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.партии КАК T2 ПО T1.партия = T2.ссылка ГДЕ T1.округ = 1
2770;SELECT T2.Comptroller FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T1.District  =  1 OR T1.District  =  2;ВЫБРАТЬ T2.контролер ИЗ регистрсведений.выборы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.партии КАК T2 ПО T1.партия = T2.ссылка ГДЕ T1.округ = 1 ИЛИ T1.округ = 2
2771;SELECT T2.Comptroller FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T1.District  =  1 OR T1.District  =  2;ВЫБРАТЬ T2.контролер ИЗ регистрсведений.выборы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.партии КАК T2 ПО T1.партия = T2.ссылка ГДЕ T1.округ = 1 ИЛИ T1.округ = 2
2772;"SELECT T1.Committee FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T2.Party  =  ""Democratic""";"ВЫБРАТЬ T1.комитет ИЗ регистрсведений.выборы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.партии КАК T2 ПО T1.партия = T2.ссылка ГДЕ T2.наименованиепартии = ""Democratic"""
2773;"SELECT T1.Committee FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T2.Party  =  ""Democratic""";"ВЫБРАТЬ T1.комитет ИЗ регистрсведений.выборы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.партии КАК T2 ПО T1.партия = T2.ссылка ГДЕ T2.наименованиепартии = ""Democratic"""
2774;SELECT T1.County_name ,  COUNT(*) FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District GROUP BY T1.County_id;ВЫБРАТЬ T1.наименование , КОЛИЧЕСТВО(*) ИЗ справочник.округа КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.выборы КАК T2 ПО T1.ссылка = T2.округ СГРУППИРОВАТЬ ПО T1.ссылка
2775;SELECT T1.County_name ,  COUNT(*) FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District GROUP BY T1.County_id;ВЫБРАТЬ T1.наименование , КОЛИЧЕСТВО(*) ИЗ справочник.округа КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.выборы КАК T2 ПО T1.ссылка = T2.округ СГРУППИРОВАТЬ ПО T1.ссылка
2776;SELECT T2.Party ,  COUNT(*) FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID GROUP BY T1.Party;ВЫБРАТЬ T2.наименованиепартии , КОЛИЧЕСТВО(*) ИЗ регистрсведений.выборы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.партии КАК T2 ПО T1.партия = T2.ссылка СГРУППИРОВАТЬ ПО T1.партия
2777;SELECT T2.Party ,  COUNT(*) FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID GROUP BY T1.Party;ВЫБРАТЬ T2.наименованиепартии , КОЛИЧЕСТВО(*) ИЗ регистрсведений.выборы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.партии КАК T2 ПО T1.партия = T2.ссылка СГРУППИРОВАТЬ ПО T1.партия
2778;SELECT County_name FROM county ORDER BY Population ASC;ВЫБРАТЬ наименование ИЗ справочник.округа УПОРЯДОЧИТЬ ПО население ВОЗР
2779;SELECT County_name FROM county ORDER BY Population ASC;ВЫБРАТЬ наименование ИЗ справочник.округа УПОРЯДОЧИТЬ ПО население ВОЗР
2780;SELECT County_name FROM county ORDER BY County_name DESC;ВЫБРАТЬ наименование ИЗ справочник.округа УПОРЯДОЧИТЬ ПО наименование УБЫВ
2781;SELECT County_name FROM county ORDER BY County_name DESC;ВЫБРАТЬ наименование ИЗ справочник.округа УПОРЯДОЧИТЬ ПО наименование УБЫВ
2782;SELECT County_name FROM county ORDER BY Population DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование ИЗ справочник.округа УПОРЯДОЧИТЬ ПО население УБЫВ
2783;SELECT County_name FROM county ORDER BY Population DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование ИЗ справочник.округа УПОРЯДОЧИТЬ ПО население УБЫВ
2784;SELECT County_name FROM county ORDER BY Population ASC LIMIT 3;ВЫБРАТЬ ПЕРВЫЕ 3 наименование ИЗ справочник.округа УПОРЯДОЧИТЬ ПО население ВОЗР
2785;SELECT County_name FROM county ORDER BY Population ASC LIMIT 3;ВЫБРАТЬ ПЕРВЫЕ 3 наименование ИЗ справочник.округа УПОРЯДОЧИТЬ ПО население ВОЗР
2786;SELECT T1.County_name FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District GROUP BY T1.County_id HAVING COUNT(*)  >=  2;ВЫБРАТЬ T1.наименование ИЗ справочник.округа КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.выборы КАК T2 ПО T1.ссылка = T2.округ СГРУППИРОВАТЬ ПО T1.ссылка ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
2787;SELECT T1.County_name FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District GROUP BY T1.County_id HAVING COUNT(*)  >=  2;ВЫБРАТЬ T1.наименование ИЗ справочник.округа КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.выборы КАК T2 ПО T1.ссылка = T2.округ СГРУППИРОВАТЬ ПО T1.ссылка ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
2788;SELECT Party FROM party GROUP BY Party HAVING COUNT(*)  >=  2;ВЫБРАТЬ наименованиепартии ИЗ наименованиепартии СГРУППИРОВАТЬ ПО наименованиепартии ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
2789;SELECT Party FROM party GROUP BY Party HAVING COUNT(*)  >=  2;ВЫБРАТЬ наименованиепартии ИЗ наименованиепартии СГРУППИРОВАТЬ ПО наименованиепартии ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
2790;SELECT T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID GROUP BY T1.Party ORDER BY COUNT(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.наименованиепартии ИЗ регистрсведений.выборы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.партии КАК T2 ПО T1.партия = T2.ссылка СГРУППИРОВАТЬ ПО T1.партия УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
2791;SELECT T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID GROUP BY T1.Party ORDER BY COUNT(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.наименованиепартии ИЗ регистрсведений.выборы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.партии КАК T2 ПО T1.партия = T2.ссылка СГРУППИРОВАТЬ ПО T1.партия УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
2792;SELECT Governor FROM party GROUP BY Governor ORDER BY COUNT(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 губернатор ИЗ наименованиепартии СГРУППИРОВАТЬ ПО губернатор УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
2793;SELECT Governor FROM party GROUP BY Governor ORDER BY COUNT(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 губернатор ИЗ наименованиепартии СГРУППИРОВАТЬ ПО губернатор УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
2794;SELECT Comptroller ,  COUNT(*) FROM party GROUP BY Comptroller ORDER BY COUNT(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 контролер , КОЛИЧЕСТВО(*) ИЗ наименованиепартии СГРУППИРОВАТЬ ПО контролер УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
2795;SELECT Comptroller ,  COUNT(*) FROM party GROUP BY Comptroller ORDER BY COUNT(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 контролер , КОЛИЧЕСТВО(*) ИЗ наименованиепартии СГРУППИРОВАТЬ ПО контролер УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
2796;SELECT Party FROM party WHERE Party_ID NOT IN (SELECT Party FROM election);ВЫБРАТЬ Party ИЗ справочник.партии ГДЕ Party_ID НЕ В (ВЫБРАТЬ Party ИЗ регистрсведений.выборы)
2797;SELECT Party FROM party WHERE Party_ID NOT IN (SELECT Party FROM election);ВЫБРАТЬ Party ИЗ справочник.партии ГДЕ Party_ID НЕ В (ВЫБРАТЬ Party ИЗ регистрсведений.выборы)
2802;SELECT count(*) FROM journalist;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.журналисты
2803;SELECT Name FROM journalist ORDER BY Years_working ASC;ВЫБРАТЬ наименование ИЗ справочник.журналисты УПОРЯДОЧИТЬ ПО стажработы ВОЗР
2804;SELECT Nationality ,  Age FROM journalist;ВЫБРАТЬ национальность , возраст ИЗ справочник.журналисты
2805;"SELECT Name FROM journalist WHERE Nationality  =  ""England"" OR Nationality  =  ""Wales""";"ВЫБРАТЬ наименование ИЗ справочник.журналисты ГДЕ национальность = ""England"" ИЛИ национальность = ""Wales"""
2806;SELECT avg(Years_working) FROM journalist;ВЫБРАТЬ СРЕДНЕЕ(стажработы) ИЗ справочник.журналисты
2807;SELECT Nationality FROM journalist ORDER BY Years_working DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 национальность ИЗ справочник.журналисты УПОРЯДОЧИТЬ ПО стажработы УБЫВ
2808;SELECT Nationality ,  COUNT(*) FROM journalist GROUP BY Nationality;ВЫБРАТЬ национальность , КОЛИЧЕСТВО(*) ИЗ справочник.журналисты СГРУППИРОВАТЬ ПО национальность
2809;SELECT Nationality FROM journalist GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 национальность ИЗ справочник.журналисты СГРУППИРОВАТЬ ПО национальность УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
2811;SELECT Date ,  Name ,  venue FROM event ORDER BY Event_Attendance DESC;ВЫБРАТЬ дата , наименование , местопроведения ИЗ справочник.события УПОРЯДОЧИТЬ ПО посещаемость УБЫВ
2812;SELECT T3.Name ,  T2.Date FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID  =  T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID  =  T3.journalist_ID;ВЫБРАТЬ T3.наименование , T2.дата ИЗ регистрсведений.репортажи КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.события КАК T2 ПО T1.событие = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.журналисты КАК T3 ПО T1.журналист = T3.ссылка
2813;SELECT T3.Name ,  T2.Name FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID  =  T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID  =  T3.journalist_ID ORDER BY T2.Event_Attendance ASC;ВЫБРАТЬ T3.наименование , T2.наименование ИЗ регистрсведений.репортажи КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.события КАК T2 ПО T1.событие = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.журналисты КАК T3 ПО T1.журналист = T3.ссылка УПОРЯДОЧИТЬ ПО T2.посещаемость ВОЗР
2814;SELECT T3.Name ,  COUNT(*) FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID  =  T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID  =  T3.journalist_ID GROUP BY T3.Name;ВЫБРАТЬ T3.наименование , КОЛИЧЕСТВО(*) ИЗ регистрсведений.репортажи КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.события КАК T2 ПО T1.событие = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.журналисты КАК T3 ПО T1.журналист = T3.ссылка СГРУППИРОВАТЬ ПО T3.наименование
2815;SELECT T3.Name FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID  =  T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID  =  T3.journalist_ID GROUP BY T3.Name HAVING COUNT(*)  >  1;ВЫБРАТЬ T3.наименование ИЗ регистрсведений.репортажи КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.события КАК T2 ПО T1.событие = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.журналисты КАК T3 ПО T1.журналист = T3.ссылка СГРУППИРОВАТЬ ПО T3.наименование ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 1
2816;SELECT Name FROM journalist WHERE journalist_ID NOT IN (SELECT journalist_ID FROM news_report);ВЫБРАТЬ Name ИЗ справочник.журналисты ГДЕ journalist_ID НЕ В (ВЫБРАТЬ journalist_ID ИЗ регистрсведений.репортажи)
2817;SELECT avg(Event_Attendance) ,  max(Event_Attendance) FROM event;ВЫБРАТЬ СРЕДНЕЕ(посещаемость) , МАКСИМУМ(посещаемость) ИЗ справочник.события
2818;SELECT avg(t1.age) ,  avg(Years_working) ,  t2.work_type FROM journalist AS t1 JOIN news_report AS t2 ON t1.journalist_id  =  t2.journalist_id GROUP BY t2.work_type;ВЫБРАТЬ СРЕДНЕЕ(t1.возраст) , СРЕДНЕЕ(Years_working) , t2.типработы ИЗ справочник.журналисты КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.репортажи КАК t2 ПО t1.ссылка = t2.журналист СГРУППИРОВАТЬ ПО t2.типработы
2819;SELECT venue ,  name FROM event ORDER BY Event_Attendance DESC LIMIT 2;ВЫБРАТЬ ПЕРВЫЕ 2 местопроведения , наименование ИЗ справочник.события УПОРЯДОЧИТЬ ПО посещаемость УБЫВ
2820;"SELECT ResName FROM Restaurant;";"ВЫБРАТЬ наименование ИЗ справочник.рестораны;"
2821;"SELECT Address FROM Restaurant WHERE ResName = ""Subway"";";"ВЫБРАТЬ адрес ИЗ справочник.рестораны ГДЕ наименование = ""Subway"";"
2822;"SELECT Rating FROM Restaurant WHERE ResName = ""Subway"";";"ВЫБРАТЬ рейтинг ИЗ справочник.рестораны ГДЕ наименование = ""Subway"";"
2823;"SELECT ResTypeName FROM Restaurant_Type;";"ВЫБРАТЬ наименование ИЗ справочник.видыресторанов;"
2824;"SELECT ResTypeDescription FROM Restaurant_Type WHERE ResTypeName = ""Sandwich"";";"ВЫБРАТЬ описание ИЗ справочник.видыресторанов ГДЕ наименование = ""Sandwich"";"
2825;"SELECT ResName , Rating FROM Restaurant ORDER BY Rating DESC LIMIT 1;";"ВЫБРАТЬ наименование , рейтинг ИЗ справочник.рестораны УПОРЯДОЧИТЬ ПО рейтинг УБЫВ LIMIT 1;"
2826;"SELECT Age FROM Student WHERE Fname = ""Linda"" AND Lname = ""Smith"";";"ВЫБРАТЬ возраст ИЗ справочник.студенты ГДЕ имя = ""Linda"" И фамилия = ""Smith"";"
2827;"SELECT Sex FROM Student WHERE Fname = ""Linda"" AND Lname = ""Smith"";";"ВЫБРАТЬ пол ИЗ справочник.студенты ГДЕ имя = ""Linda"" И фамилия = ""Smith"";"
2828;"SELECT Fname , Lname FROM Student WHERE Major  =  600;";"ВЫБРАТЬ имя , фамилия ИЗ справочник.студенты ГДЕ специальность = 600;"
2829;"SELECT city_code FROM Student WHERE Fname = ""Linda"" AND Lname = ""Smith"";";"ВЫБРАТЬ кодгорода ИЗ справочник.студенты ГДЕ имя = ""Linda"" И фамилия = ""Smith"";"
2830;"SELECT count(*) FROM Student WHERE Advisor =  1121;";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.студенты ГДЕ руководитель = 1121;"
2831;"SELECT Advisor ,  count(*) FROM Student GROUP BY Advisor ORDER BY count(Advisor) DESC LIMIT 1;";"ВЫБРАТЬ руководитель , КОЛИЧЕСТВО(*) ИЗ справочник.студенты СГРУППИРОВАТЬ ПО руководитель УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(руководитель) УБЫВ LIMIT 1;"
2832;"SELECT Major ,  count(*) FROM Student GROUP BY Major ORDER BY count(Major) ASC LIMIT 1;";"ВЫБРАТЬ специальность , КОЛИЧЕСТВО(*) ИЗ справочник.студенты СГРУППИРОВАТЬ ПО специальность УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(специальность) ВОЗР LIMIT 1;"
2833;"SELECT Major ,  count(*) FROM Student GROUP BY Major HAVING count(Major) BETWEEN 2 AND 30;";"ВЫБРАТЬ специальность , КОЛИЧЕСТВО(*) ИЗ справочник.студенты СГРУППИРОВАТЬ ПО специальность ИМЕЮЩИЕ КОЛИЧЕСТВО(специальность) МЕЖДУ 2 И 30;"
2834;"SELECT Fname , Lname FROM Student WHERE Age  >  18 AND Major = 600;";"ВЫБРАТЬ имя , фамилия ИЗ справочник.студенты ГДЕ возраст > 18 И специальность = 600;"
2835;"SELECT Fname , Lname FROM Student WHERE Age  >  18 AND Major != 600 AND Sex = 'F';";"ВЫБРАТЬ имя , фамилия ИЗ справочник.студенты ГДЕ возраст > 18 И специальность <> 600 И пол = ""F"";"
2836;SELECT count(*) FROM Restaurant JOIN Type_Of_Restaurant ON Restaurant.ResID =  Type_Of_Restaurant.ResID JOIN Restaurant_Type ON Type_Of_Restaurant.ResTypeID = Restaurant_Type.ResTypeID GROUP BY Type_Of_Restaurant.ResTypeID HAVING Restaurant_Type.ResTypeName = 'Sandwich';"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.рестораны ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.типыресторанов ПО Restaurant.ResID = Type_Of_Restaurant.ResID ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.видыресторанов ПО Type_Of_Restaurant.ResTypeID = Restaurant_Type.ResTypeID СГРУППИРОВАТЬ ПО Type_Of_Restaurant.ResTypeID ИМЕЮЩИЕ Restaurant_Type.ResTypeName = ""Sandwich"""
2837;"SELECT sum(Spent) FROM Student JOIN Visits_Restaurant ON Student.StuID = Visits_Restaurant.StuID WHERE Student.Fname = ""Linda"" AND Student.Lname = ""Smith"";";"ВЫБРАТЬ СУММА(Spent) ИЗ справочник.студенты ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.посещенияресторанов ПО Student.ссылка = Visits_Restaurant.ссылка ГДЕ Student.имя = ""Linda"" И Student.фамилия = ""Smith"";"
2838;"SELECT count(*) FROM Student JOIN Visits_Restaurant ON Student.StuID = Visits_Restaurant.StuID JOIN Restaurant ON Visits_Restaurant.ResID = Restaurant.ResID WHERE Student.Fname = ""Linda"" AND Student.Lname = ""Smith"" AND Restaurant.ResName = ""Subway"";";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.студенты ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.посещенияресторанов ПО Student.StuID = Visits_Restaurant.StuID ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.рестораны ПО Visits_Restaurant.ResID = Restaurant.ResID ГДЕ Student.Fname = ""Linda"" И Student.Lname = ""Smith"" И Restaurant.ResName = ""Subway"";"
2839;"SELECT TIME FROM Student JOIN Visits_Restaurant ON Student.StuID = Visits_Restaurant.StuID JOIN Restaurant ON Visits_Restaurant.ResID = Restaurant.ResID WHERE Student.Fname = ""Linda"" AND Student.Lname = ""Smith"" AND Restaurant.ResName = ""Subway"";";"ВЫБРАТЬ TIME ИЗ справочник.студенты ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.посещенияресторанов ПО Student.StuID = Visits_Restaurant.StuID ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.рестораны ПО Visits_Restaurant.ResID = Restaurant.ResID ГДЕ Student.Fname = ""Linda"" И Student.Lname = ""Smith"" И Restaurant.ResName = ""Subway"";"
2840;"SELECT Restaurant.ResName ,  sum(Visits_Restaurant.Spent) FROM Visits_Restaurant JOIN Restaurant ON Visits_Restaurant.ResID = Restaurant.ResID GROUP BY Restaurant.ResID ORDER BY sum(Visits_Restaurant.Spent) ASC LIMIT 1;";"ВЫБРАТЬ Restaurant.ResName , СУММА(Visits_Restaurant.сумма) ИЗ регистрсведений.посещенияресторанов ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.рестораны ПО Visits_Restaurant.ресторан = Restaurant.ресторан СГРУППИРОВАТЬ ПО Restaurant.ресторан УПОРЯДОЧИТЬ ПО СУММА(Visits_Restaurant.сумма) ВОЗР LIMIT 1;"
2841;"SELECT Student.Fname , Student.Lname FROM Student JOIN Visits_Restaurant ON Student.StuID = Visits_Restaurant.StuID GROUP BY Student.StuID ORDER BY count(*) DESC LIMIT 1;";"ВЫБРАТЬ Student.имя , Student.фамилия ИЗ справочник.студенты ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.посещенияресторанов ПО Student.ссылка = Visits_Restaurant.ссылка СГРУППИРОВАТЬ ПО Student.ссылка УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ LIMIT 1;"
2842;SELECT actual_order_id FROM actual_orders WHERE order_status_code  =  'Success';"ВЫБРАТЬ ссылка ИЗ документ.фактическийзаказ ГДЕ статус = ""Success"""
2843;SELECT t1.product_name ,   t1.product_price FROM products AS t1 JOIN regular_order_products AS t2 ON t1.product_id  =  t2.product_id GROUP BY t2.product_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 t1.наименование , t1.цена ИЗ справочник.товары КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ табличнаячасть.товарырегулярногозаказа КАК t2 ПО t1.ссылка = t2.товар СГРУППИРОВАТЬ ПО t2.товар УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
2844;SELECT count(*) FROM customers;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.клиенты
2845;SELECT count(DISTINCT payment_method) FROM customers;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ способоплаты) ИЗ справочник.клиенты
2846;SELECT truck_details FROM trucks ORDER BY truck_licence_number;ВЫБРАТЬ описание ИЗ справочник.грузовики УПОРЯДОЧИТЬ ПО номерлицензии
2847;SELECT product_name FROM products ORDER BY product_price DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование ИЗ справочник.товары УПОРЯДОЧИТЬ ПО цена УБЫВ
2849;SELECT customer_email ,  customer_name FROM customers WHERE payment_method  =  'Visa';"ВЫБРАТЬ электроннаяпочта , наименование ИЗ справочник.клиенты ГДЕ способоплаты = ""Visa"""
2850;SELECT t1.customer_name ,  t1.customer_phone FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id WHERE t3.state_province_county  =  'California';"ВЫБРАТЬ t1.наименование , t1.телефон ИЗ справочник.клиенты КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.адресаклиентов КАК t2 ПО t1.ссылка = t2.клиент ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.адреса КАК t3 ПО t2.адрес = t3.ссылка ГДЕ t3.область = ""California"""
2851;SELECT state_province_county FROM addresses WHERE address_id NOT IN (SELECT employee_address_id FROM Employees);ВЫБРАТЬ state_province_county ИЗ справочник.адреса ГДЕ address_id НЕ В (ВЫБРАТЬ employee_address_id ИЗ справочник.сотрудники)
2852;SELECT customer_name ,  customer_phone ,  customer_email FROM Customers ORDER BY date_became_customer;ВЫБРАТЬ наименование , телефон , электроннаяпочта ИЗ справочник.клиенты УПОРЯДОЧИТЬ ПО датарегистрации
2853;SELECT customer_name FROM Customers ORDER BY date_became_customer LIMIT 5;ВЫБРАТЬ ПЕРВЫЕ 5 наименование ИЗ справочник.клиенты УПОРЯДОЧИТЬ ПО датарегистрации
2854;SELECT payment_method FROM Customers GROUP BY payment_method ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 способоплаты ИЗ справочник.клиенты СГРУППИРОВАТЬ ПО способоплаты УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
2855;SELECT route_name FROM Delivery_Routes ORDER BY route_name;ВЫБРАТЬ наименование ИЗ справочник.маршрутыдоставки УПОРЯДОЧИТЬ ПО наименование
2856;SELECT t1.route_name FROM Delivery_Routes AS t1 JOIN Delivery_Route_Locations AS t2 ON t1.route_id  =  t2.route_id GROUP BY t1.route_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 t1.наименование ИЗ справочник.маршрутыдоставки КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.точкимаршрута КАК t2 ПО t1.ссылка = t2.маршрут СГРУППИРОВАТЬ ПО t1.ссылка УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
2857;SELECT t2.state_province_county ,  count(*) FROM customer_addresses AS t1 JOIN addresses AS t2 ON t1.address_id  =  t2.address_id GROUP BY t2.state_province_county;ВЫБРАТЬ t2.область , КОЛИЧЕСТВО(*) ИЗ регистрсведений.адресаклиентов КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.адреса КАК t2 ПО t1.адрес = t2.ссылка СГРУППИРОВАТЬ ПО t2.область
2858;SELECT count(*) FROM authors;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.авторы
2859;SELECT count(*) FROM authors;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.авторы
2860;SELECT count(*) FROM inst;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.институты
2861;SELECT count(*) FROM inst;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.институты
2862;SELECT count(*) FROM papers;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.публикации
2863;SELECT count(*) FROM papers;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.публикации
2864;"SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE  t1.fname  =  ""Jeremy"" AND t1.lname  =  ""Gibbons""";"ВЫБРАТЬ t3.наименование ИЗ справочник.авторы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.авторыпубликаций КАК t2 ПО t1.ссылка = t2.автор ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.публикации КАК t3 ПО t2.публикация = t3.ссылка ГДЕ t1.имя = ""Jeremy"" И t1.фамилия = ""Gibbons"""
2865;"SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE  t1.fname  =  ""Jeremy"" AND t1.lname  =  ""Gibbons""";"ВЫБРАТЬ t3.наименование ИЗ справочник.авторы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.авторыпубликаций КАК t2 ПО t1.ссылка = t2.автор ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.публикации КАК t3 ПО t2.публикация = t3.ссылка ГДЕ t1.имя = ""Jeremy"" И t1.фамилия = ""Gibbons"""
2866;"SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE  t1.fname  =  ""Aaron"" AND t1.lname  =  ""Turon""";"ВЫБРАТЬ t3.наименование ИЗ справочник.авторы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.авторыпубликаций КАК t2 ПО t1.ссылка = t2.автор ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.публикации КАК t3 ПО t2.публикация = t3.ссылка ГДЕ t1.имя = ""Aaron"" И t1.фамилия = ""Turon"""
2867;"SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE  t1.fname  =  ""Aaron"" AND t1.lname  =  ""Turon""";"ВЫБРАТЬ t3.наименование ИЗ справочник.авторы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.авторыпубликаций КАК t2 ПО t1.ссылка = t2.автор ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.публикации КАК t3 ПО t2.публикация = t3.ссылка ГДЕ t1.имя = ""Aaron"" И t1.фамилия = ""Turon"""
2868;"SELECT count(*) FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE  t1.fname  =  ""Atsushi"" AND t1.lname  =  ""Ohori""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.авторы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.авторыпубликаций КАК t2 ПО t1.ссылка = t2.автор ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.публикации КАК t3 ПО t2.публикация = t3.ссылка ГДЕ t1.имя = ""Atsushi"" И t1.фамилия = ""Ohori"""
2869;"SELECT count(*) FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE  t1.fname  =  ""Atsushi"" AND t1.lname  =  ""Ohori""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.авторы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.авторыпубликаций КАК t2 ПО t1.ссылка = t2.автор ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.публикации КАК t3 ПО t2.публикация = t3.ссылка ГДЕ t1.имя = ""Atsushi"" И t1.фамилия = ""Ohori"""
2870;"SELECT DISTINCT t3.name FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t1.fname  =  ""Matthias"" AND t1.lname  =  ""Blume""";"ВЫБРАТЬ РАЗЛИЧНЫЕ t3.наименование ИЗ справочник.авторы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.авторыпубликаций КАК t2 ПО t1.ссылка = t2.автор ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.институты КАК t3 ПО t2.институт = t3.ссылка ГДЕ t1.имя = ""Matthias"" И t1.фамилия = ""Blume"""
2871;"SELECT DISTINCT t3.name FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t1.fname  =  ""Matthias"" AND t1.lname  =  ""Blume""";"ВЫБРАТЬ РАЗЛИЧНЫЕ t3.наименование ИЗ справочник.авторы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.авторыпубликаций КАК t2 ПО t1.ссылка = t2.автор ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.институты КАК t3 ПО t2.институт = t3.ссылка ГДЕ t1.имя = ""Matthias"" И t1.фамилия = ""Blume"""
2872;"SELECT DISTINCT t3.name FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t1.fname  =  ""Katsuhiro"" AND t1.lname  =  ""Ueno""";"ВЫБРАТЬ РАЗЛИЧНЫЕ t3.наименование ИЗ справочник.авторы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.авторыпубликаций КАК t2 ПО t1.ссылка = t2.автор ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.институты КАК t3 ПО t2.институт = t3.ссылка ГДЕ t1.имя = ""Katsuhiro"" И t1.фамилия = ""Ueno"""
2873;"SELECT DISTINCT t3.name FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t1.fname  =  ""Katsuhiro"" AND t1.lname  =  ""Ueno""";"ВЫБРАТЬ РАЗЛИЧНЫЕ t3.наименование ИЗ справочник.авторы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.авторыпубликаций КАК t2 ПО t1.ссылка = t2.автор ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.институты КАК t3 ПО t2.институт = t3.ссылка ГДЕ t1.имя = ""Katsuhiro"" И t1.фамилия = ""Ueno"""
2874;"SELECT DISTINCT t1.fname ,  t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  ""University of Oxford""";"ВЫБРАТЬ РАЗЛИЧНЫЕ t1.имя , t1.фамилия ИЗ справочник.авторы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.авторыпубликаций КАК t2 ПО t1.ссылка = t2.автор ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.институты КАК t3 ПО t2.институт = t3.ссылка ГДЕ t3.наименование = ""University of Oxford"""
2875;"SELECT DISTINCT t1.fname ,  t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  ""University of Oxford""";"ВЫБРАТЬ РАЗЛИЧНЫЕ t1.имя , t1.фамилия ИЗ справочник.авторы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.авторыпубликаций КАК t2 ПО t1.ссылка = t2.автор ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.институты КАК t3 ПО t2.институт = t3.ссылка ГДЕ t3.наименование = ""University of Oxford"""
2876;"SELECT DISTINCT t1.fname ,  t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  ""Google""";"ВЫБРАТЬ РАЗЛИЧНЫЕ t1.имя , t1.фамилия ИЗ справочник.авторы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.авторыпубликаций КАК t2 ПО t1.ссылка = t2.автор ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.институты КАК t3 ПО t2.институт = t3.ссылка ГДЕ t3.наименование = ""Google"""
2877;"SELECT DISTINCT t1.fname ,  t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  ""Google""";"ВЫБРАТЬ РАЗЛИЧНЫЕ t1.имя , t1.фамилия ИЗ справочник.авторы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.авторыпубликаций КАК t2 ПО t1.ссылка = t2.автор ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.институты КАК t3 ПО t2.институт = t3.ссылка ГДЕ t3.наименование = ""Google"""
2878;"SELECT t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t3.title  =  ""Binders Unbound""";"ВЫБРАТЬ t1.фамилия ИЗ справочник.авторы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.авторыпубликаций КАК t2 ПО t1.ссылка = t2.автор ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.публикации КАК t3 ПО t2.публикация = t3.ссылка ГДЕ t3.наименование = ""Binders Unbound"""
2879;"SELECT t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t3.title  =  ""Binders Unbound""";"ВЫБРАТЬ t1.фамилия ИЗ справочник.авторы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.авторыпубликаций КАК t2 ПО t1.ссылка = t2.автор ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.публикации КАК t3 ПО t2.публикация = t3.ссылка ГДЕ t3.наименование = ""Binders Unbound"""
2880;"SELECT t1.fname ,  t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t3.title  =  ""Nameless ,  Painless""";"ВЫБРАТЬ t1.имя , t1.фамилия ИЗ справочник.авторы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.авторыпубликаций КАК t2 ПО t1.ссылка = t2.автор ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.публикации КАК t3 ПО t2.публикация = t3.ссылка ГДЕ t3.наименование = ""Nameless , Painless"""
2881;"SELECT t1.fname ,  t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t3.title  =  ""Nameless ,  Painless""";"ВЫБРАТЬ t1.имя , t1.фамилия ИЗ справочник.авторы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.авторыпубликаций КАК t2 ПО t1.ссылка = t2.автор ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.публикации КАК t3 ПО t2.публикация = t3.ссылка ГДЕ t3.наименование = ""Nameless , Painless"""
2882;"SELECT DISTINCT t1.title FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid  =  t2.paperid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  ""Indiana University""";"ВЫБРАТЬ РАЗЛИЧНЫЕ t1.наименование ИЗ справочник.публикации КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.авторыпубликаций КАК t2 ПО t1.ссылка = t2.публикация ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.институты КАК t3 ПО t2.институт = t3.ссылка ГДЕ t3.наименование = ""Indiana University"""
2883;"SELECT DISTINCT t1.title FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid  =  t2.paperid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  ""Indiana University""";"ВЫБРАТЬ РАЗЛИЧНЫЕ t1.наименование ИЗ справочник.публикации КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.авторыпубликаций КАК t2 ПО t1.ссылка = t2.публикация ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.институты КАК t3 ПО t2.институт = t3.ссылка ГДЕ t3.наименование = ""Indiana University"""
2884;"SELECT DISTINCT t1.title FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid  =  t2.paperid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  ""Google""";"ВЫБРАТЬ РАЗЛИЧНЫЕ t1.наименование ИЗ справочник.публикации КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.авторыпубликаций КАК t2 ПО t1.ссылка = t2.публикация ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.институты КАК t3 ПО t2.институт = t3.ссылка ГДЕ t3.наименование = ""Google"""
2885;"SELECT DISTINCT t1.title FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid  =  t2.paperid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  ""Google""";"ВЫБРАТЬ РАЗЛИЧНЫЕ t1.наименование ИЗ справочник.публикации КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.авторыпубликаций КАК t2 ПО t1.ссылка = t2.публикация ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.институты КАК t3 ПО t2.институт = t3.ссылка ГДЕ t3.наименование = ""Google"""
2886;"SELECT count(DISTINCT t1.title) FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid  =  t2.paperid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  ""Tokohu University""";"ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ t1.наименование) ИЗ справочник.публикации КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.авторыпубликаций КАК t2 ПО t1.ссылка = t2.публикация ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.институты КАК t3 ПО t2.институт = t3.ссылка ГДЕ t3.наименование = ""Tokohu University"""
2887;"SELECT count(DISTINCT t1.title) FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid  =  t2.paperid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  ""Tokohu University""";"ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ t1.наименование) ИЗ справочник.публикации КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.авторыпубликаций КАК t2 ПО t1.ссылка = t2.публикация ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.институты КАК t3 ПО t2.институт = t3.ссылка ГДЕ t3.наименование = ""Tokohu University"""
2888;"SELECT count(DISTINCT t1.title) FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid  =  t2.paperid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  ""University of Pennsylvania""";"ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ t1.наименование) ИЗ справочник.публикации КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.авторыпубликаций КАК t2 ПО t1.ссылка = t2.публикация ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.институты КАК t3 ПО t2.институт = t3.ссылка ГДЕ t3.наименование = ""University of Pennsylvania"""
2889;"SELECT count(DISTINCT t1.title) FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid  =  t2.paperid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  ""University of Pennsylvania""";"ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ t1.наименование) ИЗ справочник.публикации КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.авторыпубликаций КАК t2 ПО t1.ссылка = t2.публикация ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.институты КАК t3 ПО t2.институт = t3.ссылка ГДЕ t3.наименование = ""University of Pennsylvania"""
2890;"SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t1.fname  =  ""Olin"" AND t1.lname  =  ""Shivers""";"ВЫБРАТЬ t3.наименование ИЗ справочник.авторы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.авторыпубликаций КАК t2 ПО t1.ссылка = t2.автор ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.публикации КАК t3 ПО t2.публикация = t3.ссылка ГДЕ t1.имя = ""Olin"" И t1.фамилия = ""Shivers"""
2891;"SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t1.fname  =  ""Olin"" AND t1.lname  =  ""Shivers""";"ВЫБРАТЬ t3.наименование ИЗ справочник.авторы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.авторыпубликаций КАК t2 ПО t1.ссылка = t2.автор ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.публикации КАК t3 ПО t2.публикация = t3.ссылка ГДЕ t1.имя = ""Olin"" И t1.фамилия = ""Shivers"""
2892;"SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t1.fname  =  ""Stephanie"" AND t1.lname  =  ""Weirich""";"ВЫБРАТЬ t3.наименование ИЗ справочник.авторы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.авторыпубликаций КАК t2 ПО t1.ссылка = t2.автор ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.публикации КАК t3 ПО t2.публикация = t3.ссылка ГДЕ t1.имя = ""Stephanie"" И t1.фамилия = ""Weirich"""
2893;"SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t1.fname  =  ""Stephanie"" AND t1.lname  =  ""Weirich""";"ВЫБРАТЬ t3.наименование ИЗ справочник.авторы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.авторыпубликаций КАК t2 ПО t1.ссылка = t2.автор ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.публикации КАК t3 ПО t2.публикация = t3.ссылка ГДЕ t1.имя = ""Stephanie"" И t1.фамилия = ""Weirich"""
2894;"SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid JOIN inst AS t4 ON t2.instid  =  t4.instid WHERE t4.country  =  ""USA"" AND t2.authorder  =  2 AND t1.lname  =  ""Turon""";"ВЫБРАТЬ t3.наименование ИЗ справочник.авторы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.авторыпубликаций КАК t2 ПО t1.ссылка = t2.автор ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.публикации КАК t3 ПО t2.публикация = t3.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.институты КАК t4 ПО t2.институт = t4.ссылка ГДЕ t4.страна = ""USA"" И t2.порядокавторства = 2 И t1.фамилия = ""Turon"""
2895;"SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid JOIN inst AS t4 ON t2.instid  =  t4.instid WHERE t4.country  =  ""USA"" AND t2.authorder  =  2 AND t1.lname  =  ""Turon""";"ВЫБРАТЬ t3.наименование ИЗ справочник.авторы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.авторыпубликаций КАК t2 ПО t1.ссылка = t2.автор ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.публикации КАК t3 ПО t2.публикация = t3.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.институты КАК t4 ПО t2.институт = t4.ссылка ГДЕ t4.страна = ""USA"" И t2.порядокавторства = 2 И t1.фамилия = ""Turon"""
2896;"SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid JOIN inst AS t4 ON t2.instid  =  t4.instid WHERE t4.country  =  ""Japan"" AND t2.authorder  =  1 AND t1.lname  =  ""Ohori""";"ВЫБРАТЬ t3.наименование ИЗ справочник.авторы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.авторыпубликаций КАК t2 ПО t1.ссылка = t2.автор ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.публикации КАК t3 ПО t2.публикация = t3.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.институты КАК t4 ПО t2.институт = t4.ссылка ГДЕ t4.страна = ""Japan"" И t2.порядокавторства = 1 И t1.фамилия = ""Ohori"""
2897;"SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid JOIN inst AS t4 ON t2.instid  =  t4.instid WHERE t4.country  =  ""Japan"" AND t2.authorder  =  1 AND t1.lname  =  ""Ohori""";"ВЫБРАТЬ t3.наименование ИЗ справочник.авторы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.авторыпубликаций КАК t2 ПО t1.ссылка = t2.автор ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.публикации КАК t3 ПО t2.публикация = t3.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.институты КАК t4 ПО t2.институт = t4.ссылка ГДЕ t4.страна = ""Japan"" И t2.порядокавторства = 1 И t1.фамилия = ""Ohori"""
2898;SELECT t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid GROUP BY t1.fname ,  t1.lname ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 t1.фамилия ИЗ справочник.авторы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.авторыпубликаций КАК t2 ПО t1.ссылка = t2.автор ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.публикации КАК t3 ПО t2.публикация = t3.ссылка СГРУППИРОВАТЬ ПО t1.имя , t1.фамилия УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
2899;SELECT t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid GROUP BY t1.fname ,  t1.lname ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 t1.фамилия ИЗ справочник.авторы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.авторыпубликаций КАК t2 ПО t1.ссылка = t2.автор ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.публикации КАК t3 ПО t2.публикация = t3.ссылка СГРУППИРОВАТЬ ПО t1.имя , t1.фамилия УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
2900;SELECT t1.country FROM inst AS t1 JOIN authorship AS t2 ON t1.instid  =  t2.instid JOIN papers AS t3 ON t2.paperid  =  t3.paperid GROUP BY t1.country ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 t1.страна ИЗ справочник.институты КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.авторыпубликаций КАК t2 ПО t1.ссылка = t2.институт ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.публикации КАК t3 ПО t2.публикация = t3.ссылка СГРУППИРОВАТЬ ПО t1.страна УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
2901;SELECT t1.country FROM inst AS t1 JOIN authorship AS t2 ON t1.instid  =  t2.instid JOIN papers AS t3 ON t2.paperid  =  t3.paperid GROUP BY t1.country ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 t1.страна ИЗ справочник.институты КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.авторыпубликаций КАК t2 ПО t1.ссылка = t2.институт ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.публикации КАК t3 ПО t2.публикация = t3.ссылка СГРУППИРОВАТЬ ПО t1.страна УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
2902;SELECT t1.name FROM inst AS t1 JOIN authorship AS t2 ON t1.instid  =  t2.instid JOIN papers AS t3 ON t2.paperid  =  t3.paperid GROUP BY t1.name ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 t1.наименование ИЗ справочник.институты КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.авторыпубликаций КАК t2 ПО t1.ссылка = t2.институт ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.публикации КАК t3 ПО t2.публикация = t3.ссылка СГРУППИРОВАТЬ ПО t1.наименование УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
2903;SELECT t1.name FROM inst AS t1 JOIN authorship AS t2 ON t1.instid  =  t2.instid JOIN papers AS t3 ON t2.paperid  =  t3.paperid GROUP BY t1.name ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 t1.наименование ИЗ справочник.институты КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.авторыпубликаций КАК t2 ПО t1.ссылка = t2.институт ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.публикации КАК t3 ПО t2.публикация = t3.ссылка СГРУППИРОВАТЬ ПО t1.наименование УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
2904;"SELECT title FROM papers WHERE title LIKE ""%ML%""";"ВЫБРАТЬ наименование ИЗ справочник.публикации ГДЕ наименование ПОДОБНО ""%ML%"""
2905;"SELECT title FROM papers WHERE title LIKE ""%ML%""";"ВЫБРАТЬ наименование ИЗ справочник.публикации ГДЕ наименование ПОДОБНО ""%ML%"""
2906;"SELECT title FROM papers WHERE title LIKE ""%Database%""";"ВЫБРАТЬ наименование ИЗ справочник.публикации ГДЕ наименование ПОДОБНО ""%Database%"""
2907;"SELECT title FROM papers WHERE title LIKE ""%Database%""";"ВЫБРАТЬ наименование ИЗ справочник.публикации ГДЕ наименование ПОДОБНО ""%Database%"""
2908;"SELECT t1.fname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t3.title LIKE ""%Functional%""";"ВЫБРАТЬ t1.имя ИЗ справочник.авторы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.авторыпубликаций КАК t2 ПО t1.ссылка = t2.автор ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.публикации КАК t3 ПО t2.публикация = t3.ссылка ГДЕ t3.наименование ПОДОБНО ""%Functional%"""
2909;"SELECT t1.fname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t3.title LIKE ""%Functional%""";"ВЫБРАТЬ t1.имя ИЗ справочник.авторы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.авторыпубликаций КАК t2 ПО t1.ссылка = t2.автор ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.публикации КАК t3 ПО t2.публикация = t3.ссылка ГДЕ t3.наименование ПОДОБНО ""%Functional%"""
2910;"SELECT t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t3.title LIKE ""%Monadic%""";"ВЫБРАТЬ t1.фамилия ИЗ справочник.авторы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.авторыпубликаций КАК t2 ПО t1.ссылка = t2.автор ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.публикации КАК t3 ПО t2.публикация = t3.ссылка ГДЕ t3.наименование ПОДОБНО ""%Monadic%"""
2911;"SELECT t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t3.title LIKE ""%Monadic%""";"ВЫБРАТЬ t1.фамилия ИЗ справочник.авторы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.авторыпубликаций КАК t2 ПО t1.ссылка = t2.автор ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.публикации КАК t3 ПО t2.публикация = t3.ссылка ГДЕ t3.наименование ПОДОБНО ""%Monadic%"""
2912;SELECT t2.title FROM authorship AS t1 JOIN papers AS t2 ON t1.paperid  =  t2.paperid WHERE t1.authorder  =  (SELECT max(authorder) FROM authorship);ВЫБРАТЬ t2.наименование ИЗ регистрсведений.авторыпубликаций КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.публикации КАК t2 ПО t1.публикация = t2.ссылка ГДЕ t1.порядокавторства = (ВЫБРАТЬ МАКСИМУМ(authorder) ИЗ регистрсведений.авторыпубликаций)
2913;SELECT t2.title FROM authorship AS t1 JOIN papers AS t2 ON t1.paperid  =  t2.paperid WHERE t1.authorder  =  (SELECT max(authorder) FROM authorship);ВЫБРАТЬ t2.наименование ИЗ регистрсведений.авторыпубликаций КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.публикации КАК t2 ПО t1.публикация = t2.ссылка ГДЕ t1.порядокавторства = (ВЫБРАТЬ МАКСИМУМ(authorder) ИЗ регистрсведений.авторыпубликаций)
2914;"SELECT fname FROM authors WHERE lname  =  ""Ueno""";"ВЫБРАТЬ имя ИЗ справочник.авторы ГДЕ фамилия = ""Ueno"""
2915;"SELECT fname FROM authors WHERE lname  =  ""Ueno""";"ВЫБРАТЬ имя ИЗ справочник.авторы ГДЕ фамилия = ""Ueno"""
2916;"SELECT lname FROM authors WHERE fname  =  ""Amal""";"ВЫБРАТЬ фамилия ИЗ справочник.авторы ГДЕ имя = ""Amal"""
2917;"SELECT lname FROM authors WHERE fname  =  ""Amal""";"ВЫБРАТЬ фамилия ИЗ справочник.авторы ГДЕ имя = ""Amal"""
2918;SELECT fname FROM authors ORDER BY fname;ВЫБРАТЬ имя ИЗ справочник.авторы УПОРЯДОЧИТЬ ПО имя
2919;SELECT fname FROM authors ORDER BY fname;ВЫБРАТЬ имя ИЗ справочник.авторы УПОРЯДОЧИТЬ ПО имя
2920;SELECT lname FROM authors ORDER BY lname;ВЫБРАТЬ фамилия ИЗ справочник.авторы УПОРЯДОЧИТЬ ПО фамилия
2921;SELECT lname FROM authors ORDER BY lname;ВЫБРАТЬ фамилия ИЗ справочник.авторы УПОРЯДОЧИТЬ ПО фамилия
2922;SELECT fname ,  lname FROM authors ORDER BY lname;ВЫБРАТЬ имя , фамилия ИЗ справочник.авторы УПОРЯДОЧИТЬ ПО фамилия
2923;SELECT fname ,  lname FROM authors ORDER BY lname;ВЫБРАТЬ имя , фамилия ИЗ справочник.авторы УПОРЯДОЧИТЬ ПО фамилия
2924;SELECT count(DISTINCT last_name) FROM actor;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ фамилия) ИЗ справочник.актеры
2925;SELECT count(DISTINCT last_name) FROM actor;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ фамилия) ИЗ справочник.актеры
2926;SELECT first_name FROM actor GROUP BY first_name ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 имя ИЗ справочник.актеры СГРУППИРОВАТЬ ПО имя УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
2927;SELECT first_name FROM actor GROUP BY first_name ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 имя ИЗ справочник.актеры СГРУППИРОВАТЬ ПО имя УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
2928;SELECT first_name ,  last_name FROM actor GROUP BY first_name ,  last_name ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 имя , фамилия ИЗ справочник.актеры СГРУППИРОВАТЬ ПО имя , фамилия УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
2929;SELECT first_name ,  last_name FROM actor GROUP BY first_name ,  last_name ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 имя , фамилия ИЗ справочник.актеры СГРУППИРОВАТЬ ПО имя , фамилия УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
2930;SELECT district FROM address GROUP BY district HAVING count(*)  >=  2;ВЫБРАТЬ район ИЗ адрес1 СГРУППИРОВАТЬ ПО район ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
2931;SELECT district FROM address GROUP BY district HAVING count(*)  >=  2;ВЫБРАТЬ район ИЗ адрес1 СГРУППИРОВАТЬ ПО район ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
2932;SELECT phone ,  postal_code FROM address WHERE address  =  '1031 Daugavpils Parkway';"ВЫБРАТЬ телефон , почтовыйиндекс ИЗ адрес1 ГДЕ адрес1 = ""1031 Daugavpils Parkway"""
2933;SELECT phone ,  postal_code FROM address WHERE address  =  '1031 Daugavpils Parkway';"ВЫБРАТЬ телефон , почтовыйиндекс ИЗ адрес1 ГДЕ адрес1 = ""1031 Daugavpils Parkway"""
2934;SELECT T2.city ,  count(*) ,  T1.city_id FROM address AS T1 JOIN city AS T2 ON T1.city_id  =  T2.city_id GROUP BY T1.city_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.наименование , КОЛИЧЕСТВО(*) , T1.городсправочник ИЗ справочник.адреса КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.города КАК T2 ПО T1.городсправочник = T2.ссылка СГРУППИРОВАТЬ ПО T1.городсправочник УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
2935;SELECT T2.city ,  count(*) ,  T1.city_id FROM address AS T1 JOIN city AS T2 ON T1.city_id  =  T2.city_id GROUP BY T1.city_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.наименование , КОЛИЧЕСТВО(*) , T1.городсправочник ИЗ справочник.адреса КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.города КАК T2 ПО T1.городсправочник = T2.ссылка СГРУППИРОВАТЬ ПО T1.городсправочник УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
2936;SELECT count(*) FROM address WHERE district  =  'California';"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ адрес1 ГДЕ район = ""California"""
2937;SELECT count(*) FROM address WHERE district  =  'California';"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ адрес1 ГДЕ район = ""California"""
2940;SELECT count(*) FROM city AS T1 JOIN country AS T2 ON T1.country_id  =  T2.country_id WHERE T2.country  =  'Australia';"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.города КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.страны КАК T2 ПО T1.странасправочник = T2.ссылка ГДЕ T2.наименование = ""Australia"""
2941;SELECT count(*) FROM city AS T1 JOIN country AS T2 ON T1.country_id  =  T2.country_id WHERE T2.country  =  'Australia';"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.города КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.страны КАК T2 ПО T1.странасправочник = T2.ссылка ГДЕ T2.наименование = ""Australia"""
2942;SELECT T2.country FROM city AS T1 JOIN country AS T2 ON T1.country_id  =  T2.country_id GROUP BY T2.country_id HAVING count(*)  >=  3;ВЫБРАТЬ T2.наименование ИЗ справочник.города КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.страны КАК T2 ПО T1.странасправочник = T2.ссылка СГРУППИРОВАТЬ ПО T2.ссылка ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 3
2943;SELECT T2.country FROM city AS T1 JOIN country AS T2 ON T1.country_id  =  T2.country_id GROUP BY T2.country_id HAVING count(*)  >=  3;ВЫБРАТЬ T2.наименование ИЗ справочник.города КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.страны КАК T2 ПО T1.странасправочник = T2.ссылка СГРУППИРОВАТЬ ПО T2.ссылка ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 3
2944;SELECT payment_date FROM payment WHERE amount  >  10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.first_name  =  'Elsa';"ВЫБРАТЬ payment_date ИЗ документ.платеж ГДЕ amount > 10 ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ T1.датаплатежа ИЗ документ.платеж КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сотрудники КАК T2 ПО T1.сотрудник = T2.ссылка ГДЕ T2.имя = ""Elsa"""
2945;SELECT payment_date FROM payment WHERE amount  >  10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.first_name  =  'Elsa';"ВЫБРАТЬ payment_date ИЗ документ.платеж ГДЕ amount > 10 ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ T1.датаплатежа ИЗ документ.платеж КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сотрудники КАК T2 ПО T1.сотрудник = T2.ссылка ГДЕ T2.имя = ""Elsa"""
2946;SELECT count(*) FROM customer WHERE active = '1';"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.клиенты ГДЕ активен = ""1"""
2947;SELECT count(*) FROM customer WHERE active = '1';"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.клиенты ГДЕ активен = ""1"""
2948;SELECT title ,  rental_rate FROM film ORDER BY rental_rate DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 название , стоимостьпроката ИЗ справочник.фильмы УПОРЯДОЧИТЬ ПО стоимостьпроката УБЫВ
2949;SELECT title ,  rental_rate FROM film ORDER BY rental_rate DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 название , стоимостьпроката ИЗ справочник.фильмы УПОРЯДОЧИТЬ ПО стоимостьпроката УБЫВ
2950;SELECT T2.title ,  T2.film_id ,  T2.description FROM film_actor AS T1 JOIN film AS T2 ON T1.film_id  =  T2.film_id GROUP BY T2.film_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.название , T2.ссылка , T2.описание ИЗ регистрсведений.актерыфильмов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.фильмы КАК T2 ПО T1.фильм = T2.ссылка СГРУППИРОВАТЬ ПО T2.ссылка УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
2951;SELECT T2.title ,  T2.film_id ,  T2.description FROM film_actor AS T1 JOIN film AS T2 ON T1.film_id  =  T2.film_id GROUP BY T2.film_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.название , T2.ссылка , T2.описание ИЗ регистрсведений.актерыфильмов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.фильмы КАК T2 ПО T1.фильм = T2.ссылка СГРУППИРОВАТЬ ПО T2.ссылка УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
2952;SELECT T2.first_name ,  T2.last_name ,  T2.actor_id FROM film_actor AS T1 JOIN actor AS T2 ON T1.actor_id  =  T2.actor_id GROUP BY T2.actor_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.имя , T2.фамилия , T2.ссылка ИЗ регистрсведений.актерыфильмов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.актеры КАК T2 ПО T1.актер = T2.ссылка СГРУППИРОВАТЬ ПО T2.ссылка УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
2953;SELECT T2.first_name ,  T2.last_name ,  T2.actor_id FROM film_actor AS T1 JOIN actor AS T2 ON T1.actor_id  =  T2.actor_id GROUP BY T2.actor_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.имя , T2.фамилия , T2.ссылка ИЗ регистрсведений.актерыфильмов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.актеры КАК T2 ПО T1.актер = T2.ссылка СГРУППИРОВАТЬ ПО T2.ссылка УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
2954;SELECT T2.first_name ,  T2.last_name FROM film_actor AS T1 JOIN actor AS T2 ON T1.actor_id  =  T2.actor_id GROUP BY T2.actor_id HAVING count(*)  >  30;ВЫБРАТЬ T2.имя , T2.фамилия ИЗ регистрсведений.актерыфильмов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.актеры КАК T2 ПО T1.актер = T2.ссылка СГРУППИРОВАТЬ ПО T2.ссылка ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 30
2955;SELECT T2.first_name ,  T2.last_name FROM film_actor AS T1 JOIN actor AS T2 ON T1.actor_id  =  T2.actor_id GROUP BY T2.actor_id HAVING count(*)  >  30;ВЫБРАТЬ T2.имя , T2.фамилия ИЗ регистрсведений.актерыфильмов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.актеры КАК T2 ПО T1.актер = T2.ссылка СГРУППИРОВАТЬ ПО T2.ссылка ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 30
2956;SELECT store_id FROM inventory GROUP BY store_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 магазин ИЗ регистрсведений.наличиефильмов СГРУППИРОВАТЬ ПО магазин УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
2957;SELECT store_id FROM inventory GROUP BY store_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 магазин ИЗ регистрсведений.наличиефильмов СГРУППИРОВАТЬ ПО магазин УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
2958;SELECT sum(amount) FROM payment;ВЫБРАТЬ СУММА(сумма) ИЗ документ.платеж
2959;SELECT sum(amount) FROM payment;ВЫБРАТЬ СУММА(сумма) ИЗ документ.платеж
2960;SELECT T1.first_name ,  T1.last_name ,  T1.customer_id FROM customer AS T1 JOIN payment AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY sum(amount) ASC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.имя , T1.фамилия , T1.ссылка ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.платеж КАК T2 ПО T1.ссылка = T2.клиент СГРУППИРОВАТЬ ПО T1.ссылка УПОРЯДОЧИТЬ ПО СУММА(amount) ВОЗР
2961;SELECT T1.first_name ,  T1.last_name ,  T1.customer_id FROM customer AS T1 JOIN payment AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY sum(amount) ASC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.имя , T1.фамилия , T1.ссылка ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.платеж КАК T2 ПО T1.ссылка = T2.клиент СГРУППИРОВАТЬ ПО T1.ссылка УПОРЯДОЧИТЬ ПО СУММА(amount) ВОЗР
2962;SELECT T1.name FROM category AS T1 JOIN film_category AS T2 ON T1.category_id  =  T2.category_id JOIN film AS T3 ON T2.film_id  =  T3.film_id WHERE T3.title  =  'HUNGER ROOF';"ВЫБРАТЬ T1.наименование ИЗ справочник.категориифильмов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.категориифильмов КАК T2 ПО T1.ссылка = T2.категория ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.фильмы КАК T3 ПО T2.фильм = T3.ссылка ГДЕ T3.название = ""HUNGER ROOF"""
2963;SELECT T1.name FROM category AS T1 JOIN film_category AS T2 ON T1.category_id  =  T2.category_id JOIN film AS T3 ON T2.film_id  =  T3.film_id WHERE T3.title  =  'HUNGER ROOF';"ВЫБРАТЬ T1.наименование ИЗ справочник.категориифильмов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.категориифильмов КАК T2 ПО T1.ссылка = T2.категория ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.фильмы КАК T3 ПО T2.фильм = T3.ссылка ГДЕ T3.название = ""HUNGER ROOF"""
2964;SELECT T2.name ,  T1.category_id ,  count(*) FROM film_category AS T1 JOIN category AS T2 ON T1.category_id  =  T2.category_id GROUP BY T1.category_id;ВЫБРАТЬ T2.наименование , T1.категория , КОЛИЧЕСТВО(*) ИЗ регистрсведений.категориифильмов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.категориифильмов КАК T2 ПО T1.категория = T2.ссылка СГРУППИРОВАТЬ ПО T1.категория
2965;SELECT T2.name ,  T1.category_id ,  count(*) FROM film_category AS T1 JOIN category AS T2 ON T1.category_id  =  T2.category_id GROUP BY T1.category_id;ВЫБРАТЬ T2.наименование , T1.категория , КОЛИЧЕСТВО(*) ИЗ регистрсведений.категориифильмов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.категориифильмов КАК T2 ПО T1.категория = T2.ссылка СГРУППИРОВАТЬ ПО T1.категория
2966;SELECT T1.title ,  T1.film_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id  =  T2.film_id GROUP BY T1.film_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.название , T1.ссылка ИЗ справочник.фильмы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.наличиефильмов КАК T2 ПО T1.ссылка = T2.фильм СГРУППИРОВАТЬ ПО T1.ссылка УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
2967;SELECT T1.title ,  T1.film_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id  =  T2.film_id GROUP BY T1.film_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.название , T1.ссылка ИЗ справочник.фильмы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.наличиефильмов КАК T2 ПО T1.ссылка = T2.фильм СГРУППИРОВАТЬ ПО T1.ссылка УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
2968;SELECT T1.title ,  T2.inventory_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id  =  T2.film_id JOIN rental AS T3 ON T2.inventory_id  =  T3.inventory_id GROUP BY T2.inventory_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.название , T2.ссылка ИЗ справочник.фильмы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.наличиефильмов КАК T2 ПО T1.ссылка = T2.фильм ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.аренда КАК T3 ПО T2.ссылка = T3.фильмизналичия СГРУППИРОВАТЬ ПО T2.ссылка УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
2969;SELECT T1.title ,  T2.inventory_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id  =  T2.film_id JOIN rental AS T3 ON T2.inventory_id  =  T3.inventory_id GROUP BY T2.inventory_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.название , T2.ссылка ИЗ справочник.фильмы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.наличиефильмов КАК T2 ПО T1.ссылка = T2.фильм ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.аренда КАК T3 ПО T2.ссылка = T3.фильмизналичия СГРУППИРОВАТЬ ПО T2.ссылка УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
2970;SELECT count(DISTINCT language_id) FROM film;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ язык) ИЗ справочник.фильмы
2971;SELECT count(DISTINCT language_id) FROM film;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ язык) ИЗ справочник.фильмы
2972;SELECT title FROM film WHERE rating  =  'R';"ВЫБРАТЬ название ИЗ справочник.фильмы ГДЕ рейтинг = ""R"""
2973;SELECT title FROM film WHERE rating  =  'R';"ВЫБРАТЬ название ИЗ справочник.фильмы ГДЕ рейтинг = ""R"""
2974;SELECT T2.address FROM store AS T1 JOIN address AS T2 ON T1.address_id  =  T2.address_id WHERE store_id  =  1;ВЫБРАТЬ T2.адрес1 ИЗ справочник.магазины КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.адреса КАК T2 ПО T1.адрессправочник = T2.ссылка ГДЕ store_id = 1
2975;SELECT T2.address FROM store AS T1 JOIN address AS T2 ON T1.address_id  =  T2.address_id WHERE store_id  =  1;ВЫБРАТЬ T2.адрес1 ИЗ справочник.магазины КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.адреса КАК T2 ПО T1.адрессправочник = T2.ссылка ГДЕ store_id = 1
2976;SELECT T1.first_name ,  T1.last_name ,  T1.staff_id FROM staff AS T1 JOIN payment AS T2 ON T1.staff_id  =  T2.staff_id GROUP BY T1.staff_id ORDER BY count(*) ASC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.имя , T1.фамилия , T1.ссылка ИЗ справочник.сотрудники КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.платеж КАК T2 ПО T1.ссылка = T2.сотрудник СГРУППИРОВАТЬ ПО T1.ссылка УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) ВОЗР
2977;SELECT T1.first_name ,  T1.last_name ,  T1.staff_id FROM staff AS T1 JOIN payment AS T2 ON T1.staff_id  =  T2.staff_id GROUP BY T1.staff_id ORDER BY count(*) ASC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.имя , T1.фамилия , T1.ссылка ИЗ справочник.сотрудники КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.платеж КАК T2 ПО T1.ссылка = T2.сотрудник СГРУППИРОВАТЬ ПО T1.ссылка УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) ВОЗР
2978;SELECT T2.name FROM film AS T1 JOIN LANGUAGE AS T2 ON T1.language_id  =  T2.language_id WHERE T1.title  =  'AIRPORT POLLOCK';"ВЫБРАТЬ T2.наименование ИЗ справочник.фильмы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.языки КАК T2 ПО T1.язык = T2.ссылка ГДЕ T1.название = ""AIRPORT POLLOCK"""
2979;SELECT T2.name FROM film AS T1 JOIN LANGUAGE AS T2 ON T1.language_id  =  T2.language_id WHERE T1.title  =  'AIRPORT POLLOCK';"ВЫБРАТЬ T2.наименование ИЗ справочник.фильмы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.языки КАК T2 ПО T1.язык = T2.ссылка ГДЕ T1.название = ""AIRPORT POLLOCK"""
2980;SELECT count(*) FROM store;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.магазины
2981;SELECT count(*) FROM store;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.магазины
2982;SELECT count(DISTINCT rating) FROM film;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ рейтинг) ИЗ справочник.фильмы
2983;SELECT count(DISTINCT rating) FROM film;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ рейтинг) ИЗ справочник.фильмы
2984;SELECT title FROM film WHERE special_features LIKE '%Deleted Scenes%';"ВЫБРАТЬ название ИЗ справочник.фильмы ГДЕ особенности ПОДОБНО ""%Deleted Scenes%"""
2985;SELECT title FROM film WHERE special_features LIKE '%Deleted Scenes%';"ВЫБРАТЬ название ИЗ справочник.фильмы ГДЕ особенности ПОДОБНО ""%Deleted Scenes%"""
2986;SELECT count(*) FROM inventory WHERE store_id  =  1;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.наличиефильмов ГДЕ магазин = 1
2987;SELECT count(*) FROM inventory WHERE store_id  =  1;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.наличиефильмов ГДЕ магазин = 1
2988;SELECT payment_date FROM payment ORDER BY payment_date ASC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 датаплатежа ИЗ документ.платеж УПОРЯДОЧИТЬ ПО датаплатежа ВОЗР
2989;SELECT payment_date FROM payment ORDER BY payment_date ASC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 датаплатежа ИЗ документ.платеж УПОРЯДОЧИТЬ ПО датаплатежа ВОЗР
2990;SELECT T2.address ,  T1.email FROM customer AS T1 JOIN address AS T2 ON T2.address_id  =  T1.address_id WHERE T1.first_name  =  'LINDA';"ВЫБРАТЬ T2.адрес1 , T1.электроннаяпочта ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.адреса КАК T2 ПО T2.ссылка = T1.адрессправочник ГДЕ T1.имя = ""LINDA"""
2991;SELECT T2.address ,  T1.email FROM customer AS T1 JOIN address AS T2 ON T2.address_id  =  T1.address_id WHERE T1.first_name  =  'LINDA';"ВЫБРАТЬ T2.адрес1 , T1.электроннаяпочта ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.адреса КАК T2 ПО T2.ссылка = T1.адрессправочник ГДЕ T1.имя = ""LINDA"""
2994;SELECT T1.first_name ,  T1.last_name FROM customer AS T1 JOIN rental AS T2 ON T1.customer_id  =  T2.customer_id ORDER BY T2.rental_date ASC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.имя , T1.фамилия ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.аренда КАК T2 ПО T1.ссылка = T2.клиент УПОРЯДОЧИТЬ ПО T2.датааренды ВОЗР
2995;SELECT T1.first_name ,  T1.last_name FROM customer AS T1 JOIN rental AS T2 ON T1.customer_id  =  T2.customer_id ORDER BY T2.rental_date ASC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.имя , T1.фамилия ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.аренда КАК T2 ПО T1.ссылка = T2.клиент УПОРЯДОЧИТЬ ПО T2.датааренды ВОЗР
2996;SELECT DISTINCT T1.first_name ,  T1.last_name FROM staff AS T1 JOIN rental AS T2 ON T1.staff_id  =  T2.staff_id JOIN customer AS T3 ON T2.customer_id  =  T3.customer_id WHERE T3.first_name  =  'APRIL' AND T3.last_name  =  'BURNS';"ВЫБРАТЬ РАЗЛИЧНЫЕ T1.имя , T1.фамилия ИЗ справочник.сотрудники КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.аренда КАК T2 ПО T1.ссылка = T2.сотрудник ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.клиенты КАК T3 ПО T2.клиент = T3.ссылка ГДЕ T3.имя = ""APRIL"" И T3.фамилия = ""BURNS"""
2997;SELECT DISTINCT T1.first_name ,  T1.last_name FROM staff AS T1 JOIN rental AS T2 ON T1.staff_id  =  T2.staff_id JOIN customer AS T3 ON T2.customer_id  =  T3.customer_id WHERE T3.first_name  =  'APRIL' AND T3.last_name  =  'BURNS';"ВЫБРАТЬ РАЗЛИЧНЫЕ T1.имя , T1.фамилия ИЗ справочник.сотрудники КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.аренда КАК T2 ПО T1.ссылка = T2.сотрудник ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.клиенты КАК T3 ПО T2.клиент = T3.ссылка ГДЕ T3.имя = ""APRIL"" И T3.фамилия = ""BURNS"""
2998;SELECT store_id FROM customer GROUP BY store_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 магазин ИЗ справочник.клиенты СГРУППИРОВАТЬ ПО магазин УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
2999;SELECT store_id FROM customer GROUP BY store_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 магазин ИЗ справочник.клиенты СГРУППИРОВАТЬ ПО магазин УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
3000;SELECT amount FROM payment ORDER BY amount DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 сумма ИЗ документ.платеж УПОРЯДОЧИТЬ ПО сумма УБЫВ
3001;SELECT amount FROM payment ORDER BY amount DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 сумма ИЗ документ.платеж УПОРЯДОЧИТЬ ПО сумма УБЫВ
3002;SELECT T2.address FROM staff AS T1 JOIN address AS T2 ON T1.address_id  =  T2.address_id WHERE T1.first_name  =  'Elsa';"ВЫБРАТЬ T2.адрес1 ИЗ справочник.сотрудники КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.адреса КАК T2 ПО T1.адрессправочник = T2.ссылка ГДЕ T1.имя = ""Elsa"""
3003;SELECT T2.address FROM staff AS T1 JOIN address AS T2 ON T1.address_id  =  T2.address_id WHERE T1.first_name  =  'Elsa';"ВЫБРАТЬ T2.адрес1 ИЗ справочник.сотрудники КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.адреса КАК T2 ПО T1.адрессправочник = T2.ссылка ГДЕ T1.имя = ""Elsa"""
3004;SELECT first_name FROM customer WHERE customer_id NOT IN( SELECT customer_id FROM rental WHERE rental_date  >  '2005-08-23 02:06:01' );"ВЫБРАТЬ first_name ИЗ справочник.клиенты ГДЕ клиент NOT IN( ВЫБРАТЬ клиент ИЗ документ.аренда ГДЕ датааренды > ""2005-08-23 02:06:01"" )"
3005;SELECT first_name FROM customer WHERE customer_id NOT IN( SELECT customer_id FROM rental WHERE rental_date  >  '2005-08-23 02:06:01' );"ВЫБРАТЬ first_name ИЗ справочник.клиенты ГДЕ клиент NOT IN( ВЫБРАТЬ клиент ИЗ документ.аренда ГДЕ датааренды > ""2005-08-23 02:06:01"" )"
3006;SELECT count(*) FROM bank;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.филиалыбанка
3007;SELECT count(*) FROM bank;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.филиалыбанка
3008;SELECT sum(no_of_customers) FROM bank;ВЫБРАТЬ СУММА(количествоклиентов) ИЗ справочник.филиалыбанка
3009;SELECT sum(no_of_customers) FROM bank;ВЫБРАТЬ СУММА(количествоклиентов) ИЗ справочник.филиалыбанка
3010;SELECT sum(no_of_customers) FROM bank WHERE city  =  'New York City';"ВЫБРАТЬ СУММА(количествоклиентов) ИЗ справочник.филиалыбанка ГДЕ город = ""New York город"""
3011;SELECT sum(no_of_customers) FROM bank WHERE city  =  'New York City';"ВЫБРАТЬ СУММА(количествоклиентов) ИЗ справочник.филиалыбанка ГДЕ город = ""New York город"""
3012;SELECT avg(no_of_customers) FROM bank WHERE state  =  'Utah';"ВЫБРАТЬ СРЕДНЕЕ(количествоклиентов) ИЗ справочник.филиалыбанка ГДЕ штат = ""Utah"""
3013;SELECT avg(no_of_customers) FROM bank WHERE state  =  'Utah';"ВЫБРАТЬ СРЕДНЕЕ(количествоклиентов) ИЗ справочник.филиалыбанка ГДЕ штат = ""Utah"""
3014;SELECT avg(no_of_customers) FROM bank;ВЫБРАТЬ СРЕДНЕЕ(количествоклиентов) ИЗ справочник.филиалыбанка
3015;SELECT avg(no_of_customers) FROM bank;ВЫБРАТЬ СРЕДНЕЕ(количествоклиентов) ИЗ справочник.филиалыбанка
3016;SELECT city ,  state FROM bank WHERE bname  =  'morningside';"ВЫБРАТЬ город , штат ИЗ справочник.филиалыбанка ГДЕ наименование = ""morningside"""
3017;SELECT city ,  state FROM bank WHERE bname  =  'morningside';"ВЫБРАТЬ город , штат ИЗ справочник.филиалыбанка ГДЕ наименование = ""morningside"""
3018;SELECT bname FROM bank WHERE state  =  'New York';"ВЫБРАТЬ наименование ИЗ справочник.филиалыбанка ГДЕ штат = ""New York"""
3019;SELECT bname FROM bank WHERE state  =  'New York';"ВЫБРАТЬ наименование ИЗ справочник.филиалыбанка ГДЕ штат = ""New York"""
3020;SELECT cust_name FROM customer ORDER BY acc_bal;ВЫБРАТЬ наименование ИЗ справочник.клиентыбанка УПОРЯДОЧИТЬ ПО баланссчета
3021;SELECT cust_name FROM customer ORDER BY acc_bal;ВЫБРАТЬ наименование ИЗ справочник.клиентыбанка УПОРЯДОЧИТЬ ПО баланссчета
3022;SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id GROUP BY T1.cust_name ORDER BY sum(T2.amount);ВЫБРАТЬ T1.наименование ИЗ справочник.клиентыбанка КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.кредиты КАК T2 ПО T1.ссылка = T2.клиент СГРУППИРОВАТЬ ПО T1.наименование УПОРЯДОЧИТЬ ПО СУММА(T2.сумма)
3023;SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id GROUP BY T1.cust_name ORDER BY sum(T2.amount);ВЫБРАТЬ T1.наименование ИЗ справочник.клиентыбанка КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.кредиты КАК T2 ПО T1.ссылка = T2.клиент СГРУППИРОВАТЬ ПО T1.наименование УПОРЯДОЧИТЬ ПО СУММА(T2.сумма)
3024;SELECT state ,  acc_type ,  credit_score FROM customer WHERE no_of_loans  =  0;ВЫБРАТЬ штат , типсчета , кредитныйрейтинг ИЗ справочник.клиентыбанка ГДЕ количествокредитов = 0
3025;SELECT state ,  acc_type ,  credit_score FROM customer WHERE no_of_loans  =  0;ВЫБРАТЬ штат , типсчета , кредитныйрейтинг ИЗ справочник.клиентыбанка ГДЕ количествокредитов = 0
3026;SELECT count(DISTINCT city) FROM bank;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ город) ИЗ справочник.филиалыбанка
3027;SELECT count(DISTINCT city) FROM bank;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ город) ИЗ справочник.филиалыбанка
3028;SELECT count(DISTINCT state) FROM bank;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ штат) ИЗ справочник.филиалыбанка
3029;SELECT count(DISTINCT state) FROM bank;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ штат) ИЗ справочник.филиалыбанка
3030;SELECT count(DISTINCT acc_type) FROM customer;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ типсчета) ИЗ справочник.клиентыбанка
3031;SELECT count(DISTINCT acc_type) FROM customer;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ типсчета) ИЗ справочник.клиентыбанка
3032;SELECT cust_name ,  acc_bal FROM customer WHERE cust_name LIKE '%a%';"ВЫБРАТЬ наименование , баланссчета ИЗ справочник.клиентыбанка ГДЕ наименование ПОДОБНО ""%a%"""
3033;SELECT cust_name ,  acc_bal FROM customer WHERE cust_name LIKE '%a%';"ВЫБРАТЬ наименование , баланссчета ИЗ справочник.клиентыбанка ГДЕ наименование ПОДОБНО ""%a%"""
3034;SELECT sum(acc_bal) FROM customer WHERE state  =  'Utah' OR state  =  'Texas';"ВЫБРАТЬ СУММА(баланссчета) ИЗ справочник.клиентыбанка ГДЕ штат = ""Utah"" ИЛИ штат = ""Texas"""
3035;SELECT sum(acc_bal) FROM customer WHERE state  =  'Utah' OR state  =  'Texas';"ВЫБРАТЬ СУММА(баланссчета) ИЗ справочник.клиентыбанка ГДЕ штат = ""Utah"" ИЛИ штат = ""Texas"""
3044;SELECT cust_name FROM customer WHERE credit_score  <  (SELECT avg(credit_score) FROM customer);ВЫБРАТЬ cust_name ИЗ справочник.клиентыбанка ГДЕ credit_score < (ВЫБРАТЬ СРЕДНЕЕ(credit_score) ИЗ справочник.клиентыбанка)
3045;SELECT cust_name FROM customer WHERE credit_score  <  (SELECT avg(credit_score) FROM customer);ВЫБРАТЬ cust_name ИЗ справочник.клиентыбанка ГДЕ credit_score < (ВЫБРАТЬ СРЕДНЕЕ(credit_score) ИЗ справочник.клиентыбанка)
3046;SELECT bname FROM bank ORDER BY no_of_customers DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование ИЗ справочник.филиалыбанка УПОРЯДОЧИТЬ ПО количествоклиентов УБЫВ
3047;SELECT bname FROM bank ORDER BY no_of_customers DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование ИЗ справочник.филиалыбанка УПОРЯДОЧИТЬ ПО количествоклиентов УБЫВ
3048;SELECT cust_name FROM customer ORDER BY credit_score LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование ИЗ справочник.клиентыбанка УПОРЯДОЧИТЬ ПО кредитныйрейтинг
3049;SELECT cust_name FROM customer ORDER BY credit_score LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование ИЗ справочник.клиентыбанка УПОРЯДОЧИТЬ ПО кредитныйрейтинг
3050;SELECT cust_name ,  acc_type ,  acc_bal FROM customer ORDER BY credit_score DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование , типсчета , баланссчета ИЗ справочник.клиентыбанка УПОРЯДОЧИТЬ ПО кредитныйрейтинг УБЫВ
3051;SELECT cust_name ,  acc_type ,  acc_bal FROM customer ORDER BY credit_score DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование , типсчета , баланссчета ИЗ справочник.клиентыбанка УПОРЯДОЧИТЬ ПО кредитныйрейтинг УБЫВ
3052;SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id GROUP BY T1.cust_name ORDER BY sum(T2.amount) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.наименование ИЗ справочник.клиентыбанка КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.кредиты КАК T2 ПО T1.ссылка = T2.клиент СГРУППИРОВАТЬ ПО T1.наименование УПОРЯДОЧИТЬ ПО СУММА(T2.сумма) УБЫВ
3053;SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id GROUP BY T1.cust_name ORDER BY sum(T2.amount) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.наименование ИЗ справочник.клиентыбанка КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.кредиты КАК T2 ПО T1.ссылка = T2.клиент СГРУППИРОВАТЬ ПО T1.наименование УПОРЯДОЧИТЬ ПО СУММА(T2.сумма) УБЫВ
3054;SELECT state FROM bank GROUP BY state ORDER BY sum(no_of_customers) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 штат ИЗ справочник.филиалыбанка СГРУППИРОВАТЬ ПО штат УПОРЯДОЧИТЬ ПО СУММА(количествоклиентов) УБЫВ
3055;SELECT state FROM bank GROUP BY state ORDER BY sum(no_of_customers) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 штат ИЗ справочник.филиалыбанка СГРУППИРОВАТЬ ПО штат УПОРЯДОЧИТЬ ПО СУММА(количествоклиентов) УБЫВ
3056;SELECT avg(acc_bal) ,  acc_type FROM customer WHERE credit_score  <  50 GROUP BY acc_type;ВЫБРАТЬ СРЕДНЕЕ(баланссчета) , типсчета ИЗ справочник.клиентыбанка ГДЕ кредитныйрейтинг < 50 СГРУППИРОВАТЬ ПО типсчета
3057;SELECT avg(acc_bal) ,  acc_type FROM customer WHERE credit_score  <  50 GROUP BY acc_type;ВЫБРАТЬ СРЕДНЕЕ(баланссчета) , типсчета ИЗ справочник.клиентыбанка ГДЕ кредитныйрейтинг < 50 СГРУППИРОВАТЬ ПО типсчета
3058;SELECT sum(acc_bal) ,  state FROM customer WHERE credit_score  >  100 GROUP BY state;ВЫБРАТЬ СУММА(баланссчета) , штат ИЗ справочник.клиентыбанка ГДЕ кредитныйрейтинг > 100 СГРУППИРОВАТЬ ПО штат
3059;SELECT sum(acc_bal) ,  state FROM customer WHERE credit_score  >  100 GROUP BY state;ВЫБРАТЬ СУММА(баланссчета) , штат ИЗ справочник.клиентыбанка ГДЕ кредитныйрейтинг > 100 СГРУППИРОВАТЬ ПО штат
3060;SELECT sum(amount) ,  T1.bname FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id GROUP BY T1.bname;ВЫБРАТЬ СУММА(amount) , T1.наименование ИЗ справочник.филиалыбанка КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.кредиты КАК T2 ПО T1.ссылка = T2.филиал СГРУППИРОВАТЬ ПО T1.наименование
3061;SELECT sum(amount) ,  T1.bname FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id GROUP BY T1.bname;ВЫБРАТЬ СУММА(amount) , T1.наименование ИЗ справочник.филиалыбанка КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.кредиты КАК T2 ПО T1.ссылка = T2.филиал СГРУППИРОВАТЬ ПО T1.наименование
3062;SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id GROUP BY T1.cust_name HAVING count(*)  >  1;ВЫБРАТЬ T1.наименование ИЗ справочник.клиентыбанка КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.кредиты КАК T2 ПО T1.ссылка = T2.клиент СГРУППИРОВАТЬ ПО T1.наименование ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 1
3063;SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id GROUP BY T1.cust_name HAVING count(*)  >  1;ВЫБРАТЬ T1.наименование ИЗ справочник.клиентыбанка КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.кредиты КАК T2 ПО T1.ссылка = T2.клиент СГРУППИРОВАТЬ ПО T1.наименование ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 1
3064;SELECT T1.cust_name ,  T1.acc_type FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id GROUP BY T1.cust_name HAVING sum(T2.amount)  >  5000;ВЫБРАТЬ T1.наименование , T1.типсчета ИЗ справочник.клиентыбанка КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.кредиты КАК T2 ПО T1.ссылка = T2.клиент СГРУППИРОВАТЬ ПО T1.наименование ИМЕЮЩИЕ СУММА(T2.сумма) > 5000
3065;SELECT T1.cust_name ,  T1.acc_type FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id GROUP BY T1.cust_name HAVING sum(T2.amount)  >  5000;ВЫБРАТЬ T1.наименование , T1.типсчета ИЗ справочник.клиентыбанка КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.кредиты КАК T2 ПО T1.ссылка = T2.клиент СГРУППИРОВАТЬ ПО T1.наименование ИМЕЮЩИЕ СУММА(T2.сумма) > 5000
3066;SELECT T1.bname FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id GROUP BY T1.bname ORDER BY sum(T2.amount) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.наименование ИЗ справочник.филиалыбанка КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.кредиты КАК T2 ПО T1.ссылка = T2.филиал СГРУППИРОВАТЬ ПО T1.наименование УПОРЯДОЧИТЬ ПО СУММА(T2.сумма) УБЫВ
3067;SELECT T1.bname FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id GROUP BY T1.bname ORDER BY sum(T2.amount) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.наименование ИЗ справочник.филиалыбанка КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.кредиты КАК T2 ПО T1.ссылка = T2.филиал СГРУППИРОВАТЬ ПО T1.наименование УПОРЯДОЧИТЬ ПО СУММА(T2.сумма) УБЫВ
3068;SELECT T2.bname FROM loan AS T1 JOIN bank AS T2 ON T1.branch_id  =  T2.branch_id JOIN customer AS T3 ON T1.cust_id  =  T3.cust_id WHERE T3.credit_score  <  100 GROUP BY T2.bname ORDER BY sum(T1.amount) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.наименование ИЗ регистрсведений.кредиты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.филиалыбанка КАК T2 ПО T1.филиал = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.клиентыбанка КАК T3 ПО T1.клиент = T3.ссылка ГДЕ T3.кредитныйрейтинг < 100 СГРУППИРОВАТЬ ПО T2.наименование УПОРЯДОЧИТЬ ПО СУММА(T1.сумма) УБЫВ
3069;SELECT T2.bname FROM loan AS T1 JOIN bank AS T2 ON T1.branch_id  =  T2.branch_id JOIN customer AS T3 ON T1.cust_id  =  T3.cust_id WHERE T3.credit_score  <  100 GROUP BY T2.bname ORDER BY sum(T1.amount) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.наименование ИЗ регистрсведений.кредиты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.филиалыбанка КАК T2 ПО T1.филиал = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.клиентыбанка КАК T3 ПО T1.клиент = T3.ссылка ГДЕ T3.кредитныйрейтинг < 100 СГРУППИРОВАТЬ ПО T2.наименование УПОРЯДОЧИТЬ ПО СУММА(T1.сумма) УБЫВ
3070;SELECT DISTINCT T1.bname FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id;ВЫБРАТЬ РАЗЛИЧНЫЕ T1.наименование ИЗ справочник.филиалыбанка КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.кредиты КАК T2 ПО T1.ссылка = T2.филиал
3071;SELECT DISTINCT T1.bname FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id;ВЫБРАТЬ РАЗЛИЧНЫЕ T1.наименование ИЗ справочник.филиалыбанка КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.кредиты КАК T2 ПО T1.ссылка = T2.филиал
3072;SELECT DISTINCT T1.cust_name ,  T1.credit_score FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id;ВЫБРАТЬ РАЗЛИЧНЫЕ T1.наименование , T1.кредитныйрейтинг ИЗ справочник.клиентыбанка КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.кредиты КАК T2 ПО T1.ссылка = T2.клиент
3073;SELECT DISTINCT T1.cust_name ,  T1.credit_score FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id;ВЫБРАТЬ РАЗЛИЧНЫЕ T1.наименование , T1.кредитныйрейтинг ИЗ справочник.клиентыбанка КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.кредиты КАК T2 ПО T1.ссылка = T2.клиент
3074;SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id WHERE amount  >  3000;ВЫБРАТЬ T1.наименование ИЗ справочник.клиентыбанка КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.кредиты КАК T2 ПО T1.ссылка = T2.клиент ГДЕ amount > 3000
3075;SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id WHERE amount  >  3000;ВЫБРАТЬ T1.наименование ИЗ справочник.клиентыбанка КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.кредиты КАК T2 ПО T1.ссылка = T2.клиент ГДЕ amount > 3000
3076;SELECT T1.bname ,  T1.city FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id WHERE T2.loan_type  =  'Business';"ВЫБРАТЬ T1.наименование , T1.город ИЗ справочник.филиалыбанка КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.кредиты КАК T2 ПО T1.ссылка = T2.филиал ГДЕ T2.типкредита = ""Business"""
3077;SELECT T1.bname ,  T1.city FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id WHERE T2.loan_type  =  'Business';"ВЫБРАТЬ T1.наименование , T1.город ИЗ справочник.филиалыбанка КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.кредиты КАК T2 ПО T1.ссылка = T2.филиал ГДЕ T2.типкредита = ""Business"""
3078;SELECT T2.bname FROM loan AS T1 JOIN bank AS T2 ON T1.branch_id  =  T2.branch_id JOIN customer AS T3 ON T1.cust_id  =  T3.cust_id WHERE T3.credit_score  <  100;ВЫБРАТЬ T2.наименование ИЗ регистрсведений.кредиты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.филиалыбанка КАК T2 ПО T1.филиал = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.клиентыбанка КАК T3 ПО T1.клиент = T3.ссылка ГДЕ T3.кредитныйрейтинг < 100
3079;SELECT T2.bname FROM loan AS T1 JOIN bank AS T2 ON T1.branch_id  =  T2.branch_id JOIN customer AS T3 ON T1.cust_id  =  T3.cust_id WHERE T3.credit_score  <  100;ВЫБРАТЬ T2.наименование ИЗ регистрсведений.кредиты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.филиалыбанка КАК T2 ПО T1.филиал = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.клиентыбанка КАК T3 ПО T1.клиент = T3.ссылка ГДЕ T3.кредитныйрейтинг < 100
3080;SELECT sum(T2.amount) FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id WHERE T1.state  =  'New York';"ВЫБРАТЬ СУММА(T2.сумма) ИЗ справочник.филиалыбанка КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.кредиты КАК T2 ПО T1.ссылка = T2.филиал ГДЕ T1.штат = ""New York"""
3081;SELECT sum(T2.amount) FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id WHERE T1.state  =  'New York';"ВЫБРАТЬ СУММА(T2.сумма) ИЗ справочник.филиалыбанка КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.кредиты КАК T2 ПО T1.ссылка = T2.филиал ГДЕ T1.штат = ""New York"""
3082;SELECT avg(credit_score) FROM customer WHERE cust_id IN (SELECT cust_id FROM loan);ВЫБРАТЬ СРЕДНЕЕ(credit_score) ИЗ справочник.клиентыбанка ГДЕ cust_id В (ВЫБРАТЬ cust_id ИЗ регистрсведений.кредиты)
3083;SELECT avg(credit_score) FROM customer WHERE cust_id IN (SELECT cust_id FROM loan);ВЫБРАТЬ СРЕДНЕЕ(credit_score) ИЗ справочник.клиентыбанка ГДЕ cust_id В (ВЫБРАТЬ cust_id ИЗ регистрсведений.кредиты)
3084;SELECT avg(credit_score) FROM customer WHERE cust_id NOT IN (SELECT cust_id FROM loan);ВЫБРАТЬ СРЕДНЕЕ(credit_score) ИЗ справочник.клиентыбанка ГДЕ cust_id НЕ В (ВЫБРАТЬ cust_id ИЗ регистрсведений.кредиты)
3085;SELECT avg(credit_score) FROM customer WHERE cust_id NOT IN (SELECT cust_id FROM loan);ВЫБРАТЬ СРЕДНЕЕ(credit_score) ИЗ справочник.клиентыбанка ГДЕ cust_id НЕ В (ВЫБРАТЬ cust_id ИЗ регистрсведений.кредиты)
3086;SELECT count(*) FROM ASSESSMENT_NOTES;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.оценки
3087;SELECT date_of_notes FROM Assessment_Notes;ВЫБРАТЬ дата ИЗ регистрсведений.оценки
3088;"SELECT count(*) FROM ADDRESSES WHERE zip_postcode  =  ""197""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.адреса ГДЕ индекс = ""197"""
3089;SELECT count(DISTINCT incident_type_code) FROM Behavior_Incident;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ видинцидента) ИЗ регистрсведений.инциденты
3090;SELECT DISTINCT detention_type_code FROM Detention;ВЫБРАТЬ РАЗЛИЧНЫЕ вид ИЗ документ.дисциплинарноевзыскание
3091;"SELECT date_incident_start ,  date_incident_end FROM Behavior_Incident WHERE incident_type_code  =  ""NOISE""";"ВЫБРАТЬ датаначала , датаокончания ИЗ регистрсведений.инциденты ГДЕ видинцидента = ""NOISE"""
3092;SELECT detention_summary FROM Detention;ВЫБРАТЬ описание ИЗ документ.дисциплинарноевзыскание
3093;SELECT cell_mobile_number ,  email_address FROM STUDENTS;ВЫБРАТЬ телефон , электроннаяпочта ИЗ справочник.студенты
3094;"SELECT email_address FROM Students WHERE first_name  =  ""Emma"" AND last_name  =  ""Rohan""";"ВЫБРАТЬ электроннаяпочта ИЗ справочник.студенты ГДЕ имя = ""Emma"" И фамилия = ""Rohan"""
3095;SELECT count(DISTINCT student_id) FROM Students_in_Detention;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ студент) ИЗ регистрсведений.студентывдисциплинарныхмерах
3096;"SELECT gender FROM TEACHERS WHERE last_name  =  ""Medhurst""";"ВЫБРАТЬ пол ИЗ справочник.преподаватели ГДЕ фамилия = ""Medhurst"""
3097;"SELECT incident_type_description FROM Ref_Incident_Type WHERE incident_type_code  =  ""VIOLENCE""";"ВЫБРАТЬ описание ИЗ справочник.видыинцидентов ГДЕ код = ""VIOLENCE"""
3098;SELECT max(monthly_rental) ,  min(monthly_rental) FROM Student_Addresses;ВЫБРАТЬ МАКСИМУМ(арендавмесяц) , МИНИМУМ(арендавмесяц) ИЗ регистрсведений.адресастудентов
3099;SELECT first_name FROM Teachers WHERE email_address LIKE '%man%';"ВЫБРАТЬ имя ИЗ справочник.преподаватели ГДЕ электроннаяпочта ПОДОБНО ""%man%"""
3100;SELECT * FROM Assessment_Notes ORDER BY date_of_notes ASC;ВЫБРАТЬ * ИЗ регистрсведений.оценки УПОРЯДОЧИТЬ ПО дата ВОЗР
3101;SELECT city FROM Addresses ORDER BY city;ВЫБРАТЬ город ИЗ справочник.адреса УПОРЯДОЧИТЬ ПО город
3102;SELECT first_name ,  last_name FROM Teachers ORDER BY last_name;ВЫБРАТЬ имя , фамилия ИЗ справочник.преподаватели УПОРЯДОЧИТЬ ПО фамилия
3103;SELECT * FROM Student_Addresses ORDER BY monthly_rental DESC;ВЫБРАТЬ * ИЗ регистрсведений.адресастудентов УПОРЯДОЧИТЬ ПО арендавмесяц УБЫВ
3104;SELECT T1.student_id ,  T2.first_name FROM Assessment_Notes AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.студент , T2.имя ИЗ регистрсведений.оценки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК T2 ПО T1.студент = T2.ссылка СГРУППИРОВАТЬ ПО T1.студент УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
3105;SELECT T1.teacher_id ,  T2.first_name FROM Assessment_Notes AS T1 JOIN Teachers AS T2 ON T1.teacher_id  =  T2.teacher_id GROUP BY T1.teacher_id ORDER BY count(*) DESC LIMIT 3;ВЫБРАТЬ ПЕРВЫЕ 3 T1.преподаватель , T2.имя ИЗ регистрсведений.оценки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.преподаватели КАК T2 ПО T1.преподаватель = T2.ссылка СГРУППИРОВАТЬ ПО T1.преподаватель УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
3106;SELECT T1.student_id ,  T2.last_name FROM Behavior_Incident AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.студент , T2.фамилия ИЗ регистрсведений.инциденты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК T2 ПО T1.студент = T2.ссылка СГРУППИРОВАТЬ ПО T1.студент УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
3107;"SELECT T1.teacher_id ,  T2.last_name FROM Detention AS T1 JOIN Teachers AS T2 ON T1.teacher_id  =  T2.teacher_id WHERE T1.detention_type_code  =  ""AFTER"" GROUP BY T1.teacher_id ORDER BY count(*) DESC LIMIT 1";"ВЫБРАТЬ ПЕРВЫЕ 1 T1.преподаватель , T2.фамилия ИЗ документ.дисциплинарноевзыскание КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.преподаватели КАК T2 ПО T1.преподаватель = T2.ссылка ГДЕ T1.вид = ""AFTER"" СГРУППИРОВАТЬ ПО T1.преподаватель УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ"
3108;SELECT T1.student_id ,  T2.first_name FROM Student_Addresses AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY AVG(monthly_rental) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.студент , T2.имя ИЗ регистрсведений.адресастудентов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК T2 ПО T1.студент = T2.ссылка СГРУППИРОВАТЬ ПО T1.студент УПОРЯДОЧИТЬ ПО AVG(monthly_rental) УБЫВ
3109;SELECT T2.address_id ,  T1.city FROM Addresses AS T1 JOIN Student_Addresses AS T2 ON T1.address_id  =  T2.address_id GROUP BY T2.address_id ORDER BY AVG(monthly_rental) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.адрес , T1.город ИЗ справочник.адреса КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.адресастудентов КАК T2 ПО T1.ссылка = T2.адрес СГРУППИРОВАТЬ ПО T2.адрес УПОРЯДОЧИТЬ ПО AVG(monthly_rental) УБЫВ
3110;SELECT T1.incident_type_code ,  T2.incident_type_description FROM Behavior_Incident AS T1 JOIN Ref_Incident_Type AS T2 ON T1.incident_type_code  =  T2.incident_type_code GROUP BY T1.incident_type_code ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.видинцидента , T2.описание ИЗ регистрсведений.инциденты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.видыинцидентов КАК T2 ПО T1.видинцидента = T2.код СГРУППИРОВАТЬ ПО T1.видинцидента УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
3111;SELECT T1.detention_type_code ,  T2.detention_type_description FROM Detention AS T1 JOIN Ref_Detention_Type AS T2 ON T1.detention_type_code  =  T2.detention_type_code GROUP BY T1.detention_type_code ORDER BY count(*) ASC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.вид , T2.описание ИЗ документ.дисциплинарноевзыскание КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.видыдисциплинарныхмер КАК T2 ПО T1.вид = T2.код СГРУППИРОВАТЬ ПО T1.вид УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) ВОЗР
3112;"SELECT T1.date_of_notes FROM Assessment_Notes AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id WHERE T2.first_name  =  ""Fanny""";"ВЫБРАТЬ T1.дата ИЗ регистрсведений.оценки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК T2 ПО T1.студент = T2.ссылка ГДЕ T2.имя = ""Fanny"""
3113;"SELECT T1.text_of_notes FROM Assessment_Notes AS T1 JOIN Teachers AS T2 ON T1.teacher_id  =  T2.teacher_id WHERE T2.last_name  =  ""Schuster""";"ВЫБРАТЬ T1.текст ИЗ регистрсведений.оценки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.преподаватели КАК T2 ПО T1.преподаватель = T2.ссылка ГДЕ T2.фамилия = ""Schuster"""
3114;"SELECT T1.date_incident_start ,  date_incident_end FROM Behavior_Incident AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id WHERE T2.last_name  =  ""Fahey""";"ВЫБРАТЬ T1.датаначала , date_incident_end ИЗ регистрсведений.инциденты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК T2 ПО T1.студент = T2.ссылка ГДЕ T2.фамилия = ""Fahey"""
3115;"SELECT T1.datetime_detention_start ,  datetime_detention_end FROM Detention AS T1 JOIN Teachers AS T2 ON T1.teacher_id  =  T2.teacher_id WHERE T2.last_name  =  ""Schultz""";"ВЫБРАТЬ T1.датаначала , datetime_detention_end ИЗ документ.дисциплинарноевзыскание КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.преподаватели КАК T2 ПО T1.преподаватель = T2.ссылка ГДЕ T2.фамилия = ""Schultz"""
3116;SELECT T2.address_id ,  T1.zip_postcode FROM Addresses AS T1 JOIN Student_Addresses AS T2 ON T1.address_id  =  T2.address_id ORDER BY monthly_rental DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.адрес , T1.индекс ИЗ справочник.адреса КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.адресастудентов КАК T2 ПО T1.ссылка = T2.адрес УПОРЯДОЧИТЬ ПО monthly_rental УБЫВ
3117;SELECT T2.cell_mobile_number FROM Student_Addresses AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id ORDER BY T1.monthly_rental ASC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.телефон ИЗ регистрсведений.адресастудентов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК T2 ПО T1.студент = T2.ссылка УПОРЯДОЧИТЬ ПО T1.арендавмесяц ВОЗР
3118;"SELECT T2.monthly_rental FROM Addresses AS T1 JOIN Student_Addresses AS T2 ON T1.address_id  =  T2.address_id WHERE T1.state_province_county  =  ""Texas""";"ВЫБРАТЬ T2.арендавмесяц ИЗ справочник.адреса КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.адресастудентов КАК T2 ПО T1.ссылка = T2.адрес ГДЕ T1.регион = ""Texas"""
3119;"SELECT T2.first_name ,  T2.last_name FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.address_id WHERE T1.state_province_county  =  ""Wisconsin""";"ВЫБРАТЬ T2.имя , T2.фамилия ИЗ справочник.адреса КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК T2 ПО T1.ссылка = T2.адрес ГДЕ T1.регион = ""Wisconsin"""
3120;SELECT T1.line_1 ,  avg(T2.monthly_rental) FROM Addresses AS T1 JOIN Student_Addresses AS T2 ON T1.address_id  =  T2.address_id GROUP BY T2.address_id;ВЫБРАТЬ T1.строка1 , СРЕДНЕЕ(T2.арендавмесяц) ИЗ справочник.адреса КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.адресастудентов КАК T2 ПО T1.ссылка = T2.адрес СГРУППИРОВАТЬ ПО T2.адрес
3121;"SELECT T1.zip_postcode FROM Addresses AS T1 JOIN Teachers AS T2 ON T1.address_id  =  T2.address_id WHERE T2.first_name  =  ""Lyla""";"ВЫБРАТЬ T1.индекс ИЗ справочник.адреса КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.преподаватели КАК T2 ПО T1.ссылка = T2.адрес ГДЕ T2.имя = ""Lyla"""
3122;"SELECT T2.email_address FROM Addresses AS T1 JOIN Teachers AS T2 ON T1.address_id  =  T2.address_id WHERE T1.zip_postcode  =  ""918""";"ВЫБРАТЬ T2.электроннаяпочта ИЗ справочник.адреса КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.преподаватели КАК T2 ПО T1.ссылка = T2.адрес ГДЕ T1.индекс = ""918"""
3123;SELECT count(*) FROM STUDENTS WHERE student_id NOT IN ( SELECT student_id FROM Behavior_Incident );ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.студенты ГДЕ student_id НЕ В ( ВЫБРАТЬ student_id ИЗ регистрсведений.инциденты )
3127;SELECT count(*) ,  T1.maintenance_contract_id FROM Maintenance_Contracts AS T1 JOIN Assets AS T2 ON T1.maintenance_contract_id  =  T2.maintenance_contract_id GROUP BY T1.maintenance_contract_id;ВЫБРАТЬ КОЛИЧЕСТВО(*) , T1.ссылка ИЗ документ.договорыто КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.активы КАК T2 ПО T1.ссылка = T2.договорто СГРУППИРОВАТЬ ПО T1.ссылка
3128;SELECT count(*) ,  T1.company_id FROM Third_Party_Companies AS T1 JOIN Assets AS T2 ON T1.company_id  =  T2.supplier_company_id GROUP BY T1.company_id;ВЫБРАТЬ КОЛИЧЕСТВО(*) , T1.ссылка ИЗ справочник.сторонниекомпании КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.активы КАК T2 ПО T1.ссылка = T2.поставщик СГРУППИРОВАТЬ ПО T1.ссылка
3129;SELECT T1.company_id ,  T1.company_name FROM Third_Party_Companies AS T1 JOIN Maintenance_Engineers AS T2 ON T1.company_id  =  T2.company_id GROUP BY T1.company_id HAVING count(*)  >=  2 UNION SELECT T3.company_id ,  T3.company_name FROM Third_Party_Companies AS T3 JOIN Maintenance_Contracts AS T4 ON T3.company_id  =  T4.maintenance_contract_company_id GROUP BY T3.company_id HAVING count(*)  >=  2;ВЫБРАТЬ T1.ссылка , T1.наименование ИЗ справочник.сторонниекомпании КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.инженерыто КАК T2 ПО T1.ссылка = T2.компания СГРУППИРОВАТЬ ПО T1.ссылка ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2 ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ T3.ссылка , T3.наименование ИЗ справочник.сторонниекомпании КАК T3 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.договорыто КАК T4 ПО T3.ссылка = T4.компания СГРУППИРОВАТЬ ПО T3.ссылка ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
3131;SELECT T1.engineer_id ,  T1.first_name ,  T1.last_name FROM Maintenance_Engineers AS T1 JOIN Engineer_Visits AS T2 GROUP BY T1.engineer_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.ссылка , T1.имя , T1.фамилия ИЗ справочник.инженерыто КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.визитыинженеров КАК T2 СГРУППИРОВАТЬ ПО T1.ссылка УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
3132;SELECT T1.part_name ,  T1.part_id FROM Parts AS T1 JOIN Part_Faults AS T2 ON T1.part_id  =  T2.part_id GROUP BY T1.part_id HAVING count(*)  >  2;ВЫБРАТЬ T1.наименование , T1.ссылка ИЗ справочник.запчасти КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.поломкизапчастей КАК T2 ПО T1.ссылка = T2.запчасть СГРУППИРОВАТЬ ПО T1.ссылка ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 2
3133;SELECT T1.first_name ,  T1.last_name ,  T1.other_details ,  T3.skill_description FROM Maintenance_Engineers AS T1 JOIN Engineer_Skills AS T2 ON T1.engineer_id  =  T2.engineer_id JOIN Skills AS T3 ON T2.skill_id  =  T3.skill_id;ВЫБРАТЬ T1.имя , T1.фамилия , T1.прочиеданные , T3.описаниенавыка ИЗ справочник.инженерыто КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.навыкиинженеров КАК T2 ПО T1.ссылка = T2.инженер ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.навыки КАК T3 ПО T2.навык = T3.ссылка
3134;SELECT T1.fault_short_name ,  T3.skill_description FROM Part_Faults AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.part_fault_id  =  T2.part_fault_id JOIN Skills AS T3 ON T2.skill_id  =  T3.skill_id;ВЫБРАТЬ T1.краткоеназваниеполомки , T3.описаниенавыка ИЗ справочник.поломкизапчастей КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.навыкидляустраненияполомки КАК T2 ПО T1.ссылка = T2.поломказапчасти ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.навыки КАК T3 ПО T2.навык = T3.ссылка
3135;SELECT T1.part_name ,  count(*) FROM Parts AS T1 JOIN Asset_Parts AS T2 ON T1.part_id  =  T2.part_id GROUP BY T1.part_name;ВЫБРАТЬ T1.наименование , КОЛИЧЕСТВО(*) ИЗ справочник.запчасти КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.запчастиактивов КАК T2 ПО T1.ссылка = T2.запчасть СГРУППИРОВАТЬ ПО T1.наименование
3136;SELECT T1.fault_description ,  T2.fault_status FROM Fault_Log AS T1 JOIN Fault_Log_Parts AS T2 ON T1.fault_log_entry_id  =  T2.fault_log_entry_id;ВЫБРАТЬ T1.описаниеполомки , T2.статусполомки ИЗ документ.журналполомок КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.поломкизапчастейвжурнале КАК T2 ПО T1.ссылка = T2.записьжурналаполомок
3137;SELECT count(*) ,  T1.fault_log_entry_id FROM Fault_Log AS T1 JOIN Engineer_Visits AS T2 ON T1.fault_log_entry_id  =  T2.fault_log_entry_id GROUP BY T1.fault_log_entry_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 КОЛИЧЕСТВО(*) , T1.ссылка ИЗ документ.журналполомок КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.визитыинженеров КАК T2 ПО T1.ссылка = T2.записьжурналаполомок СГРУППИРОВАТЬ ПО T1.ссылка УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
3138;SELECT DISTINCT last_name FROM Maintenance_Engineers;ВЫБРАТЬ РАЗЛИЧНЫЕ фамилия ИЗ справочник.инженерыто
3139;SELECT DISTINCT fault_status FROM Fault_Log_Parts;ВЫБРАТЬ РАЗЛИЧНЫЕ статусполомки ИЗ регистрсведений.поломкизапчастейвжурнале
3140;SELECT first_name ,  last_name FROM Maintenance_Engineers WHERE engineer_id NOT IN (SELECT engineer_id FROM Engineer_Visits);ВЫБРАТЬ first_name , last_name ИЗ справочник.инженерыто ГДЕ engineer_id НЕ В (ВЫБРАТЬ engineer_id ИЗ документ.визитыинженеров)
3141;SELECT asset_id ,  asset_details ,  asset_make ,  asset_model FROM Assets;ВЫБРАТЬ ссылка , описаниеактивов , производитель , модель ИЗ справочник.активы
3142;SELECT asset_acquired_date FROM Assets ORDER BY asset_acquired_date ASC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 датапоступления ИЗ справочник.активы УПОРЯДОЧИТЬ ПО датапоступления ВОЗР
3143;SELECT T1.part_id ,  T1.part_name FROM Parts AS T1 JOIN Part_Faults AS T2 ON T1.part_id  =  T2.part_id JOIN Skills_Required_To_Fix AS T3 ON T2.part_fault_id  =  T3.part_fault_id GROUP BY T1.part_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.ссылка , T1.наименование ИЗ справочник.запчасти КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.поломкизапчастей КАК T2 ПО T1.ссылка = T2.запчасть ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.навыкидляустраненияполомки КАК T3 ПО T2.ссылка = T3.поломказапчасти СГРУППИРОВАТЬ ПО T1.ссылка УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
3144;SELECT T1.part_name FROM Parts AS T1 JOIN Part_Faults AS T2 ON T1.part_id  =  T2.part_id GROUP BY T1.part_name ORDER BY count(*) ASC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.наименование ИЗ справочник.запчасти КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.поломкизапчастей КАК T2 ПО T1.ссылка = T2.запчасть СГРУППИРОВАТЬ ПО T1.наименование УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) ВОЗР
3145;SELECT T1.engineer_id ,  T1.first_name ,  T1.last_name FROM Maintenance_Engineers AS T1 JOIN Engineer_Visits AS T2 ON T1.engineer_id  =  T2.engineer_id GROUP BY T1.engineer_id ORDER BY count(*) ASC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.ссылка , T1.имя , T1.фамилия ИЗ справочник.инженерыто КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.визитыинженеров КАК T2 ПО T1.ссылка = T2.инженер СГРУППИРОВАТЬ ПО T1.ссылка УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) ВОЗР
3146;SELECT T1.staff_name ,  T3.first_name ,  T3.last_name FROM Staff AS T1 JOIN Engineer_Visits AS T2 ON T1.staff_id  =  T2.contact_staff_id JOIN Maintenance_Engineers AS T3 ON T2.engineer_id  =  T3.engineer_id;ВЫБРАТЬ T1.наименование , T3.имя , T3.фамилия ИЗ справочник.сотрудники КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.визитыинженеров КАК T2 ПО T1.ссылка = T2.контактноелицо ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.инженерыто КАК T3 ПО T2.инженер = T3.ссылка
3147;SELECT T1.fault_log_entry_id ,  T1.fault_description ,  T1.fault_log_entry_datetime FROM Fault_Log AS T1 JOIN Fault_Log_Parts AS T2 ON T1.fault_log_entry_id  =  T2.fault_log_entry_id GROUP BY T1.fault_log_entry_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.ссылка , T1.описаниеполомки , T1.датавремязаписи ИЗ документ.журналполомок КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.поломкизапчастейвжурнале КАК T2 ПО T1.ссылка = T2.записьжурналаполомок СГРУППИРОВАТЬ ПО T1.ссылка УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
3148;SELECT T1.skill_id ,  T1.skill_description FROM Skills AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.skill_id  =  T2.skill_id GROUP BY T1.skill_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.ссылка , T1.описаниенавыка ИЗ справочник.навыки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.навыкидляустраненияполомки КАК T2 ПО T1.ссылка = T2.навык СГРУППИРОВАТЬ ПО T1.ссылка УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
3149;SELECT DISTINCT asset_model FROM Assets;ВЫБРАТЬ РАЗЛИЧНЫЕ модель ИЗ справочник.активы
3150;SELECT asset_make ,  asset_model ,  asset_details FROM Assets ORDER BY asset_disposed_date ASC;ВЫБРАТЬ производитель , модель , описаниеактивов ИЗ справочник.активы УПОРЯДОЧИТЬ ПО датасписания ВОЗР
3151;SELECT part_id ,  chargeable_amount FROM Parts ORDER BY chargeable_amount ASC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 ссылка , стоимость ИЗ справочник.запчасти УПОРЯДОЧИТЬ ПО стоимость ВОЗР
3152;SELECT T1.company_name FROM Third_Party_Companies AS T1 JOIN Maintenance_Contracts AS T2 ON T1.company_id  =  T2.maintenance_contract_company_id ORDER BY T2.contract_start_date ASC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.наименование ИЗ справочник.сторонниекомпании КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.договорыто КАК T2 ПО T1.ссылка = T2.компания УПОРЯДОЧИТЬ ПО T2.датаначаладоговора ВОЗР
3153;SELECT T1.company_name FROM Third_Party_Companies AS T1 JOIN Maintenance_Contracts AS T2 ON T1.company_id  =  T2.maintenance_contract_company_id JOIN Ref_Company_Types AS T3 ON T1.company_type_code  =  T3.company_type_code ORDER BY T2.contract_end_date DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.наименование ИЗ справочник.сторонниекомпании КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.договорыто КАК T2 ПО T1.ссылка = T2.компания ВНУТРЕННЕЕ СОЕДИНЕНИЕ Ref_Company_Types КАК T3 ПО T1.company_type_code = T3.company_type_code УПОРЯДОЧИТЬ ПО T2.датаокончаниядоговора УБЫВ
3154;SELECT gender FROM staff GROUP BY gender ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 пол ИЗ справочник.сотрудники СГРУППИРОВАТЬ ПО пол УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
3155;SELECT T1.staff_name ,  count(*) FROM Staff AS T1 JOIN Engineer_Visits AS T2 ON T1.staff_id  =  T2.contact_staff_id GROUP BY T1.staff_name;ВЫБРАТЬ T1.наименование , КОЛИЧЕСТВО(*) ИЗ справочник.сотрудники КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.визитыинженеров КАК T2 ПО T1.ссылка = T2.контактноелицо СГРУППИРОВАТЬ ПО T1.наименование
3156;SELECT asset_model FROM Assets WHERE asset_id NOT IN (SELECT asset_id FROM Fault_Log);ВЫБРАТЬ asset_model ИЗ справочник.активы ГДЕ asset_id НЕ В (ВЫБРАТЬ asset_id ИЗ документ.журналполомок)
3157;SELECT local_authority ,  services FROM station;ВЫБРАТЬ местноеуправление , сервисы ИЗ справочник.станции
3158;SELECT train_number ,  name FROM train ORDER BY TIME;ВЫБРАТЬ номерпоезда , наименование ИЗ справочник.поезда УПОРЯДОЧИТЬ ПО времяотправления
3159;SELECT TIME ,  train_number FROM train WHERE destination  =  'Chennai' ORDER BY TIME;"ВЫБРАТЬ времяотправления , номерпоезда ИЗ справочник.поезда ГДЕ станцияназначения = ""Chennai"" УПОРЯДОЧИТЬ ПО времяотправления"
3160;"SELECT count(*) FROM train WHERE name LIKE ""%Express%""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.поезда ГДЕ наименование ПОДОБНО ""%Express%"""
3161;SELECT train_number ,  TIME FROM train WHERE origin  =  'Chennai' AND destination  =  'Guruvayur';"ВЫБРАТЬ номерпоезда , времяотправления ИЗ справочник.поезда ГДЕ станцияотправления = ""Chennai"" И станцияназначения = ""Guruvayur"""
3162;SELECT origin ,  count(*) FROM train GROUP BY origin;ВЫБРАТЬ станцияотправления , КОЛИЧЕСТВО(*) ИЗ справочник.поезда СГРУППИРОВАТЬ ПО станцияотправления
3163;SELECT t1.name FROM train AS t1 JOIN route AS t2 ON t1.id  =  t2.train_id GROUP BY t2.train_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 t1.наименование ИЗ справочник.поезда КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.маршруты КАК t2 ПО t1.ссылка = t2.поезд СГРУППИРОВАТЬ ПО t2.поезд УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
3164;SELECT count(*) ,  t1.network_name ,  t1.services FROM station AS t1 JOIN route AS t2 ON t1.id  =  t2.station_id GROUP BY t2.station_id;ВЫБРАТЬ КОЛИЧЕСТВО(*) , t1.наименованиесети , t1.сервисы ИЗ справочник.станции КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.маршруты КАК t2 ПО t1.ссылка = t2.станция СГРУППИРОВАТЬ ПО t2.станция
3165;SELECT avg(high_temperature) ,  day_of_week FROM weekly_weather GROUP BY day_of_week;ВЫБРАТЬ СРЕДНЕЕ(температурамакс) , деньнедели ИЗ регистрсведений.погодаподням СГРУППИРОВАТЬ ПО деньнедели
3166;"SELECT max(t1.low_temperature) ,  avg(t1.precipitation) FROM weekly_weather AS t1 JOIN station AS t2 ON t1.station_id  =  t2.id WHERE t2.network_name  =  ""Amersham""";"ВЫБРАТЬ МАКСИМУМ(t1.температурамин) , СРЕДНЕЕ(t1.осадки) ИЗ регистрсведений.погодаподням КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.станции КАК t2 ПО t1.станция = t2.ссылка ГДЕ t2.наименованиесети = ""Amersham"""
3167;"SELECT t3.name ,  t3.time FROM station AS t1 JOIN route AS t2 ON t1.id  =  t2.station_id JOIN train AS t3 ON t2.train_id  =  t3.id WHERE t1.local_authority  =  ""Chiltern""";"ВЫБРАТЬ t3.наименование , t3.времяотправления ИЗ справочник.станции КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.маршруты КАК t2 ПО t1.ссылка = t2.станция ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.поезда КАК t3 ПО t2.поезд = t3.ссылка ГДЕ t1.местноеуправление = ""Chiltern"""
3168;SELECT count(DISTINCT services) FROM station;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ сервисы) ИЗ справочник.станции
3169;SELECT t2.id ,  t2.local_authority FROM weekly_weather AS t1 JOIN station AS t2 ON t1.station_id  =  t2.id GROUP BY t1.station_id ORDER BY avg(high_temperature) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 t2.ссылка , t2.местноеуправление ИЗ регистрсведений.погодаподням КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.станции КАК t2 ПО t1.станция = t2.ссылка СГРУППИРОВАТЬ ПО t1.станция УПОРЯДОЧИТЬ ПО СРЕДНЕЕ(high_temperature) УБЫВ
3170;SELECT t2.id ,  t2.local_authority FROM weekly_weather AS t1 JOIN station AS t2 ON t1.station_id  =  t2.id GROUP BY t1.station_id HAVING max(t1.precipitation)  >  50;ВЫБРАТЬ t2.ссылка , t2.местноеуправление ИЗ регистрсведений.погодаподням КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.станции КАК t2 ПО t1.станция = t2.ссылка СГРУППИРОВАТЬ ПО t1.станция ИМЕЮЩИЕ МАКСИМУМ(t1.осадки) > 50
3171;SELECT min(low_temperature) ,  max(wind_speed_mph) FROM weekly_weather;ВЫБРАТЬ МИНИМУМ(температурамин) , МАКСИМУМ(скоростьветрамильчас) ИЗ регистрсведений.погодаподням
3172;SELECT origin FROM train GROUP BY origin HAVING count(*)  >  1;ВЫБРАТЬ станцияотправления ИЗ справочник.поезда СГРУППИРОВАТЬ ПО станцияотправления ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 1
3173;"SELECT count(*) FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code WHERE DEPT_NAME  =  ""Accounting""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.преподаватели КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.факультеты КАК T2 ПО T1.факультет = T2.код ГДЕ DEPT_NAME = ""Accounting"""
3174;"SELECT count(*) FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code WHERE DEPT_NAME  =  ""Accounting""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.преподаватели КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.факультеты КАК T2 ПО T1.факультет = T2.код ГДЕ DEPT_NAME = ""Accounting"""
3175;"SELECT count(DISTINCT PROF_NUM) FROM CLASS WHERE CRS_CODE  =  ""ACCT-211""";"ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ преподаватель) ИЗ справочник.группы ГДЕ кодкурса = ""ACCT-211"""
3176;"SELECT count(DISTINCT PROF_NUM) FROM CLASS WHERE CRS_CODE  =  ""ACCT-211""";"ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ преподаватель) ИЗ справочник.группы ГДЕ кодкурса = ""ACCT-211"""
3177;"SELECT T3.EMP_FNAME ,  T3.EMP_LNAME FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code JOIN employee AS T3 ON T1.EMP_NUM  =  T3.EMP_NUM WHERE DEPT_NAME  =  ""Biology""";"ВЫБРАТЬ T3.имя , T3.фамилия ИЗ справочник.преподаватели КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.факультеты КАК T2 ПО T1.факультет = T2.код ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сотрудники КАК T3 ПО T1.сотрудник = T3.ссылка ГДЕ DEPT_NAME = ""Biology"""
3178;"SELECT T3.EMP_FNAME ,  T3.EMP_LNAME FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code JOIN employee AS T3 ON T1.EMP_NUM  =  T3.EMP_NUM WHERE DEPT_NAME  =  ""Biology""";"ВЫБРАТЬ T3.имя , T3.фамилия ИЗ справочник.преподаватели КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.факультеты КАК T2 ПО T1.факультет = T2.код ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сотрудники КАК T3 ПО T1.сотрудник = T3.ссылка ГДЕ DEPT_NAME = ""Biology"""
3179;"SELECT DISTINCT T1.EMP_FNAME ,  T1.EMP_DOB FROM employee AS T1 JOIN CLASS AS T2 ON T1.EMP_NUM  =  T2.PROF_NUM WHERE CRS_CODE  =  ""ACCT-211""";"ВЫБРАТЬ РАЗЛИЧНЫЕ T1.имя , T1.датарождения ИЗ справочник.сотрудники КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.группы КАК T2 ПО T1.ссылка = T2.преподаватель ГДЕ CRS_CODE = ""ACCT-211"""
3180;"SELECT DISTINCT T1.EMP_FNAME ,  T1.EMP_DOB FROM employee AS T1 JOIN CLASS AS T2 ON T1.EMP_NUM  =  T2.PROF_NUM WHERE CRS_CODE  =  ""ACCT-211""";"ВЫБРАТЬ РАЗЛИЧНЫЕ T1.имя , T1.датарождения ИЗ справочник.сотрудники КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.группы КАК T2 ПО T1.ссылка = T2.преподаватель ГДЕ CRS_CODE = ""ACCT-211"""
3181;SELECT count(*) FROM employee AS T1 JOIN CLASS AS T2 ON T1.EMP_NUM  =  T2.PROF_NUM WHERE T1.EMP_LNAME  =  'Graztevski';"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.сотрудники КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.группы КАК T2 ПО T1.ссылка = T2.преподаватель ГДЕ T1.фамилия = ""Graztevski"""
3182;SELECT count(*) FROM employee AS T1 JOIN CLASS AS T2 ON T1.EMP_NUM  =  T2.PROF_NUM WHERE T1.EMP_LNAME  =  'Graztevski';"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.сотрудники КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.группы КАК T2 ПО T1.ссылка = T2.преподаватель ГДЕ T1.фамилия = ""Graztevski"""
3183;"SELECT school_code FROM department WHERE dept_name  =  ""Accounting""";"ВЫБРАТЬ кодшколы ИЗ справочник.факультеты ГДЕ наименование = ""Accounting"""
3184;"SELECT school_code FROM department WHERE dept_name  =  ""Accounting""";"ВЫБРАТЬ кодшколы ИЗ справочник.факультеты ГДЕ наименование = ""Accounting"""
3185;SELECT crs_credit ,  crs_description FROM course WHERE crs_code  =  'CIS-220';"ВЫБРАТЬ кредиты , описание ИЗ справочник.курсы ГДЕ код = ""CIS-220"""
3186;SELECT crs_credit ,  crs_description FROM course WHERE crs_code  =  'CIS-220';"ВЫБРАТЬ кредиты , описание ИЗ справочник.курсы ГДЕ код = ""CIS-220"""
3187;SELECT dept_address FROM department WHERE dept_name  =  'History';"ВЫБРАТЬ адрес ИЗ справочник.факультеты ГДЕ наименование = ""History"""
3188;SELECT dept_address FROM department WHERE dept_name  =  'History';"ВЫБРАТЬ адрес ИЗ справочник.факультеты ГДЕ наименование = ""History"""
3189;SELECT count(DISTINCT dept_address) FROM department WHERE school_code  =  'BUS';"ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ адрес) ИЗ справочник.факультеты ГДЕ кодшколы = ""BUS"""
3190;SELECT count(DISTINCT dept_address) FROM department WHERE school_code  =  'BUS';"ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ адрес) ИЗ справочник.факультеты ГДЕ кодшколы = ""BUS"""
3191;SELECT count(DISTINCT dept_address) ,  school_code FROM department GROUP BY school_code;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ адрес) , кодшколы ИЗ справочник.факультеты СГРУППИРОВАТЬ ПО кодшколы
3192;SELECT count(DISTINCT dept_address) ,  school_code FROM department GROUP BY school_code;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ адрес) , кодшколы ИЗ справочник.факультеты СГРУППИРОВАТЬ ПО кодшколы
3193;SELECT crs_credit ,  crs_description FROM course WHERE crs_code  =  'QM-261';"ВЫБРАТЬ кредиты , описание ИЗ справочник.курсы ГДЕ код = ""QM-261"""
3194;SELECT crs_credit ,  crs_description FROM course WHERE crs_code  =  'QM-261';"ВЫБРАТЬ кредиты , описание ИЗ справочник.курсы ГДЕ код = ""QM-261"""
3195;SELECT count(DISTINCT dept_name) ,  school_code FROM department GROUP BY school_code;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ наименование) , кодшколы ИЗ справочник.факультеты СГРУППИРОВАТЬ ПО кодшколы
3196;SELECT count(DISTINCT dept_name) ,  school_code FROM department GROUP BY school_code;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ наименование) , кодшколы ИЗ справочник.факультеты СГРУППИРОВАТЬ ПО кодшколы
3197;SELECT count(DISTINCT dept_name) ,  school_code FROM department GROUP BY school_code HAVING count(DISTINCT dept_name)  <  5;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ наименование) , кодшколы ИЗ справочник.факультеты СГРУППИРОВАТЬ ПО кодшколы ИМЕЮЩИЕ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ наименование) < 5
3198;SELECT count(DISTINCT dept_name) ,  school_code FROM department GROUP BY school_code HAVING count(DISTINCT dept_name)  <  5;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ наименование) , кодшколы ИЗ справочник.факультеты СГРУППИРОВАТЬ ПО кодшколы ИМЕЮЩИЕ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ наименование) < 5
3199;SELECT count(*) ,  crs_code FROM CLASS GROUP BY crs_code;ВЫБРАТЬ КОЛИЧЕСТВО(*) , кодкурса ИЗ справочник.группы СГРУППИРОВАТЬ ПО кодкурса
3200;SELECT count(*) ,  crs_code FROM CLASS GROUP BY crs_code;ВЫБРАТЬ КОЛИЧЕСТВО(*) , кодкурса ИЗ справочник.группы СГРУППИРОВАТЬ ПО кодкурса
3201;SELECT sum(crs_credit) ,  dept_code FROM course GROUP BY dept_code;ВЫБРАТЬ СУММА(кредиты) , кодфакультета ИЗ справочник.курсы СГРУППИРОВАТЬ ПО кодфакультета
3202;SELECT sum(crs_credit) ,  dept_code FROM course GROUP BY dept_code;ВЫБРАТЬ СУММА(кредиты) , кодфакультета ИЗ справочник.курсы СГРУППИРОВАТЬ ПО кодфакультета
3203;SELECT count(*) ,  class_room FROM CLASS GROUP BY class_room HAVING count(*)  >=  2;ВЫБРАТЬ КОЛИЧЕСТВО(*) , аудитория ИЗ справочник.группы СГРУППИРОВАТЬ ПО аудитория ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
3204;SELECT count(*) ,  class_room FROM CLASS GROUP BY class_room HAVING count(*)  >=  2;ВЫБРАТЬ КОЛИЧЕСТВО(*) , аудитория ИЗ справочник.группы СГРУППИРОВАТЬ ПО аудитория ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
3205;SELECT count(*) ,  dept_code FROM CLASS AS T1 JOIN course AS T2 ON T1.crs_code  =  T2.crs_code GROUP BY dept_code;ВЫБРАТЬ КОЛИЧЕСТВО(*) , dept_code ИЗ справочник.группы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.курсы КАК T2 ПО T1.кодкурса = T2.код СГРУППИРОВАТЬ ПО dept_code
3206;SELECT count(*) ,  dept_code FROM CLASS AS T1 JOIN course AS T2 ON T1.crs_code  =  T2.crs_code GROUP BY dept_code;ВЫБРАТЬ КОЛИЧЕСТВО(*) , dept_code ИЗ справочник.группы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.курсы КАК T2 ПО T1.кодкурса = T2.код СГРУППИРОВАТЬ ПО dept_code
3207;SELECT count(*) ,  T3.school_code FROM CLASS AS T1 JOIN course AS T2 ON T1.crs_code  =  T2.crs_code JOIN department AS T3 ON T2.dept_code  =  T3.dept_code GROUP BY T3.school_code;ВЫБРАТЬ КОЛИЧЕСТВО(*) , T3.кодшколы ИЗ справочник.группы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.курсы КАК T2 ПО T1.кодкурса = T2.код ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.факультеты КАК T3 ПО T2.кодфакультета = T3.код СГРУППИРОВАТЬ ПО T3.кодшколы
3208;SELECT count(*) ,  T3.school_code FROM CLASS AS T1 JOIN course AS T2 ON T1.crs_code  =  T2.crs_code JOIN department AS T3 ON T2.dept_code  =  T3.dept_code GROUP BY T3.school_code;ВЫБРАТЬ КОЛИЧЕСТВО(*) , T3.кодшколы ИЗ справочник.группы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.курсы КАК T2 ПО T1.кодкурса = T2.код ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.факультеты КАК T3 ПО T2.кодфакультета = T3.код СГРУППИРОВАТЬ ПО T3.кодшколы
3209;SELECT count(*) ,  T1.school_code FROM department AS T1 JOIN professor AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.school_code;ВЫБРАТЬ КОЛИЧЕСТВО(*) , T1.кодшколы ИЗ справочник.факультеты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.преподаватели КАК T2 ПО T1.код = T2.факультет СГРУППИРОВАТЬ ПО T1.кодшколы
3210;SELECT count(*) ,  T1.school_code FROM department AS T1 JOIN professor AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.school_code;ВЫБРАТЬ КОЛИЧЕСТВО(*) , T1.кодшколы ИЗ справочник.факультеты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.преподаватели КАК T2 ПО T1.код = T2.факультет СГРУППИРОВАТЬ ПО T1.кодшколы
3211;SELECT emp_jobcode ,  count(*) FROM employee GROUP BY emp_jobcode ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 должностьнаименование , КОЛИЧЕСТВО(*) ИЗ справочник.сотрудники СГРУППИРОВАТЬ ПО должностьнаименование УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
3212;SELECT emp_jobcode ,  count(*) FROM employee GROUP BY emp_jobcode ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 должностьнаименование , КОЛИЧЕСТВО(*) ИЗ справочник.сотрудники СГРУППИРОВАТЬ ПО должностьнаименование УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
3213;SELECT T1.school_code FROM department AS T1 JOIN professor AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.school_code ORDER BY count(*) LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.кодшколы ИЗ справочник.факультеты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.преподаватели КАК T2 ПО T1.код = T2.факультет СГРУППИРОВАТЬ ПО T1.кодшколы УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*)
3214;SELECT T1.school_code FROM department AS T1 JOIN professor AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.school_code ORDER BY count(*) LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.кодшколы ИЗ справочник.факультеты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.преподаватели КАК T2 ПО T1.код = T2.факультет СГРУППИРОВАТЬ ПО T1.кодшколы УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*)
3215;SELECT count(*) ,  dept_code FROM professor WHERE prof_high_degree  =  'Ph.D.' GROUP BY dept_code;"ВЫБРАТЬ КОЛИЧЕСТВО(*) , факультет ИЗ справочник.преподаватели ГДЕ ученаястепень = ""Ph.D."" СГРУППИРОВАТЬ ПО факультет"
3216;SELECT count(*) ,  dept_code FROM professor WHERE prof_high_degree  =  'Ph.D.' GROUP BY dept_code;"ВЫБРАТЬ КОЛИЧЕСТВО(*) , факультет ИЗ справочник.преподаватели ГДЕ ученаястепень = ""Ph.D."" СГРУППИРОВАТЬ ПО факультет"
3217;SELECT count(*) ,  dept_code FROM student GROUP BY dept_code;ВЫБРАТЬ КОЛИЧЕСТВО(*) , факультет ИЗ справочник.студенты СГРУППИРОВАТЬ ПО факультет
3218;SELECT count(*) ,  dept_code FROM student GROUP BY dept_code;ВЫБРАТЬ КОЛИЧЕСТВО(*) , факультет ИЗ справочник.студенты СГРУППИРОВАТЬ ПО факультет
3219;SELECT sum(stu_hrs) ,  dept_code FROM student GROUP BY dept_code;ВЫБРАТЬ СУММА(количествочасов) , факультет ИЗ справочник.студенты СГРУППИРОВАТЬ ПО факультет
3220;SELECT sum(stu_hrs) ,  dept_code FROM student GROUP BY dept_code;ВЫБРАТЬ СУММА(количествочасов) , факультет ИЗ справочник.студенты СГРУППИРОВАТЬ ПО факультет
3221;SELECT max(stu_gpa) ,  avg(stu_gpa) ,  min(stu_gpa) ,  dept_code FROM student GROUP BY dept_code;ВЫБРАТЬ МАКСИМУМ(среднийбалл) , СРЕДНЕЕ(среднийбалл) , МИНИМУМ(среднийбалл) , факультет ИЗ справочник.студенты СГРУППИРОВАТЬ ПО факультет
3222;SELECT max(stu_gpa) ,  avg(stu_gpa) ,  min(stu_gpa) ,  dept_code FROM student GROUP BY dept_code;ВЫБРАТЬ МАКСИМУМ(среднийбалл) , СРЕДНЕЕ(среднийбалл) , МИНИМУМ(среднийбалл) , факультет ИЗ справочник.студенты СГРУППИРОВАТЬ ПО факультет
3223;SELECT T2.dept_name ,  avg(T1.stu_gpa) FROM student AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.dept_code ORDER BY avg(T1.stu_gpa) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.наименование , СРЕДНЕЕ(T1.среднийбалл) ИЗ справочник.студенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.факультеты КАК T2 ПО T1.факультет = T2.код СГРУППИРОВАТЬ ПО T1.факультет УПОРЯДОЧИТЬ ПО СРЕДНЕЕ(T1.среднийбалл) УБЫВ
3224;SELECT T2.dept_name ,  avg(T1.stu_gpa) FROM student AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.dept_code ORDER BY avg(T1.stu_gpa) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.наименование , СРЕДНЕЕ(T1.среднийбалл) ИЗ справочник.студенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.факультеты КАК T2 ПО T1.факультет = T2.код СГРУППИРОВАТЬ ПО T1.факультет УПОРЯДОЧИТЬ ПО СРЕДНЕЕ(T1.среднийбалл) УБЫВ
3225;SELECT count(DISTINCT school_code) FROM department;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ кодшколы) ИЗ справочник.факультеты
3226;SELECT count(DISTINCT school_code) FROM department;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ кодшколы) ИЗ справочник.факультеты
3227;SELECT count(DISTINCT class_code) FROM CLASS;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ссылка) ИЗ справочник.группы
3228;SELECT count(DISTINCT class_code) FROM CLASS;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ссылка) ИЗ справочник.группы
3229;SELECT count(DISTINCT crs_code) FROM CLASS;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ кодкурса) ИЗ справочник.группы
3230;SELECT count(DISTINCT crs_code) FROM CLASS;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ кодкурса) ИЗ справочник.группы
3231;SELECT count(DISTINCT dept_name) FROM department;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ наименование) ИЗ справочник.факультеты
3232;SELECT count(DISTINCT dept_name) FROM department;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ наименование) ИЗ справочник.факультеты
3233;"SELECT count(*) FROM department AS T1 JOIN course AS T2 ON T1.dept_code  =  T2.dept_code WHERE dept_name  =  ""Computer Info. Systems""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.факультеты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.курсы КАК T2 ПО T1.код = T2.кодфакультета ГДЕ dept_name = ""Computer Info. Systems"""
3234;"SELECT count(*) FROM department AS T1 JOIN course AS T2 ON T1.dept_code  =  T2.dept_code WHERE dept_name  =  ""Computer Info. Systems""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.факультеты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.курсы КАК T2 ПО T1.код = T2.кодфакультета ГДЕ dept_name = ""Computer Info. Systems"""
3235;SELECT count(DISTINCT class_section) FROM CLASS WHERE crs_code  =  'ACCT-211';"ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ номергруппы) ИЗ справочник.группы ГДЕ кодкурса = ""ACCT-211"""
3236;SELECT count(DISTINCT class_section) FROM CLASS WHERE crs_code  =  'ACCT-211';"ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ номергруппы) ИЗ справочник.группы ГДЕ кодкурса = ""ACCT-211"""
3237;SELECT sum(T1.crs_credit) ,  T1.dept_code FROM course AS T1 JOIN CLASS AS T2 ON T1.crs_code  =  T2.crs_code GROUP BY T1.dept_code;ВЫБРАТЬ СУММА(T1.кредиты) , T1.кодфакультета ИЗ справочник.курсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.группы КАК T2 ПО T1.код = T2.кодкурса СГРУППИРОВАТЬ ПО T1.кодфакультета
3238;SELECT sum(T1.crs_credit) ,  T1.dept_code FROM course AS T1 JOIN CLASS AS T2 ON T1.crs_code  =  T2.crs_code GROUP BY T1.dept_code;ВЫБРАТЬ СУММА(T1.кредиты) , T1.кодфакультета ИЗ справочник.курсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.группы КАК T2 ПО T1.код = T2.кодкурса СГРУППИРОВАТЬ ПО T1.кодфакультета
3239;SELECT T3.dept_name FROM course AS T1 JOIN CLASS AS T2 ON T1.crs_code  =  T2.crs_code JOIN department AS T3 ON T1.dept_code  =  T3.dept_code GROUP BY T1.dept_code ORDER BY sum(T1.crs_credit) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T3.наименование ИЗ справочник.курсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.группы КАК T2 ПО T1.код = T2.кодкурса ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.факультеты КАК T3 ПО T1.кодфакультета = T3.код СГРУППИРОВАТЬ ПО T1.кодфакультета УПОРЯДОЧИТЬ ПО СУММА(T1.кредиты) УБЫВ
3240;SELECT T3.dept_name FROM course AS T1 JOIN CLASS AS T2 ON T1.crs_code  =  T2.crs_code JOIN department AS T3 ON T1.dept_code  =  T3.dept_code GROUP BY T1.dept_code ORDER BY sum(T1.crs_credit) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T3.наименование ИЗ справочник.курсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.группы КАК T2 ПО T1.код = T2.кодкурса ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.факультеты КАК T3 ПО T1.кодфакультета = T3.код СГРУППИРОВАТЬ ПО T1.кодфакультета УПОРЯДОЧИТЬ ПО СУММА(T1.кредиты) УБЫВ
3241;SELECT count(*) FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code WHERE T1.crs_code  =  'ACCT-211';"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.группы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.записиопосещении КАК T2 ПО T1.ссылка = T2.группа ГДЕ T1.кодкурса = ""ACCT-211"""
3242;SELECT count(*) FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code WHERE T1.crs_code  =  'ACCT-211';"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.группы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.записиопосещении КАК T2 ПО T1.ссылка = T2.группа ГДЕ T1.кодкурса = ""ACCT-211"""
3243;SELECT T3.stu_fname FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN student AS T3 ON T2.stu_num  =  T3.stu_num WHERE T1.crs_code  =  'ACCT-211';"ВЫБРАТЬ T3.имя ИЗ справочник.группы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.записиопосещении КАК T2 ПО T1.ссылка = T2.группа ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК T3 ПО T2.студент = T3.ссылка ГДЕ T1.кодкурса = ""ACCT-211"""
3244;SELECT T3.stu_fname FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN student AS T3 ON T2.stu_num  =  T3.stu_num WHERE T1.crs_code  =  'ACCT-211';"ВЫБРАТЬ T3.имя ИЗ справочник.группы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.записиопосещении КАК T2 ПО T1.ссылка = T2.группа ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК T3 ПО T2.студент = T3.ссылка ГДЕ T1.кодкурса = ""ACCT-211"""
3245;SELECT T3.stu_fname FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN student AS T3 ON T2.stu_num  =  T3.stu_num WHERE T1.crs_code  =  'ACCT-211' AND T2.enroll_grade  =  'C';"ВЫБРАТЬ T3.имя ИЗ справочник.группы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.записиопосещении КАК T2 ПО T1.ссылка = T2.группа ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК T3 ПО T2.студент = T3.ссылка ГДЕ T1.кодкурса = ""ACCT-211"" И T2.оценка = ""C"""
3246;SELECT T3.stu_fname FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN student AS T3 ON T2.stu_num  =  T3.stu_num WHERE T1.crs_code  =  'ACCT-211' AND T2.enroll_grade  =  'C';"ВЫБРАТЬ T3.имя ИЗ справочник.группы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.записиопосещении КАК T2 ПО T1.ссылка = T2.группа ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК T3 ПО T2.студент = T3.ссылка ГДЕ T1.кодкурса = ""ACCT-211"" И T2.оценка = ""C"""
3247;SELECT count(*) FROM employee;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.сотрудники
3248;SELECT count(*) FROM employee;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.сотрудники
3249;SELECT count(*) FROM professor WHERE prof_high_degree  =  'Ph.D.';"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.преподаватели ГДЕ ученаястепень = ""Ph.D."""
3250;SELECT count(*) FROM professor WHERE prof_high_degree  =  'Ph.D.';"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.преподаватели ГДЕ ученаястепень = ""Ph.D."""
3251;SELECT count(*) FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN course AS T3 ON T1.crs_code  =  T3.crs_code JOIN department AS T4 ON T3.dept_code  =  T4.dept_code WHERE T4.dept_name  =  'Accounting';"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.группы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.записиопосещении КАК T2 ПО T1.ссылка = T2.группа ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.курсы КАК T3 ПО T1.кодкурса = T3.код ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.факультеты КАК T4 ПО T3.кодфакультета = T4.код ГДЕ T4.наименование = ""Accounting"""
3252;SELECT count(*) FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN course AS T3 ON T1.crs_code  =  T3.crs_code JOIN department AS T4 ON T3.dept_code  =  T4.dept_code WHERE T4.dept_name  =  'Accounting';"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.группы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.записиопосещении КАК T2 ПО T1.ссылка = T2.группа ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.курсы КАК T3 ПО T1.кодкурса = T3.код ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.факультеты КАК T4 ПО T3.кодфакультета = T4.код ГДЕ T4.наименование = ""Accounting"""
3253;SELECT T4.dept_name FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN course AS T3 ON T1.crs_code  =  T3.crs_code JOIN department AS T4 ON T3.dept_code  =  T4.dept_code GROUP BY T3.dept_code ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T4.наименование ИЗ справочник.группы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.записиопосещении КАК T2 ПО T1.ссылка = T2.группа ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.курсы КАК T3 ПО T1.кодкурса = T3.код ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.факультеты КАК T4 ПО T3.кодфакультета = T4.код СГРУППИРОВАТЬ ПО T3.кодфакультета УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
3254;SELECT T4.dept_name FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN course AS T3 ON T1.crs_code  =  T3.crs_code JOIN department AS T4 ON T3.dept_code  =  T4.dept_code GROUP BY T3.dept_code ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T4.наименование ИЗ справочник.группы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.записиопосещении КАК T2 ПО T1.ссылка = T2.группа ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.курсы КАК T3 ПО T1.кодкурса = T3.код ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.факультеты КАК T4 ПО T3.кодфакультета = T4.код СГРУППИРОВАТЬ ПО T3.кодфакультета УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
3255;SELECT dept_name FROM department ORDER BY dept_name;ВЫБРАТЬ наименование ИЗ справочник.факультеты УПОРЯДОЧИТЬ ПО наименование
3256;SELECT dept_name FROM department ORDER BY dept_name;ВЫБРАТЬ наименование ИЗ справочник.факультеты УПОРЯДОЧИТЬ ПО наименование
3257;SELECT class_code FROM CLASS WHERE class_room  =  'KLR209';"ВЫБРАТЬ ссылка ИЗ справочник.группы ГДЕ аудитория = ""KLR209"""
3258;SELECT class_code FROM CLASS WHERE class_room  =  'KLR209';"ВЫБРАТЬ ссылка ИЗ справочник.группы ГДЕ аудитория = ""KLR209"""
3259;SELECT emp_fname FROM employee WHERE emp_jobcode  =  'PROF' ORDER BY emp_dob;"ВЫБРАТЬ имя ИЗ справочник.сотрудники ГДЕ должностьнаименование = ""PROF"" УПОРЯДОЧИТЬ ПО датарождения"
3260;SELECT emp_fname FROM employee WHERE emp_jobcode  =  'PROF' ORDER BY emp_dob;"ВЫБРАТЬ имя ИЗ справочник.сотрудники ГДЕ должностьнаименование = ""PROF"" УПОРЯДОЧИТЬ ПО датарождения"
3261;SELECT T2.emp_fname ,  T1.prof_office FROM professor AS T1 JOIN employee AS T2 ON T1.emp_num  =  T2.emp_num ORDER BY T2.emp_fname;ВЫБРАТЬ T2.имя , T1.кабинет ИЗ справочник.преподаватели КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сотрудники КАК T2 ПО T1.сотрудник = T2.ссылка УПОРЯДОЧИТЬ ПО T2.имя
3262;SELECT T2.emp_fname ,  T1.prof_office FROM professor AS T1 JOIN employee AS T2 ON T1.emp_num  =  T2.emp_num ORDER BY T2.emp_fname;ВЫБРАТЬ T2.имя , T1.кабинет ИЗ справочник.преподаватели КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сотрудники КАК T2 ПО T1.сотрудник = T2.ссылка УПОРЯДОЧИТЬ ПО T2.имя
3263;SELECT emp_fname ,  emp_lname FROM employee ORDER BY emp_dob LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 имя , фамилия ИЗ справочник.сотрудники УПОРЯДОЧИТЬ ПО датарождения
3264;SELECT emp_fname ,  emp_lname FROM employee ORDER BY emp_dob LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 имя , фамилия ИЗ справочник.сотрудники УПОРЯДОЧИТЬ ПО датарождения
3265;SELECT stu_fname ,  stu_lname ,  stu_gpa FROM student WHERE stu_gpa  >  3 ORDER BY stu_dob DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 имя , фамилия , среднийбалл ИЗ справочник.студенты ГДЕ среднийбалл > 3 УПОРЯДОЧИТЬ ПО датарождения УБЫВ
3266;SELECT stu_fname ,  stu_lname ,  stu_gpa FROM student WHERE stu_gpa  >  3 ORDER BY stu_dob DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 имя , фамилия , среднийбалл ИЗ справочник.студенты ГДЕ среднийбалл > 3 УПОРЯДОЧИТЬ ПО датарождения УБЫВ
3267;SELECT DISTINCT stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num WHERE enroll_grade  =  'C';"ВЫБРАТЬ РАЗЛИЧНЫЕ stu_fname ИЗ справочник.студенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.записиопосещении КАК T2 ПО T1.ссылка = T2.студент ГДЕ enroll_grade = ""C"""
3268;SELECT DISTINCT stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num WHERE enroll_grade  =  'C';"ВЫБРАТЬ РАЗЛИЧНЫЕ stu_fname ИЗ справочник.студенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.записиопосещении КАК T2 ПО T1.ссылка = T2.студент ГДЕ enroll_grade = ""C"""
3269;SELECT T2.dept_name FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.dept_code ORDER BY count(*) LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.наименование ИЗ справочник.преподаватели КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.факультеты КАК T2 ПО T1.факультет = T2.код СГРУППИРОВАТЬ ПО T1.факультет УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*)
3270;SELECT T2.dept_name FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.dept_code ORDER BY count(*) LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.наименование ИЗ справочник.преподаватели КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.факультеты КАК T2 ПО T1.факультет = T2.код СГРУППИРОВАТЬ ПО T1.факультет УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*)
3271;SELECT T2.dept_name ,  T1.dept_code FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code WHERE T1.prof_high_degree  =  'Ph.D.' GROUP BY T1.dept_code ORDER BY count(*) DESC LIMIT 1;"ВЫБРАТЬ ПЕРВЫЕ 1 T2.наименование , T1.факультет ИЗ справочник.преподаватели КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.факультеты КАК T2 ПО T1.факультет = T2.код ГДЕ T1.ученаястепень = ""Ph.D."" СГРУППИРОВАТЬ ПО T1.факультет УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ"
3272;SELECT T2.dept_name ,  T1.dept_code FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code WHERE T1.prof_high_degree  =  'Ph.D.' GROUP BY T1.dept_code ORDER BY count(*) DESC LIMIT 1;"ВЫБРАТЬ ПЕРВЫЕ 1 T2.наименование , T1.факультет ИЗ справочник.преподаватели КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.факультеты КАК T2 ПО T1.факультет = T2.код ГДЕ T1.ученаястепень = ""Ph.D."" СГРУППИРОВАТЬ ПО T1.факультет УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ"
3277;SELECT T1.emp_lname ,  T2.prof_office FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num  =  T2.emp_num JOIN department AS T3 ON T2.dept_code  =  T3.dept_code WHERE T3.dept_name  =  'History';"ВЫБРАТЬ T1.фамилия , T2.кабинет ИЗ справочник.сотрудники КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.преподаватели КАК T2 ПО T1.ссылка = T2.сотрудник ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.факультеты КАК T3 ПО T2.факультет = T3.код ГДЕ T3.наименование = ""History"""
3278;SELECT T1.emp_lname ,  T2.prof_office FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num  =  T2.emp_num JOIN department AS T3 ON T2.dept_code  =  T3.dept_code WHERE T3.dept_name  =  'History';"ВЫБРАТЬ T1.фамилия , T2.кабинет ИЗ справочник.сотрудники КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.преподаватели КАК T2 ПО T1.ссылка = T2.сотрудник ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.факультеты КАК T3 ПО T2.факультет = T3.код ГДЕ T3.наименование = ""History"""
3279;SELECT T3.dept_name  ,  T2.prof_office FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num  =  T2.emp_num JOIN department AS T3 ON T2.dept_code  =  T3.dept_code WHERE T1.emp_lname  =  'Heffington';"ВЫБРАТЬ T3.наименование , T2.кабинет ИЗ справочник.сотрудники КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.преподаватели КАК T2 ПО T1.ссылка = T2.сотрудник ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.факультеты КАК T3 ПО T2.факультет = T3.код ГДЕ T1.фамилия = ""Heffington"""
3280;SELECT T3.dept_name  ,  T2.prof_office FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num  =  T2.emp_num JOIN department AS T3 ON T2.dept_code  =  T3.dept_code WHERE T1.emp_lname  =  'Heffington';"ВЫБРАТЬ T3.наименование , T2.кабинет ИЗ справочник.сотрудники КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.преподаватели КАК T2 ПО T1.ссылка = T2.сотрудник ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.факультеты КАК T3 ПО T2.факультет = T3.код ГДЕ T1.фамилия = ""Heffington"""
3281;SELECT T1.emp_lname ,  T1.emp_hiredate FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num  =  T2.emp_num WHERE T2.prof_office  =  'DRE 102';"ВЫБРАТЬ T1.фамилия , T1.датанайма ИЗ справочник.сотрудники КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.преподаватели КАК T2 ПО T1.ссылка = T2.сотрудник ГДЕ T2.кабинет = ""DRE 102"""
3282;SELECT T1.emp_lname ,  T1.emp_hiredate FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num  =  T2.emp_num WHERE T2.prof_office  =  'DRE 102';"ВЫБРАТЬ T1.фамилия , T1.датанайма ИЗ справочник.сотрудники КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.преподаватели КАК T2 ПО T1.ссылка = T2.сотрудник ГДЕ T2.кабинет = ""DRE 102"""
3283;SELECT T1.crs_code FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN student AS T3 ON T3.stu_num  =  T2.stu_num WHERE T3.stu_lname  =  'Smithson';"ВЫБРАТЬ T1.кодкурса ИЗ справочник.группы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.записиопосещении КАК T2 ПО T1.ссылка = T2.группа ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК T3 ПО T3.ссылка = T2.студент ГДЕ T3.фамилия = ""Smithson"""
3284;SELECT T1.crs_code FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN student AS T3 ON T3.stu_num  =  T2.stu_num WHERE T3.stu_lname  =  'Smithson';"ВЫБРАТЬ T1.кодкурса ИЗ справочник.группы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.записиопосещении КАК T2 ПО T1.ссылка = T2.группа ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК T3 ПО T3.ссылка = T2.студент ГДЕ T3.фамилия = ""Smithson"""
3285;SELECT T4.crs_description ,  T4.crs_credit FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN student AS T3 ON T3.stu_num  =  T2.stu_num JOIN course AS T4 ON T4.crs_code  =  T1.crs_code WHERE T3.stu_lname  =  'Smithson';"ВЫБРАТЬ T4.описание , T4.кредиты ИЗ справочник.группы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.записиопосещении КАК T2 ПО T1.ссылка = T2.группа ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК T3 ПО T3.ссылка = T2.студент ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.курсы КАК T4 ПО T4.код = T1.кодкурса ГДЕ T3.фамилия = ""Smithson"""
3286;SELECT T4.crs_description ,  T4.crs_credit FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN student AS T3 ON T3.stu_num  =  T2.stu_num JOIN course AS T4 ON T4.crs_code  =  T1.crs_code WHERE T3.stu_lname  =  'Smithson';"ВЫБРАТЬ T4.описание , T4.кредиты ИЗ справочник.группы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.записиопосещении КАК T2 ПО T1.ссылка = T2.группа ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК T3 ПО T3.ссылка = T2.студент ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.курсы КАК T4 ПО T4.код = T1.кодкурса ГДЕ T3.фамилия = ""Smithson"""
3287;SELECT count(*) FROM professor WHERE prof_high_degree  =  'Ph.D.' OR prof_high_degree  =  'MA';"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.преподаватели ГДЕ ученаястепень = ""Ph.D."" ИЛИ ученаястепень = ""MA"""
3288;SELECT count(*) FROM professor WHERE prof_high_degree  =  'Ph.D.' OR prof_high_degree  =  'MA';"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.преподаватели ГДЕ ученаястепень = ""Ph.D."" ИЛИ ученаястепень = ""MA"""
3289;SELECT count(*) FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code WHERE T2.dept_name  =  'Accounting' OR T2.dept_name  =  'Biology';"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.преподаватели КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.факультеты КАК T2 ПО T1.факультет = T2.код ГДЕ T2.наименование = ""Accounting"" ИЛИ T2.наименование = ""Biology"""
3290;SELECT count(*) FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code WHERE T2.dept_name  =  'Accounting' OR T2.dept_name  =  'Biology';"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.преподаватели КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.факультеты КАК T2 ПО T1.факультет = T2.код ГДЕ T2.наименование = ""Accounting"" ИЛИ T2.наименование = ""Biology"""
3295;SELECT avg(T2.stu_gpa) FROM enroll AS T1 JOIN student AS T2 ON T1.stu_num  =  T2.stu_num JOIN CLASS AS T3 ON T1.class_code  =  T3.class_code WHERE T3.crs_code  =  'ACCT-211';"ВЫБРАТЬ СРЕДНЕЕ(T2.среднийбалл) ИЗ регистрсведений.записиопосещении КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК T2 ПО T1.студент = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.группы КАК T3 ПО T1.группа = T3.ссылка ГДЕ T3.кодкурса = ""ACCT-211"""
3296;SELECT avg(T2.stu_gpa) FROM enroll AS T1 JOIN student AS T2 ON T1.stu_num  =  T2.stu_num JOIN CLASS AS T3 ON T1.class_code  =  T3.class_code WHERE T3.crs_code  =  'ACCT-211';"ВЫБРАТЬ СРЕДНЕЕ(T2.среднийбалл) ИЗ регистрсведений.записиопосещении КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК T2 ПО T1.студент = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.группы КАК T3 ПО T1.группа = T3.ссылка ГДЕ T3.кодкурса = ""ACCT-211"""
3297;SELECT stu_gpa ,  stu_phone ,  stu_fname FROM student ORDER BY stu_gpa DESC LIMIT 5;ВЫБРАТЬ ПЕРВЫЕ 5 среднийбалл , телефон , имя ИЗ справочник.студенты УПОРЯДОЧИТЬ ПО среднийбалл УБЫВ
3298;SELECT stu_gpa ,  stu_phone ,  stu_fname FROM student ORDER BY stu_gpa DESC LIMIT 5;ВЫБРАТЬ ПЕРВЫЕ 5 среднийбалл , телефон , имя ИЗ справочник.студенты УПОРЯДОЧИТЬ ПО среднийбалл УБЫВ
3299;SELECT T2.dept_name FROM student AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code ORDER BY stu_gpa LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.наименование ИЗ справочник.студенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.факультеты КАК T2 ПО T1.факультет = T2.код УПОРЯДОЧИТЬ ПО stu_gpa
3300;SELECT T2.dept_name FROM student AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code ORDER BY stu_gpa LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.наименование ИЗ справочник.студенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.факультеты КАК T2 ПО T1.факультет = T2.код УПОРЯДОЧИТЬ ПО stu_gpa
3301;SELECT stu_fname ,  stu_gpa FROM student WHERE stu_gpa  <  (SELECT avg(stu_gpa) FROM student);ВЫБРАТЬ stu_fname , stu_gpa ИЗ справочник.студенты ГДЕ stu_gpa < (ВЫБРАТЬ СРЕДНЕЕ(stu_gpa) ИЗ справочник.студенты)
3302;SELECT stu_fname ,  stu_gpa FROM student WHERE stu_gpa  <  (SELECT avg(stu_gpa) FROM student);ВЫБРАТЬ stu_fname , stu_gpa ИЗ справочник.студенты ГДЕ stu_gpa < (ВЫБРАТЬ СРЕДНЕЕ(stu_gpa) ИЗ справочник.студенты)
3303;SELECT T2.dept_name ,  T2.dept_address FROM student AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.dept_code ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.наименование , T2.адрес ИЗ справочник.студенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.факультеты КАК T2 ПО T1.факультет = T2.код СГРУППИРОВАТЬ ПО T1.факультет УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
3304;SELECT T2.dept_name ,  T2.dept_address FROM student AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.dept_code ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.наименование , T2.адрес ИЗ справочник.студенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.факультеты КАК T2 ПО T1.факультет = T2.код СГРУППИРОВАТЬ ПО T1.факультет УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
3305;SELECT T2.dept_name ,  T2.dept_address ,  count(*) FROM student AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.dept_code ORDER BY count(*) DESC LIMIT 3;ВЫБРАТЬ ПЕРВЫЕ 3 T2.наименование , T2.адрес , КОЛИЧЕСТВО(*) ИЗ справочник.студенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.факультеты КАК T2 ПО T1.факультет = T2.код СГРУППИРОВАТЬ ПО T1.факультет УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
3306;SELECT T2.dept_name ,  T2.dept_address ,  count(*) FROM student AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.dept_code ORDER BY count(*) DESC LIMIT 3;ВЫБРАТЬ ПЕРВЫЕ 3 T2.наименование , T2.адрес , КОЛИЧЕСТВО(*) ИЗ справочник.студенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.факультеты КАК T2 ПО T1.факультет = T2.код СГРУППИРОВАТЬ ПО T1.факультет УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
3307;SELECT T1.emp_fname ,  T2.prof_office FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num  =  T2.emp_num JOIN department AS T3 ON T3.dept_code  =  T2.dept_code WHERE T3.dept_name  =  'History' AND T2.prof_high_degree  =  'Ph.D.';"ВЫБРАТЬ T1.имя , T2.кабинет ИЗ справочник.сотрудники КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.преподаватели КАК T2 ПО T1.ссылка = T2.сотрудник ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.факультеты КАК T3 ПО T3.код = T2.факультет ГДЕ T3.наименование = ""History"" И T2.ученаястепень = ""Ph.D."""
3308;SELECT T1.emp_fname ,  T2.prof_office FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num  =  T2.emp_num JOIN department AS T3 ON T3.dept_code  =  T2.dept_code WHERE T3.dept_name  =  'History' AND T2.prof_high_degree  =  'Ph.D.';"ВЫБРАТЬ T1.имя , T2.кабинет ИЗ справочник.сотрудники КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.преподаватели КАК T2 ПО T1.ссылка = T2.сотрудник ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.факультеты КАК T3 ПО T3.код = T2.факультет ГДЕ T3.наименование = ""History"" И T2.ученаястепень = ""Ph.D."""
3309;SELECT T2.emp_fname ,  T1.crs_code FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num;ВЫБРАТЬ T2.имя , T1.кодкурса ИЗ справочник.группы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сотрудники КАК T2 ПО T1.преподаватель = T2.ссылка
3310;SELECT T2.emp_fname ,  T1.crs_code FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num;ВЫБРАТЬ T2.имя , T1.кодкурса ИЗ справочник.группы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сотрудники КАК T2 ПО T1.преподаватель = T2.ссылка
3311;SELECT T2.emp_fname ,  T3.crs_description FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN course AS T3 ON T1.crs_code  =  T3.crs_code;ВЫБРАТЬ T2.имя , T3.описание ИЗ справочник.группы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сотрудники КАК T2 ПО T1.преподаватель = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.курсы КАК T3 ПО T1.кодкурса = T3.код
3312;SELECT T2.emp_fname ,  T3.crs_description FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN course AS T3 ON T1.crs_code  =  T3.crs_code;ВЫБРАТЬ T2.имя , T3.описание ИЗ справочник.группы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сотрудники КАК T2 ПО T1.преподаватель = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.курсы КАК T3 ПО T1.кодкурса = T3.код
3313;SELECT T2.emp_fname ,  T4.prof_office ,  T3.crs_description FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN course AS T3 ON T1.crs_code  =  T3.crs_code JOIN professor AS T4 ON T2.emp_num  =  T4.emp_num;ВЫБРАТЬ T2.имя , T4.кабинет , T3.описание ИЗ справочник.группы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сотрудники КАК T2 ПО T1.преподаватель = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.курсы КАК T3 ПО T1.кодкурса = T3.код ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.преподаватели КАК T4 ПО T2.ссылка = T4.сотрудник
3314;SELECT T2.emp_fname ,  T4.prof_office ,  T3.crs_description FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN course AS T3 ON T1.crs_code  =  T3.crs_code JOIN professor AS T4 ON T2.emp_num  =  T4.emp_num;ВЫБРАТЬ T2.имя , T4.кабинет , T3.описание ИЗ справочник.группы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сотрудники КАК T2 ПО T1.преподаватель = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.курсы КАК T3 ПО T1.кодкурса = T3.код ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.преподаватели КАК T4 ПО T2.ссылка = T4.сотрудник
3315;SELECT T2.emp_fname ,  T4.prof_office ,  T3.crs_description ,  T5.dept_name FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN course AS T3 ON T1.crs_code  =  T3.crs_code JOIN professor AS T4 ON T2.emp_num  =  T4.emp_num JOIN department AS T5 ON T4.dept_code  =  T5.dept_code;ВЫБРАТЬ T2.имя , T4.кабинет , T3.описание , T5.наименование ИЗ справочник.группы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сотрудники КАК T2 ПО T1.преподаватель = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.курсы КАК T3 ПО T1.кодкурса = T3.код ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.преподаватели КАК T4 ПО T2.ссылка = T4.сотрудник ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.факультеты КАК T5 ПО T4.факультет = T5.код
3316;SELECT T2.emp_fname ,  T4.prof_office ,  T3.crs_description ,  T5.dept_name FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN course AS T3 ON T1.crs_code  =  T3.crs_code JOIN professor AS T4 ON T2.emp_num  =  T4.emp_num JOIN department AS T5 ON T4.dept_code  =  T5.dept_code;ВЫБРАТЬ T2.имя , T4.кабинет , T3.описание , T5.наименование ИЗ справочник.группы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сотрудники КАК T2 ПО T1.преподаватель = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.курсы КАК T3 ПО T1.кодкурса = T3.код ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.преподаватели КАК T4 ПО T2.ссылка = T4.сотрудник ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.факультеты КАК T5 ПО T4.факультет = T5.код
3317;SELECT T1.stu_fname ,  T1.stu_lname ,  T4.crs_description FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num JOIN CLASS AS T3 ON T2.class_code  =  T3.class_code JOIN course AS T4 ON T3.crs_code  =  T4.crs_code;ВЫБРАТЬ T1.имя , T1.фамилия , T4.описание ИЗ справочник.студенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.записиопосещении КАК T2 ПО T1.ссылка = T2.студент ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.группы КАК T3 ПО T2.группа = T3.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.курсы КАК T4 ПО T3.кодкурса = T4.код
3318;SELECT T1.stu_fname ,  T1.stu_lname ,  T4.crs_description FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num JOIN CLASS AS T3 ON T2.class_code  =  T3.class_code JOIN course AS T4 ON T3.crs_code  =  T4.crs_code;ВЫБРАТЬ T1.имя , T1.фамилия , T4.описание ИЗ справочник.студенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.записиопосещении КАК T2 ПО T1.ссылка = T2.студент ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.группы КАК T3 ПО T2.группа = T3.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.курсы КАК T4 ПО T3.кодкурса = T4.код
3319;SELECT T1.stu_fname ,  T1.stu_lname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num WHERE T2.enroll_grade  =  'C' OR T2.enroll_grade  =  'A';"ВЫБРАТЬ T1.имя , T1.фамилия ИЗ справочник.студенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.записиопосещении КАК T2 ПО T1.ссылка = T2.студент ГДЕ T2.оценка = ""C"" ИЛИ T2.оценка = ""A"""
3320;SELECT T1.stu_fname ,  T1.stu_lname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num WHERE T2.enroll_grade  =  'C' OR T2.enroll_grade  =  'A';"ВЫБРАТЬ T1.имя , T1.фамилия ИЗ справочник.студенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.записиопосещении КАК T2 ПО T1.ссылка = T2.студент ГДЕ T2.оценка = ""C"" ИЛИ T2.оценка = ""A"""
3321;SELECT T2.emp_fname ,  T1.class_room FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN professor AS T3 ON T2.emp_num  =  T3.emp_num JOIN department AS T4 ON T4.dept_code  =  T3.dept_code WHERE T4.dept_name  =  'Accounting';"ВЫБРАТЬ T2.имя , T1.аудитория ИЗ справочник.группы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сотрудники КАК T2 ПО T1.преподаватель = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.преподаватели КАК T3 ПО T2.ссылка = T3.сотрудник ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.факультеты КАК T4 ПО T4.код = T3.факультет ГДЕ T4.наименование = ""Accounting"""
3322;SELECT T2.emp_fname ,  T1.class_room FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN professor AS T3 ON T2.emp_num  =  T3.emp_num JOIN department AS T4 ON T4.dept_code  =  T3.dept_code WHERE T4.dept_name  =  'Accounting';"ВЫБРАТЬ T2.имя , T1.аудитория ИЗ справочник.группы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сотрудники КАК T2 ПО T1.преподаватель = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.преподаватели КАК T3 ПО T2.ссылка = T3.сотрудник ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.факультеты КАК T4 ПО T4.код = T3.факультет ГДЕ T4.наименование = ""Accounting"""
3323;SELECT DISTINCT T2.emp_fname ,  T3.prof_high_degree FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN professor AS T3 ON T2.emp_num  =  T3.emp_num JOIN department AS T4 ON T4.dept_code  =  T3.dept_code WHERE T4.dept_name  =  'Computer Info. Systems';"ВЫБРАТЬ РАЗЛИЧНЫЕ T2.имя , T3.ученаястепень ИЗ справочник.группы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сотрудники КАК T2 ПО T1.преподаватель = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.преподаватели КАК T3 ПО T2.ссылка = T3.сотрудник ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.факультеты КАК T4 ПО T4.код = T3.факультет ГДЕ T4.наименование = ""Computer Info. Systems"""
3324;SELECT DISTINCT T2.emp_fname ,  T3.prof_high_degree FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN professor AS T3 ON T2.emp_num  =  T3.emp_num JOIN department AS T4 ON T4.dept_code  =  T3.dept_code WHERE T4.dept_name  =  'Computer Info. Systems';"ВЫБРАТЬ РАЗЛИЧНЫЕ T2.имя , T3.ученаястепень ИЗ справочник.группы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сотрудники КАК T2 ПО T1.преподаватель = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.преподаватели КАК T3 ПО T2.ссылка = T3.сотрудник ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.факультеты КАК T4 ПО T4.код = T3.факультет ГДЕ T4.наименование = ""Computer Info. Systems"""
3325;SELECT T1.stu_lname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num WHERE T2.enroll_grade  =  'A' AND T2.class_code  =  10018;"ВЫБРАТЬ T1.фамилия ИЗ справочник.студенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.записиопосещении КАК T2 ПО T1.ссылка = T2.студент ГДЕ T2.оценка = ""A"" И T2.группа = 10018"
3326;SELECT T1.stu_lname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num WHERE T2.enroll_grade  =  'A' AND T2.class_code  =  10018;"ВЫБРАТЬ T1.фамилия ИЗ справочник.студенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.записиопосещении КАК T2 ПО T1.ссылка = T2.студент ГДЕ T2.оценка = ""A"" И T2.группа = 10018"
3327;SELECT T2.emp_fname ,  T1.prof_office FROM professor AS T1 JOIN employee AS T2 ON T1.emp_num  =  T2.emp_num JOIN department AS T3 ON T1.dept_code  =  T3.dept_code WHERE T3.dept_name  =  'History' AND T1.prof_high_degree != 'Ph.D.';"ВЫБРАТЬ T2.имя , T1.кабинет ИЗ справочник.преподаватели КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сотрудники КАК T2 ПО T1.сотрудник = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.факультеты КАК T3 ПО T1.факультет = T3.код ГДЕ T3.наименование = ""History"" И T1.ученаястепень <> ""Ph.D."""
3328;SELECT T2.emp_fname ,  T1.prof_office FROM professor AS T1 JOIN employee AS T2 ON T1.emp_num  =  T2.emp_num JOIN department AS T3 ON T1.dept_code  =  T3.dept_code WHERE T3.dept_name  =  'History' AND T1.prof_high_degree != 'Ph.D.';"ВЫБРАТЬ T2.имя , T1.кабинет ИЗ справочник.преподаватели КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сотрудники КАК T2 ПО T1.сотрудник = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.факультеты КАК T3 ПО T1.факультет = T3.код ГДЕ T3.наименование = ""History"" И T1.ученаястепень <> ""Ph.D."""
3329;SELECT T2.emp_fname FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num GROUP BY T1.prof_num HAVING count(*)  >  1;ВЫБРАТЬ T2.имя ИЗ справочник.группы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сотрудники КАК T2 ПО T1.преподаватель = T2.ссылка СГРУППИРОВАТЬ ПО T1.преподаватель ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 1
3330;SELECT T2.emp_fname FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num GROUP BY T1.prof_num HAVING count(*)  >  1;ВЫБРАТЬ T2.имя ИЗ справочник.группы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сотрудники КАК T2 ПО T1.преподаватель = T2.ссылка СГРУППИРОВАТЬ ПО T1.преподаватель ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 1
3331;SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num GROUP BY T2.stu_num HAVING count(*)  =  1;ВЫБРАТЬ T1.имя ИЗ справочник.студенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.записиопосещении КАК T2 ПО T1.ссылка = T2.студент СГРУППИРОВАТЬ ПО T2.студент ИМЕЮЩИЕ КОЛИЧЕСТВО(*) = 1
3332;SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num GROUP BY T2.stu_num HAVING count(*)  =  1;ВЫБРАТЬ T1.имя ИЗ справочник.студенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.записиопосещении КАК T2 ПО T1.ссылка = T2.студент СГРУППИРОВАТЬ ПО T2.студент ИМЕЮЩИЕ КОЛИЧЕСТВО(*) = 1
3333;SELECT T2.dept_name FROM course AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code WHERE T1.crs_description LIKE '%Statistics%';"ВЫБРАТЬ T2.наименование ИЗ справочник.курсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.факультеты КАК T2 ПО T1.кодфакультета = T2.код ГДЕ T1.описание ПОДОБНО ""%Statistics%"""
3334;SELECT T2.dept_name FROM course AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code WHERE T1.crs_description LIKE '%Statistics%';"ВЫБРАТЬ T2.наименование ИЗ справочник.курсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.факультеты КАК T2 ПО T1.кодфакультета = T2.код ГДЕ T1.описание ПОДОБНО ""%Statistics%"""
3335;SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num JOIN CLASS AS T3 ON T2.class_code  =  T3.class_code WHERE T3.crs_code  =  'ACCT-211' AND T1.stu_lname LIKE 'S%';"ВЫБРАТЬ T1.имя ИЗ справочник.студенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.записиопосещении КАК T2 ПО T1.ссылка = T2.студент ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.группы КАК T3 ПО T2.группа = T3.ссылка ГДЕ T3.кодкурса = ""ACCT-211"" И T1.фамилия ПОДОБНО ""S%"""
3336;SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num JOIN CLASS AS T3 ON T2.class_code  =  T3.class_code WHERE T3.crs_code  =  'ACCT-211' AND T1.stu_lname LIKE 'S%';"ВЫБРАТЬ T1.имя ИЗ справочник.студенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.записиопосещении КАК T2 ПО T1.ссылка = T2.студент ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.группы КАК T3 ПО T2.группа = T3.ссылка ГДЕ T3.кодкурса = ""ACCT-211"" И T1.фамилия ПОДОБНО ""S%"""
3337;SELECT count(*) FROM club;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.клубы
3338;SELECT count(*) FROM club;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.клубы
3339;SELECT DISTINCT Region FROM club ORDER BY Region ASC;ВЫБРАТЬ РАЗЛИЧНЫЕ регион ИЗ справочник.клубы УПОРЯДОЧИТЬ ПО регион ВОЗР
3340;SELECT DISTINCT Region FROM club ORDER BY Region ASC;ВЫБРАТЬ РАЗЛИЧНЫЕ регион ИЗ справочник.клубы УПОРЯДОЧИТЬ ПО регион ВОЗР
3341;SELECT avg(Gold) FROM club_rank;ВЫБРАТЬ СРЕДНЕЕ(золото) ИЗ регистрсведений.рейтингклубов
3342;SELECT avg(Gold) FROM club_rank;ВЫБРАТЬ СРЕДНЕЕ(золото) ИЗ регистрсведений.рейтингклубов
3343;SELECT Competition_type ,  Country FROM competition;ВЫБРАТЬ типсоревнования , страна ИЗ справочник.соревнования
3344;SELECT Competition_type ,  Country FROM competition;ВЫБРАТЬ типсоревнования , страна ИЗ справочник.соревнования
3345;"SELECT DISTINCT YEAR FROM competition WHERE Competition_type != ""Tournament""";"ВЫБРАТЬ РАЗЛИЧНЫЕ год ИЗ справочник.соревнования ГДЕ типсоревнования <> ""Tournament"""
3346;"SELECT DISTINCT YEAR FROM competition WHERE Competition_type != ""Tournament""";"ВЫБРАТЬ РАЗЛИЧНЫЕ год ИЗ справочник.соревнования ГДЕ типсоревнования <> ""Tournament"""
3347;SELECT max(Silver) ,  min(Silver) FROM club_rank;ВЫБРАТЬ МАКСИМУМ(серебро) , МИНИМУМ(серебро) ИЗ регистрсведений.рейтингклубов
3348;SELECT max(Silver) ,  min(Silver) FROM club_rank;ВЫБРАТЬ МАКСИМУМ(серебро) , МИНИМУМ(серебро) ИЗ регистрсведений.рейтингклубов
3349;SELECT count(*) FROM club_rank WHERE Total  <  10;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.рейтингклубов ГДЕ всего < 10
3350;SELECT count(*) FROM club_rank WHERE Total  <  10;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.рейтингклубов ГДЕ всего < 10
3351;SELECT name FROM club ORDER BY Start_year ASC;ВЫБРАТЬ наименование ИЗ справочник.клубы УПОРЯДОЧИТЬ ПО годоснования ВОЗР
3352;SELECT name FROM club ORDER BY Start_year ASC;ВЫБРАТЬ наименование ИЗ справочник.клубы УПОРЯДОЧИТЬ ПО годоснования ВОЗР
3353;SELECT name FROM club ORDER BY name DESC;ВЫБРАТЬ наименование ИЗ справочник.клубы УПОРЯДОЧИТЬ ПО наименование УБЫВ
3354;SELECT name FROM club ORDER BY name DESC;ВЫБРАТЬ наименование ИЗ справочник.клубы УПОРЯДОЧИТЬ ПО наименование УБЫВ
3355;SELECT T1.name ,  T2.Player_id FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID;ВЫБРАТЬ T1.наименование , T2.ссылка ИЗ справочник.клубы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.игроки КАК T2 ПО T1.ссылка = T2.клуб
3356;SELECT T1.name ,  T2.Player_id FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID;ВЫБРАТЬ T1.наименование , T2.ссылка ИЗ справочник.клубы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.игроки КАК T2 ПО T1.ссылка = T2.клуб
3357;"SELECT T1.name FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID WHERE T2.Position  =  ""Right Wing""";"ВЫБРАТЬ T1.наименование ИЗ справочник.клубы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.игроки КАК T2 ПО T1.ссылка = T2.клуб ГДЕ T2.позиция = ""Right Wing"""
3358;"SELECT T1.name FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID WHERE T2.Position  =  ""Right Wing""";"ВЫБРАТЬ T1.наименование ИЗ справочник.клубы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.игроки КАК T2 ПО T1.ссылка = T2.клуб ГДЕ T2.позиция = ""Right Wing"""
3359;"SELECT avg(T2.Points) FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID WHERE T1.name  =  ""AIB""";"ВЫБРАТЬ СРЕДНЕЕ(T2.очки) ИЗ справочник.клубы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.игроки КАК T2 ПО T1.ссылка = T2.клуб ГДЕ T1.наименование = ""AIB"""
3360;"SELECT avg(T2.Points) FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID WHERE T1.name  =  ""AIB""";"ВЫБРАТЬ СРЕДНЕЕ(T2.очки) ИЗ справочник.клубы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.игроки КАК T2 ПО T1.ссылка = T2.клуб ГДЕ T1.наименование = ""AIB"""
3361;SELECT POSITION ,  avg(Points) FROM player GROUP BY POSITION;ВЫБРАТЬ позиция , СРЕДНЕЕ(очки) ИЗ справочник.игроки СГРУППИРОВАТЬ ПО позиция
3362;SELECT POSITION ,  avg(Points) FROM player GROUP BY POSITION;ВЫБРАТЬ позиция , СРЕДНЕЕ(очки) ИЗ справочник.игроки СГРУППИРОВАТЬ ПО позиция
3363;SELECT POSITION FROM player GROUP BY name HAVING avg(Points)  >=  20;ВЫБРАТЬ позиция ИЗ справочник.игроки СГРУППИРОВАТЬ ПО наименование ИМЕЮЩИЕ СРЕДНЕЕ(очки) >= 20
3364;SELECT POSITION FROM player GROUP BY name HAVING avg(Points)  >=  20;ВЫБРАТЬ позиция ИЗ справочник.игроки СГРУППИРОВАТЬ ПО наименование ИМЕЮЩИЕ СРЕДНЕЕ(очки) >= 20
3365;SELECT Competition_type ,  COUNT(*) FROM competition GROUP BY Competition_type;ВЫБРАТЬ типсоревнования , КОЛИЧЕСТВО(*) ИЗ справочник.соревнования СГРУППИРОВАТЬ ПО типсоревнования
3366;SELECT Competition_type ,  COUNT(*) FROM competition GROUP BY Competition_type;ВЫБРАТЬ типсоревнования , КОЛИЧЕСТВО(*) ИЗ справочник.соревнования СГРУППИРОВАТЬ ПО типсоревнования
3367;SELECT Competition_type FROM competition GROUP BY Competition_type ORDER BY COUNT(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 типсоревнования ИЗ справочник.соревнования СГРУППИРОВАТЬ ПО типсоревнования УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
3368;SELECT Competition_type FROM competition GROUP BY Competition_type ORDER BY COUNT(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 типсоревнования ИЗ справочник.соревнования СГРУППИРОВАТЬ ПО типсоревнования УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
3369;SELECT Competition_type FROM competition GROUP BY Competition_type HAVING COUNT(*)  <=  5;ВЫБРАТЬ типсоревнования ИЗ справочник.соревнования СГРУППИРОВАТЬ ПО типсоревнования ИМЕЮЩИЕ КОЛИЧЕСТВО(*) <= 5
3370;SELECT Competition_type FROM competition GROUP BY Competition_type HAVING COUNT(*)  <=  5;ВЫБРАТЬ типсоревнования ИЗ справочник.соревнования СГРУППИРОВАТЬ ПО типсоревнования ИМЕЮЩИЕ КОЛИЧЕСТВО(*) <= 5
3371;SELECT name FROM CLub WHERE Club_ID NOT IN (SELECT Club_ID FROM player);ВЫБРАТЬ name ИЗ справочник.клубы ГДЕ Club_ID НЕ В (ВЫБРАТЬ Club_ID ИЗ справочник.игроки)
3372;SELECT name FROM CLub WHERE Club_ID NOT IN (SELECT Club_ID FROM player);ВЫБРАТЬ name ИЗ справочник.клубы ГДЕ Club_ID НЕ В (ВЫБРАТЬ Club_ID ИЗ справочник.игроки)
3375;SELECT sum(Points) FROM player;ВЫБРАТЬ СУММА(очки) ИЗ справочник.игроки
3376;SELECT sum(Points) FROM player;ВЫБРАТЬ СУММА(очки) ИЗ справочник.игроки
3377;SELECT count(DISTINCT POSITION) FROM player;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ позиция) ИЗ справочник.игроки
3378;SELECT count(DISTINCT POSITION) FROM player;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ позиция) ИЗ справочник.игроки
3379;SELECT name FROM player WHERE points  >  (SELECT avg(points) FROM player);ВЫБРАТЬ name ИЗ справочник.игроки ГДЕ points > (ВЫБРАТЬ СРЕДНЕЕ(points) ИЗ справочник.игроки)
3380;SELECT name FROM player WHERE points  >  (SELECT avg(points) FROM player);ВЫБРАТЬ name ИЗ справочник.игроки ГДЕ points > (ВЫБРАТЬ СРЕДНЕЕ(points) ИЗ справочник.игроки)
3381;SELECT count(*) ,  POSITION FROM player WHERE points  <  30 GROUP BY POSITION;ВЫБРАТЬ КОЛИЧЕСТВО(*) , позиция ИЗ справочник.игроки ГДЕ очки < 30 СГРУППИРОВАТЬ ПО позиция
3382;SELECT count(*) ,  POSITION FROM player WHERE points  <  30 GROUP BY POSITION;ВЫБРАТЬ КОЛИЧЕСТВО(*) , позиция ИЗ справочник.игроки ГДЕ очки < 30 СГРУППИРОВАТЬ ПО позиция
3383;SELECT country FROM competition WHERE competition_type  =  'Tournament' GROUP BY country ORDER BY count(*) DESC LIMIT 1;"ВЫБРАТЬ ПЕРВЫЕ 1 страна ИЗ справочник.соревнования ГДЕ типсоревнования = ""Tournament"" СГРУППИРОВАТЬ ПО страна УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ"
3384;SELECT country FROM competition WHERE competition_type  =  'Tournament' GROUP BY country ORDER BY count(*) DESC LIMIT 1;"ВЫБРАТЬ ПЕРВЫЕ 1 страна ИЗ справочник.соревнования ГДЕ типсоревнования = ""Tournament"" СГРУППИРОВАТЬ ПО страна УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ"
3389;SELECT sum(num_of_component) FROM furniture;ВЫБРАТЬ СУММА(количествокомпонентов) ИЗ справочник.мебель
3390;SELECT name ,  furniture_id FROM furniture ORDER BY market_rate DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование , ссылка ИЗ справочник.мебель УПОРЯДОЧИТЬ ПО рыночнаяцена УБЫВ
3391;SELECT sum(market_rate) FROM furniture ORDER BY market_rate DESC LIMIT 2;ВЫБРАТЬ ПЕРВЫЕ 2 СУММА(рыночнаяцена) ИЗ справочник.мебель УПОРЯДОЧИТЬ ПО рыночнаяцена УБЫВ
3392;SELECT Num_of_Component ,  name FROM furniture WHERE Num_of_Component  >  10;ВЫБРАТЬ количествокомпонентов , наименование ИЗ справочник.мебель ГДЕ количествокомпонентов > 10
3393;SELECT name ,  Num_of_Component FROM furniture ORDER BY market_rate LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование , количествокомпонентов ИЗ справочник.мебель УПОРЯДОЧИТЬ ПО рыночнаяцена
3394;SELECT t1.name FROM furniture AS t1 JOIN furniture_manufacte AS t2 ON t1.Furniture_ID  =  t2.Furniture_ID WHERE t2.Price_in_Dollar  <  (SELECT max(Price_in_Dollar) FROM furniture_manufacte);ВЫБРАТЬ t1.наименование ИЗ справочник.мебель КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.изготовлениемебели КАК t2 ПО t1.ссылка = t2.мебель ГДЕ t2.ценавдолларах < (ВЫБРАТЬ МАКСИМУМ(Price_in_Dollar) ИЗ регистрсведений.изготовлениемебели)
3395;SELECT open_year ,  name FROM manufacturer ORDER BY num_of_shops DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 годоткрытия , наименование ИЗ справочник.производители УПОРЯДОЧИТЬ ПО количествомагазинов УБЫВ
3396;SELECT avg(Num_of_Factories) FROM manufacturer WHERE num_of_shops  >  20;ВЫБРАТЬ СРЕДНЕЕ(количествозаводов) ИЗ справочник.производители ГДЕ количествомагазинов > 20
3397;SELECT name ,  manufacturer_id FROM manufacturer ORDER BY open_year;ВЫБРАТЬ наименование , ссылка ИЗ справочник.производители УПОРЯДОЧИТЬ ПО годоткрытия
3398;SELECT name ,  open_year FROM manufacturer WHERE num_of_shops  >  10 OR Num_of_Factories  <  10;ВЫБРАТЬ наименование , годоткрытия ИЗ справочник.производители ГДЕ количествомагазинов > 10 ИЛИ количествозаводов < 10
3399;SELECT max(num_of_shops) ,  avg(Num_of_Factories) FROM manufacturer WHERE open_year  <  1990;ВЫБРАТЬ МАКСИМУМ(количествомагазинов) , СРЕДНЕЕ(количествозаводов) ИЗ справочник.производители ГДЕ годоткрытия < 1990
3400;SELECT t1.manufacturer_id ,  t1.num_of_shops FROM manufacturer AS t1 JOIN furniture_manufacte AS t2 ON t1.manufacturer_id  =  t2.manufacturer_id ORDER BY t2.Price_in_Dollar DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 t1.ссылка , t1.количествомагазинов ИЗ справочник.производители КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.изготовлениемебели КАК t2 ПО t1.ссылка = t2.производитель УПОРЯДОЧИТЬ ПО t2.ценавдолларах УБЫВ
3401;SELECT count(*) ,  t1.name FROM manufacturer AS t1 JOIN furniture_manufacte AS t2 ON t1.manufacturer_id  =  t2.manufacturer_id GROUP BY t1.manufacturer_id;ВЫБРАТЬ КОЛИЧЕСТВО(*) , t1.наименование ИЗ справочник.производители КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.изготовлениемебели КАК t2 ПО t1.ссылка = t2.производитель СГРУППИРОВАТЬ ПО t1.ссылка
3402;SELECT t1.name ,  t2.price_in_dollar FROM furniture AS t1 JOIN furniture_manufacte AS t2 ON t1.Furniture_ID  =  t2.Furniture_ID;ВЫБРАТЬ t1.наименование , t2.ценавдолларах ИЗ справочник.мебель КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.изготовлениемебели КАК t2 ПО t1.ссылка = t2.мебель
3403;SELECT Market_Rate ,  name FROM furniture WHERE Furniture_ID NOT IN (SELECT Furniture_ID FROM furniture_manufacte);ВЫБРАТЬ Market_Rate , name ИЗ справочник.мебель ГДЕ Furniture_ID НЕ В (ВЫБРАТЬ Furniture_ID ИЗ регистрсведений.изготовлениемебели)
3405;SELECT T1.first_name ,  T2.department_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id;ВЫБРАТЬ T1.имя , T2.наименование ИЗ справочник.сотрудники КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.подразделения КАК T2 ПО T1.подразделение = T2.ссылка
3406;SELECT T1.first_name ,  T2.department_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id;ВЫБРАТЬ T1.имя , T2.наименование ИЗ справочник.сотрудники КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.подразделения КАК T2 ПО T1.подразделение = T2.ссылка
3407;SELECT first_name ,  last_name ,  salary FROM employees WHERE salary  <  6000;ВЫБРАТЬ имя , фамилия , оклад ИЗ справочник.сотрудники ГДЕ оклад < 6000
3408;SELECT first_name ,  last_name ,  salary FROM employees WHERE salary  <  6000;ВЫБРАТЬ имя , фамилия , оклад ИЗ справочник.сотрудники ГДЕ оклад < 6000
3409;SELECT first_name ,  department_id FROM employees WHERE last_name  =  'McEwen';"ВЫБРАТЬ имя , подразделение ИЗ справочник.сотрудники ГДЕ фамилия = ""McEwen"""
3410;SELECT first_name ,  department_id FROM employees WHERE last_name  =  'McEwen';"ВЫБРАТЬ имя , подразделение ИЗ справочник.сотрудники ГДЕ фамилия = ""McEwen"""
3411;"SELECT * FROM employees WHERE department_id  =  ""null""";"ВЫБРАТЬ * ИЗ справочник.сотрудники ГДЕ подразделение = ""null"""
3412;"SELECT * FROM employees WHERE department_id  =  ""null""";"ВЫБРАТЬ * ИЗ справочник.сотрудники ГДЕ подразделение = ""null"""
3413;SELECT * FROM  departments WHERE department_name  =  'Marketing';"ВЫБРАТЬ * ИЗ справочник.подразделения ГДЕ наименование = ""Marketing"""
3414;SELECT * FROM  departments WHERE department_name  =  'Marketing';"ВЫБРАТЬ * ИЗ справочник.подразделения ГДЕ наименование = ""Marketing"""
3415;SELECT hire_date FROM employees WHERE first_name NOT LIKE '%M%';"ВЫБРАТЬ датанайма ИЗ справочник.сотрудники ГДЕ имя NOT ПОДОБНО ""%M%"""
3416;SELECT hire_date FROM employees WHERE first_name NOT LIKE '%M%';"ВЫБРАТЬ датанайма ИЗ справочник.сотрудники ГДЕ имя NOT ПОДОБНО ""%M%"""
3417;SELECT first_name ,  last_name ,  hire_date ,  salary ,  department_id FROM employees WHERE first_name NOT LIKE '%M%';"ВЫБРАТЬ имя , фамилия , датанайма , оклад , подразделение ИЗ справочник.сотрудники ГДЕ имя NOT ПОДОБНО ""%M%"""
3418;SELECT first_name ,  last_name ,  hire_date ,  salary ,  department_id FROM employees WHERE first_name NOT LIKE '%M%';"ВЫБРАТЬ имя , фамилия , датанайма , оклад , подразделение ИЗ справочник.сотрудники ГДЕ имя NOT ПОДОБНО ""%M%"""
3419;SELECT first_name ,  last_name ,  hire_date ,  salary ,  department_id FROM employees WHERE first_name NOT LIKE '%M%' ORDER BY department_id;"ВЫБРАТЬ имя , фамилия , датанайма , оклад , подразделение ИЗ справочник.сотрудники ГДЕ имя NOT ПОДОБНО ""%M%"" УПОРЯДОЧИТЬ ПО подразделение"
3420;SELECT first_name ,  last_name ,  hire_date ,  salary ,  department_id FROM employees WHERE first_name NOT LIKE '%M%' ORDER BY department_id;"ВЫБРАТЬ имя , фамилия , датанайма , оклад , подразделение ИЗ справочник.сотрудники ГДЕ имя NOT ПОДОБНО ""%M%"" УПОРЯДОЧИТЬ ПО подразделение"
3421;SELECT phone_number FROM employees WHERE salary BETWEEN 8000 AND 12000;ВЫБРАТЬ телефон ИЗ справочник.сотрудники ГДЕ оклад МЕЖДУ 8000 И 12000
3422;SELECT phone_number FROM employees WHERE salary BETWEEN 8000 AND 12000;ВЫБРАТЬ телефон ИЗ справочник.сотрудники ГДЕ оклад МЕЖДУ 8000 И 12000
3423;"SELECT * FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != ""null"" OR  department_id != 40";"ВЫБРАТЬ * ИЗ справочник.сотрудники ГДЕ оклад МЕЖДУ 8000 И 12000 И проценткомиссии <> ""null"" ИЛИ подразделение <> 40"
3424;"SELECT * FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != ""null"" OR  department_id != 40";"ВЫБРАТЬ * ИЗ справочник.сотрудники ГДЕ оклад МЕЖДУ 8000 И 12000 И проценткомиссии <> ""null"" ИЛИ подразделение <> 40"
3425;"SELECT first_name ,  last_name ,  salary FROM  employees WHERE commission_pct  =  ""null""";"ВЫБРАТЬ имя , фамилия , оклад ИЗ справочник.сотрудники ГДЕ проценткомиссии = ""null"""
3426;"SELECT first_name ,  last_name ,  salary FROM  employees WHERE commission_pct  =  ""null""";"ВЫБРАТЬ имя , фамилия , оклад ИЗ справочник.сотрудники ГДЕ проценткомиссии = ""null"""
3427;SELECT first_name ,  last_name ,  salary FROM employees WHERE first_name LIKE '%m';"ВЫБРАТЬ имя , фамилия , оклад ИЗ справочник.сотрудники ГДЕ имя ПОДОБНО ""%m"""
3428;SELECT first_name ,  last_name ,  salary FROM employees WHERE first_name LIKE '%m';"ВЫБРАТЬ имя , фамилия , оклад ИЗ справочник.сотрудники ГДЕ имя ПОДОБНО ""%m"""
3429;SELECT job_id ,  hire_date FROM employees WHERE hire_date BETWEEN '2007-11-05' AND '2009-07-05';"ВЫБРАТЬ должность , датанайма ИЗ справочник.сотрудники ГДЕ датанайма МЕЖДУ ""2007-11-05"" И ""2009-07-05"""
3430;SELECT job_id ,  hire_date FROM employees WHERE hire_date BETWEEN '2007-11-05' AND '2009-07-05';"ВЫБРАТЬ должность , датанайма ИЗ справочник.сотрудники ГДЕ датанайма МЕЖДУ ""2007-11-05"" И ""2009-07-05"""
3431;SELECT first_name ,  last_name FROM employees WHERE department_id  =  70 OR department_id  =  90;ВЫБРАТЬ имя , фамилия ИЗ справочник.сотрудники ГДЕ подразделение = 70 ИЛИ подразделение = 90
3432;SELECT first_name ,  last_name FROM employees WHERE department_id  =  70 OR department_id  =  90;ВЫБРАТЬ имя , фамилия ИЗ справочник.сотрудники ГДЕ подразделение = 70 ИЛИ подразделение = 90
3433;"SELECT salary ,  manager_id FROM employees WHERE manager_id != ""null""";"ВЫБРАТЬ оклад , руководитель ИЗ справочник.сотрудники ГДЕ руководитель <> ""null"""
3434;"SELECT salary ,  manager_id FROM employees WHERE manager_id != ""null""";"ВЫБРАТЬ оклад , руководитель ИЗ справочник.сотрудники ГДЕ руководитель <> ""null"""
3435;SELECT * FROM employees WHERE hire_date  <  '2002-06-21';"ВЫБРАТЬ * ИЗ справочник.сотрудники ГДЕ датанайма < ""2002-06-21"""
3436;SELECT * FROM employees WHERE hire_date  <  '2002-06-21';"ВЫБРАТЬ * ИЗ справочник.сотрудники ГДЕ датанайма < ""2002-06-21"""
3437;SELECT * FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY salary DESC;"ВЫБРАТЬ * ИЗ справочник.сотрудники ГДЕ имя ПОДОБНО ""%D%"" ИЛИ имя ПОДОБНО ""%S%"" УПОРЯДОЧИТЬ ПО оклад УБЫВ"
3438;SELECT * FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY salary DESC;"ВЫБРАТЬ * ИЗ справочник.сотрудники ГДЕ имя ПОДОБНО ""%D%"" ИЛИ имя ПОДОБНО ""%S%"" УПОРЯДОЧИТЬ ПО оклад УБЫВ"
3439;SELECT * FROM employees WHERE hire_date  >  '1987-09-07';"ВЫБРАТЬ * ИЗ справочник.сотрудники ГДЕ датанайма > ""1987-09-07"""
3440;SELECT * FROM employees WHERE hire_date  >  '1987-09-07';"ВЫБРАТЬ * ИЗ справочник.сотрудники ГДЕ датанайма > ""1987-09-07"""
3441;SELECT job_title FROM jobs WHERE min_salary  >  9000;ВЫБРАТЬ наименование ИЗ справочник.должности ГДЕ минимальнаязарплата > 9000
3442;SELECT job_title FROM jobs WHERE min_salary  >  9000;ВЫБРАТЬ наименование ИЗ справочник.должности ГДЕ минимальнаязарплата > 9000
3443;SELECT job_title ,  max_salary - min_salary FROM jobs WHERE max_salary BETWEEN 12000 AND 18000;ВЫБРАТЬ наименование , максимальнаязарплата - минимальнаязарплата ИЗ справочник.должности ГДЕ максимальнаязарплата МЕЖДУ 12000 И 18000
3444;SELECT job_title ,  max_salary - min_salary FROM jobs WHERE max_salary BETWEEN 12000 AND 18000;ВЫБРАТЬ наименование , максимальнаязарплата - минимальнаязарплата ИЗ справочник.должности ГДЕ максимальнаязарплата МЕЖДУ 12000 И 18000
3445;"SELECT email FROM employees WHERE commission_pct  =  ""null"" AND salary BETWEEN 7000 AND 12000 AND department_id = 50";"ВЫБРАТЬ электроннаяпочта ИЗ справочник.сотрудники ГДЕ проценткомиссии = ""null"" И оклад МЕЖДУ 7000 И 12000 И подразделение = 50"
3446;"SELECT email FROM employees WHERE commission_pct  =  ""null"" AND salary BETWEEN 7000 AND 12000 AND department_id = 50";"ВЫБРАТЬ электроннаяпочта ИЗ справочник.сотрудники ГДЕ проценткомиссии = ""null"" И оклад МЕЖДУ 7000 И 12000 И подразделение = 50"
3447;SELECT employee_id ,  MAX(end_date) FROM job_history GROUP BY employee_id;ВЫБРАТЬ сотрудник , MAX(датаокончания) ИЗ регистрсведений.историяработы СГРУППИРОВАТЬ ПО сотрудник
3448;SELECT employee_id ,  MAX(end_date) FROM job_history GROUP BY employee_id;ВЫБРАТЬ сотрудник , MAX(датаокончания) ИЗ регистрсведений.историяработы СГРУППИРОВАТЬ ПО сотрудник
3449;SELECT department_id FROM employees GROUP BY department_id HAVING COUNT(commission_pct) > 10;ВЫБРАТЬ подразделение ИЗ справочник.сотрудники СГРУППИРОВАТЬ ПО подразделение ИМЕЮЩИЕ КОЛИЧЕСТВО(проценткомиссии) > 10
3450;SELECT department_id FROM employees GROUP BY department_id HAVING COUNT(commission_pct) > 10;ВЫБРАТЬ подразделение ИЗ справочник.сотрудники СГРУППИРОВАТЬ ПО подразделение ИМЕЮЩИЕ КОЛИЧЕСТВО(проценткомиссии) > 10
3451;SELECT DISTINCT department_id FROM employees GROUP BY department_id ,  manager_id HAVING COUNT(employee_id)  >= 4;ВЫБРАТЬ РАЗЛИЧНЫЕ подразделение ИЗ справочник.сотрудники СГРУППИРОВАТЬ ПО подразделение , руководитель ИМЕЮЩИЕ КОЛИЧЕСТВО(ссылка) >= 4
3452;SELECT DISTINCT department_id FROM employees GROUP BY department_id ,  manager_id HAVING COUNT(employee_id)  >= 4;ВЫБРАТЬ РАЗЛИЧНЫЕ подразделение ИЗ справочник.сотрудники СГРУППИРОВАТЬ ПО подразделение , руководитель ИМЕЮЩИЕ КОЛИЧЕСТВО(ссылка) >= 4
3453;"SELECT department_id ,  AVG(salary) FROM employees WHERE commission_pct != ""null"" GROUP BY department_id";"ВЫБРАТЬ подразделение , AVG(оклад) ИЗ справочник.сотрудники ГДЕ проценткомиссии <> ""null"" СГРУППИРОВАТЬ ПО подразделение"
3454;"SELECT department_id ,  AVG(salary) FROM employees WHERE commission_pct != ""null"" GROUP BY department_id";"ВЫБРАТЬ подразделение , AVG(оклад) ИЗ справочник.сотрудники ГДЕ проценткомиссии <> ""null"" СГРУППИРОВАТЬ ПО подразделение"
3455;SELECT country_id ,  COUNT(*) FROM locations GROUP BY country_id;ВЫБРАТЬ странасправочник , КОЛИЧЕСТВО(*) ИЗ справочник.местоположения СГРУППИРОВАТЬ ПО странасправочник
3456;SELECT country_id ,  COUNT(*) FROM locations GROUP BY country_id;ВЫБРАТЬ странасправочник , КОЛИЧЕСТВО(*) ИЗ справочник.местоположения СГРУППИРОВАТЬ ПО странасправочник
3457;SELECT job_id FROM job_history WHERE end_date - start_date  > 300 GROUP BY job_id HAVING COUNT(*) >= 2;ВЫБРАТЬ должность ИЗ регистрсведений.историяработы ГДЕ датаокончания - датаначала > 300 СГРУППИРОВАТЬ ПО должность ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
3458;SELECT job_id FROM job_history WHERE end_date - start_date  > 300 GROUP BY job_id HAVING COUNT(*) >= 2;ВЫБРАТЬ должность ИЗ регистрсведений.историяработы ГДЕ датаокончания - датаначала > 300 СГРУППИРОВАТЬ ПО должность ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
3459;SELECT employee_id FROM job_history GROUP BY employee_id HAVING COUNT(*)  >= 2;ВЫБРАТЬ сотрудник ИЗ регистрсведений.историяработы СГРУППИРОВАТЬ ПО сотрудник ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
3460;SELECT employee_id FROM job_history GROUP BY employee_id HAVING COUNT(*)  >= 2;ВЫБРАТЬ сотрудник ИЗ регистрсведений.историяработы СГРУППИРОВАТЬ ПО сотрудник ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
3461;SELECT T1.employee_id ,  T4.country_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id JOIN countries AS T4 ON T3.country_id  =  T4.country_id;ВЫБРАТЬ T1.ссылка , T4.наименование ИЗ справочник.сотрудники КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.подразделения КАК T2 ПО T1.подразделение = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.местоположения КАК T3 ПО T2.местоположение = T3.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.страны КАК T4 ПО T3.странасправочник = T4.ссылка
3462;SELECT T1.employee_id ,  T4.country_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id JOIN countries AS T4 ON T3.country_id  =  T4.country_id;ВЫБРАТЬ T1.ссылка , T4.наименование ИЗ справочник.сотрудники КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.подразделения КАК T2 ПО T1.подразделение = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.местоположения КАК T3 ПО T2.местоположение = T3.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.страны КАК T4 ПО T3.странасправочник = T4.ссылка
3463;SELECT T2.department_name ,  COUNT(*) FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T2.department_name;ВЫБРАТЬ T2.наименование , КОЛИЧЕСТВО(*) ИЗ справочник.сотрудники КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.подразделения КАК T2 ПО T1.подразделение = T2.ссылка СГРУППИРОВАТЬ ПО T2.наименование
3464;SELECT T2.department_name ,  COUNT(*) FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T2.department_name;ВЫБРАТЬ T2.наименование , КОЛИЧЕСТВО(*) ИЗ справочник.сотрудники КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.подразделения КАК T2 ПО T1.подразделение = T2.ссылка СГРУППИРОВАТЬ ПО T2.наименование
3465;SELECT * FROM  job_history AS T1 JOIN employees AS T2 ON T1.employee_id  =  T2.employee_id WHERE T2.salary  >=  12000;ВЫБРАТЬ * ИЗ регистрсведений.историяработы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сотрудники КАК T2 ПО T1.сотрудник = T2.ссылка ГДЕ T2.оклад >= 12000
3466;SELECT * FROM  job_history AS T1 JOIN employees AS T2 ON T1.employee_id  =  T2.employee_id WHERE T2.salary  >=  12000;ВЫБРАТЬ * ИЗ регистрсведений.историяработы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сотрудники КАК T2 ПО T1.сотрудник = T2.ссылка ГДЕ T2.оклад >= 12000
3467;SELECT job_title ,  AVG(salary) FROM employees AS T1 JOIN jobs AS T2 ON T1.job_id  =  T2.job_id GROUP BY T2.job_title;ВЫБРАТЬ job_title , AVG(salary) ИЗ справочник.сотрудники КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.должности КАК T2 ПО T1.должность = T2.код СГРУППИРОВАТЬ ПО T2.наименование
3468;SELECT job_title ,  AVG(salary) FROM employees AS T1 JOIN jobs AS T2 ON T1.job_id  =  T2.job_id GROUP BY T2.job_title;ВЫБРАТЬ job_title , AVG(salary) ИЗ справочник.сотрудники КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.должности КАК T2 ПО T1.должность = T2.код СГРУППИРОВАТЬ ПО T2.наименование
3469;SELECT first_name ,  last_name FROM employees WHERE salary  >  (SELECT salary FROM employees WHERE employee_id = 163 );ВЫБРАТЬ имя , фамилия ИЗ справочник.сотрудники ГДЕ оклад > (ВЫБРАТЬ оклад ИЗ справочник.сотрудники ГДЕ ссылка = 163 )
3470;SELECT first_name ,  last_name FROM employees WHERE salary  >  (SELECT salary FROM employees WHERE employee_id = 163 );ВЫБРАТЬ имя , фамилия ИЗ справочник.сотрудники ГДЕ оклад > (ВЫБРАТЬ оклад ИЗ справочник.сотрудники ГДЕ ссылка = 163 )
3471;SELECT MIN(salary) ,  department_id FROM employees GROUP BY department_id;ВЫБРАТЬ MIN(оклад) , подразделение ИЗ справочник.сотрудники СГРУППИРОВАТЬ ПО подразделение
3472;SELECT MIN(salary) ,  department_id FROM employees GROUP BY department_id;ВЫБРАТЬ MIN(оклад) , подразделение ИЗ справочник.сотрудники СГРУППИРОВАТЬ ПО подразделение
3473;SELECT first_name ,  last_name ,  department_id FROM employees WHERE salary IN (SELECT MIN(salary) FROM employees GROUP BY department_id);ВЫБРАТЬ first_name , last_name , department_id ИЗ справочник.сотрудники ГДЕ salary В (ВЫБРАТЬ MIN(salary) ИЗ справочник.сотрудники СГРУППИРОВАТЬ ПО department_id)
3474;SELECT first_name ,  last_name ,  department_id FROM employees WHERE salary IN (SELECT MIN(salary) FROM employees GROUP BY department_id);ВЫБРАТЬ first_name , last_name , department_id ИЗ справочник.сотрудники ГДЕ salary В (ВЫБРАТЬ MIN(salary) ИЗ справочник.сотрудники СГРУППИРОВАТЬ ПО department_id)
3475;SELECT employee_id FROM employees WHERE salary  >  (SELECT AVG(salary) FROM employees);ВЫБРАТЬ employee_id ИЗ справочник.сотрудники ГДЕ salary > (ВЫБРАТЬ AVG(salary) ИЗ справочник.сотрудники)
3476;SELECT employee_id FROM employees WHERE salary  >  (SELECT AVG(salary) FROM employees);ВЫБРАТЬ employee_id ИЗ справочник.сотрудники ГДЕ salary > (ВЫБРАТЬ AVG(salary) ИЗ справочник.сотрудники)
3477;SELECT employee_id ,  salary FROM employees WHERE manager_id  =  (SELECT employee_id FROM employees WHERE first_name  =  'Payam' );"ВЫБРАТЬ ссылка , оклад ИЗ справочник.сотрудники ГДЕ руководитель = (ВЫБРАТЬ ссылка ИЗ справочник.сотрудники ГДЕ имя = ""Payam"" )"
3478;SELECT employee_id ,  salary FROM employees WHERE manager_id  =  (SELECT employee_id FROM employees WHERE first_name  =  'Payam' );"ВЫБРАТЬ ссылка , оклад ИЗ справочник.сотрудники ГДЕ руководитель = (ВЫБРАТЬ ссылка ИЗ справочник.сотрудники ГДЕ имя = ""Payam"" )"
3479;SELECT DISTINCT T2.department_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id;ВЫБРАТЬ РАЗЛИЧНЫЕ T2.наименование ИЗ справочник.сотрудники КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.подразделения КАК T2 ПО T1.подразделение = T2.ссылка
3480;SELECT DISTINCT T2.department_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id;ВЫБРАТЬ РАЗЛИЧНЫЕ T2.наименование ИЗ справочник.сотрудники КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.подразделения КАК T2 ПО T1.подразделение = T2.ссылка
3481;SELECT DISTINCT * FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id WHERE T1.employee_id  =  T2.manager_id;ВЫБРАТЬ РАЗЛИЧНЫЕ * ИЗ справочник.сотрудники КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.подразделения КАК T2 ПО T1.подразделение = T2.ссылка ГДЕ T1.ссылка = T2.руководитель
3482;SELECT DISTINCT * FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id WHERE T1.employee_id  =  T2.manager_id;ВЫБРАТЬ РАЗЛИЧНЫЕ * ИЗ справочник.сотрудники КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.подразделения КАК T2 ПО T1.подразделение = T2.ссылка ГДЕ T1.ссылка = T2.руководитель
3483;SELECT * FROM  departments WHERE department_name  =  'Marketing';"ВЫБРАТЬ * ИЗ справочник.подразделения ГДЕ наименование = ""Marketing"""
3484;SELECT * FROM  departments WHERE department_name  =  'Marketing';"ВЫБРАТЬ * ИЗ справочник.подразделения ГДЕ наименование = ""Marketing"""
3485;SELECT employee_id FROM job_history GROUP BY employee_id HAVING COUNT(*)  >= 2;ВЫБРАТЬ сотрудник ИЗ регистрсведений.историяработы СГРУППИРОВАТЬ ПО сотрудник ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
3486;SELECT employee_id FROM job_history GROUP BY employee_id HAVING COUNT(*)  >= 2;ВЫБРАТЬ сотрудник ИЗ регистрсведений.историяработы СГРУППИРОВАТЬ ПО сотрудник ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
3487;SELECT DISTINCT department_id FROM employees GROUP BY department_id ,  manager_id HAVING COUNT(employee_id)  >= 4;ВЫБРАТЬ РАЗЛИЧНЫЕ подразделение ИЗ справочник.сотрудники СГРУППИРОВАТЬ ПО подразделение , руководитель ИМЕЮЩИЕ КОЛИЧЕСТВО(ссылка) >= 4
3488;SELECT DISTINCT department_id FROM employees GROUP BY department_id ,  manager_id HAVING COUNT(employee_id)  >= 4;ВЫБРАТЬ РАЗЛИЧНЫЕ подразделение ИЗ справочник.сотрудники СГРУППИРОВАТЬ ПО подразделение , руководитель ИМЕЮЩИЕ КОЛИЧЕСТВО(ссылка) >= 4
3489;SELECT job_id FROM employees GROUP BY job_id HAVING AVG(salary) > 8000;ВЫБРАТЬ должность ИЗ справочник.сотрудники СГРУППИРОВАТЬ ПО должность ИМЕЮЩИЕ AVG(оклад) > 8000
3490;SELECT job_id FROM employees GROUP BY job_id HAVING AVG(salary) > 8000;ВЫБРАТЬ должность ИЗ справочник.сотрудники СГРУППИРОВАТЬ ПО должность ИМЕЮЩИЕ AVG(оклад) > 8000
3491;SELECT T1.employee_id ,  T2.job_title FROM employees AS T1 JOIN jobs AS T2 ON T1.job_id  =  T2.job_id WHERE T1.department_id = 80;ВЫБРАТЬ T1.ссылка , T2.наименование ИЗ справочник.сотрудники КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.должности КАК T2 ПО T1.должность = T2.код ГДЕ T1.подразделение = 80
3492;SELECT T1.employee_id ,  T2.job_title FROM employees AS T1 JOIN jobs AS T2 ON T1.job_id  =  T2.job_id WHERE T1.department_id = 80;ВЫБРАТЬ T1.ссылка , T2.наименование ИЗ справочник.сотрудники КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.должности КАК T2 ПО T1.должность = T2.код ГДЕ T1.подразделение = 80
3493;SELECT T1.first_name ,  T1.job_id FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id WHERE T2.department_name  =  'Finance';"ВЫБРАТЬ T1.имя , T1.должность ИЗ справочник.сотрудники КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.подразделения КАК T2 ПО T1.подразделение = T2.ссылка ГДЕ T2.наименование = ""Finance"""
3494;SELECT T1.first_name ,  T1.job_id FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id WHERE T2.department_name  =  'Finance';"ВЫБРАТЬ T1.имя , T1.должность ИЗ справочник.сотрудники КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.подразделения КАК T2 ПО T1.подразделение = T2.ссылка ГДЕ T2.наименование = ""Finance"""
3495;SELECT * FROM employees WHERE salary BETWEEN (SELECT MIN(salary) FROM employees) AND 2500;ВЫБРАТЬ * ИЗ справочник.сотрудники ГДЕ salary МЕЖДУ (ВЫБРАТЬ MIN(salary) ИЗ справочник.сотрудники) И 2500
3496;SELECT * FROM employees WHERE salary BETWEEN (SELECT MIN(salary) FROM employees) AND 2500;ВЫБРАТЬ * ИЗ справочник.сотрудники ГДЕ salary МЕЖДУ (ВЫБРАТЬ MIN(salary) ИЗ справочник.сотрудники) И 2500
3497;SELECT * FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200);ВЫБРАТЬ * ИЗ справочник.сотрудники ГДЕ ссылка НЕ В (ВЫБРАТЬ ссылка ИЗ справочник.подразделения ГДЕ руководитель МЕЖДУ 100 И 200)
3498;SELECT * FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200);ВЫБРАТЬ * ИЗ справочник.сотрудники ГДЕ ссылка НЕ В (ВЫБРАТЬ ссылка ИЗ справочник.подразделения ГДЕ руководитель МЕЖДУ 100 И 200)
3499;"SELECT first_name ,  last_name ,  hire_date FROM employees WHERE department_id  =  (SELECT department_id FROM employees WHERE first_name  =  ""Clara"")";"ВЫБРАТЬ имя , фамилия , датанайма ИЗ справочник.сотрудники ГДЕ подразделение = (ВЫБРАТЬ подразделение ИЗ справочник.сотрудники ГДЕ имя = ""Clara"")"
3500;"SELECT first_name ,  last_name ,  hire_date FROM employees WHERE department_id  =  (SELECT department_id FROM employees WHERE first_name  =  ""Clara"")";"ВЫБРАТЬ имя , фамилия , датанайма ИЗ справочник.сотрудники ГДЕ подразделение = (ВЫБРАТЬ подразделение ИЗ справочник.сотрудники ГДЕ имя = ""Clara"")"
3501;"SELECT first_name ,  last_name ,  hire_date FROM employees WHERE department_id  =  ( SELECT department_id FROM employees WHERE first_name  =  ""Clara"") AND first_name != ""Clara""";"ВЫБРАТЬ имя , фамилия , датанайма ИЗ справочник.сотрудники ГДЕ подразделение = ( ВЫБРАТЬ подразделение ИЗ справочник.сотрудники ГДЕ имя = ""Clara"") И имя <> ""Clara"""
3502;"SELECT first_name ,  last_name ,  hire_date FROM employees WHERE department_id  =  ( SELECT department_id FROM employees WHERE first_name  =  ""Clara"") AND first_name != ""Clara""";"ВЫБРАТЬ имя , фамилия , датанайма ИЗ справочник.сотрудники ГДЕ подразделение = ( ВЫБРАТЬ подразделение ИЗ справочник.сотрудники ГДЕ имя = ""Clara"") И имя <> ""Clara"""
3503;SELECT employee_id ,  first_name ,  last_name FROM employees WHERE department_id IN ( SELECT department_id FROM employees WHERE first_name LIKE '%T%' );"ВЫБРАТЬ ссылка , имя , фамилия ИЗ справочник.сотрудники ГДЕ подразделение В ( ВЫБРАТЬ подразделение ИЗ справочник.сотрудники ГДЕ имя ПОДОБНО ""%T%"" )"
3504;SELECT employee_id ,  first_name ,  last_name FROM employees WHERE department_id IN ( SELECT department_id FROM employees WHERE first_name LIKE '%T%' );"ВЫБРАТЬ ссылка , имя , фамилия ИЗ справочник.сотрудники ГДЕ подразделение В ( ВЫБРАТЬ подразделение ИЗ справочник.сотрудники ГДЕ имя ПОДОБНО ""%T%"" )"
3505;SELECT employee_id ,  first_name ,  last_name ,  salary FROM employees WHERE salary  >  ( SELECT AVG (salary) FROM employees ) AND department_id IN ( SELECT department_id FROM employees WHERE first_name LIKE '%J%');"ВЫБРАТЬ employee_id , first_name , last_name , salary ИЗ справочник.сотрудники ГДЕ salary > ( ВЫБРАТЬ AVG (salary) ИЗ справочник.сотрудники ) И department_id В ( ВЫБРАТЬ department_id ИЗ справочник.сотрудники ГДЕ first_name ПОДОБНО ""%J%"")"
3506;SELECT employee_id ,  first_name ,  last_name ,  salary FROM employees WHERE salary  >  ( SELECT AVG (salary) FROM employees ) AND department_id IN ( SELECT department_id FROM employees WHERE first_name LIKE '%J%');"ВЫБРАТЬ employee_id , first_name , last_name , salary ИЗ справочник.сотрудники ГДЕ salary > ( ВЫБРАТЬ AVG (salary) ИЗ справочник.сотрудники ) И department_id В ( ВЫБРАТЬ department_id ИЗ справочник.сотрудники ГДЕ first_name ПОДОБНО ""%J%"")"
3507;SELECT employee_id ,  job_id FROM employees WHERE salary  <  ( SELECT min(salary) FROM employees WHERE job_id  =  'MK_MAN' );"ВЫБРАТЬ ссылка , должность ИЗ справочник.сотрудники ГДЕ оклад < ( ВЫБРАТЬ МИНИМУМ(оклад) ИЗ справочник.сотрудники ГДЕ должность = ""MK_MAN"" )"
3508;SELECT employee_id ,  job_id FROM employees WHERE salary  <  ( SELECT min(salary) FROM employees WHERE job_id  =  'MK_MAN' );"ВЫБРАТЬ ссылка , должность ИЗ справочник.сотрудники ГДЕ оклад < ( ВЫБРАТЬ МИНИМУМ(оклад) ИЗ справочник.сотрудники ГДЕ должность = ""MK_MAN"" )"
3509;SELECT employee_id ,  first_name ,  last_name ,  job_id FROM employees WHERE salary  >  ( SELECT max(salary) FROM employees WHERE job_id  =  'PU_MAN' );"ВЫБРАТЬ ссылка , имя , фамилия , должность ИЗ справочник.сотрудники ГДЕ оклад > ( ВЫБРАТЬ МАКСИМУМ(оклад) ИЗ справочник.сотрудники ГДЕ должность = ""PU_MAN"" )"
3510;SELECT employee_id ,  first_name ,  last_name ,  job_id FROM employees WHERE salary  >  ( SELECT max(salary) FROM employees WHERE job_id  =  'PU_MAN' );"ВЫБРАТЬ ссылка , имя , фамилия , должность ИЗ справочник.сотрудники ГДЕ оклад > ( ВЫБРАТЬ МАКСИМУМ(оклад) ИЗ справочник.сотрудники ГДЕ должность = ""PU_MAN"" )"
3511;SELECT department_id ,  SUM(salary) FROM employees GROUP BY department_id HAVING count(*)  >=  2;ВЫБРАТЬ подразделение , SUM(оклад) ИЗ справочник.сотрудники СГРУППИРОВАТЬ ПО подразделение ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
3512;SELECT department_id ,  SUM(salary) FROM employees GROUP BY department_id HAVING count(*)  >=  2;ВЫБРАТЬ подразделение , SUM(оклад) ИЗ справочник.сотрудники СГРУППИРОВАТЬ ПО подразделение ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
3513;SELECT * FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history);ВЫБРАТЬ * ИЗ справочник.сотрудники ГДЕ employee_id НЕ В (ВЫБРАТЬ employee_id ИЗ регистрсведений.историяработы)
3514;SELECT * FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history);ВЫБРАТЬ * ИЗ справочник.сотрудники ГДЕ employee_id НЕ В (ВЫБРАТЬ employee_id ИЗ регистрсведений.историяработы)
3515;SELECT first_name ,   last_name ,   salary ,  department_id ,  MAX(salary) FROM employees GROUP BY department_id;ВЫБРАТЬ имя , фамилия , оклад , подразделение , MAX(оклад) ИЗ справочник.сотрудники СГРУППИРОВАТЬ ПО подразделение
3516;SELECT first_name ,   last_name ,   salary ,  department_id ,  MAX(salary) FROM employees GROUP BY department_id;ВЫБРАТЬ имя , фамилия , оклад , подразделение , MAX(оклад) ИЗ справочник.сотрудники СГРУППИРОВАТЬ ПО подразделение
3517;SELECT T1.first_name ,  T1.last_name ,  T2.department_name ,  T3.city ,  T3.state_province FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id;ВЫБРАТЬ T1.имя , T1.фамилия , T2.наименование , T3.город , T3.область ИЗ справочник.сотрудники КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.подразделения КАК T2 ПО T1.подразделение = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.местоположения КАК T3 ПО T2.местоположение = T3.ссылка
3518;SELECT T1.first_name ,  T1.last_name ,  T2.department_name ,  T3.city ,  T3.state_province FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id;ВЫБРАТЬ T1.имя , T1.фамилия , T2.наименование , T3.город , T3.область ИЗ справочник.сотрудники КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.подразделения КАК T2 ПО T1.подразделение = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.местоположения КАК T3 ПО T2.местоположение = T3.ссылка
3519;SELECT T1.first_name ,  T1.last_name ,  T3.city FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id WHERE T1.first_name LIKE '%z%';"ВЫБРАТЬ T1.имя , T1.фамилия , T3.город ИЗ справочник.сотрудники КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.подразделения КАК T2 ПО T1.подразделение = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.местоположения КАК T3 ПО T2.местоположение = T3.ссылка ГДЕ T1.имя ПОДОБНО ""%z%"""
3520;SELECT T1.first_name ,  T1.last_name ,  T3.city FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id WHERE T1.first_name LIKE '%z%';"ВЫБРАТЬ T1.имя , T1.фамилия , T3.город ИЗ справочник.сотрудники КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.подразделения КАК T2 ПО T1.подразделение = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.местоположения КАК T3 ПО T2.местоположение = T3.ссылка ГДЕ T1.имя ПОДОБНО ""%z%"""
3521;SELECT T1.department_name ,  T2.city ,  T2.state_province FROM departments AS T1 JOIN locations AS T2 ON T2.location_id  =  T1.location_id;ВЫБРАТЬ T1.наименование , T2.город , T2.область ИЗ справочник.подразделения КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.местоположения КАК T2 ПО T2.ссылка = T1.местоположение
3522;SELECT T1.department_name ,  T2.city ,  T2.state_province FROM departments AS T1 JOIN locations AS T2 ON T2.location_id  =  T1.location_id;ВЫБРАТЬ T1.наименование , T2.город , T2.область ИЗ справочник.подразделения КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.местоположения КАК T2 ПО T2.ссылка = T1.местоположение
3523;SELECT T1.first_name ,  T1.last_name , T1.employee_id ,  T4.country_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id JOIN countries AS T4 ON T3.country_id  =  T4.country_id;ВЫБРАТЬ T1.имя , T1.фамилия , T1.ссылка , T4.наименование ИЗ справочник.сотрудники КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.подразделения КАК T2 ПО T1.подразделение = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.местоположения КАК T3 ПО T2.местоположение = T3.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.страны КАК T4 ПО T3.странасправочник = T4.ссылка
3524;SELECT T1.first_name ,  T1.last_name , T1.employee_id ,  T4.country_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id JOIN countries AS T4 ON T3.country_id  =  T4.country_id;ВЫБРАТЬ T1.имя , T1.фамилия , T1.ссылка , T4.наименование ИЗ справочник.сотрудники КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.подразделения КАК T2 ПО T1.подразделение = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.местоположения КАК T3 ПО T2.местоположение = T3.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.страны КАК T4 ПО T3.странасправочник = T4.ссылка
3525;SELECT department_name ,  COUNT(*) FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY department_name;ВЫБРАТЬ department_name , КОЛИЧЕСТВО(*) ИЗ справочник.сотрудники КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.подразделения КАК T2 ПО T1.подразделение = T2.ссылка СГРУППИРОВАТЬ ПО department_name
3526;SELECT department_name ,  COUNT(*) FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY department_name;ВЫБРАТЬ department_name , КОЛИЧЕСТВО(*) ИЗ справочник.сотрудники КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.подразделения КАК T2 ПО T1.подразделение = T2.ссылка СГРУППИРОВАТЬ ПО department_name
3527;SELECT first_name ,  last_name ,  salary FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN  locations AS T3 ON T2.location_id  =  T3.location_id WHERE  T3.city  =  'London';"ВЫБРАТЬ first_name , last_name , salary ИЗ справочник.сотрудники КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.подразделения КАК T2 ПО T1.подразделение = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.местоположения КАК T3 ПО T2.местоположение = T3.ссылка ГДЕ T3.город = ""London"""
3528;SELECT first_name ,  last_name ,  salary FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN  locations AS T3 ON T2.location_id  =  T3.location_id WHERE  T3.city  =  'London';"ВЫБРАТЬ first_name , last_name , salary ИЗ справочник.сотрудники КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.подразделения КАК T2 ПО T1.подразделение = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.местоположения КАК T3 ПО T2.местоположение = T3.ссылка ГДЕ T3.город = ""London"""
3529;SELECT song_name ,  releasedate FROM song ORDER BY releasedate DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование , датавыпуска ИЗ справочник.песни УПОРЯДОЧИТЬ ПО датавыпуска УБЫВ
3530;SELECT song_name ,  releasedate FROM song ORDER BY releasedate DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование , датавыпуска ИЗ справочник.песни УПОРЯДОЧИТЬ ПО датавыпуска УБЫВ
3531;SELECT f_id FROM files ORDER BY duration DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 ссылка ИЗ справочник.файлы УПОРЯДОЧИТЬ ПО длительность УБЫВ
3532;SELECT f_id FROM files ORDER BY duration DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 ссылка ИЗ справочник.файлы УПОРЯДОЧИТЬ ПО длительность УБЫВ
3533;"SELECT song_name FROM song WHERE languages  =  ""english""";"ВЫБРАТЬ наименование ИЗ справочник.песни ГДЕ языки = ""english"""
3534;"SELECT song_name FROM song WHERE languages  =  ""english""";"ВЫБРАТЬ наименование ИЗ справочник.песни ГДЕ языки = ""english"""
3535;"SELECT f_id FROM files WHERE formats  =  ""mp3""";"ВЫБРАТЬ ссылка ИЗ справочник.файлы ГДЕ форматы = ""mp3"""
3536;"SELECT f_id FROM files WHERE formats  =  ""mp3""";"ВЫБРАТЬ ссылка ИЗ справочник.файлы ГДЕ форматы = ""mp3"""
3537;SELECT DISTINCT T1.artist_name ,  T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.rating  >  9;ВЫБРАТЬ РАЗЛИЧНЫЕ T1.наименование , T1.страна ИЗ справочник.артисты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.песни КАК T2 ПО T1.наименование = T2.артист ГДЕ T2.рейтинг > 9
3538;SELECT DISTINCT T1.artist_name ,  T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.rating  >  9;ВЫБРАТЬ РАЗЛИЧНЫЕ T1.наименование , T1.страна ИЗ справочник.артисты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.песни КАК T2 ПО T1.наименование = T2.артист ГДЕ T2.рейтинг > 9
3539;SELECT DISTINCT T1.file_size ,  T1.formats FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T2.resolution  <  800;ВЫБРАТЬ РАЗЛИЧНЫЕ T1.размерфайла , T1.форматы ИЗ справочник.файлы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.песни КАК T2 ПО T1.ссылка = T2.файл ГДЕ T2.разрешение < 800
3540;SELECT DISTINCT T1.file_size ,  T1.formats FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T2.resolution  <  800;ВЫБРАТЬ РАЗЛИЧНЫЕ T1.размерфайла , T1.форматы ИЗ справочник.файлы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.песни КАК T2 ПО T1.ссылка = T2.файл ГДЕ T2.разрешение < 800
3541;SELECT T1.artist_name FROM song AS T1 JOIN files AS T2 ON T1.f_id  =  T2.f_id ORDER BY T2.duration LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.артист ИЗ справочник.песни КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.файлы КАК T2 ПО T1.файл = T2.ссылка УПОРЯДОЧИТЬ ПО T2.длительность
3542;SELECT T1.artist_name FROM song AS T1 JOIN files AS T2 ON T1.f_id  =  T2.f_id ORDER BY T2.duration LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.артист ИЗ справочник.песни КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.файлы КАК T2 ПО T1.файл = T2.ссылка УПОРЯДОЧИТЬ ПО T2.длительность
3543;SELECT T1.artist_name ,  T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name ORDER BY T2.rating DESC LIMIT 3;ВЫБРАТЬ ПЕРВЫЕ 3 T1.наименование , T1.страна ИЗ справочник.артисты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.песни КАК T2 ПО T1.наименование = T2.артист УПОРЯДОЧИТЬ ПО T2.рейтинг УБЫВ
3544;SELECT T1.artist_name ,  T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name ORDER BY T2.rating DESC LIMIT 3;ВЫБРАТЬ ПЕРВЫЕ 3 T1.наименование , T1.страна ИЗ справочник.артисты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.песни КАК T2 ПО T1.наименование = T2.артист УПОРЯДОЧИТЬ ПО T2.рейтинг УБЫВ
3545;"SELECT count(*) FROM files WHERE duration LIKE ""4:%""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.файлы ГДЕ длительность ПОДОБНО ""4:%"""
3546;"SELECT count(*) FROM files WHERE duration LIKE ""4:%""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.файлы ГДЕ длительность ПОДОБНО ""4:%"""
3547;"SELECT count(*) FROM artist WHERE country  =  ""Bangladesh""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.артисты ГДЕ страна = ""Bangladesh"""
3548;"SELECT count(*) FROM artist WHERE country  =  ""Bangladesh""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.артисты ГДЕ страна = ""Bangladesh"""
3549;"SELECT avg(T2.rating) FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T1.gender  =  ""Female""";"ВЫБРАТЬ СРЕДНЕЕ(T2.рейтинг) ИЗ справочник.артисты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.песни КАК T2 ПО T1.наименование = T2.артист ГДЕ T1.пол = ""Female"""
3550;"SELECT avg(T2.rating) FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T1.gender  =  ""Female""";"ВЫБРАТЬ СРЕДНЕЕ(T2.рейтинг) ИЗ справочник.артисты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.песни КАК T2 ПО T1.наименование = T2.артист ГДЕ T1.пол = ""Female"""
3551;SELECT formats FROM files GROUP BY formats ORDER BY COUNT (*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 форматы ИЗ справочник.файлы СГРУППИРОВАТЬ ПО форматы УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО (*) УБЫВ
3552;SELECT formats FROM files GROUP BY formats ORDER BY COUNT (*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 форматы ИЗ справочник.файлы СГРУППИРОВАТЬ ПО форматы УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО (*) УБЫВ
3557;"SELECT T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T1.gender  =  ""Female"" AND T2.languages  =  ""bangla""";"ВЫБРАТЬ T1.страна ИЗ справочник.артисты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.песни КАК T2 ПО T1.наименование = T2.артист ГДЕ T1.пол = ""Female"" И T2.языки = ""bangla"""
3558;"SELECT T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T1.gender  =  ""Female"" AND T2.languages  =  ""bangla""";"ВЫБРАТЬ T1.страна ИЗ справочник.артисты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.песни КАК T2 ПО T1.наименование = T2.артист ГДЕ T1.пол = ""Female"" И T2.языки = ""bangla"""
3559;"SELECT avg(T1.duration) FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T1.formats  =  ""mp3"" AND T2.resolution   <  800";"ВЫБРАТЬ СРЕДНЕЕ(T1.длительность) ИЗ справочник.файлы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.песни КАК T2 ПО T1.ссылка = T2.файл ГДЕ T1.форматы = ""mp3"" И T2.разрешение < 800"
3560;"SELECT avg(T1.duration) FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T1.formats  =  ""mp3"" AND T2.resolution   <  800";"ВЫБРАТЬ СРЕДНЕЕ(T1.длительность) ИЗ справочник.файлы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.песни КАК T2 ПО T1.ссылка = T2.файл ГДЕ T1.форматы = ""mp3"" И T2.разрешение < 800"
3561;SELECT count(*) ,  gender FROM artist GROUP BY gender;ВЫБРАТЬ КОЛИЧЕСТВО(*) , пол ИЗ справочник.артисты СГРУППИРОВАТЬ ПО пол
3562;SELECT count(*) ,  gender FROM artist GROUP BY gender;ВЫБРАТЬ КОЛИЧЕСТВО(*) , пол ИЗ справочник.артисты СГРУППИРОВАТЬ ПО пол
3563;SELECT avg(rating) ,  languages FROM song GROUP BY languages;ВЫБРАТЬ СРЕДНЕЕ(рейтинг) , языки ИЗ справочник.песни СГРУППИРОВАТЬ ПО языки
3564;SELECT avg(rating) ,  languages FROM song GROUP BY languages;ВЫБРАТЬ СРЕДНЕЕ(рейтинг) , языки ИЗ справочник.песни СГРУППИРОВАТЬ ПО языки
3565;SELECT T1.gender ,  T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name ORDER BY T2.resolution LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.пол , T1.наименование ИЗ справочник.артисты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.песни КАК T2 ПО T1.наименование = T2.артист УПОРЯДОЧИТЬ ПО T2.разрешение
3566;SELECT T1.gender ,  T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name ORDER BY T2.resolution LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.пол , T1.наименование ИЗ справочник.артисты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.песни КАК T2 ПО T1.наименование = T2.артист УПОРЯДОЧИТЬ ПО T2.разрешение
3567;SELECT count(*) ,  formats FROM files GROUP BY formats;ВЫБРАТЬ КОЛИЧЕСТВО(*) , форматы ИЗ справочник.файлы СГРУППИРОВАТЬ ПО форматы
3568;SELECT count(*) ,  formats FROM files GROUP BY formats;ВЫБРАТЬ КОЛИЧЕСТВО(*) , форматы ИЗ справочник.файлы СГРУППИРОВАТЬ ПО форматы
3569;"SELECT DISTINCT song_name FROM song WHERE resolution  >  (SELECT min(resolution) FROM song WHERE languages  =  ""english"")";"ВЫБРАТЬ РАЗЛИЧНЫЕ наименование ИЗ справочник.песни ГДЕ разрешение > (ВЫБРАТЬ МИНИМУМ(разрешение) ИЗ справочник.песни ГДЕ языки = ""english"")"
3570;"SELECT DISTINCT song_name FROM song WHERE resolution  >  (SELECT min(resolution) FROM song WHERE languages  =  ""english"")";"ВЫБРАТЬ РАЗЛИЧНЫЕ наименование ИЗ справочник.песни ГДЕ разрешение > (ВЫБРАТЬ МИНИМУМ(разрешение) ИЗ справочник.песни ГДЕ языки = ""english"")"
3571;"SELECT song_name FROM song WHERE rating  <  (SELECT max(rating) FROM song WHERE genre_is  =  ""blues"")";"ВЫБРАТЬ наименование ИЗ справочник.песни ГДЕ рейтинг < (ВЫБРАТЬ МАКСИМУМ(рейтинг) ИЗ справочник.песни ГДЕ жанр = ""blues"")"
3572;"SELECT song_name FROM song WHERE rating  <  (SELECT max(rating) FROM song WHERE genre_is  =  ""blues"")";"ВЫБРАТЬ наименование ИЗ справочник.песни ГДЕ рейтинг < (ВЫБРАТЬ МАКСИМУМ(рейтинг) ИЗ справочник.песни ГДЕ жанр = ""blues"")"
3573;"SELECT T1.artist_name ,  T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.song_name LIKE ""%love%""";"ВЫБРАТЬ T1.наименование , T1.страна ИЗ справочник.артисты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.песни КАК T2 ПО T1.наименование = T2.артист ГДЕ T2.наименование ПОДОБНО ""%love%"""
3574;"SELECT T1.artist_name ,  T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.song_name LIKE ""%love%""";"ВЫБРАТЬ T1.наименование , T1.страна ИЗ справочник.артисты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.песни КАК T2 ПО T1.наименование = T2.артист ГДЕ T2.наименование ПОДОБНО ""%love%"""
3575;"SELECT T1.artist_name ,  T1.gender FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.releasedate LIKE ""%Mar%""";"ВЫБРАТЬ T1.наименование , T1.пол ИЗ справочник.артисты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.песни КАК T2 ПО T1.наименование = T2.артист ГДЕ T2.датавыпуска ПОДОБНО ""%Mar%"""
3576;"SELECT T1.artist_name ,  T1.gender FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.releasedate LIKE ""%Mar%""";"ВЫБРАТЬ T1.наименование , T1.пол ИЗ справочник.артисты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.песни КАК T2 ПО T1.наименование = T2.артист ГДЕ T2.датавыпуска ПОДОБНО ""%Mar%"""
3577;SELECT g_name ,  rating FROM genre ORDER BY g_name;ВЫБРАТЬ наименование , рейтинг ИЗ справочник.жанры УПОРЯДОЧИТЬ ПО наименование
3578;SELECT g_name ,  rating FROM genre ORDER BY g_name;ВЫБРАТЬ наименование , рейтинг ИЗ справочник.жанры УПОРЯДОЧИТЬ ПО наименование
3579;SELECT song_name FROM song ORDER BY resolution;ВЫБРАТЬ наименование ИЗ справочник.песни УПОРЯДОЧИТЬ ПО разрешение
3580;SELECT song_name FROM song ORDER BY resolution;ВЫБРАТЬ наименование ИЗ справочник.песни УПОРЯДОЧИТЬ ПО разрешение
3581;"SELECT f_id FROM files WHERE formats  =  ""mp4"" UNION SELECT f_id FROM song WHERE resolution  >  720";"ВЫБРАТЬ файл ИЗ справочник.файлы ГДЕ formats = ""mp4"" ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ файл ИЗ справочник.песни ГДЕ разрешение > 720"
3582;"SELECT f_id FROM files WHERE formats  =  ""mp4"" UNION SELECT f_id FROM song WHERE resolution  >  720";"ВЫБРАТЬ файл ИЗ справочник.файлы ГДЕ formats = ""mp4"" ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ файл ИЗ справочник.песни ГДЕ разрешение > 720"
3583;"SELECT T2.song_name FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T1.duration LIKE ""4:%"" UNION SELECT song_name FROM song WHERE languages  =  ""english""";"ВЫБРАТЬ T2.наименование ИЗ справочник.файлы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.песни КАК T2 ПО T1.ссылка = T2.файл ГДЕ T1.длительность ПОДОБНО ""4:%"" ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ song_name ИЗ справочник.песни ГДЕ languages = ""english"""
3584;"SELECT T2.song_name FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T1.duration LIKE ""4:%"" UNION SELECT song_name FROM song WHERE languages  =  ""english""";"ВЫБРАТЬ T2.наименование ИЗ справочник.файлы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.песни КАК T2 ПО T1.ссылка = T2.файл ГДЕ T1.длительность ПОДОБНО ""4:%"" ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ song_name ИЗ справочник.песни ГДЕ languages = ""english"""
3585;SELECT languages FROM song GROUP BY languages ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 языки ИЗ справочник.песни СГРУППИРОВАТЬ ПО языки УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
3586;SELECT languages FROM song GROUP BY languages ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 языки ИЗ справочник.песни СГРУППИРОВАТЬ ПО языки УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
3587;SELECT artist_name FROM song WHERE resolution  >  500 GROUP BY languages ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 артист ИЗ справочник.песни ГДЕ разрешение > 500 СГРУППИРОВАТЬ ПО языки УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
3588;SELECT artist_name FROM song WHERE resolution  >  500 GROUP BY languages ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 артист ИЗ справочник.песни ГДЕ разрешение > 500 СГРУППИРОВАТЬ ПО языки УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
3589;"SELECT artist_name FROM artist WHERE country  =  ""UK"" AND gender  =  ""Male""";"ВЫБРАТЬ наименование ИЗ справочник.артисты ГДЕ страна = ""UK"" И пол = ""Male"""
3590;"SELECT artist_name FROM artist WHERE country  =  ""UK"" AND gender  =  ""Male""";"ВЫБРАТЬ наименование ИЗ справочник.артисты ГДЕ страна = ""UK"" И пол = ""Male"""
3591;"SELECT song_name FROM song WHERE genre_is  =  ""modern"" OR languages  =  ""english""";"ВЫБРАТЬ наименование ИЗ справочник.песни ГДЕ жанр = ""modern"" ИЛИ языки = ""english"""
3592;"SELECT song_name FROM song WHERE genre_is  =  ""modern"" OR languages  =  ""english""";"ВЫБРАТЬ наименование ИЗ справочник.песни ГДЕ жанр = ""modern"" ИЛИ языки = ""english"""
3597;"SELECT avg(rating) ,  avg(resolution) FROM song WHERE languages  =  ""bangla""";"ВЫБРАТЬ СРЕДНЕЕ(рейтинг) , СРЕДНЕЕ(разрешение) ИЗ справочник.песни ГДЕ языки = ""bangla"""
3598;"SELECT avg(rating) ,  avg(resolution) FROM song WHERE languages  =  ""bangla""";"ВЫБРАТЬ СРЕДНЕЕ(рейтинг) , СРЕДНЕЕ(разрешение) ИЗ справочник.песни ГДЕ языки = ""bangla"""
3599;"SELECT max(T2.resolution) ,  min(T2.resolution) FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T1.duration LIKE ""3:%""";"ВЫБРАТЬ МАКСИМУМ(T2.разрешение) , МИНИМУМ(T2.разрешение) ИЗ справочник.файлы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.песни КАК T2 ПО T1.ссылка = T2.файл ГДЕ T1.длительность ПОДОБНО ""3:%"""
3600;"SELECT max(T2.resolution) ,  min(T2.resolution) FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T1.duration LIKE ""3:%""";"ВЫБРАТЬ МАКСИМУМ(T2.разрешение) , МИНИМУМ(T2.разрешение) ИЗ справочник.файлы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.песни КАК T2 ПО T1.ссылка = T2.файл ГДЕ T1.длительность ПОДОБНО ""3:%"""
3601;SELECT max(T1.duration) ,  max(T2.resolution) ,  T2.languages FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id GROUP BY T2.languages ORDER BY T2.languages;ВЫБРАТЬ МАКСИМУМ(T1.длительность) , МАКСИМУМ(T2.разрешение) , T2.языки ИЗ справочник.файлы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.песни КАК T2 ПО T1.ссылка = T2.файл СГРУППИРОВАТЬ ПО T2.языки УПОРЯДОЧИТЬ ПО T2.языки
3602;SELECT max(T1.duration) ,  max(T2.resolution) ,  T2.languages FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id GROUP BY T2.languages ORDER BY T2.languages;ВЫБРАТЬ МАКСИМУМ(T1.длительность) , МАКСИМУМ(T2.разрешение) , T2.языки ИЗ справочник.файлы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.песни КАК T2 ПО T1.ссылка = T2.файл СГРУППИРОВАТЬ ПО T2.языки УПОРЯДОЧИТЬ ПО T2.языки
3603;SELECT min(T1.duration) ,  min(T2.rating) ,  T2.genre_is FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id GROUP BY T2.genre_is ORDER BY T2.genre_is;ВЫБРАТЬ МИНИМУМ(T1.длительность) , МИНИМУМ(T2.рейтинг) , T2.жанр ИЗ справочник.файлы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.песни КАК T2 ПО T1.ссылка = T2.файл СГРУППИРОВАТЬ ПО T2.жанр УПОРЯДОЧИТЬ ПО T2.жанр
3604;SELECT min(T1.duration) ,  min(T2.rating) ,  T2.genre_is FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id GROUP BY T2.genre_is ORDER BY T2.genre_is;ВЫБРАТЬ МИНИМУМ(T1.длительность) , МИНИМУМ(T2.рейтинг) , T2.жанр ИЗ справочник.файлы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.песни КАК T2 ПО T1.ссылка = T2.файл СГРУППИРОВАТЬ ПО T2.жанр УПОРЯДОЧИТЬ ПО T2.жанр
3605;"SELECT T1.artist_name ,  count(*) FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.languages  =  ""english"" GROUP BY T2.artist_name HAVING count(*)  >=  1";"ВЫБРАТЬ T1.наименование , КОЛИЧЕСТВО(*) ИЗ справочник.артисты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.песни КАК T2 ПО T1.наименование = T2.артист ГДЕ T2.языки = ""english"" СГРУППИРОВАТЬ ПО T2.артист ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 1"
3606;"SELECT T1.artist_name ,  count(*) FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.languages  =  ""english"" GROUP BY T2.artist_name HAVING count(*)  >=  1";"ВЫБРАТЬ T1.наименование , КОЛИЧЕСТВО(*) ИЗ справочник.артисты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.песни КАК T2 ПО T1.наименование = T2.артист ГДЕ T2.языки = ""english"" СГРУППИРОВАТЬ ПО T2.артист ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 1"
3607;SELECT T1.artist_name ,  T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.resolution  >  900 GROUP BY T2.artist_name HAVING count(*)  >=  1;ВЫБРАТЬ T1.наименование , T1.страна ИЗ справочник.артисты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.песни КАК T2 ПО T1.наименование = T2.артист ГДЕ T2.разрешение > 900 СГРУППИРОВАТЬ ПО T2.артист ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 1
3608;SELECT T1.artist_name ,  T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.resolution  >  900 GROUP BY T2.artist_name HAVING count(*)  >=  1;ВЫБРАТЬ T1.наименование , T1.страна ИЗ справочник.артисты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.песни КАК T2 ПО T1.наименование = T2.артист ГДЕ T2.разрешение > 900 СГРУППИРОВАТЬ ПО T2.артист ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 1
3609;SELECT T1.artist_name ,  count(*) FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name GROUP BY T2.artist_name ORDER BY count(*) DESC LIMIT 3;ВЫБРАТЬ ПЕРВЫЕ 3 T1.наименование , КОЛИЧЕСТВО(*) ИЗ справочник.артисты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.песни КАК T2 ПО T1.наименование = T2.артист СГРУППИРОВАТЬ ПО T2.артист УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
3610;SELECT T1.artist_name ,  count(*) FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name GROUP BY T2.artist_name ORDER BY count(*) DESC LIMIT 3;ВЫБРАТЬ ПЕРВЫЕ 3 T1.наименование , КОЛИЧЕСТВО(*) ИЗ справочник.артисты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.песни КАК T2 ПО T1.наименование = T2.артист СГРУППИРОВАТЬ ПО T2.артист УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
3611;SELECT T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name GROUP BY T2.artist_name ORDER BY count(*) LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.страна ИЗ справочник.артисты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.песни КАК T2 ПО T1.наименование = T2.артист СГРУППИРОВАТЬ ПО T2.артист УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*)
3612;SELECT T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name GROUP BY T2.artist_name ORDER BY count(*) LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.страна ИЗ справочник.артисты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.песни КАК T2 ПО T1.наименование = T2.артист СГРУППИРОВАТЬ ПО T2.артист УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*)
3613;SELECT song_name FROM song WHERE rating  <   (SELECT min(rating) FROM song WHERE languages  =  'english');"ВЫБРАТЬ наименование ИЗ справочник.песни ГДЕ рейтинг < (ВЫБРАТЬ МИНИМУМ(рейтинг) ИЗ справочник.песни ГДЕ языки = ""english"")"
3614;SELECT song_name FROM song WHERE rating  <   (SELECT min(rating) FROM song WHERE languages  =  'english');"ВЫБРАТЬ наименование ИЗ справочник.песни ГДЕ рейтинг < (ВЫБРАТЬ МИНИМУМ(рейтинг) ИЗ справочник.песни ГДЕ языки = ""english"")"
3615;SELECT f_id FROM song WHERE resolution  >  (SELECT max(resolution) FROM song WHERE rating  <  8);ВЫБРАТЬ файл ИЗ справочник.песни ГДЕ разрешение > (ВЫБРАТЬ МАКСИМУМ(разрешение) ИЗ справочник.песни ГДЕ рейтинг < 8)
3616;SELECT f_id FROM song WHERE resolution  >  (SELECT max(resolution) FROM song WHERE rating  <  8);ВЫБРАТЬ файл ИЗ справочник.песни ГДЕ разрешение > (ВЫБРАТЬ МАКСИМУМ(разрешение) ИЗ справочник.песни ГДЕ рейтинг < 8)
3617;"SELECT f_id FROM song WHERE resolution  >  (SELECT avg(resolution) FROM song WHERE genre_is  =  ""modern"")";"ВЫБРАТЬ файл ИЗ справочник.песни ГДЕ разрешение > (ВЫБРАТЬ СРЕДНЕЕ(разрешение) ИЗ справочник.песни ГДЕ жанр = ""modern"")"
3618;"SELECT f_id FROM song WHERE resolution  >  (SELECT avg(resolution) FROM song WHERE genre_is  =  ""modern"")";"ВЫБРАТЬ файл ИЗ справочник.песни ГДЕ разрешение > (ВЫБРАТЬ СРЕДНЕЕ(разрешение) ИЗ справочник.песни ГДЕ жанр = ""modern"")"
3619;"SELECT T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.languages  =  ""bangla"" GROUP BY T2.artist_name ORDER BY count(*) DESC LIMIT 3";"ВЫБРАТЬ ПЕРВЫЕ 3 T1.наименование ИЗ справочник.артисты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.песни КАК T2 ПО T1.наименование = T2.артист ГДЕ T2.языки = ""bangla"" СГРУППИРОВАТЬ ПО T2.артист УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ"
3620;"SELECT T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.languages  =  ""bangla"" GROUP BY T2.artist_name ORDER BY count(*) DESC LIMIT 3";"ВЫБРАТЬ ПЕРВЫЕ 3 T1.наименование ИЗ справочник.артисты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.песни КАК T2 ПО T1.наименование = T2.артист ГДЕ T2.языки = ""bangla"" СГРУППИРОВАТЬ ПО T2.артист УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ"
3621;"SELECT f_id ,  genre_is ,  artist_name FROM song WHERE languages  =   ""english"" ORDER BY rating";"ВЫБРАТЬ файл , жанр , артист ИЗ справочник.песни ГДЕ языки = ""english"" УПОРЯДОЧИТЬ ПО рейтинг"
3622;"SELECT f_id ,  genre_is ,  artist_name FROM song WHERE languages  =   ""english"" ORDER BY rating";"ВЫБРАТЬ файл , жанр , артист ИЗ справочник.песни ГДЕ языки = ""english"" УПОРЯДОЧИТЬ ПО рейтинг"
3623;"SELECT T1.duration ,  T1.file_size ,  T1.formats FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T2.genre_is  =  ""pop"" ORDER BY T2.song_name";"ВЫБРАТЬ T1.длительность , T1.размерфайла , T1.форматы ИЗ справочник.файлы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.песни КАК T2 ПО T1.ссылка = T2.файл ГДЕ T2.жанр = ""pop"" УПОРЯДОЧИТЬ ПО T2.наименование"
3624;"SELECT T1.duration ,  T1.file_size ,  T1.formats FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T2.genre_is  =  ""pop"" ORDER BY T2.song_name";"ВЫБРАТЬ T1.длительность , T1.размерфайла , T1.форматы ИЗ справочник.файлы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.песни КАК T2 ПО T1.ссылка = T2.файл ГДЕ T2.жанр = ""pop"" УПОРЯДОЧИТЬ ПО T2.наименование"
3629;SELECT count(*) FROM camera_lens WHERE focal_length_mm  >  15;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.объективыкамер ГДЕ фокусноерасстояниемм > 15
3630;SELECT brand ,  name FROM camera_lens ORDER BY max_aperture DESC;ВЫБРАТЬ бренд , наименование ИЗ справочник.объективыкамер УПОРЯДОЧИТЬ ПО максимальнаядиафрагма УБЫВ
3631;SELECT id ,  color ,  name FROM photos;ВЫБРАТЬ ссылка , цветстрокой , наименование ИЗ регистрсведений.фотографии
3632;SELECT max(height) ,  avg(height) FROM mountain;ВЫБРАТЬ МАКСИМУМ(высота) , СРЕДНЕЕ(высота) ИЗ справочник.горы
3633;SELECT avg(prominence) FROM mountain WHERE country  =  'Morocco';"ВЫБРАТЬ СРЕДНЕЕ(видимость) ИЗ справочник.горы ГДЕ страна = ""Morocco"""
3634;SELECT name ,  height ,  prominence FROM mountain WHERE range != 'Aberdare Range';"ВЫБРАТЬ наименование , высота , видимость ИЗ справочник.горы ГДЕ хребет <> ""Aberdare хребет"""
3635;SELECT T1.id ,  T1.name FROM mountain AS T1 JOIN photos AS T2 ON T1.id  =  T2.mountain_id WHERE T1.height  >  4000;ВЫБРАТЬ T1.ссылка , T1.наименование ИЗ справочник.горы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.фотографии КАК T2 ПО T1.ссылка = T2.гора ГДЕ T1.высота > 4000
3636;SELECT T1.id ,  T1.name FROM mountain AS T1 JOIN photos AS T2 ON T1.id  =  T2.mountain_id GROUP BY T1.id HAVING count(*)  >=  2;ВЫБРАТЬ T1.ссылка , T1.наименование ИЗ справочник.горы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.фотографии КАК T2 ПО T1.ссылка = T2.гора СГРУППИРОВАТЬ ПО T1.ссылка ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
3637;SELECT T2.name FROM photos AS T1 JOIN camera_lens AS T2 ON T1.camera_lens_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.наименование ИЗ регистрсведений.фотографии КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.объективыкамер КАК T2 ПО T1.объективкамеры = T2.ссылка СГРУППИРОВАТЬ ПО T2.ссылка УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
3638;SELECT T1.name FROM camera_lens AS T1 JOIN photos AS T2 ON T2.camera_lens_id  =  T1.id WHERE T1.brand  =  'Sigma' OR T1.brand  =  'Olympus';"ВЫБРАТЬ T1.наименование ИЗ справочник.объективыкамер КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.фотографии КАК T2 ПО T2.объективкамеры = T1.ссылка ГДЕ T1.бренд = ""Sigma"" ИЛИ T1.бренд = ""Olympus"""
3639;SELECT count(DISTINCT brand) FROM camera_lens;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ бренд) ИЗ справочник.объективыкамер
3640;SELECT count(*) FROM camera_lens WHERE id NOT IN ( SELECT camera_lens_id FROM photos );ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.объективыкамер ГДЕ id НЕ В ( ВЫБРАТЬ camera_lens_id ИЗ регистрсведений.фотографии )
3641;SELECT count(DISTINCT T2.camera_lens_id) FROM mountain AS T1 JOIN photos AS T2 ON T1.id  =  T2.mountain_id WHERE T1.country  =  'Ethiopia';"ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ T2.объективкамеры) ИЗ справочник.горы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.фотографии КАК T2 ПО T1.ссылка = T2.гора ГДЕ T1.страна = ""Ethiopia"""
3644;"SELECT name FROM camera_lens WHERE name LIKE ""%Digital%""";"ВЫБРАТЬ наименование ИЗ справочник.объективыкамер ГДЕ наименование ПОДОБНО ""%Digital%"""
3645;SELECT T1.name ,  count(*) FROM camera_lens AS T1 JOIN photos AS T2 ON T1.id  =  T2.camera_lens_id GROUP BY T1.id ORDER BY count(*);ВЫБРАТЬ T1.наименование , КОЛИЧЕСТВО(*) ИЗ справочник.объективыкамер КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.фотографии КАК T2 ПО T1.ссылка = T2.объективкамеры СГРУППИРОВАТЬ ПО T1.ссылка УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*)
3646;SELECT name FROM channel WHERE OWNER != 'CCTV';"ВЫБРАТЬ наименование ИЗ справочник.каналы ГДЕ владелецканала <> ""CCTV"""
3647;SELECT name FROM channel WHERE OWNER != 'CCTV';"ВЫБРАТЬ наименование ИЗ справочник.каналы ГДЕ владелецканала <> ""CCTV"""
3648;SELECT name FROM channel ORDER BY rating_in_percent DESC;ВЫБРАТЬ наименование ИЗ справочник.каналы УПОРЯДОЧИТЬ ПО рейтингвпроцентах УБЫВ
3649;SELECT name FROM channel ORDER BY rating_in_percent DESC;ВЫБРАТЬ наименование ИЗ справочник.каналы УПОРЯДОЧИТЬ ПО рейтингвпроцентах УБЫВ
3650;SELECT OWNER FROM channel ORDER BY rating_in_percent DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 владелецканала ИЗ справочник.каналы УПОРЯДОЧИТЬ ПО рейтингвпроцентах УБЫВ
3651;SELECT OWNER FROM channel ORDER BY rating_in_percent DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 владелецканала ИЗ справочник.каналы УПОРЯДОЧИТЬ ПО рейтингвпроцентах УБЫВ
3652;SELECT count(*) FROM program;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.программы
3653;SELECT count(*) FROM program;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.программы
3654;SELECT name FROM program ORDER BY launch;ВЫБРАТЬ наименование ИЗ справочник.программы УПОРЯДОЧИТЬ ПО годзапуска
3655;SELECT name FROM program ORDER BY launch;ВЫБРАТЬ наименование ИЗ справочник.программы УПОРЯДОЧИТЬ ПО годзапуска
3656;SELECT name ,  origin ,  OWNER FROM program;ВЫБРАТЬ наименование , странапроисхождения , владелецпрограммы ИЗ справочник.программы
3657;SELECT name ,  origin ,  OWNER FROM program;ВЫБРАТЬ наименование , странапроисхождения , владелецпрограммы ИЗ справочник.программы
3658;SELECT name FROM program ORDER BY launch DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование ИЗ справочник.программы УПОРЯДОЧИТЬ ПО годзапуска УБЫВ
3659;SELECT name FROM program ORDER BY launch DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование ИЗ справочник.программы УПОРЯДОЧИТЬ ПО годзапуска УБЫВ
3660;SELECT sum(Share_in_percent) FROM channel WHERE OWNER  =  'CCTV';"ВЫБРАТЬ СУММА(долявпроцентах) ИЗ справочник.каналы ГДЕ владелецканала = ""CCTV"""
3661;SELECT sum(Share_in_percent) FROM channel WHERE OWNER  =  'CCTV';"ВЫБРАТЬ СУММА(долявпроцентах) ИЗ справочник.каналы ГДЕ владелецканала = ""CCTV"""
3662;SELECT t1.name FROM channel AS t1 JOIN broadcast AS t2 ON t1.channel_id  =  t2.channel_id WHERE t2.time_of_day  =  'Morning';"ВЫБРАТЬ t1.наименование ИЗ справочник.каналы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.трансляции КАК t2 ПО t1.ссылка = t2.канал ГДЕ t2.времясуток = ""Morning"""
3663;SELECT t1.name FROM channel AS t1 JOIN broadcast AS t2 ON t1.channel_id  =  t2.channel_id WHERE t2.time_of_day  =  'Morning';"ВЫБРАТЬ t1.наименование ИЗ справочник.каналы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.трансляции КАК t2 ПО t1.ссылка = t2.канал ГДЕ t2.времясуток = ""Morning"""
3666;SELECT count(*) ,  time_of_day FROM broadcast GROUP BY time_of_day;ВЫБРАТЬ КОЛИЧЕСТВО(*) , времясуток ИЗ регистрсведений.трансляции СГРУППИРОВАТЬ ПО времясуток
3667;SELECT count(*) ,  time_of_day FROM broadcast GROUP BY time_of_day;ВЫБРАТЬ КОЛИЧЕСТВО(*) , времясуток ИЗ регистрсведений.трансляции СГРУППИРОВАТЬ ПО времясуток
3668;SELECT count(DISTINCT program_id) FROM broadcast WHERE time_of_day  =  'Night';"ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ программа) ИЗ регистрсведений.трансляции ГДЕ времясуток = ""Night"""
3669;SELECT count(DISTINCT program_id) FROM broadcast WHERE time_of_day  =  'Night';"ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ программа) ИЗ регистрсведений.трансляции ГДЕ времясуток = ""Night"""
3674;SELECT origin FROM program ORDER BY origin;ВЫБРАТЬ странапроисхождения ИЗ справочник.программы УПОРЯДОЧИТЬ ПО странапроисхождения
3675;SELECT origin FROM program ORDER BY origin;ВЫБРАТЬ странапроисхождения ИЗ справочник.программы УПОРЯДОЧИТЬ ПО странапроисхождения
3676;SELECT count(DISTINCT OWNER) FROM channel;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ владелецканала) ИЗ справочник.каналы
3677;SELECT count(DISTINCT OWNER) FROM channel;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ владелецканала) ИЗ справочник.каналы
3678;SELECT name FROM program WHERE origin != 'Beijing';"ВЫБРАТЬ наименование ИЗ справочник.программы ГДЕ странапроисхождения <> ""Beijing"""
3679;SELECT name FROM program WHERE origin != 'Beijing';"ВЫБРАТЬ наименование ИЗ справочник.программы ГДЕ странапроисхождения <> ""Beijing"""
3680;SELECT name FROM channel WHERE OWNER  =  'CCTV' OR OWNER  =  'HBS';"ВЫБРАТЬ наименование ИЗ справочник.каналы ГДЕ владелецканала = ""CCTV"" ИЛИ владелецканала = ""HBS"""
3681;SELECT name FROM channel WHERE OWNER  =  'CCTV' OR OWNER  =  'HBS';"ВЫБРАТЬ наименование ИЗ справочник.каналы ГДЕ владелецканала = ""CCTV"" ИЛИ владелецканала = ""HBS"""
3682;SELECT sum(Rating_in_percent) ,  OWNER FROM channel GROUP BY OWNER;ВЫБРАТЬ СУММА(рейтингвпроцентах) , владелецканала ИЗ справочник.каналы СГРУППИРОВАТЬ ПО владелецканала
3683;SELECT sum(Rating_in_percent) ,  OWNER FROM channel GROUP BY OWNER;ВЫБРАТЬ СУММА(рейтингвпроцентах) , владелецканала ИЗ справочник.каналы СГРУППИРОВАТЬ ПО владелецканала
3684;SELECT t1.name FROM program AS t1 JOIN broadcast AS t2 ON t1.program_id  =  t2.program_id GROUP BY t2.program_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 t1.наименование ИЗ справочник.программы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.трансляции КАК t2 ПО t1.ссылка = t2.программа СГРУППИРОВАТЬ ПО t2.программа УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
3685;SELECT t1.name FROM program AS t1 JOIN broadcast AS t2 ON t1.program_id  =  t2.program_id GROUP BY t2.program_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 t1.наименование ИЗ справочник.программы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.трансляции КАК t2 ПО t1.ссылка = t2.программа СГРУППИРОВАТЬ ПО t2.программа УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
3686;SELECT count(*) FROM COURSES;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.курсы
3687;SELECT count(*) FROM COURSES;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.курсы
3688;"SELECT course_description FROM COURSES WHERE course_name  =  ""database""";"ВЫБРАТЬ описание ИЗ справочник.курсы ГДЕ наименование = ""database"""
3689;"SELECT course_description FROM COURSES WHERE course_name  =  ""database""";"ВЫБРАТЬ описание ИЗ справочник.курсы ГДЕ наименование = ""database"""
3690;"SELECT address_line_1 FROM Course_Authors_and_Tutors WHERE personal_name	 =  ""Cathrine""";"ВЫБРАТЬ адресстрока1 ИЗ справочник.авторыитьюторыкурсов ГДЕ имя = ""Cathrine"""
3691;"SELECT address_line_1 FROM Course_Authors_and_Tutors WHERE personal_name	 =  ""Cathrine""";"ВЫБРАТЬ адресстрока1 ИЗ справочник.авторыитьюторыкурсов ГДЕ имя = ""Cathrine"""
3692;SELECT address_line_1 FROM Course_Authors_and_Tutors;ВЫБРАТЬ адресстрока1 ИЗ справочник.авторыитьюторыкурсов
3693;SELECT address_line_1 FROM Course_Authors_and_Tutors;ВЫБРАТЬ адресстрока1 ИЗ справочник.авторыитьюторыкурсов
3694;SELECT login_name ,  family_name FROM Course_Authors_and_Tutors;ВЫБРАТЬ логин , фамилия ИЗ справочник.авторыитьюторыкурсов
3695;SELECT login_name ,  family_name FROM Course_Authors_and_Tutors;ВЫБРАТЬ логин , фамилия ИЗ справочник.авторыитьюторыкурсов
3696;SELECT date_of_enrolment ,  date_of_completion FROM Student_Course_Enrolment;ВЫБРАТЬ датазаписи , датаокончания ИЗ регистрсведений.записьнакурсы
3697;SELECT date_of_enrolment ,  date_of_completion FROM Student_Course_Enrolment;ВЫБРАТЬ датазаписи , датаокончания ИЗ регистрсведений.записьнакурсы
3698;SELECT count(DISTINCT student_id) FROM Student_Course_Enrolment;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ студент) ИЗ регистрсведений.записьнакурсы
3699;SELECT count(DISTINCT student_id) FROM Student_Course_Enrolment;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ студент) ИЗ регистрсведений.записьнакурсы
3700;SELECT count(course_id) FROM Student_Course_Enrolment;ВЫБРАТЬ КОЛИЧЕСТВО(курс) ИЗ регистрсведений.записьнакурсы
3701;SELECT count(course_id) FROM Student_Course_Enrolment;ВЫБРАТЬ КОЛИЧЕСТВО(курс) ИЗ регистрсведений.записьнакурсы
3702;"SELECT date_test_taken FROM Student_Tests_Taken WHERE test_result  =  ""Pass""";"ВЫБРАТЬ датапрохождениятеста ИЗ регистрсведений.тестированиестудентов ГДЕ результаттеста = ""Pass"""
3703;"SELECT date_test_taken FROM Student_Tests_Taken WHERE test_result  =  ""Pass""";"ВЫБРАТЬ датапрохождениятеста ИЗ регистрсведений.тестированиестудентов ГДЕ результаттеста = ""Pass"""
3704;"SELECT count(*) FROM Student_Tests_Taken WHERE test_result  =  ""Fail""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.тестированиестудентов ГДЕ результаттеста = ""Fail"""
3705;"SELECT count(*) FROM Student_Tests_Taken WHERE test_result  =  ""Fail""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.тестированиестудентов ГДЕ результаттеста = ""Fail"""
3706;"SELECT login_name FROM Students WHERE family_name  =  ""Ward""";"ВЫБРАТЬ логин ИЗ справочник.студенты ГДЕ фамилия = ""Ward"""
3707;"SELECT login_name FROM Students WHERE family_name  =  ""Ward""";"ВЫБРАТЬ логин ИЗ справочник.студенты ГДЕ фамилия = ""Ward"""
3708;"SELECT date_of_latest_logon FROM Students WHERE family_name  =  ""Jaskolski"" OR family_name  =  ""Langosh""";"ВЫБРАТЬ датапоследнеговхода ИЗ справочник.студенты ГДЕ фамилия = ""Jaskolski"" ИЛИ фамилия = ""Langosh"""
3709;"SELECT date_of_latest_logon FROM Students WHERE family_name  =  ""Jaskolski"" OR family_name  =  ""Langosh""";"ВЫБРАТЬ датапоследнеговхода ИЗ справочник.студенты ГДЕ фамилия = ""Jaskolski"" ИЛИ фамилия = ""Langosh"""
3710;"SELECT COUNT(*) FROM Students WHERE personal_name LIKE ""%son%""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.студенты ГДЕ имя ПОДОБНО ""%son%"""
3711;"SELECT COUNT(*) FROM Students WHERE personal_name LIKE ""%son%""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.студенты ГДЕ имя ПОДОБНО ""%son%"""
3712;SELECT subject_name FROM SUBJECTS;ВЫБРАТЬ наименование ИЗ справочник.предметы
3713;SELECT subject_name FROM SUBJECTS;ВЫБРАТЬ наименование ИЗ справочник.предметы
3714;SELECT * FROM Course_Authors_and_Tutors ORDER BY personal_name;ВЫБРАТЬ * ИЗ справочник.авторыитьюторыкурсов УПОРЯДОЧИТЬ ПО имя
3715;SELECT * FROM Course_Authors_and_Tutors ORDER BY personal_name;ВЫБРАТЬ * ИЗ справочник.авторыитьюторыкурсов УПОРЯДОЧИТЬ ПО имя
3716;SELECT personal_name ,  family_name FROM Students ORDER BY family_name;ВЫБРАТЬ имя , фамилия ИЗ справочник.студенты УПОРЯДОЧИТЬ ПО фамилия
3717;SELECT personal_name ,  family_name FROM Students ORDER BY family_name;ВЫБРАТЬ имя , фамилия ИЗ справочник.студенты УПОРЯДОЧИТЬ ПО фамилия
3718;SELECT test_result ,  COUNT(*) FROM Student_Tests_Taken GROUP BY test_result ORDER BY COUNT(*) DESC;ВЫБРАТЬ результаттеста , КОЛИЧЕСТВО(*) ИЗ регистрсведений.тестированиестудентов СГРУППИРОВАТЬ ПО результаттеста УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
3719;SELECT test_result ,  COUNT(*) FROM Student_Tests_Taken GROUP BY test_result ORDER BY COUNT(*) DESC;ВЫБРАТЬ результаттеста , КОЛИЧЕСТВО(*) ИЗ регистрсведений.тестированиестудентов СГРУППИРОВАТЬ ПО результаттеста УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
3720;"SELECT T1.login_name FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id WHERE T2.course_name  =  ""advanced database""";"ВЫБРАТЬ T1.логин ИЗ справочник.авторыитьюторыкурсов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.курсы КАК T2 ПО T1.ссылка = T2.автор ГДЕ T2.наименование = ""advanced database"""
3721;"SELECT T1.login_name FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id WHERE T2.course_name  =  ""advanced database""";"ВЫБРАТЬ T1.логин ИЗ справочник.авторыитьюторыкурсов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.курсы КАК T2 ПО T1.ссылка = T2.автор ГДЕ T2.наименование = ""advanced database"""
3722;"SELECT T1.address_line_1 FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id WHERE T2.course_name  =  ""operating system"" OR T2.course_name  =  ""data structure""";"ВЫБРАТЬ T1.адресстрока1 ИЗ справочник.авторыитьюторыкурсов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.курсы КАК T2 ПО T1.ссылка = T2.автор ГДЕ T2.наименование = ""operating system"" ИЛИ T2.наименование = ""data structure"""
3723;"SELECT T1.address_line_1 FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id WHERE T2.course_name  =  ""operating system"" OR T2.course_name  =  ""data structure""";"ВЫБРАТЬ T1.адресстрока1 ИЗ справочник.авторыитьюторыкурсов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.курсы КАК T2 ПО T1.ссылка = T2.автор ГДЕ T2.наименование = ""operating system"" ИЛИ T2.наименование = ""data structure"""
3724;SELECT T1.personal_name ,  T1.family_name ,  T2.author_id FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id GROUP BY T2.author_id ORDER BY COUNT(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.имя , T1.фамилия , T2.автор ИЗ справочник.авторыитьюторыкурсов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.курсы КАК T2 ПО T1.ссылка = T2.автор СГРУППИРОВАТЬ ПО T2.автор УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
3725;SELECT T1.personal_name ,  T1.family_name ,  T2.author_id FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id GROUP BY T2.author_id ORDER BY COUNT(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.имя , T1.фамилия , T2.автор ИЗ справочник.авторыитьюторыкурсов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.курсы КАК T2 ПО T1.ссылка = T2.автор СГРУППИРОВАТЬ ПО T2.автор УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
3726;SELECT T1.address_line_1 ,  T2.author_id FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id GROUP BY T2.author_id HAVING Count(*)  >=  2;ВЫБРАТЬ T1.адресстрока1 , T2.автор ИЗ справочник.авторыитьюторыкурсов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.курсы КАК T2 ПО T1.ссылка = T2.автор СГРУППИРОВАТЬ ПО T2.автор ИМЕЮЩИЕ Count(*) >= 2
3727;SELECT T1.address_line_1 ,  T2.author_id FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id GROUP BY T2.author_id HAVING Count(*)  >=  2;ВЫБРАТЬ T1.адресстрока1 , T2.автор ИЗ справочник.авторыитьюторыкурсов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.курсы КАК T2 ПО T1.ссылка = T2.автор СГРУППИРОВАТЬ ПО T2.автор ИМЕЮЩИЕ Count(*) >= 2
3728;"SELECT T2.course_name FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id WHERE T1.personal_name  =  ""Julio""";"ВЫБРАТЬ T2.наименование ИЗ справочник.авторыитьюторыкурсов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.курсы КАК T2 ПО T1.ссылка = T2.автор ГДЕ T1.имя = ""Julio"""
3729;"SELECT T2.course_name FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id WHERE T1.personal_name  =  ""Julio""";"ВЫБРАТЬ T2.наименование ИЗ справочник.авторыитьюторыкурсов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.курсы КАК T2 ПО T1.ссылка = T2.автор ГДЕ T1.имя = ""Julio"""
3730;"SELECT T1.course_name ,  T1.course_description FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id  =  T2.subject_id WHERE T2.subject_name  =  ""Computer Science""";"ВЫБРАТЬ T1.наименование , T1.описание ИЗ справочник.курсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.предметы КАК T2 ПО T1.предмет = T2.ссылка ГДЕ T2.наименование = ""Computer Science"""
3731;"SELECT T1.course_name ,  T1.course_description FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id  =  T2.subject_id WHERE T2.subject_name  =  ""Computer Science""";"ВЫБРАТЬ T1.наименование , T1.описание ИЗ справочник.курсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.предметы КАК T2 ПО T1.предмет = T2.ссылка ГДЕ T2.наименование = ""Computer Science"""
3732;SELECT T1.subject_id ,  T2.subject_name ,  COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id  =  T2.subject_id GROUP BY T1.subject_id;ВЫБРАТЬ T1.предмет , T2.наименование , КОЛИЧЕСТВО(*) ИЗ справочник.курсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.предметы КАК T2 ПО T1.предмет = T2.ссылка СГРУППИРОВАТЬ ПО T1.предмет
3733;SELECT T1.subject_id ,  T2.subject_name ,  COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id  =  T2.subject_id GROUP BY T1.subject_id;ВЫБРАТЬ T1.предмет , T2.наименование , КОЛИЧЕСТВО(*) ИЗ справочник.курсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.предметы КАК T2 ПО T1.предмет = T2.ссылка СГРУППИРОВАТЬ ПО T1.предмет
3734;SELECT T1.subject_id ,  T2.subject_name ,  COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id  =  T2.subject_id GROUP BY T1.subject_id ORDER BY COUNT(*) ASC;ВЫБРАТЬ T1.предмет , T2.наименование , КОЛИЧЕСТВО(*) ИЗ справочник.курсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.предметы КАК T2 ПО T1.предмет = T2.ссылка СГРУППИРОВАТЬ ПО T1.предмет УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) ВОЗР
3735;SELECT T1.subject_id ,  T2.subject_name ,  COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id  =  T2.subject_id GROUP BY T1.subject_id ORDER BY COUNT(*) ASC;ВЫБРАТЬ T1.предмет , T2.наименование , КОЛИЧЕСТВО(*) ИЗ справочник.курсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.предметы КАК T2 ПО T1.предмет = T2.ссылка СГРУППИРОВАТЬ ПО T1.предмет УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) ВОЗР
3736;"SELECT T2.date_of_enrolment FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id WHERE T1.course_name  =  ""Spanish""";"ВЫБРАТЬ T2.датазаписи ИЗ справочник.курсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.записьнакурсы КАК T2 ПО T1.ссылка = T2.курс ГДЕ T1.наименование = ""Spanish"""
3737;"SELECT T2.date_of_enrolment FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id WHERE T1.course_name  =  ""Spanish""";"ВЫБРАТЬ T2.датазаписи ИЗ справочник.курсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.записьнакурсы КАК T2 ПО T1.ссылка = T2.курс ГДЕ T1.наименование = ""Spanish"""
3738;SELECT T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY COUNT(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.наименование ИЗ справочник.курсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.записьнакурсы КАК T2 ПО T1.ссылка = T2.курс СГРУППИРОВАТЬ ПО T1.наименование УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
3739;SELECT T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY COUNT(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.наименование ИЗ справочник.курсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.записьнакурсы КАК T2 ПО T1.ссылка = T2.курс СГРУППИРОВАТЬ ПО T1.наименование УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
3740;SELECT T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name HAVING COUNT(*)  =  1;ВЫБРАТЬ T1.наименование ИЗ справочник.курсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.записьнакурсы КАК T2 ПО T1.ссылка = T2.курс СГРУППИРОВАТЬ ПО T1.наименование ИМЕЮЩИЕ КОЛИЧЕСТВО(*) = 1
3741;SELECT T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name HAVING COUNT(*)  =  1;ВЫБРАТЬ T1.наименование ИЗ справочник.курсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.записьнакурсы КАК T2 ПО T1.ссылка = T2.курс СГРУППИРОВАТЬ ПО T1.наименование ИМЕЮЩИЕ КОЛИЧЕСТВО(*) = 1
3742;SELECT T1.course_description ,  T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name HAVING COUNT(*)  >  2;ВЫБРАТЬ T1.описание , T1.наименование ИЗ справочник.курсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.записьнакурсы КАК T2 ПО T1.ссылка = T2.курс СГРУППИРОВАТЬ ПО T1.наименование ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 2
3743;SELECT T1.course_description ,  T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name HAVING COUNT(*)  >  2;ВЫБРАТЬ T1.описание , T1.наименование ИЗ справочник.курсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.записьнакурсы КАК T2 ПО T1.ссылка = T2.курс СГРУППИРОВАТЬ ПО T1.наименование ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 2
3744;SELECT T1.course_name ,  COUNT(*) FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name;ВЫБРАТЬ T1.наименование , КОЛИЧЕСТВО(*) ИЗ справочник.курсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.записьнакурсы КАК T2 ПО T1.ссылка = T2.курс СГРУППИРОВАТЬ ПО T1.наименование
3745;SELECT T1.course_name ,  COUNT(*) FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name;ВЫБРАТЬ T1.наименование , КОЛИЧЕСТВО(*) ИЗ справочник.курсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.записьнакурсы КАК T2 ПО T1.ссылка = T2.курс СГРУППИРОВАТЬ ПО T1.наименование
3746;"SELECT T1.date_of_enrolment FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id  =  T2.registration_id WHERE T2.test_result  =  ""Pass""";"ВЫБРАТЬ T1.датазаписи ИЗ регистрсведений.записьнакурсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.тестированиестудентов КАК T2 ПО T1.ссылка = T2.записьнакурс ГДЕ T2.результаттеста = ""Pass"""
3747;"SELECT T1.date_of_enrolment FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id  =  T2.registration_id WHERE T2.test_result  =  ""Pass""";"ВЫБРАТЬ T1.датазаписи ИЗ регистрсведений.записьнакурсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.тестированиестудентов КАК T2 ПО T1.ссылка = T2.записьнакурс ГДЕ T2.результаттеста = ""Pass"""
3748;"SELECT T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id  =  T2.registration_id WHERE T2.test_result  =  ""Fail""";"ВЫБРАТЬ T1.датаокончания ИЗ регистрсведений.записьнакурсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.тестированиестудентов КАК T2 ПО T1.ссылка = T2.записьнакурс ГДЕ T2.результаттеста = ""Fail"""
3749;"SELECT T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id  =  T2.registration_id WHERE T2.test_result  =  ""Fail""";"ВЫБРАТЬ T1.датаокончания ИЗ регистрсведений.записьнакурсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.тестированиестудентов КАК T2 ПО T1.ссылка = T2.записьнакурс ГДЕ T2.результаттеста = ""Fail"""
3750;"SELECT T1.date_of_enrolment ,  T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id WHERE T2.personal_name  =  ""Karson""";"ВЫБРАТЬ T1.датазаписи , T1.датаокончания ИЗ регистрсведений.записьнакурсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК T2 ПО T1.студент = T2.ссылка ГДЕ T2.имя = ""Karson"""
3751;"SELECT T1.date_of_enrolment ,  T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id WHERE T2.personal_name  =  ""Karson""";"ВЫБРАТЬ T1.датазаписи , T1.датаокончания ИЗ регистрсведений.записьнакурсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК T2 ПО T1.студент = T2.ссылка ГДЕ T2.имя = ""Karson"""
3752;"SELECT T1.date_of_enrolment ,  T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id WHERE T2.family_name  =  ""Zieme"" AND T2.personal_name  =  ""Bernie""";"ВЫБРАТЬ T1.датазаписи , T1.датаокончания ИЗ регистрсведений.записьнакурсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК T2 ПО T1.студент = T2.ссылка ГДЕ T2.фамилия = ""Zieme"" И T2.имя = ""Bernie"""
3753;"SELECT T1.date_of_enrolment ,  T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id WHERE T2.family_name  =  ""Zieme"" AND T2.personal_name  =  ""Bernie""";"ВЫБРАТЬ T1.датазаписи , T1.датаокончания ИЗ регистрсведений.записьнакурсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК T2 ПО T1.студент = T2.ссылка ГДЕ T2.фамилия = ""Zieme"" И T2.имя = ""Bernie"""
3754;SELECT T1.student_id ,  T2.login_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY COUNT(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.студент , T2.логин ИЗ регистрсведений.записьнакурсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК T2 ПО T1.студент = T2.ссылка СГРУППИРОВАТЬ ПО T1.студент УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
3755;SELECT T1.student_id ,  T2.login_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY COUNT(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.студент , T2.логин ИЗ регистрсведений.записьнакурсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК T2 ПО T1.студент = T2.ссылка СГРУППИРОВАТЬ ПО T1.студент УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
3756;SELECT T1.student_id ,  T2.personal_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING COUNT(*)  >=  2;ВЫБРАТЬ T1.студент , T2.имя ИЗ регистрсведений.записьнакурсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК T2 ПО T1.студент = T2.ссылка СГРУППИРОВАТЬ ПО T1.студент ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
3757;SELECT T1.student_id ,  T2.personal_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING COUNT(*)  >=  2;ВЫБРАТЬ T1.студент , T2.имя ИЗ регистрсведений.записьнакурсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК T2 ПО T1.студент = T2.ссылка СГРУППИРОВАТЬ ПО T1.студент ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
3758;SELECT T1.student_id ,  T2.middle_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING COUNT(*)  <=  2;ВЫБРАТЬ T1.студент , T2.отчество ИЗ регистрсведений.записьнакурсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК T2 ПО T1.студент = T2.ссылка СГРУППИРОВАТЬ ПО T1.студент ИМЕЮЩИЕ КОЛИЧЕСТВО(*) <= 2
3759;SELECT T1.student_id ,  T2.middle_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING COUNT(*)  <=  2;ВЫБРАТЬ T1.студент , T2.отчество ИЗ регистрсведений.записьнакурсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК T2 ПО T1.студент = T2.ссылка СГРУППИРОВАТЬ ПО T1.студент ИМЕЮЩИЕ КОЛИЧЕСТВО(*) <= 2
3762;SELECT count(*) FROM Students WHERE student_id NOT IN (SELECT student_id FROM Student_Course_Enrolment);ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.студенты ГДЕ student_id НЕ В (ВЫБРАТЬ student_id ИЗ регистрсведений.записьнакурсы)
3763;SELECT count(*) FROM Students WHERE student_id NOT IN (SELECT student_id FROM Student_Course_Enrolment);ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.студенты ГДЕ student_id НЕ В (ВЫБРАТЬ student_id ИЗ регистрсведений.записьнакурсы)
3768;SELECT T1.Date_Claim_Made ,  T1.Claim_id FROM Claims AS T1 JOIN Settlements AS T2 ON T1.Claim_id  =  T2.Claim_id GROUP BY T1.Claim_id HAVING count(*)  >  2 UNION SELECT T1.Date_Claim_Made ,  T1.Claim_id FROM Claims AS T1 JOIN Settlements AS T2 ON T1.Claim_id  =  T2.Claim_id WHERE T1.Amount_Claimed  =  ( SELECT max(Amount_Claimed) FROM Claims );ВЫБРАТЬ T1.датаподачи , T1.ссылка ИЗ документ.страховаяпретензия КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.урегулированиепретензии КАК T2 ПО T1.ссылка = T2.претензия СГРУППИРОВАТЬ ПО T1.ссылка ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 2 ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ T1.датаподачи , T1.ссылка ИЗ документ.страховаяпретензия КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.урегулированиепретензии КАК T2 ПО T1.ссылка = T2.претензия ГДЕ T1.суммазаявленная = ( ВЫБРАТЬ МАКСИМУМ(Amount_Claimed) ИЗ документ.страховаяпретензия )
3769;SELECT T1.Date_Claim_Made ,  T1.Claim_id FROM Claims AS T1 JOIN Settlements AS T2 ON T1.Claim_id  =  T2.Claim_id GROUP BY T1.Claim_id HAVING count(*)  >  2 UNION SELECT T1.Date_Claim_Made ,  T1.Claim_id FROM Claims AS T1 JOIN Settlements AS T2 ON T1.Claim_id  =  T2.Claim_id WHERE T1.Amount_Claimed  =  ( SELECT max(Amount_Claimed) FROM Claims );ВЫБРАТЬ T1.датаподачи , T1.ссылка ИЗ документ.страховаяпретензия КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.урегулированиепретензии КАК T2 ПО T1.ссылка = T2.претензия СГРУППИРОВАТЬ ПО T1.ссылка ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 2 ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ T1.датаподачи , T1.ссылка ИЗ документ.страховаяпретензия КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.урегулированиепретензии КАК T2 ПО T1.ссылка = T2.претензия ГДЕ T1.суммазаявленная = ( ВЫБРАТЬ МАКСИМУМ(Amount_Claimed) ИЗ документ.страховаяпретензия )
3772;SELECT Payment_Method_Code ,  Date_Payment_Made ,  Amount_Payment FROM Payments ORDER BY Date_Payment_Made ASC;ВЫБРАТЬ способоплаты , датаплатежа , суммаплатежа ИЗ регистрсведений.платежипоурегулированию УПОРЯДОЧИТЬ ПО датаплатежа ВОЗР
3773;SELECT Payment_Method_Code ,  Date_Payment_Made ,  Amount_Payment FROM Payments ORDER BY Date_Payment_Made ASC;ВЫБРАТЬ способоплаты , датаплатежа , суммаплатежа ИЗ регистрсведений.платежипоурегулированию УПОРЯДОЧИТЬ ПО датаплатежа ВОЗР
3774;SELECT Amount_Settled ,  Amount_Claimed FROM Claims ORDER BY Amount_Claimed DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 суммавыплаты , суммазаявленная ИЗ документ.страховаяпретензия УПОРЯДОЧИТЬ ПО суммазаявленная УБЫВ
3775;SELECT Amount_Settled ,  Amount_Claimed FROM Claims ORDER BY Amount_Claimed DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 суммавыплаты , суммазаявленная ИЗ документ.страховаяпретензия УПОРЯДОЧИТЬ ПО суммазаявленная УБЫВ
3776;SELECT Amount_Settled ,  Amount_Claimed FROM Claims ORDER BY Amount_Settled ASC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 суммавыплаты , суммазаявленная ИЗ документ.страховаяпретензия УПОРЯДОЧИТЬ ПО суммавыплаты ВОЗР
3777;SELECT Amount_Settled ,  Amount_Claimed FROM Claims ORDER BY Amount_Settled ASC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 суммавыплаты , суммазаявленная ИЗ документ.страховаяпретензия УПОРЯДОЧИТЬ ПО суммавыплаты ВОЗР
3778;SELECT Date_Claim_Made ,  Date_Claim_Settled FROM Claims WHERE Amount_Claimed  >  ( SELECT avg(Amount_Claimed) FROM Claims );ВЫБРАТЬ Date_Claim_Made , Date_Claim_Settled ИЗ документ.страховаяпретензия ГДЕ Amount_Claimed > ( ВЫБРАТЬ СРЕДНЕЕ(Amount_Claimed) ИЗ документ.страховаяпретензия )
3779;SELECT Date_Claim_Made ,  Date_Claim_Settled FROM Claims WHERE Amount_Claimed  >  ( SELECT avg(Amount_Claimed) FROM Claims );ВЫБРАТЬ Date_Claim_Made , Date_Claim_Settled ИЗ документ.страховаяпретензия ГДЕ Amount_Claimed > ( ВЫБРАТЬ СРЕДНЕЕ(Amount_Claimed) ИЗ документ.страховаяпретензия )
3780;SELECT Date_Claim_Made FROM Claims WHERE Amount_Settled  <=  ( SELECT avg(Amount_Settled) FROM Claims );ВЫБРАТЬ Date_Claim_Made ИЗ документ.страховаяпретензия ГДЕ Amount_Settled <= ( ВЫБРАТЬ СРЕДНЕЕ(Amount_Settled) ИЗ документ.страховаяпретензия )
3781;SELECT Date_Claim_Made FROM Claims WHERE Amount_Settled  <=  ( SELECT avg(Amount_Settled) FROM Claims );ВЫБРАТЬ Date_Claim_Made ИЗ документ.страховаяпретензия ГДЕ Amount_Settled <= ( ВЫБРАТЬ СРЕДНЕЕ(Amount_Settled) ИЗ документ.страховаяпретензия )
3782;SELECT T1.Claim_id ,  count(*) FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id  =  T2.claim_id GROUP BY T1.claim_id;ВЫБРАТЬ T1.ссылка , КОЛИЧЕСТВО(*) ИЗ документ.страховаяпретензия КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.урегулированиепретензии КАК T2 ПО T1.ссылка = T2.претензия СГРУППИРОВАТЬ ПО T1.ссылка
3783;SELECT T1.Claim_id ,  count(*) FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id  =  T2.claim_id GROUP BY T1.claim_id;ВЫБРАТЬ T1.ссылка , КОЛИЧЕСТВО(*) ИЗ документ.страховаяпретензия КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.урегулированиепретензии КАК T2 ПО T1.ссылка = T2.претензия СГРУППИРОВАТЬ ПО T1.ссылка
3784;SELECT T1.claim_id ,  T1.date_claim_made ,  count(*) FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id  =  T2.claim_id GROUP BY T1.claim_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.ссылка , T1.датаподачи , КОЛИЧЕСТВО(*) ИЗ документ.страховаяпретензия КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.урегулированиепретензии КАК T2 ПО T1.ссылка = T2.претензия СГРУППИРОВАТЬ ПО T1.ссылка УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
3785;SELECT T1.claim_id ,  T1.date_claim_made ,  count(*) FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id  =  T2.claim_id GROUP BY T1.claim_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.ссылка , T1.датаподачи , КОЛИЧЕСТВО(*) ИЗ документ.страховаяпретензия КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.урегулированиепретензии КАК T2 ПО T1.ссылка = T2.претензия СГРУППИРОВАТЬ ПО T1.ссылка УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
3786;SELECT count(*) ,  T1.claim_id FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id  =  T2.claim_id GROUP BY T1.claim_id ORDER BY T1.Date_Claim_Settled DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 КОЛИЧЕСТВО(*) , T1.ссылка ИЗ документ.страховаяпретензия КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.урегулированиепретензии КАК T2 ПО T1.ссылка = T2.претензия СГРУППИРОВАТЬ ПО T1.ссылка УПОРЯДОЧИТЬ ПО T1.датаурегулирования УБЫВ
3787;SELECT count(*) ,  T1.claim_id FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id  =  T2.claim_id GROUP BY T1.claim_id ORDER BY T1.Date_Claim_Settled DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 КОЛИЧЕСТВО(*) , T1.ссылка ИЗ документ.страховаяпретензия КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.урегулированиепретензии КАК T2 ПО T1.ссылка = T2.претензия СГРУППИРОВАТЬ ПО T1.ссылка УПОРЯДОЧИТЬ ПО T1.датаурегулирования УБЫВ
3788;SELECT Date_Claim_Made FROM Claims ORDER BY Date_Claim_Made ASC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 датаподачи ИЗ документ.страховаяпретензия УПОРЯДОЧИТЬ ПО датаподачи ВОЗР
3789;SELECT Date_Claim_Made FROM Claims ORDER BY Date_Claim_Made ASC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 датаподачи ИЗ документ.страховаяпретензия УПОРЯДОЧИТЬ ПО датаподачи ВОЗР
3790;SELECT sum(Amount_Settled) FROM Settlements;ВЫБРАТЬ СУММА(суммавыплаты) ИЗ документ.урегулированиепретензии
3791;SELECT sum(Amount_Settled) FROM Settlements;ВЫБРАТЬ СУММА(суммавыплаты) ИЗ документ.урегулированиепретензии
3792;SELECT T1.customer_details ,  T1.customer_id FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id  =  T2.Customer_id GROUP BY T1.customer_id HAVING count(*)  >  1;ВЫБРАТЬ T1.описание , T1.ссылка ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.полисклиента КАК T2 ПО T1.ссылка = T2.клиент СГРУППИРОВАТЬ ПО T1.ссылка ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 1
3793;SELECT T1.customer_details ,  T1.customer_id FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id  =  T2.Customer_id GROUP BY T1.customer_id HAVING count(*)  >  1;ВЫБРАТЬ T1.описание , T1.ссылка ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.полисклиента КАК T2 ПО T1.ссылка = T2.клиент СГРУППИРОВАТЬ ПО T1.ссылка ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 1
3794;SELECT Date_Claim_Made ,  Date_Claim_Settled FROM Settlements;ВЫБРАТЬ датаподачи , датаурегулирования ИЗ документ.урегулированиепретензии
3795;SELECT Date_Claim_Made ,  Date_Claim_Settled FROM Settlements;ВЫБРАТЬ датаподачи , датаурегулирования ИЗ документ.урегулированиепретензии
3796;SELECT Payment_Method_Code FROM Payments GROUP BY Payment_Method_Code ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 способоплаты ИЗ регистрсведений.платежипоурегулированию СГРУППИРОВАТЬ ПО способоплаты УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
3797;SELECT Payment_Method_Code FROM Payments GROUP BY Payment_Method_Code ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 способоплаты ИЗ регистрсведений.платежипоурегулированию СГРУППИРОВАТЬ ПО способоплаты УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
3798;SELECT Payment_Method_Code FROM Payments GROUP BY Payment_Method_Code ORDER BY count(*) ASC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 способоплаты ИЗ регистрсведений.платежипоурегулированию СГРУППИРОВАТЬ ПО способоплаты УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) ВОЗР
3799;SELECT Payment_Method_Code FROM Payments GROUP BY Payment_Method_Code ORDER BY count(*) ASC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 способоплаты ИЗ регистрсведений.платежипоурегулированию СГРУППИРОВАТЬ ПО способоплаты УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) ВОЗР
3800;SELECT sum(Amount_Payment) FROM Payments;ВЫБРАТЬ СУММА(суммаплатежа) ИЗ регистрсведений.платежипоурегулированию
3801;SELECT sum(Amount_Payment) FROM Payments;ВЫБРАТЬ СУММА(суммаплатежа) ИЗ регистрсведений.платежипоурегулированию
3802;SELECT DISTINCT customer_details FROM Customers;ВЫБРАТЬ РАЗЛИЧНЫЕ описание ИЗ справочник.клиенты
3803;SELECT DISTINCT customer_details FROM Customers;ВЫБРАТЬ РАЗЛИЧНЫЕ описание ИЗ справочник.клиенты
3804;SELECT Policy_Type_Code FROM Customer_Policies GROUP BY Policy_Type_Code ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 кодтипаполиса ИЗ документ.полисклиента СГРУППИРОВАТЬ ПО кодтипаполиса УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
3805;SELECT Policy_Type_Code FROM Customer_Policies GROUP BY Policy_Type_Code ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 кодтипаполиса ИЗ документ.полисклиента СГРУППИРОВАТЬ ПО кодтипаполиса УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
3806;SELECT count(*) FROM Settlements;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ документ.урегулированиепретензии
3807;SELECT count(*) FROM Settlements;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ документ.урегулированиепретензии
3808;SELECT Payment_ID ,  Date_Payment_Made ,  Amount_Payment FROM Payments WHERE Payment_Method_Code  =  'Visa';"ВЫБРАТЬ платеж , датаплатежа , суммаплатежа ИЗ регистрсведений.платежипоурегулированию ГДЕ способоплаты = ""Visa"""
3809;SELECT Payment_ID ,  Date_Payment_Made ,  Amount_Payment FROM Payments WHERE Payment_Method_Code  =  'Visa';"ВЫБРАТЬ платеж , датаплатежа , суммаплатежа ИЗ регистрсведений.платежипоурегулированию ГДЕ способоплаты = ""Visa"""
3812;SELECT T1.claim_id ,  T1.date_claim_made ,  T1.Date_Claim_Settled FROM Claims AS T1 JOIN Settlements AS T2 ON T1.Claim_id  =  T2.Claim_id GROUP BY T1.claim_id HAVING count(*)  =  1;ВЫБРАТЬ T1.ссылка , T1.датаподачи , T1.датаурегулирования ИЗ документ.страховаяпретензия КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.урегулированиепретензии КАК T2 ПО T1.ссылка = T2.претензия СГРУППИРОВАТЬ ПО T1.ссылка ИМЕЮЩИЕ КОЛИЧЕСТВО(*) = 1
3813;SELECT T1.claim_id ,  T1.date_claim_made ,  T1.Date_Claim_Settled FROM Claims AS T1 JOIN Settlements AS T2 ON T1.Claim_id  =  T2.Claim_id GROUP BY T1.claim_id HAVING count(*)  =  1;ВЫБРАТЬ T1.ссылка , T1.датаподачи , T1.датаурегулирования ИЗ документ.страховаяпретензия КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.урегулированиепретензии КАК T2 ПО T1.ссылка = T2.претензия СГРУППИРОВАТЬ ПО T1.ссылка ИМЕЮЩИЕ КОЛИЧЕСТВО(*) = 1
3814;SELECT sum(Amount_Claimed) FROM Claims;ВЫБРАТЬ СУММА(суммазаявленная) ИЗ документ.страховаяпретензия
3815;SELECT sum(Amount_Claimed) FROM Claims;ВЫБРАТЬ СУММА(суммазаявленная) ИЗ документ.страховаяпретензия
3816;"SELECT name FROM department GROUP BY departmentID ORDER BY count(departmentID) DESC LIMIT 1;";"ВЫБРАТЬ наименование ИЗ справочник.отделения СГРУППИРОВАТЬ ПО ссылка УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(ссылка) УБЫВ LIMIT 1;"
3817;"SELECT name FROM department GROUP BY departmentID ORDER BY count(departmentID) DESC LIMIT 1;";"ВЫБРАТЬ наименование ИЗ справочник.отделения СГРУППИРОВАТЬ ПО ссылка УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(ссылка) УБЫВ LIMIT 1;"
3818;"SELECT head FROM department GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;";"ВЫБРАТЬ руководитель ИЗ справочник.отделения СГРУППИРОВАТЬ ПО ссылка УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(ссылка) LIMIT 1;"
3819;"SELECT head FROM department GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;";"ВЫБРАТЬ руководитель ИЗ справочник.отделения СГРУППИРОВАТЬ ПО ссылка УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(ссылка) LIMIT 1;"
3820;"SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;";"ВЫБРАТЬ T2.наименование , T2.должность ИЗ справочник.отделения КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.врачи КАК T2 ПО T1.руководитель = T2.ссылка СГРУППИРОВАТЬ ПО departmentID УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(departmentID) LIMIT 1;"
3821;"SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;";"ВЫБРАТЬ T2.наименование , T2.должность ИЗ справочник.отделения КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.врачи КАК T2 ПО T1.руководитель = T2.ссылка СГРУППИРОВАТЬ ПО departmentID УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(departmentID) LIMIT 1;"
3822;SELECT name FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn;ВЫБРАТЬ name ИЗ документ.прием КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.пациенты КАК T2 ПО T1.пациент = T2.ссылка
3823;SELECT name FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn;ВЫБРАТЬ name ИЗ документ.прием КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.пациенты КАК T2 ПО T1.пациент = T2.ссылка
3824;SELECT name ,  phone FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn GROUP BY T1.patient HAVING count(*)  >  1;ВЫБРАТЬ name , phone ИЗ документ.прием КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.пациенты КАК T2 ПО T1.пациент = T2.ссылка СГРУППИРОВАТЬ ПО T1.пациент ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 1
3825;SELECT name ,  phone FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn GROUP BY T1.patient HAVING count(*)  >  1;ВЫБРАТЬ name , phone ИЗ документ.прием КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.пациенты КАК T2 ПО T1.пациент = T2.ссылка СГРУППИРОВАТЬ ПО T1.пациент ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 1
3826;SELECT appointmentid FROM appointment ORDER BY START DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 ссылка ИЗ документ.прием УПОРЯДОЧИТЬ ПО началоприема УБЫВ
3827;SELECT appointmentid FROM appointment ORDER BY START DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 ссылка ИЗ документ.прием УПОРЯДОЧИТЬ ПО началоприема УБЫВ
3828;SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID;ВЫБРАТЬ T2.наименование ИЗ документ.прием КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.врачи КАК T2 ПО T1.врач = T2.ссылка
3829;SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID;ВЫБРАТЬ T2.наименование ИЗ документ.прием КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.врачи КАК T2 ПО T1.врач = T2.ссылка
3832;SELECT T1.name ,  T3.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID  =  T2.physician JOIN department AS T3 ON T2.department  =  T3.DepartmentID WHERE T2.PrimaryAffiliation  =  1;ВЫБРАТЬ T1.наименование , T3.наименование ИЗ справочник.врачи КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.аффилиацияврачей КАК T2 ПО T1.ссылка = T2.врач ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.отделения КАК T3 ПО T2.отделение = T3.ссылка ГДЕ T2.основнаяаффилиация = 1
3833;SELECT T1.name ,  T3.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID  =  T2.physician JOIN department AS T3 ON T2.department  =  T3.DepartmentID WHERE T2.PrimaryAffiliation  =  1;ВЫБРАТЬ T1.наименование , T3.наименование ИЗ справочник.врачи КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.аффилиацияврачей КАК T2 ПО T1.ссылка = T2.врач ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.отделения КАК T3 ПО T2.отделение = T3.ссылка ГДЕ T2.основнаяаффилиация = 1
3834;SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.наименование ИЗ справочник.пациенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.прием КАК T2 ПО T1.ссылка = T2.пациент УПОРЯДОЧИТЬ ПО T2.началоприема УБЫВ
3835;SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.наименование ИЗ справочник.пациенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.прием КАК T2 ПО T1.ссылка = T2.пациент УПОРЯДОЧИТЬ ПО T2.началоприема УБЫВ
3836;SELECT count(patient) FROM stay WHERE room  =  112;ВЫБРАТЬ КОЛИЧЕСТВО(пациент) ИЗ документ.госпитализация ГДЕ палата = 112
3837;SELECT count(patient) FROM stay WHERE room  =  112;ВЫБРАТЬ КОЛИЧЕСТВО(пациент) ИЗ документ.госпитализация ГДЕ палата = 112
3838;"SELECT count(T1.SSN) FROM patient AS T1 JOIN prescribes AS T2 ON T1.SSN  =  T2.patient JOIN physician AS T3 ON T2.physician  =  T3.employeeid WHERE T3.name = ""John Dorian""";"ВЫБРАТЬ КОЛИЧЕСТВО(T1.ссылка) ИЗ справочник.пациенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.назначениялекарств КАК T2 ПО T1.ссылка = T2.пациент ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.врачи КАК T3 ПО T2.врач = T3.ссылка ГДЕ T3.наименование = ""John Dorian"""
3839;"SELECT count(T1.SSN) FROM patient AS T1 JOIN prescribes AS T2 ON T1.SSN  =  T2.patient JOIN physician AS T3 ON T2.physician  =  T3.employeeid WHERE T3.name = ""John Dorian""";"ВЫБРАТЬ КОЛИЧЕСТВО(T1.ссылка) ИЗ справочник.пациенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.назначениялекарств КАК T2 ПО T1.ссылка = T2.пациент ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.врачи КАК T3 ПО T2.врач = T3.ссылка ГДЕ T3.наименование = ""John Dorian"""
3840;SELECT T4.name FROM stay AS T1 JOIN patient AS T2 ON T1.Patient  =  T2.SSN JOIN Prescribes AS T3 ON T3.Patient  =  T2.SSN JOIN Medication AS T4 ON T3.Medication  =  T4.Code WHERE room  =  111;ВЫБРАТЬ T4.наименование ИЗ документ.госпитализация КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.пациенты КАК T2 ПО T1.пациент = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.назначениялекарств КАК T3 ПО T3.пациент = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.лекарства КАК T4 ПО T3.лекарство = T4.ссылка ГДЕ room = 111
3841;SELECT T4.name FROM stay AS T1 JOIN patient AS T2 ON T1.Patient  =  T2.SSN JOIN Prescribes AS T3 ON T3.Patient  =  T2.SSN JOIN Medication AS T4 ON T3.Medication  =  T4.Code WHERE room  =  111;ВЫБРАТЬ T4.наименование ИЗ документ.госпитализация КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.пациенты КАК T2 ПО T1.пациент = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.назначениялекарств КАК T3 ПО T3.пациент = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.лекарства КАК T4 ПО T3.лекарство = T4.ссылка ГДЕ room = 111
3842;SELECT patient FROM stay WHERE room  =  111 ORDER BY staystart DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 пациент ИЗ документ.госпитализация ГДЕ палата = 111 УПОРЯДОЧИТЬ ПО датапоступления УБЫВ
3843;SELECT patient FROM stay WHERE room  =  111 ORDER BY staystart DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 пациент ИЗ документ.госпитализация ГДЕ палата = 111 УПОРЯДОЧИТЬ ПО датапоступления УБЫВ
3844;SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.наименование ИЗ справочник.медсестры КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.прием КАК T2 ПО T1.ссылка = T2.подготовившаямедсестра СГРУППИРОВАТЬ ПО T1.ссылка УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
3845;SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.наименование ИЗ справочник.медсестры КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.прием КАК T2 ПО T1.ссылка = T2.подготовившаямедсестра СГРУППИРОВАТЬ ПО T1.ссылка УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
3846;SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid;ВЫБРАТЬ T1.наименование , КОЛИЧЕСТВО(*) ИЗ справочник.врачи КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.пациенты КАК T2 ПО T1.ссылка = T2.лечащийврач СГРУППИРОВАТЬ ПО T1.ссылка
3847;SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid;ВЫБРАТЬ T1.наименование , КОЛИЧЕСТВО(*) ИЗ справочник.врачи КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.пациенты КАК T2 ПО T1.ссылка = T2.лечащийврач СГРУППИРОВАТЬ ПО T1.ссылка
3848;SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1;ВЫБРАТЬ T1.наименование ИЗ справочник.врачи КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.пациенты КАК T2 ПО T1.ссылка = T2.лечащийврач СГРУППИРОВАТЬ ПО T1.ссылка ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 1
3849;SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1;ВЫБРАТЬ T1.наименование ИЗ справочник.врачи КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.пациенты КАК T2 ПО T1.ссылка = T2.лечащийврач СГРУППИРОВАТЬ ПО T1.ссылка ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 1
3850;SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor;ВЫБРАТЬ КОЛИЧЕСТВО(*) , T1.этаж ИЗ справочник.блоки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.палаты КАК T2 ПО T1.этаж = T2.этаж И T1.кодблока = T2.кодблока СГРУППИРОВАТЬ ПО T1.этаж
3851;SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor;ВЫБРАТЬ КОЛИЧЕСТВО(*) , T1.этаж ИЗ справочник.блоки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.палаты КАК T2 ПО T1.этаж = T2.этаж И T1.кодблока = T2.кодблока СГРУППИРОВАТЬ ПО T1.этаж
3852;SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode;ВЫБРАТЬ КОЛИЧЕСТВО(*) , T1.кодблока ИЗ справочник.блоки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.палаты КАК T2 ПО T1.этаж = T2.этаж И T1.кодблока = T2.кодблока СГРУППИРОВАТЬ ПО T1.кодблока
3853;SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode;ВЫБРАТЬ КОЛИЧЕСТВО(*) , T1.кодблока ИЗ справочник.блоки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.палаты КАК T2 ПО T1.этаж = T2.этаж И T1.кодблока = T2.кодблока СГРУППИРОВАТЬ ПО T1.кодблока
3854;SELECT DISTINCT blockcode FROM room WHERE unavailable  =  0;ВЫБРАТЬ РАЗЛИЧНЫЕ кодблока ИЗ справочник.палаты ГДЕ недоступна = 0
3855;SELECT DISTINCT blockcode FROM room WHERE unavailable  =  0;ВЫБРАТЬ РАЗЛИЧНЫЕ кодблока ИЗ справочник.палаты ГДЕ недоступна = 0
3856;SELECT count(DISTINCT roomtype) FROM room;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ типпалаты) ИЗ справочник.палаты
3857;SELECT count(DISTINCT roomtype) FROM room;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ типпалаты) ИЗ справочник.палаты
3858;"SELECT DISTINCT T1.name FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid = T2.physician JOIN medication AS T3 ON T3.code = T2.medication WHERE T3.name  =  ""Thesisin""";"ВЫБРАТЬ РАЗЛИЧНЫЕ T1.наименование ИЗ справочник.врачи КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.назначениялекарств КАК T2 ПО T1.ссылка = T2.врач ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.лекарства КАК T3 ПО T3.ссылка = T2.лекарство ГДЕ T3.наименование = ""Thesisin"""
3859;"SELECT DISTINCT T1.name FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid = T2.physician JOIN medication AS T3 ON T3.code = T2.medication WHERE T3.name  =  ""Thesisin""";"ВЫБРАТЬ РАЗЛИЧНЫЕ T1.наименование ИЗ справочник.врачи КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.назначениялекарств КАК T2 ПО T1.ссылка = T2.врач ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.лекарства КАК T3 ПО T3.ссылка = T2.лекарство ГДЕ T3.наименование = ""Thesisin"""
3860;"SELECT DISTINCT T1.name ,  T1.position FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid = T2.physician JOIN medication AS T3 ON T3.code = T2.medication WHERE T3.Brand  =  ""X""";"ВЫБРАТЬ РАЗЛИЧНЫЕ T1.наименование , T1.должность ИЗ справочник.врачи КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.назначениялекарств КАК T2 ПО T1.ссылка = T2.врач ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.лекарства КАК T3 ПО T3.ссылка = T2.лекарство ГДЕ T3.бренд = ""X"""
3861;"SELECT DISTINCT T1.name ,  T1.position FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid = T2.physician JOIN medication AS T3 ON T3.code = T2.medication WHERE T3.Brand  =  ""X""";"ВЫБРАТЬ РАЗЛИЧНЫЕ T1.наименование , T1.должность ИЗ справочник.врачи КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.назначениялекарств КАК T2 ПО T1.ссылка = T2.врач ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.лекарства КАК T3 ПО T3.ссылка = T2.лекарство ГДЕ T3.бренд = ""X"""
3862;SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand;ВЫБРАТЬ КОЛИЧЕСТВО(*) , T1.наименование ИЗ справочник.лекарства КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.назначениялекарств КАК T2 ПО T1.ссылка = T2.лекарство СГРУППИРОВАТЬ ПО T1.бренд
3863;SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand;ВЫБРАТЬ КОЛИЧЕСТВО(*) , T1.наименование ИЗ справочник.лекарства КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.назначениялекарств КАК T2 ПО T1.ссылка = T2.лекарство СГРУППИРОВАТЬ ПО T1.бренд
3864;SELECT name FROM physician WHERE POSITION LIKE '%senior%';"ВЫБРАТЬ наименование ИЗ справочник.врачи ГДЕ должность ПОДОБНО ""%senior%"""
3865;SELECT name FROM physician WHERE POSITION LIKE '%senior%';"ВЫБРАТЬ наименование ИЗ справочник.врачи ГДЕ должность ПОДОБНО ""%senior%"""
3866;SELECT patient FROM undergoes ORDER BY dateundergoes LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 пациент ИЗ регистрсведений.процедурыпациентов УПОРЯДОЧИТЬ ПО датапроцедуры
3867;SELECT patient FROM undergoes ORDER BY dateundergoes LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 пациент ИЗ регистрсведений.процедурыпациентов УПОРЯДОЧИТЬ ПО датапроцедуры
3868;SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN patient AS T2 ON T1.patient = T2.SSN JOIN stay AS T3 ON T1.Stay  =  T3.StayID WHERE T3.room  =  111;ВЫБРАТЬ РАЗЛИЧНЫЕ T2.наименование ИЗ регистрсведений.процедурыпациентов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.пациенты КАК T2 ПО T1.пациент = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.госпитализация КАК T3 ПО T1.госпитализация = T3.ссылка ГДЕ T3.палата = 111
3869;SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN patient AS T2 ON T1.patient = T2.SSN JOIN stay AS T3 ON T1.Stay  =  T3.StayID WHERE T3.room  =  111;ВЫБРАТЬ РАЗЛИЧНЫЕ T2.наименование ИЗ регистрсведений.процедурыпациентов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.пациенты КАК T2 ПО T1.пациент = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.госпитализация КАК T3 ПО T1.госпитализация = T3.ссылка ГДЕ T3.палата = 111
3870;SELECT DISTINCT name FROM nurse ORDER BY name;ВЫБРАТЬ РАЗЛИЧНЫЕ наименование ИЗ справочник.медсестры УПОРЯДОЧИТЬ ПО наименование
3871;SELECT DISTINCT name FROM nurse ORDER BY name;ВЫБРАТЬ РАЗЛИЧНЫЕ наименование ИЗ справочник.медсестры УПОРЯДОЧИТЬ ПО наименование
3872;SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN nurse AS T2 ON T1.AssistingNurse  =  T2.EmployeeID;ВЫБРАТЬ РАЗЛИЧНЫЕ T2.наименование ИЗ регистрсведений.процедурыпациентов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.медсестры КАК T2 ПО T1.ассистент = T2.ссылка
3873;SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN nurse AS T2 ON T1.AssistingNurse  =  T2.EmployeeID;ВЫБРАТЬ РАЗЛИЧНЫЕ T2.наименование ИЗ регистрсведений.процедурыпациентов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.медсестры КАК T2 ПО T1.ассистент = T2.ссылка
3874;SELECT DISTINCT name FROM medication ORDER BY name;ВЫБРАТЬ РАЗЛИЧНЫЕ наименование ИЗ справочник.лекарства УПОРЯДОЧИТЬ ПО наименование
3875;SELECT DISTINCT name FROM medication ORDER BY name;ВЫБРАТЬ РАЗЛИЧНЫЕ наименование ИЗ справочник.лекарства УПОРЯДОЧИТЬ ПО наименование
3876;SELECT T1.name FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid = T2.physician ORDER BY T2.dose DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.наименование ИЗ справочник.врачи КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.назначениялекарств КАК T2 ПО T1.ссылка = T2.врач УПОРЯДОЧИТЬ ПО T2.дозировка УБЫВ
3877;SELECT T1.name FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid = T2.physician ORDER BY T2.dose DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.наименование ИЗ справочник.врачи КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.назначениялекарств КАК T2 ПО T1.ссылка = T2.врач УПОРЯДОЧИТЬ ПО T2.дозировка УБЫВ
3878;SELECT physician ,  department FROM affiliated_with WHERE primaryaffiliation  =  1;ВЫБРАТЬ врач , отделение ИЗ регистрсведений.аффилиацияврачей ГДЕ основнаяаффилиация = 1
3879;SELECT physician ,  department FROM affiliated_with WHERE primaryaffiliation  =  1;ВЫБРАТЬ врач , отделение ИЗ регистрсведений.аффилиацияврачей ГДЕ основнаяаффилиация = 1
3880;SELECT DISTINCT T2.name FROM affiliated_with AS T1 JOIN department AS T2 ON T1.department = T2.departmentid WHERE PrimaryAffiliation  =  1;ВЫБРАТЬ РАЗЛИЧНЫЕ T2.наименование ИЗ регистрсведений.аффилиацияврачей КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.отделения КАК T2 ПО T1.отделение = T2.ссылка ГДЕ PrimaryAffiliation = 1
3881;SELECT DISTINCT T2.name FROM affiliated_with AS T1 JOIN department AS T2 ON T1.department = T2.departmentid WHERE PrimaryAffiliation  =  1;ВЫБРАТЬ РАЗЛИЧНЫЕ T2.наименование ИЗ регистрсведений.аффилиацияврачей КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.отделения КАК T2 ПО T1.отделение = T2.ссылка ГДЕ PrimaryAffiliation = 1
3882;SELECT nurse FROM on_call WHERE blockfloor  =  1 AND blockcode  =  1;ВЫБРАТЬ медсестра ИЗ регистрсведений.дежурства ГДЕ этаж = 1 И кодблока = 1
3883;SELECT nurse FROM on_call WHERE blockfloor  =  1 AND blockcode  =  1;ВЫБРАТЬ медсестра ИЗ регистрсведений.дежурства ГДЕ этаж = 1 И кодблока = 1
3884;SELECT MAX(cost) ,  MIN(cost) ,  AVG(cost) FROM procedures;ВЫБРАТЬ MAX(стоимость) , MIN(стоимость) , AVG(стоимость) ИЗ справочник.процедуры
3885;SELECT MAX(cost) ,  MIN(cost) ,  AVG(cost) FROM procedures;ВЫБРАТЬ MAX(стоимость) , MIN(стоимость) , AVG(стоимость) ИЗ справочник.процедуры
3886;SELECT name ,  cost FROM procedures ORDER BY cost DESC;ВЫБРАТЬ наименование , стоимость ИЗ справочник.процедуры УПОРЯДОЧИТЬ ПО стоимость УБЫВ
3887;SELECT name ,  cost FROM procedures ORDER BY cost DESC;ВЫБРАТЬ наименование , стоимость ИЗ справочник.процедуры УПОРЯДОЧИТЬ ПО стоимость УБЫВ
3888;SELECT name FROM procedures ORDER BY cost LIMIT 3;ВЫБРАТЬ ПЕРВЫЕ 3 наименование ИЗ справочник.процедуры УПОРЯДОЧИТЬ ПО стоимость
3889;SELECT name FROM procedures ORDER BY cost LIMIT 3;ВЫБРАТЬ ПЕРВЫЕ 3 наименование ИЗ справочник.процедуры УПОРЯДОЧИТЬ ПО стоимость
3890;SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T3.cost  >  5000;ВЫБРАТЬ T1.наименование ИЗ справочник.врачи КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.сертификатыврачей КАК T2 ПО T1.ссылка = T2.врач ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.процедуры КАК T3 ПО T3.ссылка = T2.процедура ГДЕ T3.стоимость > 5000
3891;SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T3.cost  >  5000;ВЫБРАТЬ T1.наименование ИЗ справочник.врачи КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.сертификатыврачей КАК T2 ПО T1.ссылка = T2.врач ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.процедуры КАК T3 ПО T3.ссылка = T2.процедура ГДЕ T3.стоимость > 5000
3892;SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.наименование ИЗ справочник.врачи КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.сертификатыврачей КАК T2 ПО T1.ссылка = T2.врач ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.процедуры КАК T3 ПО T3.ссылка = T2.процедура УПОРЯДОЧИТЬ ПО T3.стоимость УБЫВ
3893;SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.наименование ИЗ справочник.врачи КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.сертификатыврачей КАК T2 ПО T1.ссылка = T2.врач ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.процедуры КАК T3 ПО T3.ссылка = T2.процедура УПОРЯДОЧИТЬ ПО T3.стоимость УБЫВ
3894;"SELECT avg(T3.cost) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  ""John Wen""";"ВЫБРАТЬ СРЕДНЕЕ(T3.стоимость) ИЗ справочник.врачи КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.сертификатыврачей КАК T2 ПО T1.ссылка = T2.врач ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.процедуры КАК T3 ПО T3.ссылка = T2.процедура ГДЕ T1.наименование = ""John Wen"""
3895;"SELECT avg(T3.cost) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  ""John Wen""";"ВЫБРАТЬ СРЕДНЕЕ(T3.стоимость) ИЗ справочник.врачи КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.сертификатыврачей КАК T2 ПО T1.ссылка = T2.врач ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.процедуры КАК T3 ПО T3.ссылка = T2.процедура ГДЕ T1.наименование = ""John Wen"""
3896;"SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  ""John Wen""";"ВЫБРАТЬ T3.наименование ИЗ справочник.врачи КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.сертификатыврачей КАК T2 ПО T1.ссылка = T2.врач ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.процедуры КАК T3 ПО T3.ссылка = T2.процедура ГДЕ T1.наименование = ""John Wen"""
3897;"SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  ""John Wen""";"ВЫБРАТЬ T3.наименование ИЗ справочник.врачи КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.сертификатыврачей КАК T2 ПО T1.ссылка = T2.врач ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.процедуры КАК T3 ПО T3.ссылка = T2.процедура ГДЕ T1.наименование = ""John Wen"""
3898;"SELECT name FROM procedures WHERE cost  >  1000 UNION SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  ""John Wen""";"ВЫБРАТЬ name ИЗ справочник.процедуры ГДЕ cost > 1000 ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ T3.наименование ИЗ справочник.врачи КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.сертификатыврачей КАК T2 ПО T1.ссылка = T2.врач ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.процедуры КАК T3 ПО T3.ссылка = T2.процедура ГДЕ T1.наименование = ""John Wen"""
3899;"SELECT name FROM procedures WHERE cost  >  1000 UNION SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  ""John Wen""";"ВЫБРАТЬ name ИЗ справочник.процедуры ГДЕ cost > 1000 ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ T3.наименование ИЗ справочник.врачи КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.сертификатыврачей КАК T2 ПО T1.ссылка = T2.врач ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.процедуры КАК T3 ПО T3.ссылка = T2.процедура ГДЕ T1.наименование = ""John Wen"""
3906;SELECT T1.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID  =  T2.physician JOIN department AS T3 ON T2.department  =  T3.DepartmentID WHERE T3.name  =  'Surgery' OR T3.name  =  'Psychiatry';"ВЫБРАТЬ T1.наименование ИЗ справочник.врачи КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.аффилиацияврачей КАК T2 ПО T1.ссылка = T2.врач ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.отделения КАК T3 ПО T2.отделение = T3.ссылка ГДЕ T3.наименование = ""Surgery"" ИЛИ T3.наименование = ""Psychiatry"""
3907;SELECT T1.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID  =  T2.physician JOIN department AS T3 ON T2.department  =  T3.DepartmentID WHERE T3.name  =  'Surgery' OR T3.name  =  'Psychiatry';"ВЫБРАТЬ T1.наименование ИЗ справочник.врачи КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.аффилиацияврачей КАК T2 ПО T1.ссылка = T2.врач ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.отделения КАК T3 ПО T2.отделение = T3.ссылка ГДЕ T3.наименование = ""Surgery"" ИЛИ T3.наименование = ""Psychiatry"""
3910;SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' );"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.пациенты ГДЕ SSN НЕ В ( ВЫБРАТЬ T1.пациент ИЗ регистрсведений.назначениялекарств КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.лекарства КАК T2 ПО T1.лекарство = T2.ссылка ГДЕ T2.наименование = ""Procrastin-X"" )"
3911;SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' );"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.пациенты ГДЕ SSN НЕ В ( ВЫБРАТЬ T1.пациент ИЗ регистрсведений.назначениялекарств КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.лекарства КАК T2 ПО T1.лекарство = T2.ссылка ГДЕ T2.наименование = ""Procrastin-X"" )"
3912;SELECT count(*) FROM appointment;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ документ.прием
3913;SELECT count(*) FROM appointment;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ документ.прием
3914;SELECT DISTINCT T1.name FROM nurse AS T1 JOIN on_call AS T2 ON T1.EmployeeID  =  T2.nurse;ВЫБРАТЬ РАЗЛИЧНЫЕ T1.наименование ИЗ справочник.медсестры КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.дежурства КАК T2 ПО T1.ссылка = T2.медсестра
3915;SELECT DISTINCT T1.name FROM nurse AS T1 JOIN on_call AS T2 ON T1.EmployeeID  =  T2.nurse;ВЫБРАТЬ РАЗЛИЧНЫЕ T1.наименование ИЗ справочник.медсестры КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.дежурства КАК T2 ПО T1.ссылка = T2.медсестра
3916;SELECT count(*) FROM ship;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.миссии
3917;SELECT count(*) FROM ship;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.миссии
3918;SELECT Name FROM ship ORDER BY Tonnage ASC;ВЫБРАТЬ корабль ИЗ регистрсведений.миссии УПОРЯДОЧИТЬ ПО местоположение ВОЗР
3919;SELECT Name FROM ship ORDER BY Tonnage ASC;ВЫБРАТЬ корабль ИЗ регистрсведений.миссии УПОРЯДОЧИТЬ ПО местоположение ВОЗР
3920;SELECT TYPE ,  Nationality FROM ship;ВЫБРАТЬ код , годзапуска ИЗ регистрсведений.миссии
3921;SELECT TYPE ,  Nationality FROM ship;ВЫБРАТЬ код , годзапуска ИЗ регистрсведений.миссии
3922;"SELECT Name FROM ship WHERE Nationality != ""United States""";"ВЫБРАТЬ корабль ИЗ регистрсведений.миссии ГДЕ годзапуска <> ""United States"""
3923;"SELECT Name FROM ship WHERE Nationality != ""United States""";"ВЫБРАТЬ корабль ИЗ регистрсведений.миссии ГДЕ годзапуска <> ""United States"""
3924;"SELECT Name FROM ship WHERE Nationality  =  ""United States"" OR Nationality  =  ""United Kingdom""";"ВЫБРАТЬ корабль ИЗ регистрсведений.миссии ГДЕ годзапуска = ""United States"" ИЛИ годзапуска = ""United Kingdom"""
3925;"SELECT Name FROM ship WHERE Nationality  =  ""United States"" OR Nationality  =  ""United Kingdom""";"ВЫБРАТЬ корабль ИЗ регистрсведений.миссии ГДЕ годзапуска = ""United States"" ИЛИ годзапуска = ""United Kingdom"""
3926;SELECT Name FROM ship ORDER BY Tonnage DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 корабль ИЗ регистрсведений.миссии УПОРЯДОЧИТЬ ПО местоположение УБЫВ
3927;SELECT Name FROM ship ORDER BY Tonnage DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 корабль ИЗ регистрсведений.миссии УПОРЯДОЧИТЬ ПО местоположение УБЫВ
3928;SELECT TYPE ,  COUNT(*) FROM ship GROUP BY TYPE;ВЫБРАТЬ код , КОЛИЧЕСТВО(*) ИЗ регистрсведений.миссии СГРУППИРОВАТЬ ПО код
3929;SELECT TYPE ,  COUNT(*) FROM ship GROUP BY TYPE;ВЫБРАТЬ код , КОЛИЧЕСТВО(*) ИЗ регистрсведений.миссии СГРУППИРОВАТЬ ПО код
3930;SELECT TYPE FROM ship GROUP BY TYPE ORDER BY COUNT(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 код ИЗ регистрсведений.миссии СГРУППИРОВАТЬ ПО код УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
3931;SELECT TYPE FROM ship GROUP BY TYPE ORDER BY COUNT(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 код ИЗ регистрсведений.миссии СГРУППИРОВАТЬ ПО код УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
3932;SELECT Nationality FROM ship GROUP BY Nationality HAVING COUNT(*)  >  2;ВЫБРАТЬ годзапуска ИЗ регистрсведений.миссии СГРУППИРОВАТЬ ПО годзапуска ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 2
3933;SELECT Nationality FROM ship GROUP BY Nationality HAVING COUNT(*)  >  2;ВЫБРАТЬ годзапуска ИЗ регистрсведений.миссии СГРУППИРОВАТЬ ПО годзапуска ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 2
3934;SELECT TYPE ,  avg(Tonnage) FROM ship GROUP BY TYPE;ВЫБРАТЬ код , СРЕДНЕЕ(местоположение) ИЗ регистрсведений.миссии СГРУППИРОВАТЬ ПО код
3935;SELECT TYPE ,  avg(Tonnage) FROM ship GROUP BY TYPE;ВЫБРАТЬ код , СРЕДНЕЕ(местоположение) ИЗ регистрсведений.миссии СГРУППИРОВАТЬ ПО код
3936;SELECT T1.Code ,  T1.Fate ,  T2.Name FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID  =  T2.Ship_ID;ВЫБРАТЬ T1.тип , T1.Fate , T2.корабль ИЗ справочник.корабли КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.миссии КАК T2 ПО T1.наименование = T2.ссылка
3937;SELECT T1.Code ,  T1.Fate ,  T2.Name FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID  =  T2.Ship_ID;ВЫБРАТЬ T1.тип , T1.Fate , T2.корабль ИЗ справочник.корабли КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.миссии КАК T2 ПО T1.наименование = T2.ссылка
3938;SELECT T2.Name FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID  =  T2.Ship_ID WHERE T1.Launched_Year  >  1928;ВЫБРАТЬ T2.корабль ИЗ справочник.корабли КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.миссии КАК T2 ПО T1.наименование = T2.ссылка ГДЕ T1.национальность > 1928
3939;SELECT T2.Name FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID  =  T2.Ship_ID WHERE T1.Launched_Year  >  1928;ВЫБРАТЬ T2.корабль ИЗ справочник.корабли КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.миссии КАК T2 ПО T1.наименование = T2.ссылка ГДЕ T1.национальность > 1928
3940;"SELECT DISTINCT T1.Fate FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID  =  T2.Ship_ID WHERE T2.Nationality  =  ""United States""";"ВЫБРАТЬ РАЗЛИЧНЫЕ T1.Fate ИЗ справочник.корабли КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.миссии КАК T2 ПО T1.наименование = T2.ссылка ГДЕ T2.годзапуска = ""United States"""
3941;"SELECT DISTINCT T1.Fate FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID  =  T2.Ship_ID WHERE T2.Nationality  =  ""United States""";"ВЫБРАТЬ РАЗЛИЧНЫЕ T1.Fate ИЗ справочник.корабли КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.миссии КАК T2 ПО T1.наименование = T2.ссылка ГДЕ T2.годзапуска = ""United States"""
3942;SELECT Name FROM ship WHERE Ship_ID NOT IN (SELECT Ship_ID FROM mission);ВЫБРАТЬ Name ИЗ регистрсведений.миссии ГДЕ Ship_ID НЕ В (ВЫБРАТЬ Ship_ID ИЗ справочник.корабли)
3943;SELECT Name FROM ship WHERE Ship_ID NOT IN (SELECT Ship_ID FROM mission);ВЫБРАТЬ Name ИЗ регистрсведений.миссии ГДЕ Ship_ID НЕ В (ВЫБРАТЬ Ship_ID ИЗ справочник.корабли)
3946;SELECT count(*) FROM list;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.ученики
3947;SELECT count(*) FROM list;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.ученики
3948;SELECT lastname FROM list WHERE classroom  =  111;ВЫБРАТЬ фамилия ИЗ справочник.ученики ГДЕ кабинет = 111
3949;SELECT lastname FROM list WHERE classroom  =  111;ВЫБРАТЬ фамилия ИЗ справочник.ученики ГДЕ кабинет = 111
3950;SELECT firstname FROM list WHERE classroom  =  108;ВЫБРАТЬ имя ИЗ справочник.ученики ГДЕ кабинет = 108
3951;SELECT firstname FROM list WHERE classroom  =  108;ВЫБРАТЬ имя ИЗ справочник.ученики ГДЕ кабинет = 108
3952;SELECT DISTINCT firstname FROM list WHERE classroom  =  107;ВЫБРАТЬ РАЗЛИЧНЫЕ имя ИЗ справочник.ученики ГДЕ кабинет = 107
3953;SELECT DISTINCT firstname FROM list WHERE classroom  =  107;ВЫБРАТЬ РАЗЛИЧНЫЕ имя ИЗ справочник.ученики ГДЕ кабинет = 107
3954;SELECT DISTINCT classroom ,  grade FROM list;ВЫБРАТЬ РАЗЛИЧНЫЕ кабинет , класс ИЗ справочник.ученики
3955;SELECT DISTINCT classroom ,  grade FROM list;ВЫБРАТЬ РАЗЛИЧНЫЕ кабинет , класс ИЗ справочник.ученики
3956;SELECT DISTINCT grade FROM list WHERE classroom  =  103;ВЫБРАТЬ РАЗЛИЧНЫЕ класс ИЗ справочник.ученики ГДЕ кабинет = 103
3957;SELECT DISTINCT grade FROM list WHERE classroom  =  103;ВЫБРАТЬ РАЗЛИЧНЫЕ класс ИЗ справочник.ученики ГДЕ кабинет = 103
3958;SELECT DISTINCT grade FROM list WHERE classroom  =  105;ВЫБРАТЬ РАЗЛИЧНЫЕ класс ИЗ справочник.ученики ГДЕ кабинет = 105
3959;SELECT DISTINCT grade FROM list WHERE classroom  =  105;ВЫБРАТЬ РАЗЛИЧНЫЕ класс ИЗ справочник.ученики ГДЕ кабинет = 105
3960;SELECT DISTINCT classroom FROM list WHERE grade  =  4;ВЫБРАТЬ РАЗЛИЧНЫЕ кабинет ИЗ справочник.ученики ГДЕ класс = 4
3961;SELECT DISTINCT classroom FROM list WHERE grade  =  4;ВЫБРАТЬ РАЗЛИЧНЫЕ кабинет ИЗ справочник.ученики ГДЕ класс = 4
3962;SELECT DISTINCT classroom FROM list WHERE grade  =  5;ВЫБРАТЬ РАЗЛИЧНЫЕ кабинет ИЗ справочник.ученики ГДЕ класс = 5
3963;SELECT DISTINCT classroom FROM list WHERE grade  =  5;ВЫБРАТЬ РАЗЛИЧНЫЕ кабинет ИЗ справочник.ученики ГДЕ класс = 5
3964;SELECT DISTINCT T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE grade  =  5;ВЫБРАТЬ РАЗЛИЧНЫЕ T2.фамилия ИЗ справочник.ученики КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.учителя КАК T2 ПО T1.кабинет = T2.кабинет ГДЕ grade = 5
3965;SELECT DISTINCT T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE grade  =  5;ВЫБРАТЬ РАЗЛИЧНЫЕ T2.фамилия ИЗ справочник.ученики КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.учителя КАК T2 ПО T1.кабинет = T2.кабинет ГДЕ grade = 5
3966;SELECT DISTINCT T2.firstname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE grade  =  1;ВЫБРАТЬ РАЗЛИЧНЫЕ T2.имя ИЗ справочник.ученики КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.учителя КАК T2 ПО T1.кабинет = T2.кабинет ГДЕ grade = 1
3967;SELECT DISTINCT T2.firstname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE grade  =  1;ВЫБРАТЬ РАЗЛИЧНЫЕ T2.имя ИЗ справочник.ученики КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.учителя КАК T2 ПО T1.кабинет = T2.кабинет ГДЕ grade = 1
3968;SELECT firstname FROM teachers WHERE classroom  =  110;ВЫБРАТЬ имя ИЗ справочник.учителя ГДЕ кабинет = 110
3969;SELECT firstname FROM teachers WHERE classroom  =  110;ВЫБРАТЬ имя ИЗ справочник.учителя ГДЕ кабинет = 110
3970;SELECT lastname FROM teachers WHERE classroom  =  109;ВЫБРАТЬ фамилия ИЗ справочник.учителя ГДЕ кабинет = 109
3971;SELECT lastname FROM teachers WHERE classroom  =  109;ВЫБРАТЬ фамилия ИЗ справочник.учителя ГДЕ кабинет = 109
3972;SELECT DISTINCT firstname ,  lastname FROM teachers;ВЫБРАТЬ РАЗЛИЧНЫЕ имя , фамилия ИЗ справочник.учителя
3973;SELECT DISTINCT firstname ,  lastname FROM teachers;ВЫБРАТЬ РАЗЛИЧНЫЕ имя , фамилия ИЗ справочник.учителя
3974;SELECT DISTINCT firstname ,  lastname FROM list;ВЫБРАТЬ РАЗЛИЧНЫЕ имя , фамилия ИЗ справочник.ученики
3975;SELECT DISTINCT firstname ,  lastname FROM list;ВЫБРАТЬ РАЗЛИЧНЫЕ имя , фамилия ИЗ справочник.ученики
3976;"SELECT T1.firstname ,  T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  ""OTHA"" AND T2.lastname  =  ""MOYER""";"ВЫБРАТЬ T1.имя , T1.фамилия ИЗ справочник.ученики КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.учителя КАК T2 ПО T1.кабинет = T2.кабинет ГДЕ T2.имя = ""OTHA"" И T2.фамилия = ""MOYER"""
3977;"SELECT T1.firstname ,  T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  ""OTHA"" AND T2.lastname  =  ""MOYER""";"ВЫБРАТЬ T1.имя , T1.фамилия ИЗ справочник.ученики КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.учителя КАК T2 ПО T1.кабинет = T2.кабинет ГДЕ T2.имя = ""OTHA"" И T2.фамилия = ""MOYER"""
3978;"SELECT T1.firstname ,  T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  ""MARROTTE"" AND T2.lastname  =  ""KIRK""";"ВЫБРАТЬ T1.имя , T1.фамилия ИЗ справочник.ученики КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.учителя КАК T2 ПО T1.кабинет = T2.кабинет ГДЕ T2.имя = ""MARROTTE"" И T2.фамилия = ""KIRK"""
3979;"SELECT T1.firstname ,  T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  ""MARROTTE"" AND T2.lastname  =  ""KIRK""";"ВЫБРАТЬ T1.имя , T1.фамилия ИЗ справочник.ученики КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.учителя КАК T2 ПО T1.кабинет = T2.кабинет ГДЕ T2.имя = ""MARROTTE"" И T2.фамилия = ""KIRK"""
3980;"SELECT T2.firstname ,  T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.firstname  =  ""EVELINA"" AND T1.lastname  =  ""BROMLEY""";"ВЫБРАТЬ T2.имя , T2.фамилия ИЗ справочник.ученики КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.учителя КАК T2 ПО T1.кабинет = T2.кабинет ГДЕ T1.имя = ""EVELINA"" И T1.фамилия = ""BROMLEY"""
3981;"SELECT T2.firstname ,  T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.firstname  =  ""EVELINA"" AND T1.lastname  =  ""BROMLEY""";"ВЫБРАТЬ T2.имя , T2.фамилия ИЗ справочник.ученики КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.учителя КАК T2 ПО T1.кабинет = T2.кабинет ГДЕ T1.имя = ""EVELINA"" И T1.фамилия = ""BROMLEY"""
3982;"SELECT T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.firstname  =  ""GELL"" AND T1.lastname  =  ""TAMI""";"ВЫБРАТЬ T2.фамилия ИЗ справочник.ученики КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.учителя КАК T2 ПО T1.кабинет = T2.кабинет ГДЕ T1.имя = ""GELL"" И T1.фамилия = ""TAMI"""
3983;"SELECT T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.firstname  =  ""GELL"" AND T1.lastname  =  ""TAMI""";"ВЫБРАТЬ T2.фамилия ИЗ справочник.ученики КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.учителя КАК T2 ПО T1.кабинет = T2.кабинет ГДЕ T1.имя = ""GELL"" И T1.фамилия = ""TAMI"""
3984;"SELECT count(*) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  ""LORIA"" AND T2.lastname  =  ""ONDERSMA""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.ученики КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.учителя КАК T2 ПО T1.кабинет = T2.кабинет ГДЕ T2.имя = ""LORIA"" И T2.фамилия = ""ONDERSMA"""
3985;"SELECT count(*) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  ""LORIA"" AND T2.lastname  =  ""ONDERSMA""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.ученики КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.учителя КАК T2 ПО T1.кабинет = T2.кабинет ГДЕ T2.имя = ""LORIA"" И T2.фамилия = ""ONDERSMA"""
3986;"SELECT count(*) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  ""KAWA"" AND T2.lastname  =  ""GORDON""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.ученики КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.учителя КАК T2 ПО T1.кабинет = T2.кабинет ГДЕ T2.имя = ""KAWA"" И T2.фамилия = ""GORDON"""
3987;"SELECT count(*) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  ""KAWA"" AND T2.lastname  =  ""GORDON""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.ученики КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.учителя КАК T2 ПО T1.кабинет = T2.кабинет ГДЕ T2.имя = ""KAWA"" И T2.фамилия = ""GORDON"""
3988;"SELECT count(*) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  ""TARRING"" AND T2.lastname  =  ""LEIA""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.ученики КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.учителя КАК T2 ПО T1.кабинет = T2.кабинет ГДЕ T2.имя = ""TARRING"" И T2.фамилия = ""LEIA"""
3989;"SELECT count(*) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  ""TARRING"" AND T2.lastname  =  ""LEIA""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.ученики КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.учителя КАК T2 ПО T1.кабинет = T2.кабинет ГДЕ T2.имя = ""TARRING"" И T2.фамилия = ""LEIA"""
3990;"SELECT count(*) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.firstname  =  ""CHRISSY"" AND T1.lastname  =  ""NABOZNY""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.ученики КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.учителя КАК T2 ПО T1.кабинет = T2.кабинет ГДЕ T1.имя = ""CHRISSY"" И T1.фамилия = ""NABOZNY"""
3991;"SELECT count(*) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.firstname  =  ""CHRISSY"" AND T1.lastname  =  ""NABOZNY""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.ученики КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.учителя КАК T2 ПО T1.кабинет = T2.кабинет ГДЕ T1.имя = ""CHRISSY"" И T1.фамилия = ""NABOZNY"""
3992;"SELECT count(*) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.firstname  =  ""MADLOCK"" AND T1.lastname  =  ""RAY""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.ученики КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.учителя КАК T2 ПО T1.кабинет = T2.кабинет ГДЕ T1.имя = ""MADLOCK"" И T1.фамилия = ""RAY"""
3993;"SELECT count(*) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.firstname  =  ""MADLOCK"" AND T1.lastname  =  ""RAY""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.ученики КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.учителя КАК T2 ПО T1.кабинет = T2.кабинет ГДЕ T1.имя = ""MADLOCK"" И T1.фамилия = ""RAY"""
3996;"SELECT DISTINCT T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.grade  =  3 AND T2.firstname != ""COVIN"" AND T2.lastname != ""JEROME""";"ВЫБРАТЬ РАЗЛИЧНЫЕ T1.фамилия ИЗ справочник.ученики КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.учителя КАК T2 ПО T1.кабинет = T2.кабинет ГДЕ T1.класс = 3 И T2.имя <> ""COVIN"" И T2.фамилия <> ""JEROME"""
3997;"SELECT DISTINCT T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.grade  =  3 AND T2.firstname != ""COVIN"" AND T2.lastname != ""JEROME""";"ВЫБРАТЬ РАЗЛИЧНЫЕ T1.фамилия ИЗ справочник.ученики КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.учителя КАК T2 ПО T1.кабинет = T2.кабинет ГДЕ T1.класс = 3 И T2.имя <> ""COVIN"" И T2.фамилия <> ""JEROME"""
3998;SELECT grade ,  count(DISTINCT classroom) ,  count(*) FROM list GROUP BY grade;ВЫБРАТЬ класс , КОЛИЧЕСТВО(РАЗЛИЧНЫЕ кабинет) , КОЛИЧЕСТВО(*) ИЗ справочник.ученики СГРУППИРОВАТЬ ПО класс
3999;SELECT grade ,  count(DISTINCT classroom) ,  count(*) FROM list GROUP BY grade;ВЫБРАТЬ класс , КОЛИЧЕСТВО(РАЗЛИЧНЫЕ кабинет) , КОЛИЧЕСТВО(*) ИЗ справочник.ученики СГРУППИРОВАТЬ ПО класс
4000;SELECT classroom ,  count(DISTINCT grade) FROM list GROUP BY classroom;ВЫБРАТЬ кабинет , КОЛИЧЕСТВО(РАЗЛИЧНЫЕ класс) ИЗ справочник.ученики СГРУППИРОВАТЬ ПО кабинет
4001;SELECT classroom ,  count(DISTINCT grade) FROM list GROUP BY classroom;ВЫБРАТЬ кабинет , КОЛИЧЕСТВО(РАЗЛИЧНЫЕ класс) ИЗ справочник.ученики СГРУППИРОВАТЬ ПО кабинет
4002;SELECT classroom FROM list GROUP BY classroom ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 кабинет ИЗ справочник.ученики СГРУППИРОВАТЬ ПО кабинет УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
4003;SELECT classroom FROM list GROUP BY classroom ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 кабинет ИЗ справочник.ученики СГРУППИРОВАТЬ ПО кабинет УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
4004;SELECT classroom ,  count(*) FROM list GROUP BY classroom;ВЫБРАТЬ кабинет , КОЛИЧЕСТВО(*) ИЗ справочник.ученики СГРУППИРОВАТЬ ПО кабинет
4005;SELECT classroom ,  count(*) FROM list GROUP BY classroom;ВЫБРАТЬ кабинет , КОЛИЧЕСТВО(*) ИЗ справочник.ученики СГРУППИРОВАТЬ ПО кабинет
4006;"SELECT classroom ,  count(*) FROM list WHERE grade  =  ""0"" GROUP BY classroom";"ВЫБРАТЬ кабинет , КОЛИЧЕСТВО(*) ИЗ справочник.ученики ГДЕ класс = ""0"" СГРУППИРОВАТЬ ПО кабинет"
4007;"SELECT classroom ,  count(*) FROM list WHERE grade  =  ""0"" GROUP BY classroom";"ВЫБРАТЬ кабинет , КОЛИЧЕСТВО(*) ИЗ справочник.ученики ГДЕ класс = ""0"" СГРУППИРОВАТЬ ПО кабинет"
4008;"SELECT classroom ,  count(*) FROM list WHERE grade  =  ""4"" GROUP BY classroom";"ВЫБРАТЬ кабинет , КОЛИЧЕСТВО(*) ИЗ справочник.ученики ГДЕ класс = ""4"" СГРУППИРОВАТЬ ПО кабинет"
4009;"SELECT classroom ,  count(*) FROM list WHERE grade  =  ""4"" GROUP BY classroom";"ВЫБРАТЬ кабинет , КОЛИЧЕСТВО(*) ИЗ справочник.ученики ГДЕ класс = ""4"" СГРУППИРОВАТЬ ПО кабинет"
4010;SELECT T2.firstname ,  T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom GROUP BY T2.firstname ,  T2.lastname ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.имя , T2.фамилия ИЗ справочник.ученики КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.учителя КАК T2 ПО T1.кабинет = T2.кабинет СГРУППИРОВАТЬ ПО T2.имя , T2.фамилия УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
4011;SELECT T2.firstname ,  T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom GROUP BY T2.firstname ,  T2.lastname ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.имя , T2.фамилия ИЗ справочник.ученики КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.учителя КАК T2 ПО T1.кабинет = T2.кабинет СГРУППИРОВАТЬ ПО T2.имя , T2.фамилия УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
4012;SELECT count(*) ,  classroom FROM list GROUP BY classroom;ВЫБРАТЬ КОЛИЧЕСТВО(*) , кабинет ИЗ справочник.ученики СГРУППИРОВАТЬ ПО кабинет
4013;SELECT count(*) ,  classroom FROM list GROUP BY classroom;ВЫБРАТЬ КОЛИЧЕСТВО(*) , кабинет ИЗ справочник.ученики СГРУППИРОВАТЬ ПО кабинет
4014;SELECT count(*) FROM company WHERE Headquarters  =  'USA';"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.компании ГДЕ штабквартира = ""USA"""
4015;SELECT Name FROM company ORDER BY Sales_in_Billion ASC;ВЫБРАТЬ наименование ИЗ справочник.компании УПОРЯДОЧИТЬ ПО продаживмлрд ВОЗР
4016;SELECT Headquarters ,  Industry FROM company;ВЫБРАТЬ штабквартира , отрасль ИЗ справочник.компании
4017;"SELECT Name FROM company WHERE Industry  =  ""Banking"" OR Industry  =  ""Retailing""";"ВЫБРАТЬ наименование ИЗ справочник.компании ГДЕ отрасль = ""Banking"" ИЛИ отрасль = ""Retailing"""
4018;SELECT max(Market_Value_in_Billion) ,  min(Market_Value_in_Billion) FROM company;ВЫБРАТЬ МАКСИМУМ(рыночнаястоимостьвмлрд) , МИНИМУМ(рыночнаястоимостьвмлрд) ИЗ справочник.компании
4019;SELECT Headquarters FROM company ORDER BY Sales_in_Billion DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 штабквартира ИЗ справочник.компании УПОРЯДОЧИТЬ ПО продаживмлрд УБЫВ
4020;SELECT Headquarters ,  COUNT(*) FROM company GROUP BY Headquarters;ВЫБРАТЬ штабквартира , КОЛИЧЕСТВО(*) ИЗ справочник.компании СГРУППИРОВАТЬ ПО штабквартира
4021;SELECT Headquarters FROM company GROUP BY Headquarters ORDER BY COUNT(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 штабквартира ИЗ справочник.компании СГРУППИРОВАТЬ ПО штабквартира УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
4022;SELECT Headquarters FROM company GROUP BY Headquarters HAVING COUNT(*)  >=  2;ВЫБРАТЬ штабквартира ИЗ справочник.компании СГРУППИРОВАТЬ ПО штабквартира ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
4024;SELECT T3.Name ,  T2.Name FROM employment AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID JOIN company AS T3 ON T1.Company_ID  =  T3.Company_ID;ВЫБРАТЬ T3.наименование , T2.наименование ИЗ регистрсведений.трудоустройство КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.люди КАК T2 ПО T1.человек = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.компании КАК T3 ПО T1.компания = T3.ссылка
4025;SELECT T3.Name ,  T2.Name FROM employment AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID JOIN company AS T3 ON T1.Company_ID  =  T3.Company_ID ORDER BY T1.Year_working;ВЫБРАТЬ T3.наименование , T2.наименование ИЗ регистрсведений.трудоустройство КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.люди КАК T2 ПО T1.человек = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.компании КАК T3 ПО T1.компания = T3.ссылка УПОРЯДОЧИТЬ ПО T1.стажвкомпании
4026;SELECT T2.Name FROM employment AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID JOIN company AS T3 ON T1.Company_ID  =  T3.Company_ID WHERE T3.Sales_in_Billion  >  200;ВЫБРАТЬ T2.наименование ИЗ регистрсведений.трудоустройство КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.люди КАК T2 ПО T1.человек = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.компании КАК T3 ПО T1.компания = T3.ссылка ГДЕ T3.продаживмлрд > 200
4027;SELECT T3.Name ,  COUNT(*) FROM employment AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID JOIN company AS T3 ON T1.Company_ID  =  T3.Company_ID GROUP BY T3.Name;ВЫБРАТЬ T3.наименование , КОЛИЧЕСТВО(*) ИЗ регистрсведений.трудоустройство КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.люди КАК T2 ПО T1.человек = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.компании КАК T3 ПО T1.компания = T3.ссылка СГРУППИРОВАТЬ ПО T3.наименование
4028;SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM employment);ВЫБРАТЬ Name ИЗ справочник.люди ГДЕ People_ID НЕ В (ВЫБРАТЬ People_ID ИЗ регистрсведений.трудоустройство)
4029;SELECT name FROM company WHERE Sales_in_Billion  >  200 ORDER BY Sales_in_Billion ,  Profits_in_Billion DESC;ВЫБРАТЬ наименование ИЗ справочник.компании ГДЕ продаживмлрд > 200 УПОРЯДОЧИТЬ ПО продаживмлрд , прибыльвмлрд УБЫВ
4030;SELECT count(*) FROM film;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.фильмы
4031;SELECT count(*) FROM film;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.фильмы
4032;SELECT DISTINCT Director FROM film;ВЫБРАТЬ РАЗЛИЧНЫЕ режиссер ИЗ справочник.фильмы
4033;SELECT DISTINCT Director FROM film;ВЫБРАТЬ РАЗЛИЧНЫЕ режиссер ИЗ справочник.фильмы
4034;SELECT avg(Gross_in_dollar) FROM film;ВЫБРАТЬ СРЕДНЕЕ(сборывдолларах) ИЗ справочник.фильмы
4035;SELECT avg(Gross_in_dollar) FROM film;ВЫБРАТЬ СРЕДНЕЕ(сборывдолларах) ИЗ справочник.фильмы
4036;SELECT Low_Estimate ,  High_Estimate FROM film_market_estimation;ВЫБРАТЬ нижняяоценка , верхняяоценка ИЗ регистрсведений.оценкифильмовнарынках
4037;SELECT Low_Estimate ,  High_Estimate FROM film_market_estimation;ВЫБРАТЬ нижняяоценка , верхняяоценка ИЗ регистрсведений.оценкифильмовнарынках
4038;SELECT TYPE FROM film_market_estimation WHERE YEAR  =  1995;ВЫБРАТЬ тип ИЗ регистрсведений.оценкифильмовнарынках ГДЕ год = 1995
4039;SELECT TYPE FROM film_market_estimation WHERE YEAR  =  1995;ВЫБРАТЬ тип ИЗ регистрсведений.оценкифильмовнарынках ГДЕ год = 1995
4040;SELECT max(Number_cities) ,  min(Number_cities) FROM market;ВЫБРАТЬ МАКСИМУМ(количествогородов) , МИНИМУМ(количествогородов) ИЗ справочник.рынки
4041;SELECT max(Number_cities) ,  min(Number_cities) FROM market;ВЫБРАТЬ МАКСИМУМ(количествогородов) , МИНИМУМ(количествогородов) ИЗ справочник.рынки
4042;SELECT count(*) FROM market WHERE Number_cities  <  300;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.рынки ГДЕ количествогородов < 300
4043;SELECT count(*) FROM market WHERE Number_cities  <  300;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.рынки ГДЕ количествогородов < 300
4044;SELECT Country FROM market ORDER BY Country ASC;ВЫБРАТЬ страна ИЗ справочник.рынки УПОРЯДОЧИТЬ ПО страна ВОЗР
4045;SELECT Country FROM market ORDER BY Country ASC;ВЫБРАТЬ страна ИЗ справочник.рынки УПОРЯДОЧИТЬ ПО страна ВОЗР
4046;SELECT Country FROM market ORDER BY Number_cities DESC;ВЫБРАТЬ страна ИЗ справочник.рынки УПОРЯДОЧИТЬ ПО количествогородов УБЫВ
4047;SELECT Country FROM market ORDER BY Number_cities DESC;ВЫБРАТЬ страна ИЗ справочник.рынки УПОРЯДОЧИТЬ ПО количествогородов УБЫВ
4048;SELECT T1.Title ,  T2.Type FROM film AS T1 JOIN film_market_estimation AS T2 ON T1.Film_ID  =  T2.Film_ID;ВЫБРАТЬ T1.наименование , T2.тип ИЗ справочник.фильмы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.оценкифильмовнарынках КАК T2 ПО T1.ссылка = T2.фильм
4049;SELECT T1.Title ,  T2.Type FROM film AS T1 JOIN film_market_estimation AS T2 ON T1.Film_ID  =  T2.Film_ID;ВЫБРАТЬ T1.наименование , T2.тип ИЗ справочник.фильмы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.оценкифильмовнарынках КАК T2 ПО T1.ссылка = T2.фильм
4050;SELECT DISTINCT T1.Director FROM film AS T1 JOIN film_market_estimation AS T2 ON T1.Film_ID  =  T2.Film_ID WHERE T2.Year  =  1995;ВЫБРАТЬ РАЗЛИЧНЫЕ T1.режиссер ИЗ справочник.фильмы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.оценкифильмовнарынках КАК T2 ПО T1.ссылка = T2.фильм ГДЕ T2.год = 1995
4051;SELECT DISTINCT T1.Director FROM film AS T1 JOIN film_market_estimation AS T2 ON T1.Film_ID  =  T2.Film_ID WHERE T2.Year  =  1995;ВЫБРАТЬ РАЗЛИЧНЫЕ T1.режиссер ИЗ справочник.фильмы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.оценкифильмовнарынках КАК T2 ПО T1.ссылка = T2.фильм ГДЕ T2.год = 1995
4052;SELECT avg(T2.Number_cities) FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.Market_ID  =  T2.Market_ID WHERE T1.Low_Estimate  >  10000;ВЫБРАТЬ СРЕДНЕЕ(T2.количествогородов) ИЗ регистрсведений.оценкифильмовнарынках КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.рынки КАК T2 ПО T1.рынок = T2.ссылка ГДЕ T1.нижняяоценка > 10000
4053;SELECT avg(T2.Number_cities) FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.Market_ID  =  T2.Market_ID WHERE T1.Low_Estimate  >  10000;ВЫБРАТЬ СРЕДНЕЕ(T2.количествогородов) ИЗ регистрсведений.оценкифильмовнарынках КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.рынки КАК T2 ПО T1.рынок = T2.ссылка ГДЕ T1.нижняяоценка > 10000
4054;SELECT T2.Country ,  T1.Year FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.Market_ID  =  T2.Market_ID;ВЫБРАТЬ T2.страна , T1.год ИЗ регистрсведений.оценкифильмовнарынках КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.рынки КАК T2 ПО T1.рынок = T2.ссылка
4055;SELECT T2.Country ,  T1.Year FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.Market_ID  =  T2.Market_ID;ВЫБРАТЬ T2.страна , T1.год ИЗ регистрсведений.оценкифильмовнарынках КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.рынки КАК T2 ПО T1.рынок = T2.ссылка
4056;"SELECT T1.Year FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.Market_ID  =  T2.Market_ID WHERE T2.Country  =  ""Japan"" ORDER BY T1.Year DESC";"ВЫБРАТЬ T1.год ИЗ регистрсведений.оценкифильмовнарынках КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.рынки КАК T2 ПО T1.рынок = T2.ссылка ГДЕ T2.страна = ""Japan"" УПОРЯДОЧИТЬ ПО T1.год УБЫВ"
4057;"SELECT T1.Year FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.Market_ID  =  T2.Market_ID WHERE T2.Country  =  ""Japan"" ORDER BY T1.Year DESC";"ВЫБРАТЬ T1.год ИЗ регистрсведений.оценкифильмовнарынках КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.рынки КАК T2 ПО T1.рынок = T2.ссылка ГДЕ T2.страна = ""Japan"" УПОРЯДОЧИТЬ ПО T1.год УБЫВ"
4058;SELECT Studio ,  COUNT(*) FROM film GROUP BY Studio;ВЫБРАТЬ студия , КОЛИЧЕСТВО(*) ИЗ справочник.фильмы СГРУППИРОВАТЬ ПО студия
4059;SELECT Studio ,  COUNT(*) FROM film GROUP BY Studio;ВЫБРАТЬ студия , КОЛИЧЕСТВО(*) ИЗ справочник.фильмы СГРУППИРОВАТЬ ПО студия
4060;SELECT Studio FROM film GROUP BY Studio ORDER BY COUNT(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 студия ИЗ справочник.фильмы СГРУППИРОВАТЬ ПО студия УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
4061;SELECT Studio FROM film GROUP BY Studio ORDER BY COUNT(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 студия ИЗ справочник.фильмы СГРУППИРОВАТЬ ПО студия УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
4062;SELECT Studio FROM film GROUP BY Studio HAVING COUNT(*)  >=  2;ВЫБРАТЬ студия ИЗ справочник.фильмы СГРУППИРОВАТЬ ПО студия ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
4063;SELECT Studio FROM film GROUP BY Studio HAVING COUNT(*)  >=  2;ВЫБРАТЬ студия ИЗ справочник.фильмы СГРУППИРОВАТЬ ПО студия ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
4064;SELECT Title FROM film WHERE Film_ID NOT IN (SELECT Film_ID FROM film_market_estimation);ВЫБРАТЬ Title ИЗ справочник.фильмы ГДЕ Film_ID НЕ В (ВЫБРАТЬ Film_ID ИЗ регистрсведений.оценкифильмовнарынках)
4065;SELECT Title FROM film WHERE Film_ID NOT IN (SELECT Film_ID FROM film_market_estimation);ВЫБРАТЬ Title ИЗ справочник.фильмы ГДЕ Film_ID НЕ В (ВЫБРАТЬ Film_ID ИЗ регистрсведений.оценкифильмовнарынках)
4068;"SELECT title ,  Studio FROM film WHERE Studio LIKE ""%Universal%""";"ВЫБРАТЬ наименование , студия ИЗ справочник.фильмы ГДЕ студия ПОДОБНО ""%Universal%"""
4069;"SELECT title ,  Studio FROM film WHERE Studio LIKE ""%Universal%""";"ВЫБРАТЬ наименование , студия ИЗ справочник.фильмы ГДЕ студия ПОДОБНО ""%Universal%"""
4072;SELECT Studio FROM film GROUP BY Studio HAVING avg(Gross_in_dollar)  >=  4500000;ВЫБРАТЬ студия ИЗ справочник.фильмы СГРУППИРОВАТЬ ПО студия ИМЕЮЩИЕ СРЕДНЕЕ(сборывдолларах) >= 4500000
4073;SELECT Studio FROM film GROUP BY Studio HAVING avg(Gross_in_dollar)  >=  4500000;ВЫБРАТЬ студия ИЗ справочник.фильмы СГРУППИРОВАТЬ ПО студия ИМЕЮЩИЕ СРЕДНЕЕ(сборывдолларах) >= 4500000
4074;SELECT t1.title FROM film AS T1 JOIN film_market_estimation AS T2  ON T1.Film_ID  =  T2.Film_ID ORDER BY high_estimate DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 t1.title ИЗ справочник.фильмы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.оценкифильмовнарынках КАК T2 ПО T1.ссылка = T2.фильм УПОРЯДОЧИТЬ ПО high_estimate УБЫВ
4075;SELECT t1.title FROM film AS T1 JOIN film_market_estimation AS T2  ON T1.Film_ID  =  T2.Film_ID ORDER BY high_estimate DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 t1.title ИЗ справочник.фильмы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.оценкифильмовнарынках КАК T2 ПО T1.ссылка = T2.фильм УПОРЯДОЧИТЬ ПО high_estimate УБЫВ
4076;SELECT title ,  director FROM film WHERE film_id NOT IN (SELECT film_id FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.market_id  =  T2.Market_ID WHERE country  =  'China');"ВЫБРАТЬ title , director ИЗ справочник.фильмы ГДЕ film_id НЕ В (ВЫБРАТЬ film_id ИЗ регистрсведений.оценкифильмовнарынках КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.рынки КАК T2 ПО T1.рынок = T2.ссылка ГДЕ country = ""China"")"
4077;SELECT title ,  director FROM film WHERE film_id NOT IN (SELECT film_id FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.market_id  =  T2.Market_ID WHERE country  =  'China');"ВЫБРАТЬ title , director ИЗ справочник.фильмы ГДЕ film_id НЕ В (ВЫБРАТЬ film_id ИЗ регистрсведений.оценкифильмовнарынках КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.рынки КАК T2 ПО T1.рынок = T2.ссылка ГДЕ country = ""China"")"
4078;SELECT count(*) FROM Ref_calendar;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.календарь
4079;SELECT count(*) FROM Ref_calendar;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.календарь
4080;SELECT calendar_date ,  day_Number FROM Ref_calendar;ВЫБРАТЬ дата , номердня ИЗ справочник.календарь
4081;SELECT calendar_date ,  day_Number FROM Ref_calendar;ВЫБРАТЬ дата , номердня ИЗ справочник.календарь
4082;SELECT count(*) FROM Ref_document_types;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.видыдокументов
4083;SELECT count(*) FROM Ref_document_types;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.видыдокументов
4084;SELECT document_type_code ,  document_type_name FROM Ref_document_types;ВЫБРАТЬ код , наименование ИЗ справочник.видыдокументов
4085;SELECT document_type_code ,  document_type_name FROM Ref_document_types;ВЫБРАТЬ код , наименование ИЗ справочник.видыдокументов
4086;"SELECT document_type_name ,  document_type_description FROM Ref_document_types WHERE document_type_code  =  ""RV""";"ВЫБРАТЬ наименование , описание ИЗ справочник.видыдокументов ГДЕ код = ""RV"""
4087;"SELECT document_type_name ,  document_type_description FROM Ref_document_types WHERE document_type_code  =  ""RV""";"ВЫБРАТЬ наименование , описание ИЗ справочник.видыдокументов ГДЕ код = ""RV"""
4088;"SELECT document_type_code FROM Ref_document_types WHERE document_type_name  =  ""Paper""";"ВЫБРАТЬ код ИЗ справочник.видыдокументов ГДЕ наименование = ""Paper"""
4089;"SELECT document_type_code FROM Ref_document_types WHERE document_type_name  =  ""Paper""";"ВЫБРАТЬ код ИЗ справочник.видыдокументов ГДЕ наименование = ""Paper"""
4090;"SELECT count(*) FROM All_documents WHERE document_type_code  =  ""CV"" OR document_type_code  =  ""BK""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.документы ГДЕ виддокумента = ""CV"" ИЛИ виддокумента = ""BK"""
4091;"SELECT count(*) FROM All_documents WHERE document_type_code  =  ""CV"" OR document_type_code  =  ""BK""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.документы ГДЕ виддокумента = ""CV"" ИЛИ виддокумента = ""BK"""
4092;"SELECT date_stored FROM All_documents WHERE Document_name  =  ""Marry CV""";"ВЫБРАТЬ датахранения ИЗ справочник.документы ГДЕ наименование = ""Marry CV"""
4093;"SELECT date_stored FROM All_documents WHERE Document_name  =  ""Marry CV""";"ВЫБРАТЬ датахранения ИЗ справочник.документы ГДЕ наименование = ""Marry CV"""
4094;SELECT T2.day_Number ,  T1.Date_Stored FROM All_documents AS T1 JOIN Ref_calendar AS T2 ON T1.date_stored  =  T2.calendar_date;ВЫБРАТЬ T2.номердня , T1.датахранения ИЗ справочник.документы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.календарь КАК T2 ПО T1.датахранения = T2.дата
4095;SELECT T2.day_Number ,  T1.Date_Stored FROM All_documents AS T1 JOIN Ref_calendar AS T2 ON T1.date_stored  =  T2.calendar_date;ВЫБРАТЬ T2.номердня , T1.датахранения ИЗ справочник.документы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.календарь КАК T2 ПО T1.датахранения = T2.дата
4096;"SELECT T2.document_type_name FROM All_documents AS T1 JOIN Ref_document_types AS T2 ON T1.document_type_code  =  T2.document_type_code WHERE T1.document_name  =  ""How to read a book""";"ВЫБРАТЬ T2.наименование ИЗ справочник.документы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.видыдокументов КАК T2 ПО T1.виддокумента = T2.код ГДЕ T1.наименование = ""How to read a book"""
4097;"SELECT T2.document_type_name FROM All_documents AS T1 JOIN Ref_document_types AS T2 ON T1.document_type_code  =  T2.document_type_code WHERE T1.document_name  =  ""How to read a book""";"ВЫБРАТЬ T2.наименование ИЗ справочник.документы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.видыдокументов КАК T2 ПО T1.виддокумента = T2.код ГДЕ T1.наименование = ""How to read a book"""
4098;SELECT count(*) FROM Ref_locations;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.местахранения
4099;SELECT count(*) FROM Ref_locations;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.местахранения
4100;SELECT location_code ,  location_name FROM Ref_locations;ВЫБРАТЬ код , наименование ИЗ справочник.местахранения
4101;SELECT location_code ,  location_name FROM Ref_locations;ВЫБРАТЬ код , наименование ИЗ справочник.местахранения
4102;"SELECT location_name ,  location_description FROM Ref_locations WHERE location_code  =  ""x""";"ВЫБРАТЬ наименование , описание ИЗ справочник.местахранения ГДЕ код = ""x"""
4103;"SELECT location_name ,  location_description FROM Ref_locations WHERE location_code  =  ""x""";"ВЫБРАТЬ наименование , описание ИЗ справочник.местахранения ГДЕ код = ""x"""
4104;"SELECT location_code FROM Ref_locations WHERE location_name  =  ""Canada""";"ВЫБРАТЬ код ИЗ справочник.местахранения ГДЕ наименование = ""Canada"""
4105;"SELECT location_code FROM Ref_locations WHERE location_name  =  ""Canada""";"ВЫБРАТЬ код ИЗ справочник.местахранения ГДЕ наименование = ""Canada"""
4106;SELECT count(*) FROM ROLES;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.должности
4107;SELECT count(*) FROM ROLES;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.должности
4108;SELECT role_code ,  role_name ,  role_description FROM ROLES;ВЫБРАТЬ код , наименование , описание ИЗ справочник.должности
4109;SELECT role_code ,  role_name ,  role_description FROM ROLES;ВЫБРАТЬ код , наименование , описание ИЗ справочник.должности
4110;"SELECT role_name ,  role_description FROM ROLES WHERE role_code  =  ""MG""";"ВЫБРАТЬ наименование , описание ИЗ справочник.должности ГДЕ код = ""MG"""
4111;"SELECT role_name ,  role_description FROM ROLES WHERE role_code  =  ""MG""";"ВЫБРАТЬ наименование , описание ИЗ справочник.должности ГДЕ код = ""MG"""
4112;"SELECT role_description FROM ROLES WHERE role_name  =  ""Proof Reader""";"ВЫБРАТЬ описание ИЗ справочник.должности ГДЕ наименование = ""Proof Reader"""
4113;"SELECT role_description FROM ROLES WHERE role_name  =  ""Proof Reader""";"ВЫБРАТЬ описание ИЗ справочник.должности ГДЕ наименование = ""Proof Reader"""
4114;SELECT count(*) FROM Employees;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.сотрудники
4115;SELECT count(*) FROM Employees;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.сотрудники
4116;SELECT employee_name ,  role_code ,  date_of_birth FROM Employees WHERE employee_Name  =  'Armani';"ВЫБРАТЬ наименование , должность , датарождения ИЗ справочник.сотрудники ГДЕ наименование = ""Armani"""
4117;SELECT employee_name ,  role_code ,  date_of_birth FROM Employees WHERE employee_Name  =  'Armani';"ВЫБРАТЬ наименование , должность , датарождения ИЗ справочник.сотрудники ГДЕ наименование = ""Armani"""
4118;"SELECT employee_ID FROM Employees WHERE employee_name  =  ""Ebba""";"ВЫБРАТЬ ссылка ИЗ справочник.сотрудники ГДЕ наименование = ""Ebba"""
4119;"SELECT employee_ID FROM Employees WHERE employee_name  =  ""Ebba""";"ВЫБРАТЬ ссылка ИЗ справочник.сотрудники ГДЕ наименование = ""Ebba"""
4120;"SELECT employee_name FROM Employees WHERE role_code  =  ""HR""";"ВЫБРАТЬ наименование ИЗ справочник.сотрудники ГДЕ должность = ""HR"""
4121;"SELECT employee_name FROM Employees WHERE role_code  =  ""HR""";"ВЫБРАТЬ наименование ИЗ справочник.сотрудники ГДЕ должность = ""HR"""
4122;SELECT role_code ,  count(*) FROM Employees GROUP BY role_code;ВЫБРАТЬ должность , КОЛИЧЕСТВО(*) ИЗ справочник.сотрудники СГРУППИРОВАТЬ ПО должность
4123;SELECT role_code ,  count(*) FROM Employees GROUP BY role_code;ВЫБРАТЬ должность , КОЛИЧЕСТВО(*) ИЗ справочник.сотрудники СГРУППИРОВАТЬ ПО должность
4124;SELECT role_code FROM Employees GROUP BY role_code ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 должность ИЗ справочник.сотрудники СГРУППИРОВАТЬ ПО должность УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
4125;SELECT role_code FROM Employees GROUP BY role_code ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 должность ИЗ справочник.сотрудники СГРУППИРОВАТЬ ПО должность УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
4126;SELECT role_code FROM Employees GROUP BY role_code HAVING count(*)  >=  3;ВЫБРАТЬ должность ИЗ справочник.сотрудники СГРУППИРОВАТЬ ПО должность ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 3
4127;SELECT role_code FROM Employees GROUP BY role_code HAVING count(*)  >=  3;ВЫБРАТЬ должность ИЗ справочник.сотрудники СГРУППИРОВАТЬ ПО должность ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 3
4128;SELECT role_code FROM Employees GROUP BY role_code ORDER BY count(*) ASC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 должность ИЗ справочник.сотрудники СГРУППИРОВАТЬ ПО должность УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) ВОЗР
4129;SELECT role_code FROM Employees GROUP BY role_code ORDER BY count(*) ASC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 должность ИЗ справочник.сотрудники СГРУППИРОВАТЬ ПО должность УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) ВОЗР
4130;"SELECT T2.role_name ,  T2.role_description FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code  =  T2.role_code WHERE T1.employee_name  =  ""Ebba""";"ВЫБРАТЬ T2.наименование , T2.описание ИЗ справочник.сотрудники КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.должности КАК T2 ПО T1.должность = T2.код ГДЕ T1.наименование = ""Ebba"""
4131;"SELECT T2.role_name ,  T2.role_description FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code  =  T2.role_code WHERE T1.employee_name  =  ""Ebba""";"ВЫБРАТЬ T2.наименование , T2.описание ИЗ справочник.сотрудники КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.должности КАК T2 ПО T1.должность = T2.код ГДЕ T1.наименование = ""Ebba"""
4132;"SELECT T1.employee_name FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code  =  T2.role_code WHERE T2.role_name  =  ""Editor""";"ВЫБРАТЬ T1.наименование ИЗ справочник.сотрудники КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.должности КАК T2 ПО T1.должность = T2.код ГДЕ T2.наименование = ""Editor"""
4133;"SELECT T1.employee_name FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code  =  T2.role_code WHERE T2.role_name  =  ""Editor""";"ВЫБРАТЬ T1.наименование ИЗ справочник.сотрудники КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.должности КАК T2 ПО T1.должность = T2.код ГДЕ T2.наименование = ""Editor"""
4134;"SELECT T1.employee_id FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code  =  T2.role_code WHERE T2.role_name  =  ""Human Resource"" OR T2.role_name  =  ""Manager""";"ВЫБРАТЬ T1.ссылка ИЗ справочник.сотрудники КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.должности КАК T2 ПО T1.должность = T2.код ГДЕ T2.наименование = ""Human Resource"" ИЛИ T2.наименование = ""Manager"""
4135;"SELECT T1.employee_id FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code  =  T2.role_code WHERE T2.role_name  =  ""Human Resource"" OR T2.role_name  =  ""Manager""";"ВЫБРАТЬ T1.ссылка ИЗ справочник.сотрудники КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.должности КАК T2 ПО T1.должность = T2.код ГДЕ T2.наименование = ""Human Resource"" ИЛИ T2.наименование = ""Manager"""
4136;SELECT DISTINCT location_code FROM Document_locations;ВЫБРАТЬ РАЗЛИЧНЫЕ местохранения ИЗ регистрсведений.местахранениядокументов
4137;SELECT DISTINCT location_code FROM Document_locations;ВЫБРАТЬ РАЗЛИЧНЫЕ местохранения ИЗ регистрсведений.местахранениядокументов
4138;"SELECT T3.location_name FROM All_documents AS T1 JOIN Document_locations AS T2 ON T1.document_id  =  T2.document_id JOIN Ref_locations AS T3 ON T2.location_code  =  T3.location_code WHERE T1.document_name  =  ""Robin CV""";"ВЫБРАТЬ T3.наименование ИЗ справочник.документы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.местахранениядокументов КАК T2 ПО T1.ссылка = T2.документ ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.местахранения КАК T3 ПО T2.местохранения = T3.код ГДЕ T1.наименование = ""Robin CV"""
4139;"SELECT T3.location_name FROM All_documents AS T1 JOIN Document_locations AS T2 ON T1.document_id  =  T2.document_id JOIN Ref_locations AS T3 ON T2.location_code  =  T3.location_code WHERE T1.document_name  =  ""Robin CV""";"ВЫБРАТЬ T3.наименование ИЗ справочник.документы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.местахранениядокументов КАК T2 ПО T1.ссылка = T2.документ ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.местахранения КАК T3 ПО T2.местохранения = T3.код ГДЕ T1.наименование = ""Robin CV"""
4140;SELECT location_code ,  date_in_location_from ,  date_in_locaton_to FROM Document_locations;ВЫБРАТЬ местохранения , датас , датапо ИЗ регистрсведений.местахранениядокументов
4141;SELECT location_code ,  date_in_location_from ,  date_in_locaton_to FROM Document_locations;ВЫБРАТЬ местохранения , датас , датапо ИЗ регистрсведений.местахранениядокументов
4142;"SELECT T1.date_in_location_from ,  T1.date_in_locaton_to FROM Document_locations AS T1 JOIN All_documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  ""Robin CV""";"ВЫБРАТЬ T1.датас , T1.датапо ИЗ регистрсведений.местахранениядокументов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.документы КАК T2 ПО T1.документ = T2.ссылка ГДЕ T2.наименование = ""Robin CV"""
4143;"SELECT T1.date_in_location_from ,  T1.date_in_locaton_to FROM Document_locations AS T1 JOIN All_documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  ""Robin CV""";"ВЫБРАТЬ T1.датас , T1.датапо ИЗ регистрсведений.местахранениядокументов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.документы КАК T2 ПО T1.документ = T2.ссылка ГДЕ T2.наименование = ""Robin CV"""
4144;SELECT location_code ,  count(*) FROM Document_locations GROUP BY location_code;ВЫБРАТЬ местохранения , КОЛИЧЕСТВО(*) ИЗ регистрсведений.местахранениядокументов СГРУППИРОВАТЬ ПО местохранения
4145;SELECT location_code ,  count(*) FROM Document_locations GROUP BY location_code;ВЫБРАТЬ местохранения , КОЛИЧЕСТВО(*) ИЗ регистрсведений.местахранениядокументов СГРУППИРОВАТЬ ПО местохранения
4146;SELECT location_code FROM Document_locations GROUP BY location_code ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 местохранения ИЗ регистрсведений.местахранениядокументов СГРУППИРОВАТЬ ПО местохранения УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
4147;SELECT location_code FROM Document_locations GROUP BY location_code ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 местохранения ИЗ регистрсведений.местахранениядокументов СГРУППИРОВАТЬ ПО местохранения УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
4148;SELECT location_code FROM Document_locations GROUP BY location_code HAVING count(*)  >=  3;ВЫБРАТЬ местохранения ИЗ регистрсведений.местахранениядокументов СГРУППИРОВАТЬ ПО местохранения ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 3
4149;SELECT location_code FROM Document_locations GROUP BY location_code HAVING count(*)  >=  3;ВЫБРАТЬ местохранения ИЗ регистрсведений.местахранениядокументов СГРУППИРОВАТЬ ПО местохранения ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 3
4150;SELECT T2.location_name ,  T1.location_code FROM Document_locations AS T1 JOIN Ref_locations AS T2 ON T1.location_code  =  T2.location_code GROUP BY T1.location_code ORDER BY count(*) ASC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.наименование , T1.местохранения ИЗ регистрсведений.местахранениядокументов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.местахранения КАК T2 ПО T1.местохранения = T2.код СГРУППИРОВАТЬ ПО T1.местохранения УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) ВОЗР
4151;SELECT T2.location_name ,  T1.location_code FROM Document_locations AS T1 JOIN Ref_locations AS T2 ON T1.location_code  =  T2.location_code GROUP BY T1.location_code ORDER BY count(*) ASC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.наименование , T1.местохранения ИЗ регистрсведений.местахранениядокументов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.местахранения КАК T2 ПО T1.местохранения = T2.код СГРУППИРОВАТЬ ПО T1.местохранения УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) ВОЗР
4152;"SELECT T2.employee_name ,  T3.employee_name FROM Documents_to_be_destroyed AS T1 JOIN Employees AS T2 ON T1.Destruction_Authorised_by_Employee_ID = T2.employee_id JOIN Employees AS T3 ON T1.Destroyed_by_Employee_ID = T3.employee_id;";"ВЫБРАТЬ T2.наименование , T3.наименование ИЗ регистрсведений.уничтожениедокументов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сотрудники КАК T2 ПО T1.утвержденосотрудником = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сотрудники КАК T3 ПО T1.уничтоженосотрудником = T3.ссылка;"
4153;"SELECT T2.employee_name ,  T3.employee_name FROM Documents_to_be_destroyed AS T1 JOIN Employees AS T2 ON T1.Destruction_Authorised_by_Employee_ID = T2.employee_id JOIN Employees AS T3 ON T1.Destroyed_by_Employee_ID = T3.employee_id;";"ВЫБРАТЬ T2.наименование , T3.наименование ИЗ регистрсведений.уничтожениедокументов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сотрудники КАК T2 ПО T1.утвержденосотрудником = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сотрудники КАК T3 ПО T1.уничтоженосотрудником = T3.ссылка;"
4154;SELECT Destruction_Authorised_by_Employee_ID ,  count(*) FROM Documents_to_be_destroyed GROUP BY Destruction_Authorised_by_Employee_ID;ВЫБРАТЬ утвержденосотрудником , КОЛИЧЕСТВО(*) ИЗ регистрсведений.уничтожениедокументов СГРУППИРОВАТЬ ПО утвержденосотрудником
4155;SELECT Destruction_Authorised_by_Employee_ID ,  count(*) FROM Documents_to_be_destroyed GROUP BY Destruction_Authorised_by_Employee_ID;ВЫБРАТЬ утвержденосотрудником , КОЛИЧЕСТВО(*) ИЗ регистрсведений.уничтожениедокументов СГРУППИРОВАТЬ ПО утвержденосотрудником
4156;SELECT Destroyed_by_Employee_ID ,  count(*) FROM Documents_to_be_destroyed GROUP BY Destroyed_by_Employee_ID;ВЫБРАТЬ уничтоженосотрудником , КОЛИЧЕСТВО(*) ИЗ регистрсведений.уничтожениедокументов СГРУППИРОВАТЬ ПО уничтоженосотрудником
4157;SELECT Destroyed_by_Employee_ID ,  count(*) FROM Documents_to_be_destroyed GROUP BY Destroyed_by_Employee_ID;ВЫБРАТЬ уничтоженосотрудником , КОЛИЧЕСТВО(*) ИЗ регистрсведений.уничтожениедокументов СГРУППИРОВАТЬ ПО уничтоженосотрудником
4160;SELECT DISTINCT Destruction_Authorised_by_Employee_ID FROM Documents_to_be_destroyed;ВЫБРАТЬ РАЗЛИЧНЫЕ утвержденосотрудником ИЗ регистрсведений.уничтожениедокументов
4161;SELECT DISTINCT Destruction_Authorised_by_Employee_ID FROM Documents_to_be_destroyed;ВЫБРАТЬ РАЗЛИЧНЫЕ утвержденосотрудником ИЗ регистрсведений.уничтожениедокументов
4162;SELECT DISTINCT Destroyed_by_Employee_ID FROM Documents_to_be_destroyed;ВЫБРАТЬ РАЗЛИЧНЫЕ уничтоженосотрудником ИЗ регистрсведений.уничтожениедокументов
4163;SELECT DISTINCT Destroyed_by_Employee_ID FROM Documents_to_be_destroyed;ВЫБРАТЬ РАЗЛИЧНЫЕ уничтоженосотрудником ИЗ регистрсведений.уничтожениедокументов
4166;SELECT Destroyed_by_Employee_ID FROM Documents_to_be_destroyed UNION SELECT Destruction_Authorised_by_Employee_ID FROM Documents_to_be_destroyed;ВЫБРАТЬ Destroyed_by_Employee_ID ИЗ регистрсведений.уничтожениедокументов ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ Destruction_Authorised_by_Employee_ID ИЗ регистрсведений.уничтожениедокументов
4167;SELECT Destroyed_by_Employee_ID FROM Documents_to_be_destroyed UNION SELECT Destruction_Authorised_by_Employee_ID FROM Documents_to_be_destroyed;ВЫБРАТЬ Destroyed_by_Employee_ID ИЗ регистрсведений.уничтожениедокументов ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ Destruction_Authorised_by_Employee_ID ИЗ регистрсведений.уничтожениедокументов
4168;SELECT count(*) FROM club;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.клубы
4169;SELECT count(*) FROM club;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.клубы
4170;SELECT clubname FROM club;ВЫБРАТЬ наименование ИЗ справочник.клубы
4171;SELECT clubname FROM club;ВЫБРАТЬ наименование ИЗ справочник.клубы
4172;SELECT count(*) FROM student;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.студенты
4173;SELECT count(*) FROM student;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.студенты
4174;SELECT DISTINCT fname FROM student;ВЫБРАТЬ РАЗЛИЧНЫЕ имя ИЗ справочник.студенты
4175;SELECT DISTINCT fname FROM student;ВЫБРАТЬ РАЗЛИЧНЫЕ имя ИЗ справочник.студенты
4176;"SELECT t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  ""Bootup Baltimore""";"ВЫБРАТЬ t3.фамилия ИЗ справочник.клубы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.членствовклубах КАК t2 ПО t1.ссылка = t2.клуб ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК t3 ПО t2.студент = t3.ссылка ГДЕ t1.наименование = ""Bootup Baltimore"""
4177;"SELECT t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  ""Bootup Baltimore""";"ВЫБРАТЬ t3.фамилия ИЗ справочник.клубы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.членствовклубах КАК t2 ПО t1.ссылка = t2.клуб ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК t3 ПО t2.студент = t3.ссылка ГДЕ t1.наименование = ""Bootup Baltimore"""
4178;"SELECT t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  ""Hopkins Student Enterprises""";"ВЫБРАТЬ t3.фамилия ИЗ справочник.клубы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.членствовклубах КАК t2 ПО t1.ссылка = t2.клуб ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК t3 ПО t2.студент = t3.ссылка ГДЕ t1.наименование = ""Hopkins Student Enterprises"""
4179;"SELECT t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  ""Hopkins Student Enterprises""";"ВЫБРАТЬ t3.фамилия ИЗ справочник.клубы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.членствовклубах КАК t2 ПО t1.ссылка = t2.клуб ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК t3 ПО t2.студент = t3.ссылка ГДЕ t1.наименование = ""Hopkins Student Enterprises"""
4180;"SELECT count(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  ""Tennis Club""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.клубы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.членствовклубах КАК t2 ПО t1.ссылка = t2.клуб ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК t3 ПО t2.студент = t3.ссылка ГДЕ t1.наименование = ""Tennis Club"""
4181;"SELECT count(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  ""Tennis Club""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.клубы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.членствовклубах КАК t2 ПО t1.ссылка = t2.клуб ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК t3 ПО t2.студент = t3.ссылка ГДЕ t1.наименование = ""Tennis Club"""
4182;"SELECT count(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  ""Pen and Paper Gaming""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.клубы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.членствовклубах КАК t2 ПО t1.ссылка = t2.клуб ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК t3 ПО t2.студент = t3.ссылка ГДЕ t1.наименование = ""Pen and Paper Gaming"""
4183;"SELECT count(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  ""Pen and Paper Gaming""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.клубы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.членствовклубах КАК t2 ПО t1.ссылка = t2.клуб ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК t3 ПО t2.студент = t3.ссылка ГДЕ t1.наименование = ""Pen and Paper Gaming"""
4184;"SELECT count(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.fname  =  ""Linda"" AND t3.lname  =  ""Smith""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.клубы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.членствовклубах КАК t2 ПО t1.ссылка = t2.клуб ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК t3 ПО t2.студент = t3.ссылка ГДЕ t3.имя = ""Linda"" И t3.фамилия = ""Smith"""
4185;"SELECT count(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.fname  =  ""Linda"" AND t3.lname  =  ""Smith""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.клубы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.членствовклубах КАК t2 ПО t1.ссылка = t2.клуб ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК t3 ПО t2.студент = t3.ссылка ГДЕ t3.имя = ""Linda"" И t3.фамилия = ""Smith"""
4186;"SELECT count(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.fname  =  ""Tracy"" AND t3.lname  =  ""Kim""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.клубы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.членствовклубах КАК t2 ПО t1.ссылка = t2.клуб ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК t3 ПО t2.студент = t3.ссылка ГДЕ t3.имя = ""Tracy"" И t3.фамилия = ""Kim"""
4187;"SELECT count(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.fname  =  ""Tracy"" AND t3.lname  =  ""Kim""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.клубы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.членствовклубах КАК t2 ПО t1.ссылка = t2.клуб ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК t3 ПО t2.студент = t3.ссылка ГДЕ t3.имя = ""Tracy"" И t3.фамилия = ""Kim"""
4188;"SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  ""Bootup Baltimore"" AND t3.sex  =  ""F""";"ВЫБРАТЬ t3.имя , t3.фамилия ИЗ справочник.клубы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.членствовклубах КАК t2 ПО t1.ссылка = t2.клуб ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК t3 ПО t2.студент = t3.ссылка ГДЕ t1.наименование = ""Bootup Baltimore"" И t3.пол = ""F"""
4189;"SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  ""Bootup Baltimore"" AND t3.sex  =  ""F""";"ВЫБРАТЬ t3.имя , t3.фамилия ИЗ справочник.клубы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.членствовклубах КАК t2 ПО t1.ссылка = t2.клуб ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК t3 ПО t2.студент = t3.ссылка ГДЕ t1.наименование = ""Bootup Baltimore"" И t3.пол = ""F"""
4190;"SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  ""Hopkins Student Enterprises"" AND t3.sex  =  ""M""";"ВЫБРАТЬ t3.имя , t3.фамилия ИЗ справочник.клубы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.членствовклубах КАК t2 ПО t1.ссылка = t2.клуб ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК t3 ПО t2.студент = t3.ссылка ГДЕ t1.наименование = ""Hopkins Student Enterprises"" И t3.пол = ""M"""
4191;"SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  ""Hopkins Student Enterprises"" AND t3.sex  =  ""M""";"ВЫБРАТЬ t3.имя , t3.фамилия ИЗ справочник.клубы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.членствовклубах КАК t2 ПО t1.ссылка = t2.клуб ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК t3 ПО t2.студент = t3.ссылка ГДЕ t1.наименование = ""Hopkins Student Enterprises"" И t3.пол = ""M"""
4192;"SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  ""Bootup Baltimore"" AND t3.major  =  ""600""";"ВЫБРАТЬ t3.имя , t3.фамилия ИЗ справочник.клубы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.членствовклубах КАК t2 ПО t1.ссылка = t2.клуб ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК t3 ПО t2.студент = t3.ссылка ГДЕ t1.наименование = ""Bootup Baltimore"" И t3.специальность = ""600"""
4193;"SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  ""Bootup Baltimore"" AND t3.major  =  ""600""";"ВЫБРАТЬ t3.имя , t3.фамилия ИЗ справочник.клубы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.членствовклубах КАК t2 ПО t1.ссылка = t2.клуб ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК t3 ПО t2.студент = t3.ссылка ГДЕ t1.наименование = ""Bootup Baltimore"" И t3.специальность = ""600"""
4194;"SELECT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.major  =  ""600"" GROUP BY t1.clubname ORDER BY count(*) DESC LIMIT 1";"ВЫБРАТЬ ПЕРВЫЕ 1 t1.наименование ИЗ справочник.клубы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.членствовклубах КАК t2 ПО t1.ссылка = t2.клуб ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК t3 ПО t2.студент = t3.ссылка ГДЕ t3.специальность = ""600"" СГРУППИРОВАТЬ ПО t1.наименование УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ"
4195;"SELECT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.major  =  ""600"" GROUP BY t1.clubname ORDER BY count(*) DESC LIMIT 1";"ВЫБРАТЬ ПЕРВЫЕ 1 t1.наименование ИЗ справочник.клубы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.членствовклубах КАК t2 ПО t1.ссылка = t2.клуб ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК t3 ПО t2.студент = t3.ссылка ГДЕ t3.специальность = ""600"" СГРУППИРОВАТЬ ПО t1.наименование УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ"
4196;"SELECT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.sex  =  ""F"" GROUP BY t1.clubname ORDER BY count(*) DESC LIMIT 1";"ВЫБРАТЬ ПЕРВЫЕ 1 t1.наименование ИЗ справочник.клубы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.членствовклубах КАК t2 ПО t1.ссылка = t2.клуб ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК t3 ПО t2.студент = t3.ссылка ГДЕ t3.пол = ""F"" СГРУППИРОВАТЬ ПО t1.наименование УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ"
4197;"SELECT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.sex  =  ""F"" GROUP BY t1.clubname ORDER BY count(*) DESC LIMIT 1";"ВЫБРАТЬ ПЕРВЫЕ 1 t1.наименование ИЗ справочник.клубы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.членствовклубах КАК t2 ПО t1.ссылка = t2.клуб ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК t3 ПО t2.студент = t3.ссылка ГДЕ t3.пол = ""F"" СГРУППИРОВАТЬ ПО t1.наименование УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ"
4198;"SELECT clubdesc FROM club WHERE clubname  =  ""Tennis Club""";"ВЫБРАТЬ описание ИЗ справочник.клубы ГДЕ наименование = ""Tennis Club"""
4199;"SELECT clubdesc FROM club WHERE clubname  =  ""Tennis Club""";"ВЫБРАТЬ описание ИЗ справочник.клубы ГДЕ наименование = ""Tennis Club"""
4200;"SELECT clubdesc FROM club WHERE clubname  =  ""Pen and Paper Gaming""";"ВЫБРАТЬ описание ИЗ справочник.клубы ГДЕ наименование = ""Pen and Paper Gaming"""
4201;"SELECT clubdesc FROM club WHERE clubname  =  ""Pen and Paper Gaming""";"ВЫБРАТЬ описание ИЗ справочник.клубы ГДЕ наименование = ""Pen and Paper Gaming"""
4202;"SELECT clublocation FROM club WHERE clubname  =  ""Tennis Club""";"ВЫБРАТЬ местоположение ИЗ справочник.клубы ГДЕ наименование = ""Tennis Club"""
4203;"SELECT clublocation FROM club WHERE clubname  =  ""Tennis Club""";"ВЫБРАТЬ местоположение ИЗ справочник.клубы ГДЕ наименование = ""Tennis Club"""
4204;"SELECT clublocation FROM club WHERE clubname  =  ""Pen and Paper Gaming""";"ВЫБРАТЬ местоположение ИЗ справочник.клубы ГДЕ наименование = ""Pen and Paper Gaming"""
4205;"SELECT clublocation FROM club WHERE clubname  =  ""Pen and Paper Gaming""";"ВЫБРАТЬ местоположение ИЗ справочник.клубы ГДЕ наименование = ""Pen and Paper Gaming"""
4206;"SELECT clublocation FROM club WHERE clubname  =  ""Hopkins Student Enterprises""";"ВЫБРАТЬ местоположение ИЗ справочник.клубы ГДЕ наименование = ""Hopkins Student Enterprises"""
4207;"SELECT clublocation FROM club WHERE clubname  =  ""Hopkins Student Enterprises""";"ВЫБРАТЬ местоположение ИЗ справочник.клубы ГДЕ наименование = ""Hopkins Student Enterprises"""
4208;"SELECT clubname FROM club WHERE clublocation  =  ""AKW""";"ВЫБРАТЬ наименование ИЗ справочник.клубы ГДЕ местоположение = ""AKW"""
4209;"SELECT clubname FROM club WHERE clublocation  =  ""AKW""";"ВЫБРАТЬ наименование ИЗ справочник.клубы ГДЕ местоположение = ""AKW"""
4210;"SELECT count(*) FROM club WHERE clublocation  =  ""HHH""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.клубы ГДЕ местоположение = ""HHH"""
4211;"SELECT count(*) FROM club WHERE clublocation  =  ""HHH""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.клубы ГДЕ местоположение = ""HHH"""
4212;"SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  ""Bootup Baltimore"" AND t2.position  =  ""President""";"ВЫБРАТЬ t3.имя , t3.фамилия ИЗ справочник.клубы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.членствовклубах КАК t2 ПО t1.ссылка = t2.клуб ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК t3 ПО t2.студент = t3.ссылка ГДЕ t1.наименование = ""Bootup Baltimore"" И t2.должность = ""President"""
4213;"SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  ""Bootup Baltimore"" AND t2.position  =  ""President""";"ВЫБРАТЬ t3.имя , t3.фамилия ИЗ справочник.клубы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.членствовклубах КАК t2 ПО t1.ссылка = t2.клуб ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК t3 ПО t2.студент = t3.ссылка ГДЕ t1.наименование = ""Bootup Baltimore"" И t2.должность = ""President"""
4214;"SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  ""Hopkins Student Enterprises"" AND t2.position  =  ""CTO""";"ВЫБРАТЬ t3.имя , t3.фамилия ИЗ справочник.клубы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.членствовклубах КАК t2 ПО t1.ссылка = t2.клуб ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК t3 ПО t2.студент = t3.ссылка ГДЕ t1.наименование = ""Hopkins Student Enterprises"" И t2.должность = ""CTO"""
4215;"SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  ""Hopkins Student Enterprises"" AND t2.position  =  ""CTO""";"ВЫБРАТЬ t3.имя , t3.фамилия ИЗ справочник.клубы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.членствовклубах КАК t2 ПО t1.ссылка = t2.клуб ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК t3 ПО t2.студент = t3.ссылка ГДЕ t1.наименование = ""Hopkins Student Enterprises"" И t2.должность = ""CTO"""
4216;"SELECT count(DISTINCT t2.position) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid WHERE t1.clubname  =  ""Bootup Baltimore""";"ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ t2.должность) ИЗ справочник.клубы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.членствовклубах КАК t2 ПО t1.ссылка = t2.клуб ГДЕ t1.наименование = ""Bootup Baltimore"""
4217;"SELECT count(DISTINCT t2.position) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid WHERE t1.clubname  =  ""Bootup Baltimore""";"ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ t2.должность) ИЗ справочник.клубы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.членствовклубах КАК t2 ПО t1.ссылка = t2.клуб ГДЕ t1.наименование = ""Bootup Baltimore"""
4218;"SELECT count(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  ""Bootup Baltimore"" AND t3.age  >  18";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.клубы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.членствовклубах КАК t2 ПО t1.ссылка = t2.клуб ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК t3 ПО t2.студент = t3.ссылка ГДЕ t1.наименование = ""Bootup Baltimore"" И t3.возраст > 18"
4219;"SELECT count(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  ""Bootup Baltimore"" AND t3.age  >  18";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.клубы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.членствовклубах КАК t2 ПО t1.ссылка = t2.клуб ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК t3 ПО t2.студент = t3.ссылка ГДЕ t1.наименование = ""Bootup Baltimore"" И t3.возраст > 18"
4220;"SELECT count(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  ""Bootup Baltimore"" AND t3.age  <  18";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.клубы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.членствовклубах КАК t2 ПО t1.ссылка = t2.клуб ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК t3 ПО t2.студент = t3.ссылка ГДЕ t1.наименование = ""Bootup Baltimore"" И t3.возраст < 18"
4221;"SELECT count(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  ""Bootup Baltimore"" AND t3.age  <  18";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.клубы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.членствовклубах КАК t2 ПО t1.ссылка = t2.клуб ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК t3 ПО t2.студент = t3.ссылка ГДЕ t1.наименование = ""Bootup Baltimore"" И t3.возраст < 18"
4222;"SELECT DISTINCT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.city_code  =  ""BAL""";"ВЫБРАТЬ РАЗЛИЧНЫЕ t1.наименование ИЗ справочник.клубы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.членствовклубах КАК t2 ПО t1.ссылка = t2.клуб ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК t3 ПО t2.студент = t3.ссылка ГДЕ t3.кодгорода = ""BAL"""
4223;"SELECT DISTINCT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.city_code  =  ""BAL""";"ВЫБРАТЬ РАЗЛИЧНЫЕ t1.наименование ИЗ справочник.клубы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.членствовклубах КАК t2 ПО t1.ссылка = t2.клуб ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК t3 ПО t2.студент = t3.ссылка ГДЕ t3.кодгорода = ""BAL"""
4224;"SELECT DISTINCT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.city_code  =  ""HOU""";"ВЫБРАТЬ РАЗЛИЧНЫЕ t1.наименование ИЗ справочник.клубы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.членствовклубах КАК t2 ПО t1.ссылка = t2.клуб ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК t3 ПО t2.студент = t3.ссылка ГДЕ t3.кодгорода = ""HOU"""
4225;"SELECT DISTINCT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.city_code  =  ""HOU""";"ВЫБРАТЬ РАЗЛИЧНЫЕ t1.наименование ИЗ справочник.клубы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.членствовклубах КАК t2 ПО t1.ссылка = t2.клуб ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК t3 ПО t2.студент = t3.ссылка ГДЕ t3.кодгорода = ""HOU"""
4226;"SELECT count(DISTINCT t1.clubname) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.fname  =  ""Eric"" AND t3.lname  =  ""Tai""";"ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ t1.наименование) ИЗ справочник.клубы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.членствовклубах КАК t2 ПО t1.ссылка = t2.клуб ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК t3 ПО t2.студент = t3.ссылка ГДЕ t3.имя = ""Eric"" И t3.фамилия = ""Tai"""
4227;"SELECT count(DISTINCT t1.clubname) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.fname  =  ""Eric"" AND t3.lname  =  ""Tai""";"ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ t1.наименование) ИЗ справочник.клубы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.членствовклубах КАК t2 ПО t1.ссылка = t2.клуб ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК t3 ПО t2.студент = t3.ссылка ГДЕ t3.имя = ""Eric"" И t3.фамилия = ""Tai"""
4228;"SELECT DISTINCT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.fname  =  ""Davis"" AND t3.lname  =  ""Steven""";"ВЫБРАТЬ РАЗЛИЧНЫЕ t1.наименование ИЗ справочник.клубы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.членствовклубах КАК t2 ПО t1.ссылка = t2.клуб ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК t3 ПО t2.студент = t3.ссылка ГДЕ t3.имя = ""Davis"" И t3.фамилия = ""Steven"""
4229;"SELECT DISTINCT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.fname  =  ""Davis"" AND t3.lname  =  ""Steven""";"ВЫБРАТЬ РАЗЛИЧНЫЕ t1.наименование ИЗ справочник.клубы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.членствовклубах КАК t2 ПО t1.ссылка = t2.клуб ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК t3 ПО t2.студент = t3.ссылка ГДЕ t3.имя = ""Davis"" И t3.фамилия = ""Steven"""
4230;SELECT DISTINCT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.advisor  =  1121;ВЫБРАТЬ РАЗЛИЧНЫЕ t1.наименование ИЗ справочник.клубы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.членствовклубах КАК t2 ПО t1.ссылка = t2.клуб ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК t3 ПО t2.студент = t3.ссылка ГДЕ t3.наставник = 1121
4231;SELECT DISTINCT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.advisor  =  1121;ВЫБРАТЬ РАЗЛИЧНЫЕ t1.наименование ИЗ справочник.клубы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.членствовклубах КАК t2 ПО t1.ссылка = t2.клуб ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК t3 ПО t2.студент = t3.ссылка ГДЕ t3.наставник = 1121
4232;"SELECT avg(t3.age) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  ""Bootup Baltimore""";"ВЫБРАТЬ СРЕДНЕЕ(t3.возраст) ИЗ справочник.клубы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.членствовклубах КАК t2 ПО t1.ссылка = t2.клуб ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК t3 ПО t2.студент = t3.ссылка ГДЕ t1.наименование = ""Bootup Baltimore"""
4233;"SELECT avg(t3.age) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  ""Bootup Baltimore""";"ВЫБРАТЬ СРЕДНЕЕ(t3.возраст) ИЗ справочник.клубы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.членствовклубах КАК t2 ПО t1.ссылка = t2.клуб ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК t3 ПО t2.студент = t3.ссылка ГДЕ t1.наименование = ""Bootup Baltimore"""
4234;"SELECT avg(t3.age) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  ""Hopkins Student Enterprises""";"ВЫБРАТЬ СРЕДНЕЕ(t3.возраст) ИЗ справочник.клубы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.членствовклубах КАК t2 ПО t1.ссылка = t2.клуб ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК t3 ПО t2.студент = t3.ссылка ГДЕ t1.наименование = ""Hopkins Student Enterprises"""
4235;"SELECT avg(t3.age) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  ""Hopkins Student Enterprises""";"ВЫБРАТЬ СРЕДНЕЕ(t3.возраст) ИЗ справочник.клубы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.членствовклубах КАК t2 ПО t1.ссылка = t2.клуб ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК t3 ПО t2.студент = t3.ссылка ГДЕ t1.наименование = ""Hopkins Student Enterprises"""
4236;"SELECT avg(t3.age) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  ""Tennis Club""";"ВЫБРАТЬ СРЕДНЕЕ(t3.возраст) ИЗ справочник.клубы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.членствовклубах КАК t2 ПО t1.ссылка = t2.клуб ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК t3 ПО t2.студент = t3.ссылка ГДЕ t1.наименование = ""Tennis Club"""
4237;"SELECT avg(t3.age) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  ""Tennis Club""";"ВЫБРАТЬ СРЕДНЕЕ(t3.возраст) ИЗ справочник.клубы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.членствовклубах КАК t2 ПО t1.ссылка = t2.клуб ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК t3 ПО t2.студент = t3.ссылка ГДЕ t1.наименование = ""Tennis Club"""
4242;SELECT sum(grant_amount) FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id  =  T2.organisation_id JOIN organisation_Types AS T3 ON T2.organisation_type  =  T3.organisation_type WHERE T3.organisation_type_description  =  'Research';"ВЫБРАТЬ СУММА(grant_amount) ИЗ справочник.гранты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.организации КАК T2 ПО T1.организация = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.видыорганизаций КАК T3 ПО T2.видорганизации = T3.код ГДЕ T3.описание = ""Research"""
4243;SELECT sum(grant_amount) FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id  =  T2.organisation_id JOIN organisation_Types AS T3 ON T2.organisation_type  =  T3.organisation_type WHERE T3.organisation_type_description  =  'Research';"ВЫБРАТЬ СУММА(grant_amount) ИЗ справочник.гранты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.организации КАК T2 ПО T1.организация = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.видыорганизаций КАК T3 ПО T2.видорганизации = T3.код ГДЕ T3.описание = ""Research"""
4244;SELECT date_from ,  date_to FROM Project_Staff WHERE project_id IN( SELECT project_id FROM Project_Staff GROUP BY project_id ORDER BY count(*) DESC LIMIT 1 ) UNION SELECT date_from ,  date_to FROM Project_Staff WHERE role_code  =  'leader';"ВЫБРАТЬ date_from , date_to ИЗ справочник.сотрудникипроектов ГДЕ project_id IN( ВЫБРАТЬ project_id ИЗ справочник.сотрудникипроектов СГРУППИРОВАТЬ ПО project_id УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ LIMIT 1 ) ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ date_from , date_to ИЗ справочник.сотрудникипроектов ГДЕ role_code = ""leader"""
4245;SELECT date_from ,  date_to FROM Project_Staff WHERE project_id IN( SELECT project_id FROM Project_Staff GROUP BY project_id ORDER BY count(*) DESC LIMIT 1 ) UNION SELECT date_from ,  date_to FROM Project_Staff WHERE role_code  =  'leader';"ВЫБРАТЬ date_from , date_to ИЗ справочник.сотрудникипроектов ГДЕ project_id IN( ВЫБРАТЬ project_id ИЗ справочник.сотрудникипроектов СГРУППИРОВАТЬ ПО project_id УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ LIMIT 1 ) ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ date_from , date_to ИЗ справочник.сотрудникипроектов ГДЕ role_code = ""leader"""
4246;SELECT T2.organisation_id ,  T2.organisation_details FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id  =  T2.organisation_id GROUP BY T2.organisation_id HAVING sum(T1.grant_amount)  >  6000;ВЫБРАТЬ T2.ссылка , T2.описание ИЗ справочник.гранты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.организации КАК T2 ПО T1.организация = T2.ссылка СГРУППИРОВАТЬ ПО T2.ссылка ИМЕЮЩИЕ СУММА(T1.суммагранта) > 6000
4247;SELECT T2.organisation_id ,  T2.organisation_details FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id  =  T2.organisation_id GROUP BY T2.organisation_id HAVING sum(T1.grant_amount)  >  6000;ВЫБРАТЬ T2.ссылка , T2.описание ИЗ справочник.гранты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.организации КАК T2 ПО T1.организация = T2.ссылка СГРУППИРОВАТЬ ПО T2.ссылка ИМЕЮЩИЕ СУММА(T1.суммагранта) > 6000
4248;SELECT T1.organisation_type ,  T1.organisation_id FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id  =  T2.employer_organisation_id GROUP BY T1.organisation_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.видорганизации , T1.ссылка ИЗ справочник.организации КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.исследовательскийперсонал КАК T2 ПО T1.ссылка = T2.организацияработодатель СГРУППИРОВАТЬ ПО T1.ссылка УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
4249;SELECT T1.organisation_type ,  T1.organisation_id FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id  =  T2.employer_organisation_id GROUP BY T1.organisation_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.видорганизации , T1.ссылка ИЗ справочник.организации КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.исследовательскийперсонал КАК T2 ПО T1.ссылка = T2.организацияработодатель СГРУППИРОВАТЬ ПО T1.ссылка УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
4250;SELECT T1.organisation_type FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id  =  T2.employer_organisation_id GROUP BY T1.organisation_type ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.видорганизации ИЗ справочник.организации КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.исследовательскийперсонал КАК T2 ПО T1.ссылка = T2.организацияработодатель СГРУППИРОВАТЬ ПО T1.видорганизации УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
4251;SELECT T1.organisation_type FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id  =  T2.employer_organisation_id GROUP BY T1.organisation_type ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.видорганизации ИЗ справочник.организации КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.исследовательскийперсонал КАК T2 ПО T1.ссылка = T2.организацияработодатель СГРУППИРОВАТЬ ПО T1.видорганизации УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
4252;SELECT T1.sent_date FROM documents AS T1 JOIN Grants AS T2 ON T1.grant_id  =  T2.grant_id JOIN Organisations AS T3 ON T2.organisation_id  =  T3.organisation_id JOIN organisation_Types AS T4 ON T3.organisation_type  =  T4.organisation_type WHERE T2.grant_amount  >  5000 AND T4.organisation_type_description  =  'Research';"ВЫБРАТЬ T1.датаотправки ИЗ справочник.документы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.гранты КАК T2 ПО T1.грант = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.организации КАК T3 ПО T2.организация = T3.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.видыорганизаций КАК T4 ПО T3.видорганизации = T4.код ГДЕ T2.суммагранта > 5000 И T4.описание = ""Research"""
4253;SELECT T1.sent_date FROM documents AS T1 JOIN Grants AS T2 ON T1.grant_id  =  T2.grant_id JOIN Organisations AS T3 ON T2.organisation_id  =  T3.organisation_id JOIN organisation_Types AS T4 ON T3.organisation_type  =  T4.organisation_type WHERE T2.grant_amount  >  5000 AND T4.organisation_type_description  =  'Research';"ВЫБРАТЬ T1.датаотправки ИЗ справочник.документы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.гранты КАК T2 ПО T1.грант = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.организации КАК T3 ПО T2.организация = T3.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.видыорганизаций КАК T4 ПО T3.видорганизации = T4.код ГДЕ T2.суммагранта > 5000 И T4.описание = ""Research"""
4254;SELECT T1.response_received_date FROM Documents AS T1 JOIN Document_Types AS T2 ON T1.document_type_code  =  T2.document_type_code JOIN Grants AS T3 ON T1.grant_id  =  T3.grant_id WHERE T2.document_description  =  'Regular' OR T3.grant_amount  >  100;"ВЫБРАТЬ T1.датаполученияответа ИЗ справочник.документы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.видыдокументов КАК T2 ПО T1.виддокумента = T2.код ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.гранты КАК T3 ПО T1.грант = T3.ссылка ГДЕ T2.описание = ""Regular"" ИЛИ T3.суммагранта > 100"
4255;SELECT T1.response_received_date FROM Documents AS T1 JOIN Document_Types AS T2 ON T1.document_type_code  =  T2.document_type_code JOIN Grants AS T3 ON T1.grant_id  =  T3.grant_id WHERE T2.document_description  =  'Regular' OR T3.grant_amount  >  100;"ВЫБРАТЬ T1.датаполученияответа ИЗ справочник.документы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.видыдокументов КАК T2 ПО T1.виддокумента = T2.код ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.гранты КАК T3 ПО T1.грант = T3.ссылка ГДЕ T2.описание = ""Regular"" ИЛИ T3.суммагранта > 100"
4256;SELECT project_details FROM Projects WHERE project_id NOT IN ( SELECT project_id FROM Project_Staff WHERE role_code  =  'researcher' );"ВЫБРАТЬ project_details ИЗ справочник.проекты ГДЕ проект НЕ В ( ВЫБРАТЬ проект ИЗ справочник.сотрудникипроектов ГДЕ роль = ""researcher"" )"
4257;SELECT project_details FROM Projects WHERE project_id NOT IN ( SELECT project_id FROM Project_Staff WHERE role_code  =  'researcher' );"ВЫБРАТЬ project_details ИЗ справочник.проекты ГДЕ проект НЕ В ( ВЫБРАТЬ проект ИЗ справочник.сотрудникипроектов ГДЕ роль = ""researcher"" )"
4258;SELECT T1.task_details ,  T1.task_id ,  T2.project_id FROM Tasks AS T1 JOIN Projects AS T2 ON T1.project_id  =  T2.project_id WHERE T2.project_details  =  'omnis' UNION SELECT T1.task_details ,  T1.task_id ,  T2.project_id FROM Tasks AS T1 JOIN Projects AS T2 ON T1.project_id  =  T2.project_id JOIN Project_outcomes AS T3 ON T2.project_id  =  T3.project_id GROUP BY T2.project_id HAVING count(*)  >  2;"ВЫБРАТЬ T1.описание , T1.ссылка , T2.ссылка ИЗ справочник.задачи КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.проекты КАК T2 ПО T1.проект = T2.ссылка ГДЕ T2.описание = ""omnis"" ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ T1.описание , T1.ссылка , T2.ссылка ИЗ справочник.задачи КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.проекты КАК T2 ПО T1.проект = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.результатыпроектов КАК T3 ПО T2.ссылка = T3.ссылка СГРУППИРОВАТЬ ПО T2.ссылка ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 2"
4259;SELECT T1.task_details ,  T1.task_id ,  T2.project_id FROM Tasks AS T1 JOIN Projects AS T2 ON T1.project_id  =  T2.project_id WHERE T2.project_details  =  'omnis' UNION SELECT T1.task_details ,  T1.task_id ,  T2.project_id FROM Tasks AS T1 JOIN Projects AS T2 ON T1.project_id  =  T2.project_id JOIN Project_outcomes AS T3 ON T2.project_id  =  T3.project_id GROUP BY T2.project_id HAVING count(*)  >  2;"ВЫБРАТЬ T1.описание , T1.ссылка , T2.ссылка ИЗ справочник.задачи КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.проекты КАК T2 ПО T1.проект = T2.ссылка ГДЕ T2.описание = ""omnis"" ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ T1.описание , T1.ссылка , T2.ссылка ИЗ справочник.задачи КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.проекты КАК T2 ПО T1.проект = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.результатыпроектов КАК T3 ПО T2.ссылка = T3.ссылка СГРУППИРОВАТЬ ПО T2.ссылка ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 2"
4260;SELECT date_from ,  date_to FROM Project_Staff WHERE role_code  =  'researcher';"ВЫБРАТЬ датаначала , датаокончания ИЗ справочник.сотрудникипроектов ГДЕ роль = ""researcher"""
4261;SELECT date_from ,  date_to FROM Project_Staff WHERE role_code  =  'researcher';"ВЫБРАТЬ датаначала , датаокончания ИЗ справочник.сотрудникипроектов ГДЕ роль = ""researcher"""
4262;SELECT count(DISTINCT role_code) FROM Project_Staff;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ роль) ИЗ справочник.сотрудникипроектов
4263;SELECT count(DISTINCT role_code) FROM Project_Staff;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ роль) ИЗ справочник.сотрудникипроектов
4264;SELECT sum(grant_amount) ,  organisation_id FROM Grants GROUP BY organisation_id;ВЫБРАТЬ СУММА(суммагранта) , организация ИЗ справочник.гранты СГРУППИРОВАТЬ ПО организация
4265;SELECT sum(grant_amount) ,  organisation_id FROM Grants GROUP BY organisation_id;ВЫБРАТЬ СУММА(суммагранта) , организация ИЗ справочник.гранты СГРУППИРОВАТЬ ПО организация
4266;SELECT T1.project_details FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id  =  T2.project_id JOIN Research_outcomes AS T3 ON T2.outcome_code  =  T3.outcome_code WHERE T3.outcome_description LIKE '%Published%';"ВЫБРАТЬ T1.описание ИЗ справочник.проекты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.результатыпроектов КАК T2 ПО T1.ссылка = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.результатыисследований КАК T3 ПО T2.кодрезультата = T3.код ГДЕ T3.описание ПОДОБНО ""%Published%"""
4267;SELECT T1.project_details FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id  =  T2.project_id JOIN Research_outcomes AS T3 ON T2.outcome_code  =  T3.outcome_code WHERE T3.outcome_description LIKE '%Published%';"ВЫБРАТЬ T1.описание ИЗ справочник.проекты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.результатыпроектов КАК T2 ПО T1.ссылка = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.результатыисследований КАК T3 ПО T2.кодрезультата = T3.код ГДЕ T3.описание ПОДОБНО ""%Published%"""
4268;SELECT T1.project_id ,  count(*) FROM Project_Staff AS T1 JOIN Projects AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.project_id ORDER BY count(*) ASC;ВЫБРАТЬ T1.проект , КОЛИЧЕСТВО(*) ИЗ справочник.сотрудникипроектов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.проекты КАК T2 ПО T1.проект = T2.ссылка СГРУППИРОВАТЬ ПО T1.проект УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) ВОЗР
4269;SELECT T1.project_id ,  count(*) FROM Project_Staff AS T1 JOIN Projects AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.project_id ORDER BY count(*) ASC;ВЫБРАТЬ T1.проект , КОЛИЧЕСТВО(*) ИЗ справочник.сотрудникипроектов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.проекты КАК T2 ПО T1.проект = T2.ссылка СГРУППИРОВАТЬ ПО T1.проект УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) ВОЗР
4270;SELECT role_description FROM Staff_Roles WHERE role_code  =  'researcher';"ВЫБРАТЬ описание ИЗ справочник.должностисотрудников ГДЕ код = ""researcher"""
4271;SELECT role_description FROM Staff_Roles WHERE role_code  =  'researcher';"ВЫБРАТЬ описание ИЗ справочник.должностисотрудников ГДЕ код = ""researcher"""
4272;SELECT date_from FROM Project_Staff ORDER BY date_from ASC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 date_from ИЗ справочник.сотрудникипроектов УПОРЯДОЧИТЬ ПО date_from ВОЗР
4273;SELECT date_from FROM Project_Staff ORDER BY date_from ASC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 date_from ИЗ справочник.сотрудникипроектов УПОРЯДОЧИТЬ ПО date_from ВОЗР
4274;SELECT T1.project_details ,  T1.project_id FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.project_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.описание , T1.ссылка ИЗ справочник.проекты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.результатыпроектов КАК T2 ПО T1.ссылка = T2.ссылка СГРУППИРОВАТЬ ПО T1.ссылка УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
4275;SELECT T1.project_details ,  T1.project_id FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.project_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.описание , T1.ссылка ИЗ справочник.проекты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.результатыпроектов КАК T2 ПО T1.ссылка = T2.ссылка СГРУППИРОВАТЬ ПО T1.ссылка УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
4276;SELECT project_details FROM Projects WHERE project_id NOT IN ( SELECT project_id FROM Project_outcomes );ВЫБРАТЬ project_details ИЗ справочник.проекты ГДЕ project_id НЕ В ( ВЫБРАТЬ project_id ИЗ справочник.результатыпроектов )
4277;SELECT project_details FROM Projects WHERE project_id NOT IN ( SELECT project_id FROM Project_outcomes );ВЫБРАТЬ project_details ИЗ справочник.проекты ГДЕ project_id НЕ В ( ВЫБРАТЬ project_id ИЗ справочник.результатыпроектов )
4278;SELECT T1.organisation_id ,  T1.organisation_type ,  T1.organisation_details FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id  =  T2.employer_organisation_id GROUP BY T1.organisation_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.ссылка , T1.видорганизации , T1.описание ИЗ справочник.организации КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.исследовательскийперсонал КАК T2 ПО T1.ссылка = T2.организацияработодатель СГРУППИРОВАТЬ ПО T1.ссылка УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
4279;SELECT T1.organisation_id ,  T1.organisation_type ,  T1.organisation_details FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id  =  T2.employer_organisation_id GROUP BY T1.organisation_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.ссылка , T1.видорганизации , T1.описание ИЗ справочник.организации КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.исследовательскийперсонал КАК T2 ПО T1.ссылка = T2.организацияработодатель СГРУППИРОВАТЬ ПО T1.ссылка УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
4280;SELECT T1.role_description ,  T2.staff_id FROM Staff_Roles AS T1 JOIN Project_Staff AS T2 ON T1.role_code  =  T2.role_code JOIN Project_outcomes AS T3 ON T2.project_id  =  T3.project_id GROUP BY T2.staff_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.описание , T2.ссылка ИЗ справочник.должностисотрудников КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сотрудникипроектов КАК T2 ПО T1.код = T2.роль ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.результатыпроектов КАК T3 ПО T2.проект = T3.ссылка СГРУППИРОВАТЬ ПО T2.ссылка УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
4281;SELECT T1.role_description ,  T2.staff_id FROM Staff_Roles AS T1 JOIN Project_Staff AS T2 ON T1.role_code  =  T2.role_code JOIN Project_outcomes AS T3 ON T2.project_id  =  T3.project_id GROUP BY T2.staff_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.описание , T2.ссылка ИЗ справочник.должностисотрудников КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сотрудникипроектов КАК T2 ПО T1.код = T2.роль ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.результатыпроектов КАК T3 ПО T2.проект = T3.ссылка СГРУППИРОВАТЬ ПО T2.ссылка УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
4282;SELECT document_type_code FROM Document_Types WHERE document_description LIKE 'Initial%';"ВЫБРАТЬ код ИЗ справочник.видыдокументов ГДЕ описание ПОДОБНО ""Initial%"""
4283;SELECT document_type_code FROM Document_Types WHERE document_description LIKE 'Initial%';"ВЫБРАТЬ код ИЗ справочник.видыдокументов ГДЕ описание ПОДОБНО ""Initial%"""
4286;SELECT grant_id ,  count(*) FROM Documents GROUP BY grant_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 грант , КОЛИЧЕСТВО(*) ИЗ справочник.документы СГРУППИРОВАТЬ ПО грант УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
4287;SELECT grant_id ,  count(*) FROM Documents GROUP BY grant_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 грант , КОЛИЧЕСТВО(*) ИЗ справочник.документы СГРУППИРОВАТЬ ПО грант УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
4288;SELECT T1.organisation_type_description FROM organisation_Types AS T1 JOIN Organisations AS T2 ON T1.organisation_type  =  T2.organisation_type WHERE T2.organisation_details  =  'quo';"ВЫБРАТЬ T1.описание ИЗ справочник.видыорганизаций КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.организации КАК T2 ПО T1.код = T2.видорганизации ГДЕ T2.описание = ""quo"""
4289;SELECT T1.organisation_type_description FROM organisation_Types AS T1 JOIN Organisations AS T2 ON T1.organisation_type  =  T2.organisation_type WHERE T2.organisation_details  =  'quo';"ВЫБРАТЬ T1.описание ИЗ справочник.видыорганизаций КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.организации КАК T2 ПО T1.код = T2.видорганизации ГДЕ T2.описание = ""quo"""
4290;SELECT organisation_details FROM Organisations AS T1 JOIN organisation_Types AS T2 ON T1.organisation_type  =  T2.organisation_type WHERE T2.organisation_type_description  =  'Sponsor' ORDER BY organisation_details;"ВЫБРАТЬ organisation_details ИЗ справочник.организации КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.видыорганизаций КАК T2 ПО T1.видорганизации = T2.код ГДЕ T2.описание = ""Sponsor"" УПОРЯДОЧИТЬ ПО organisation_details"
4291;SELECT organisation_details FROM Organisations AS T1 JOIN organisation_Types AS T2 ON T1.organisation_type  =  T2.organisation_type WHERE T2.organisation_type_description  =  'Sponsor' ORDER BY organisation_details;"ВЫБРАТЬ organisation_details ИЗ справочник.организации КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.видыорганизаций КАК T2 ПО T1.видорганизации = T2.код ГДЕ T2.описание = ""Sponsor"" УПОРЯДОЧИТЬ ПО organisation_details"
4292;SELECT count(*) FROM Project_outcomes WHERE outcome_code  =  'Patent';"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.результатыпроектов ГДЕ кодрезультата = ""Patent"""
4293;SELECT count(*) FROM Project_outcomes WHERE outcome_code  =  'Patent';"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.результатыпроектов ГДЕ кодрезультата = ""Patent"""
4294;SELECT count(*) FROM Project_Staff WHERE role_code  =  'leader' OR date_from  <  '1989-04-24 23:51:54';"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.сотрудникипроектов ГДЕ роль = ""leader"" ИЛИ датаначала < ""1989-04-24 23:51:54"""
4295;SELECT count(*) FROM Project_Staff WHERE role_code  =  'leader' OR date_from  <  '1989-04-24 23:51:54';"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.сотрудникипроектов ГДЕ роль = ""leader"" ИЛИ датаначала < ""1989-04-24 23:51:54"""
4296;SELECT date_to FROM Project_Staff ORDER BY date_to DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 датаокончания ИЗ справочник.сотрудникипроектов УПОРЯДОЧИТЬ ПО датаокончания УБЫВ
4297;SELECT date_to FROM Project_Staff ORDER BY date_to DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 датаокончания ИЗ справочник.сотрудникипроектов УПОРЯДОЧИТЬ ПО датаокончания УБЫВ
4298;SELECT T1.outcome_description FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code  =  T2.outcome_code JOIN Projects AS T3 ON T2.project_id  =  T3.project_id WHERE T3.project_details  =  'sint';"ВЫБРАТЬ T1.описание ИЗ справочник.результатыисследований КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.результатыпроектов КАК T2 ПО T1.код = T2.кодрезультата ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.проекты КАК T3 ПО T2.ссылка = T3.ссылка ГДЕ T3.описание = ""sint"""
4299;SELECT T1.outcome_description FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code  =  T2.outcome_code JOIN Projects AS T3 ON T2.project_id  =  T3.project_id WHERE T3.project_details  =  'sint';"ВЫБРАТЬ T1.описание ИЗ справочник.результатыисследований КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.результатыпроектов КАК T2 ПО T1.код = T2.кодрезультата ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.проекты КАК T3 ПО T2.ссылка = T3.ссылка ГДЕ T3.описание = ""sint"""
4300;SELECT T1.organisation_id ,  count(*) FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.organisation_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.организация , КОЛИЧЕСТВО(*) ИЗ справочник.проекты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.результатыпроектов КАК T2 ПО T1.ссылка = T2.ссылка СГРУППИРОВАТЬ ПО T1.организация УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
4301;SELECT T1.organisation_id ,  count(*) FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.organisation_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.организация , КОЛИЧЕСТВО(*) ИЗ справочник.проекты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.результатыпроектов КАК T2 ПО T1.ссылка = T2.ссылка СГРУППИРОВАТЬ ПО T1.организация УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
4302;SELECT project_details FROM Projects WHERE organisation_id IN ( SELECT organisation_id FROM Projects GROUP BY organisation_id ORDER BY count(*) DESC LIMIT 1 );ВЫБРАТЬ project_details ИЗ справочник.проекты ГДЕ organisation_id В ( ВЫБРАТЬ organisation_id ИЗ справочник.проекты СГРУППИРОВАТЬ ПО organisation_id УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ LIMIT 1 )
4303;SELECT project_details FROM Projects WHERE organisation_id IN ( SELECT organisation_id FROM Projects GROUP BY organisation_id ORDER BY count(*) DESC LIMIT 1 );ВЫБРАТЬ project_details ИЗ справочник.проекты ГДЕ organisation_id В ( ВЫБРАТЬ organisation_id ИЗ справочник.проекты СГРУППИРОВАТЬ ПО organisation_id УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ LIMIT 1 )
4304;SELECT staff_details FROM Research_Staff ORDER BY staff_details ASC;ВЫБРАТЬ описание ИЗ справочник.исследовательскийперсонал УПОРЯДОЧИТЬ ПО описание ВОЗР
4305;SELECT staff_details FROM Research_Staff ORDER BY staff_details ASC;ВЫБРАТЬ описание ИЗ справочник.исследовательскийперсонал УПОРЯДОЧИТЬ ПО описание ВОЗР
4306;SELECT count(*) FROM Tasks;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.задачи
4307;SELECT count(*) FROM Tasks;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.задачи
4308;SELECT count(*) ,  T1.project_details FROM Projects AS T1 JOIN Tasks AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.project_id;ВЫБРАТЬ КОЛИЧЕСТВО(*) , T1.описание ИЗ справочник.проекты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.задачи КАК T2 ПО T1.ссылка = T2.проект СГРУППИРОВАТЬ ПО T1.ссылка
4309;SELECT count(*) ,  T1.project_details FROM Projects AS T1 JOIN Tasks AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.project_id;ВЫБРАТЬ КОЛИЧЕСТВО(*) , T1.описание ИЗ справочник.проекты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.задачи КАК T2 ПО T1.ссылка = T2.проект СГРУППИРОВАТЬ ПО T1.ссылка
4310;SELECT role_code FROM Project_Staff WHERE date_from  >  '2003-04-19 15:06:20' AND date_to  <  '2016-03-15 00:33:18';"ВЫБРАТЬ роль ИЗ справочник.сотрудникипроектов ГДЕ датаначала > ""2003-04-19 15:06:20"" И датаокончания < ""2016-03-15 00:33:18"""
4311;SELECT role_code FROM Project_Staff WHERE date_from  >  '2003-04-19 15:06:20' AND date_to  <  '2016-03-15 00:33:18';"ВЫБРАТЬ роль ИЗ справочник.сотрудникипроектов ГДЕ датаначала > ""2003-04-19 15:06:20"" И датаокончания < ""2016-03-15 00:33:18"""
4312;SELECT T1.outcome_description FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code  =  T2.outcome_code;ВЫБРАТЬ T1.описание ИЗ справочник.результатыисследований КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.результатыпроектов КАК T2 ПО T1.код = T2.кодрезультата
4313;SELECT T1.outcome_description FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code  =  T2.outcome_code;ВЫБРАТЬ T1.описание ИЗ справочник.результатыисследований КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.результатыпроектов КАК T2 ПО T1.код = T2.кодрезультата
4314;SELECT role_code FROM Project_Staff GROUP BY role_code ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 роль ИЗ справочник.сотрудникипроектов СГРУППИРОВАТЬ ПО роль УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
4315;SELECT role_code FROM Project_Staff GROUP BY role_code ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 роль ИЗ справочник.сотрудникипроектов СГРУППИРОВАТЬ ПО роль УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
4316;SELECT count(T2.friend) FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T1.name  =  'Dan';"ВЫБРАТЬ КОЛИЧЕСТВО(T2.друг) ИЗ справочник.люди КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.друзья КАК T2 ПО T1.наименование = T2.человек ГДЕ T1.наименование = ""Dan"""
4317;SELECT count(T2.friend) FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T1.name  =  'Dan';"ВЫБРАТЬ КОЛИЧЕСТВО(T2.друг) ИЗ справочник.люди КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.друзья КАК T2 ПО T1.наименование = T2.человек ГДЕ T1.наименование = ""Dan"""
4318;SELECT count(*) FROM Person WHERE gender  =  'female';"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.люди ГДЕ пол = ""female"""
4319;SELECT count(*) FROM Person WHERE gender  =  'female';"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.люди ГДЕ пол = ""female"""
4320;SELECT avg(age) FROM Person;ВЫБРАТЬ СРЕДНЕЕ(возраст) ИЗ справочник.люди
4321;SELECT avg(age) FROM Person;ВЫБРАТЬ СРЕДНЕЕ(возраст) ИЗ справочник.люди
4322;SELECT count(DISTINCT city) FROM Person;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ город) ИЗ справочник.люди
4323;SELECT count(DISTINCT city) FROM Person;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ город) ИЗ справочник.люди
4324;SELECT count(DISTINCT job) FROM Person;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ профессия) ИЗ справочник.люди
4325;SELECT count(DISTINCT job) FROM Person;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ профессия) ИЗ справочник.люди
4326;SELECT name FROM Person WHERE age  =  (SELECT max(age) FROM person);ВЫБРАТЬ name ИЗ справочник.люди ГДЕ age = (ВЫБРАТЬ МАКСИМУМ(age) ИЗ справочник.люди)
4327;SELECT name FROM Person WHERE age  =  (SELECT max(age) FROM person);ВЫБРАТЬ name ИЗ справочник.люди ГДЕ age = (ВЫБРАТЬ МАКСИМУМ(age) ИЗ справочник.люди)
4328;SELECT name FROM Person WHERE job  =  'student' AND age  =  (SELECT max(age) FROM person WHERE job  =  'student' );"ВЫБРАТЬ наименование ИЗ справочник.люди ГДЕ профессия = ""student"" И возраст = (ВЫБРАТЬ МАКСИМУМ(возраст) ИЗ справочник.люди ГДЕ профессия = ""student"" )"
4329;SELECT name FROM Person WHERE job  =  'student' AND age  =  (SELECT max(age) FROM person WHERE job  =  'student' );"ВЫБРАТЬ наименование ИЗ справочник.люди ГДЕ профессия = ""student"" И возраст = (ВЫБРАТЬ МАКСИМУМ(возраст) ИЗ справочник.люди ГДЕ профессия = ""student"" )"
4330;SELECT name FROM Person WHERE gender  =  'male' AND age  =  (SELECT min(age) FROM person WHERE gender  =  'male' );"ВЫБРАТЬ наименование ИЗ справочник.люди ГДЕ пол = ""male"" И возраст = (ВЫБРАТЬ МИНИМУМ(возраст) ИЗ справочник.люди ГДЕ пол = ""male"" )"
4331;SELECT name FROM Person WHERE gender  =  'male' AND age  =  (SELECT min(age) FROM person WHERE gender  =  'male' );"ВЫБРАТЬ наименование ИЗ справочник.люди ГДЕ пол = ""male"" И возраст = (ВЫБРАТЬ МИНИМУМ(возраст) ИЗ справочник.люди ГДЕ пол = ""male"" )"
4332;SELECT age FROM Person WHERE job  =  'doctor' AND name  =  'Zach';"ВЫБРАТЬ возраст ИЗ справочник.люди ГДЕ профессия = ""doctor"" И наименование = ""Zach"""
4333;SELECT age FROM Person WHERE job  =  'doctor' AND name  =  'Zach';"ВЫБРАТЬ возраст ИЗ справочник.люди ГДЕ профессия = ""doctor"" И наименование = ""Zach"""
4334;SELECT name FROM Person WHERE age  <  30;ВЫБРАТЬ наименование ИЗ справочник.люди ГДЕ возраст < 30
4335;SELECT name FROM Person WHERE age  <  30;ВЫБРАТЬ наименование ИЗ справочник.люди ГДЕ возраст < 30
4336;SELECT count(*) FROM Person WHERE age  >  30 AND job  =  'engineer';"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.люди ГДЕ возраст > 30 И профессия = ""engineer"""
4337;SELECT count(*) FROM Person WHERE age  >  30 AND job  =  'engineer';"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.люди ГДЕ возраст > 30 И профессия = ""engineer"""
4338;SELECT avg(age) ,  gender FROM Person GROUP BY gender;ВЫБРАТЬ СРЕДНЕЕ(возраст) , пол ИЗ справочник.люди СГРУППИРОВАТЬ ПО пол
4339;SELECT avg(age) ,  gender FROM Person GROUP BY gender;ВЫБРАТЬ СРЕДНЕЕ(возраст) , пол ИЗ справочник.люди СГРУППИРОВАТЬ ПО пол
4340;SELECT avg(age) ,  job FROM Person GROUP BY job;ВЫБРАТЬ СРЕДНЕЕ(возраст) , профессия ИЗ справочник.люди СГРУППИРОВАТЬ ПО профессия
4341;SELECT avg(age) ,  job FROM Person GROUP BY job;ВЫБРАТЬ СРЕДНЕЕ(возраст) , профессия ИЗ справочник.люди СГРУППИРОВАТЬ ПО профессия
4342;SELECT avg(age) ,  job FROM Person WHERE gender  =  'male' GROUP BY job;"ВЫБРАТЬ СРЕДНЕЕ(возраст) , профессия ИЗ справочник.люди ГДЕ пол = ""male"" СГРУППИРОВАТЬ ПО профессия"
4343;SELECT avg(age) ,  job FROM Person WHERE gender  =  'male' GROUP BY job;"ВЫБРАТЬ СРЕДНЕЕ(возраст) , профессия ИЗ справочник.люди ГДЕ пол = ""male"" СГРУППИРОВАТЬ ПО профессия"
4344;SELECT min(age) ,  job FROM Person GROUP BY job;ВЫБРАТЬ МИНИМУМ(возраст) , профессия ИЗ справочник.люди СГРУППИРОВАТЬ ПО профессия
4345;SELECT min(age) ,  job FROM Person GROUP BY job;ВЫБРАТЬ МИНИМУМ(возраст) , профессия ИЗ справочник.люди СГРУППИРОВАТЬ ПО профессия
4346;SELECT count(*) ,  gender FROM Person WHERE age  <  40 GROUP BY gender;ВЫБРАТЬ КОЛИЧЕСТВО(*) , пол ИЗ справочник.люди ГДЕ возраст < 40 СГРУППИРОВАТЬ ПО пол
4347;SELECT count(*) ,  gender FROM Person WHERE age  <  40 GROUP BY gender;ВЫБРАТЬ КОЛИЧЕСТВО(*) , пол ИЗ справочник.люди ГДЕ возраст < 40 СГРУППИРОВАТЬ ПО пол
4348;SELECT name FROM Person WHERE age  >  (SELECT min(age) FROM person WHERE job  =  'engineer') ORDER BY age;"ВЫБРАТЬ наименование ИЗ справочник.люди ГДЕ возраст > (ВЫБРАТЬ МИНИМУМ(возраст) ИЗ справочник.люди ГДЕ профессия = ""engineer"") УПОРЯДОЧИТЬ ПО возраст"
4349;SELECT name FROM Person WHERE age  >  (SELECT min(age) FROM person WHERE job  =  'engineer') ORDER BY age;"ВЫБРАТЬ наименование ИЗ справочник.люди ГДЕ возраст > (ВЫБРАТЬ МИНИМУМ(возраст) ИЗ справочник.люди ГДЕ профессия = ""engineer"") УПОРЯДОЧИТЬ ПО возраст"
4350;SELECT count(*) FROM Person WHERE age  >  (SELECT max(age) FROM person WHERE job  =  'engineer');"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.люди ГДЕ возраст > (ВЫБРАТЬ МАКСИМУМ(возраст) ИЗ справочник.люди ГДЕ профессия = ""engineer"")"
4351;SELECT count(*) FROM Person WHERE age  >  (SELECT max(age) FROM person WHERE job  =  'engineer');"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.люди ГДЕ возраст > (ВЫБРАТЬ МАКСИМУМ(возраст) ИЗ справочник.люди ГДЕ профессия = ""engineer"")"
4352;SELECT name ,  job FROM Person ORDER BY name;ВЫБРАТЬ наименование , профессия ИЗ справочник.люди УПОРЯДОЧИТЬ ПО наименование
4353;SELECT name ,  job FROM Person ORDER BY name;ВЫБРАТЬ наименование , профессия ИЗ справочник.люди УПОРЯДОЧИТЬ ПО наименование
4354;SELECT name FROM Person ORDER BY age DESC;ВЫБРАТЬ наименование ИЗ справочник.люди УПОРЯДОЧИТЬ ПО возраст УБЫВ
4355;SELECT name FROM Person ORDER BY age DESC;ВЫБРАТЬ наименование ИЗ справочник.люди УПОРЯДОЧИТЬ ПО возраст УБЫВ
4356;SELECT name FROM Person WHERE gender  =  'male' ORDER BY age;"ВЫБРАТЬ наименование ИЗ справочник.люди ГДЕ пол = ""male"" УПОРЯДОЧИТЬ ПО возраст"
4357;SELECT name FROM Person WHERE gender  =  'male' ORDER BY age;"ВЫБРАТЬ наименование ИЗ справочник.люди ГДЕ пол = ""male"" УПОРЯДОЧИТЬ ПО возраст"
4360;SELECT DISTINCT T1.name ,  T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Dan' OR T2.friend  =  'Alice';"ВЫБРАТЬ РАЗЛИЧНЫЕ T1.наименование , T1.возраст ИЗ справочник.люди КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.друзья КАК T2 ПО T1.наименование = T2.человек ГДЕ T2.друг = ""Dan"" ИЛИ T2.друг = ""Alice"""
4361;SELECT DISTINCT T1.name ,  T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Dan' OR T2.friend  =  'Alice';"ВЫБРАТЬ РАЗЛИЧНЫЕ T1.наименование , T1.возраст ИЗ справочник.люди КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.друзья КАК T2 ПО T1.наименование = T2.человек ГДЕ T2.друг = ""Dan"" ИЛИ T2.друг = ""Alice"""
4368;SELECT name FROM PersonFriend GROUP BY name HAVING count(*)  =  1;ВЫБРАТЬ человек ИЗ регистрсведений.друзья СГРУППИРОВАТЬ ПО человек ИМЕЮЩИЕ КОЛИЧЕСТВО(*) = 1
4369;SELECT name FROM PersonFriend GROUP BY name HAVING count(*)  =  1;ВЫБРАТЬ человек ИЗ регистрсведений.друзья СГРУППИРОВАТЬ ПО человек ИМЕЮЩИЕ КОЛИЧЕСТВО(*) = 1
4370;SELECT T2.friend FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T1.name  =  'Bob';"ВЫБРАТЬ T2.друг ИЗ справочник.люди КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.друзья КАК T2 ПО T1.наименование = T2.человек ГДЕ T1.наименование = ""Bob"""
4371;SELECT T2.friend FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T1.name  =  'Bob';"ВЫБРАТЬ T2.друг ИЗ справочник.люди КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.друзья КАК T2 ПО T1.наименование = T2.человек ГДЕ T1.наименование = ""Bob"""
4372;SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Bob';"ВЫБРАТЬ T1.наименование ИЗ справочник.люди КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.друзья КАК T2 ПО T1.наименование = T2.человек ГДЕ T2.друг = ""Bob"""
4373;SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Bob';"ВЫБРАТЬ T1.наименование ИЗ справочник.люди КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.друзья КАК T2 ПО T1.наименование = T2.человек ГДЕ T2.друг = ""Bob"""
4374;SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Zach' AND T1.gender  =  'female';"ВЫБРАТЬ T1.наименование ИЗ справочник.люди КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.друзья КАК T2 ПО T1.наименование = T2.человек ГДЕ T2.друг = ""Zach"" И T1.пол = ""female"""
4375;SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Zach' AND T1.gender  =  'female';"ВЫБРАТЬ T1.наименование ИЗ справочник.люди КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.друзья КАК T2 ПО T1.наименование = T2.человек ГДЕ T2.друг = ""Zach"" И T1.пол = ""female"""
4376;SELECT T2.friend FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T2.name  =  'Alice' AND T1.gender  =  'female';"ВЫБРАТЬ T2.друг ИЗ справочник.люди КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.друзья КАК T2 ПО T1.наименование = T2.друг ГДЕ T2.человек = ""Alice"" И T1.пол = ""female"""
4377;SELECT T2.friend FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T2.name  =  'Alice' AND T1.gender  =  'female';"ВЫБРАТЬ T2.друг ИЗ справочник.люди КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.друзья КАК T2 ПО T1.наименование = T2.друг ГДЕ T2.человек = ""Alice"" И T1.пол = ""female"""
4378;SELECT T2.friend FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T2.name  =  'Alice' AND T1.gender  =  'male' AND T1.job  =  'doctor';"ВЫБРАТЬ T2.друг ИЗ справочник.люди КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.друзья КАК T2 ПО T1.наименование = T2.друг ГДЕ T2.человек = ""Alice"" И T1.пол = ""male"" И T1.профессия = ""doctor"""
4379;SELECT T2.friend FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T2.name  =  'Alice' AND T1.gender  =  'male' AND T1.job  =  'doctor';"ВЫБРАТЬ T2.друг ИЗ справочник.люди КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.друзья КАК T2 ПО T1.наименование = T2.друг ГДЕ T2.человек = ""Alice"" И T1.пол = ""male"" И T1.профессия = ""doctor"""
4380;SELECT T2.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T1.city  =  'new york city';"ВЫБРАТЬ T2.человек ИЗ справочник.люди КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.друзья КАК T2 ПО T1.наименование = T2.друг ГДЕ T1.город = ""new york city"""
4381;SELECT T2.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T1.city  =  'new york city';"ВЫБРАТЬ T2.человек ИЗ справочник.люди КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.друзья КАК T2 ПО T1.наименование = T2.друг ГДЕ T1.город = ""new york city"""
4382;SELECT DISTINCT T2.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T1.age  <  (SELECT avg(age) FROM person);ВЫБРАТЬ РАЗЛИЧНЫЕ T2.человек ИЗ справочник.люди КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.друзья КАК T2 ПО T1.наименование = T2.друг ГДЕ T1.возраст < (ВЫБРАТЬ СРЕДНЕЕ(age) ИЗ справочник.люди)
4383;SELECT DISTINCT T2.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T1.age  <  (SELECT avg(age) FROM person);ВЫБРАТЬ РАЗЛИЧНЫЕ T2.человек ИЗ справочник.люди КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.друзья КАК T2 ПО T1.наименование = T2.друг ГДЕ T1.возраст < (ВЫБРАТЬ СРЕДНЕЕ(age) ИЗ справочник.люди)
4384;SELECT DISTINCT T2.name ,  T2.friend ,  T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T1.age  >  (SELECT avg(age) FROM person);ВЫБРАТЬ РАЗЛИЧНЫЕ T2.человек , T2.друг , T1.возраст ИЗ справочник.люди КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.друзья КАК T2 ПО T1.наименование = T2.друг ГДЕ T1.возраст > (ВЫБРАТЬ СРЕДНЕЕ(age) ИЗ справочник.люди)
4385;SELECT DISTINCT T2.name ,  T2.friend ,  T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T1.age  >  (SELECT avg(age) FROM person);ВЫБРАТЬ РАЗЛИЧНЫЕ T2.человек , T2.друг , T1.возраст ИЗ справочник.люди КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.друзья КАК T2 ПО T1.наименование = T2.друг ГДЕ T1.возраст > (ВЫБРАТЬ СРЕДНЕЕ(age) ИЗ справочник.люди)
4386;SELECT friend FROM PersonFriend WHERE name =  'Zach' AND YEAR  =  (SELECT max(YEAR) FROM PersonFriend WHERE name =  'Zach');"ВЫБРАТЬ друг ИЗ регистрсведений.друзья ГДЕ человек = ""Zach"" И годзнакомства = (ВЫБРАТЬ МАКСИМУМ(годзнакомства) ИЗ регистрсведений.друзья ГДЕ человек = ""Zach"")"
4387;SELECT friend FROM PersonFriend WHERE name =  'Zach' AND YEAR  =  (SELECT max(YEAR) FROM PersonFriend WHERE name =  'Zach');"ВЫБРАТЬ друг ИЗ регистрсведений.друзья ГДЕ человек = ""Zach"" И годзнакомства = (ВЫБРАТЬ МАКСИМУМ(годзнакомства) ИЗ регистрсведений.друзья ГДЕ человек = ""Zach"")"
4388;SELECT T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T2.name =  'Zach' AND T2.year  =  (SELECT max(YEAR) FROM PersonFriend WHERE name =  'Zach');"ВЫБРАТЬ T1.возраст ИЗ справочник.люди КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.друзья КАК T2 ПО T1.наименование = T2.друг ГДЕ T2.человек = ""Zach"" И T2.годзнакомства = (ВЫБРАТЬ МАКСИМУМ(YEAR) ИЗ регистрсведений.друзья ГДЕ name = ""Zach"")"
4389;SELECT T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T2.name =  'Zach' AND T2.year  =  (SELECT max(YEAR) FROM PersonFriend WHERE name =  'Zach');"ВЫБРАТЬ T1.возраст ИЗ справочник.люди КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.друзья КАК T2 ПО T1.наименование = T2.друг ГДЕ T2.человек = ""Zach"" И T2.годзнакомства = (ВЫБРАТЬ МАКСИМУМ(YEAR) ИЗ регистрсведений.друзья ГДЕ name = ""Zach"")"
4390;SELECT name FROM PersonFriend WHERE friend =  'Alice' AND YEAR  =  (SELECT min(YEAR) FROM PersonFriend WHERE friend =  'Alice');"ВЫБРАТЬ человек ИЗ регистрсведений.друзья ГДЕ друг = ""Alice"" И годзнакомства = (ВЫБРАТЬ МИНИМУМ(годзнакомства) ИЗ регистрсведений.друзья ГДЕ друг = ""Alice"")"
4391;SELECT name FROM PersonFriend WHERE friend =  'Alice' AND YEAR  =  (SELECT min(YEAR) FROM PersonFriend WHERE friend =  'Alice');"ВЫБРАТЬ человек ИЗ регистрсведений.друзья ГДЕ друг = ""Alice"" И годзнакомства = (ВЫБРАТЬ МИНИМУМ(годзнакомства) ИЗ регистрсведений.друзья ГДЕ друг = ""Alice"")"
4392;SELECT T1.name ,  T1.age ,  T1.job FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend =  'Alice' AND T2.year  =  (SELECT max(YEAR) FROM PersonFriend WHERE friend =  'Alice');"ВЫБРАТЬ T1.наименование , T1.возраст , T1.профессия ИЗ справочник.люди КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.друзья КАК T2 ПО T1.наименование = T2.человек ГДЕ T2.друг = ""Alice"" И T2.годзнакомства = (ВЫБРАТЬ МАКСИМУМ(YEAR) ИЗ регистрсведений.друзья ГДЕ friend = ""Alice"")"
4393;SELECT T1.name ,  T1.age ,  T1.job FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend =  'Alice' AND T2.year  =  (SELECT max(YEAR) FROM PersonFriend WHERE friend =  'Alice');"ВЫБРАТЬ T1.наименование , T1.возраст , T1.профессия ИЗ справочник.люди КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.друзья КАК T2 ПО T1.наименование = T2.человек ГДЕ T2.друг = ""Alice"" И T2.годзнакомства = (ВЫБРАТЬ МАКСИМУМ(YEAR) ИЗ регистрсведений.друзья ГДЕ friend = ""Alice"")"
4396;SELECT T2.name ,  avg(T1.age) FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend GROUP BY T2.name ORDER BY avg(T1.age) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.человек , СРЕДНЕЕ(T1.возраст) ИЗ справочник.люди КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.друзья КАК T2 ПО T1.наименование = T2.друг СГРУППИРОВАТЬ ПО T2.человек УПОРЯДОЧИТЬ ПО СРЕДНЕЕ(T1.возраст) УБЫВ
4397;SELECT T2.name ,  avg(T1.age) FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend GROUP BY T2.name ORDER BY avg(T1.age) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.человек , СРЕДНЕЕ(T1.возраст) ИЗ справочник.люди КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.друзья КАК T2 ПО T1.наименование = T2.друг СГРУППИРОВАТЬ ПО T2.человек УПОРЯДОЧИТЬ ПО СРЕДНЕЕ(T1.возраст) УБЫВ
4398;SELECT count(DISTINCT name) FROM PersonFriend WHERE friend NOT IN (SELECT name FROM person WHERE city  =  'Austin');"ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ наименование) ИЗ регистрсведений.друзья ГДЕ friend НЕ В (ВЫБРАТЬ наименование ИЗ справочник.люди ГДЕ город = ""Austin"")"
4399;SELECT count(DISTINCT name) FROM PersonFriend WHERE friend NOT IN (SELECT name FROM person WHERE city  =  'Austin');"ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ наименование) ИЗ регистрсведений.друзья ГДЕ friend НЕ В (ВЫБРАТЬ наименование ИЗ справочник.люди ГДЕ город = ""Austin"")"
4400;SELECT DISTINCT T4.name FROM PersonFriend AS T1 JOIN Person AS T2 ON T1.name  =  T2.name JOIN PersonFriend AS T3 ON T1.friend  =  T3.name JOIN PersonFriend AS T4 ON T3.friend  =  T4.name WHERE T2.name  =  'Alice' AND T4.name != 'Alice';"ВЫБРАТЬ РАЗЛИЧНЫЕ T4.человек ИЗ регистрсведений.друзья КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.люди КАК T2 ПО T1.человек = T2.наименование ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.друзья КАК T3 ПО T1.друг = T3.человек ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.друзья КАК T4 ПО T3.друг = T4.человек ГДЕ T2.наименование = ""Alice"" И T4.человек <> ""Alice"""
4401;SELECT DISTINCT T4.name FROM PersonFriend AS T1 JOIN Person AS T2 ON T1.name  =  T2.name JOIN PersonFriend AS T3 ON T1.friend  =  T3.name JOIN PersonFriend AS T4 ON T3.friend  =  T4.name WHERE T2.name  =  'Alice' AND T4.name != 'Alice';"ВЫБРАТЬ РАЗЛИЧНЫЕ T4.человек ИЗ регистрсведений.друзья КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.люди КАК T2 ПО T1.человек = T2.наименование ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.друзья КАК T3 ПО T1.друг = T3.человек ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.друзья КАК T4 ПО T3.друг = T4.человек ГДЕ T2.наименование = ""Alice"" И T4.человек <> ""Alice"""
4402;SELECT count(*) FROM member;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.участники
4403;SELECT Name FROM member ORDER BY Name ASC;ВЫБРАТЬ наименование ИЗ справочник.участники УПОРЯДОЧИТЬ ПО наименование ВОЗР
4404;SELECT Name ,  Country FROM member;ВЫБРАТЬ наименование , страна ИЗ справочник.участники
4405;"SELECT Name FROM member WHERE Country  =  ""United States"" OR Country  =  ""Canada""";"ВЫБРАТЬ наименование ИЗ справочник.участники ГДЕ страна = ""United States"" ИЛИ страна = ""Canada"""
4406;SELECT Country ,  COUNT(*) FROM member GROUP BY Country;ВЫБРАТЬ страна , КОЛИЧЕСТВО(*) ИЗ справочник.участники СГРУППИРОВАТЬ ПО страна
4407;SELECT Country FROM member GROUP BY Country ORDER BY COUNT(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 страна ИЗ справочник.участники СГРУППИРОВАТЬ ПО страна УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
4408;SELECT Country FROM member GROUP BY Country HAVING COUNT(*)  >  2;ВЫБРАТЬ страна ИЗ справочник.участники СГРУППИРОВАТЬ ПО страна ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 2
4409;SELECT Leader_Name ,  College_Location FROM college;ВЫБРАТЬ руководитель , местоположение ИЗ справочник.колледжи
4410;SELECT T2.Name ,  T1.Name FROM college AS T1 JOIN member AS T2 ON T1.College_ID  =  T2.College_ID;ВЫБРАТЬ T2.наименование , T1.наименование ИЗ справочник.колледжи КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.участники КАК T2 ПО T1.ссылка = T2.колледж
4411;SELECT T2.Name ,  T1.College_Location FROM college AS T1 JOIN member AS T2 ON T1.College_ID  =  T2.College_ID ORDER BY T2.Name ASC;ВЫБРАТЬ T2.наименование , T1.местоположение ИЗ справочник.колледжи КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.участники КАК T2 ПО T1.ссылка = T2.колледж УПОРЯДОЧИТЬ ПО T2.наименование ВОЗР
4412;"SELECT DISTINCT T1.Leader_Name FROM college AS T1 JOIN member AS T2 ON T1.College_ID  =  T2.College_ID WHERE T2.Country  =  ""Canada""";"ВЫБРАТЬ РАЗЛИЧНЫЕ T1.руководитель ИЗ справочник.колледжи КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.участники КАК T2 ПО T1.ссылка = T2.колледж ГДЕ T2.страна = ""Canada"""
4413;SELECT T1.Name ,  T2.Decoration_Theme FROM member AS T1 JOIN round AS T2 ON T1.Member_ID  =  T2.Member_ID;ВЫБРАТЬ T1.наименование , T2.темаоформления ИЗ справочник.участники КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.раунды КАК T2 ПО T1.ссылка = T2.участник
4414;SELECT T1.Name FROM member AS T1 JOIN round AS T2 ON T1.Member_ID  =  T2.Member_ID WHERE T2.Rank_in_Round  >  3;ВЫБРАТЬ T1.наименование ИЗ справочник.участники КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.раунды КАК T2 ПО T1.ссылка = T2.участник ГДЕ T2.местовраунде > 3
4415;SELECT T1.Name FROM member AS T1 JOIN round AS T2 ON T1.Member_ID  =  T2.Member_ID ORDER BY Rank_in_Round ASC;ВЫБРАТЬ T1.наименование ИЗ справочник.участники КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.раунды КАК T2 ПО T1.ссылка = T2.участник УПОРЯДОЧИТЬ ПО Rank_in_Round ВОЗР
4416;SELECT Name FROM member WHERE Member_ID NOT IN (SELECT Member_ID FROM round);ВЫБРАТЬ Name ИЗ справочник.участники ГДЕ Member_ID НЕ В (ВЫБРАТЬ Member_ID ИЗ регистрсведений.раунды)
4417;SELECT document_name ,  access_count FROM documents ORDER BY document_name;ВЫБРАТЬ наименование , количествопросмотров ИЗ справочник.документы УПОРЯДОЧИТЬ ПО наименование
4418;SELECT document_name ,  access_count FROM documents ORDER BY document_name;ВЫБРАТЬ наименование , количествопросмотров ИЗ справочник.документы УПОРЯДОЧИТЬ ПО наименование
4419;SELECT document_name ,  access_count FROM documents ORDER BY access_count DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование , количествопросмотров ИЗ справочник.документы УПОРЯДОЧИТЬ ПО количествопросмотров УБЫВ
4420;SELECT document_name ,  access_count FROM documents ORDER BY access_count DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование , количествопросмотров ИЗ справочник.документы УПОРЯДОЧИТЬ ПО количествопросмотров УБЫВ
4421;SELECT document_type_code FROM documents GROUP BY document_type_code HAVING count(*)  >  4;ВЫБРАТЬ типдокумента ИЗ справочник.документы СГРУППИРОВАТЬ ПО типдокумента ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 4
4422;SELECT document_type_code FROM documents GROUP BY document_type_code HAVING count(*)  >  4;ВЫБРАТЬ типдокумента ИЗ справочник.документы СГРУППИРОВАТЬ ПО типдокумента ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 4
4423;SELECT sum(access_count) FROM documents GROUP BY document_type_code ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 СУММА(количествопросмотров) ИЗ справочник.документы СГРУППИРОВАТЬ ПО типдокумента УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
4424;SELECT sum(access_count) FROM documents GROUP BY document_type_code ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 СУММА(количествопросмотров) ИЗ справочник.документы СГРУППИРОВАТЬ ПО типдокумента УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
4425;SELECT avg(access_count) FROM documents;ВЫБРАТЬ СРЕДНЕЕ(количествопросмотров) ИЗ справочник.документы
4426;SELECT avg(access_count) FROM documents;ВЫБРАТЬ СРЕДНЕЕ(количествопросмотров) ИЗ справочник.документы
4427;SELECT t2.document_structure_description FROM documents AS t1 JOIN document_structures AS t2 ON t1.document_structure_code  =  t2.document_structure_code GROUP BY t1.document_structure_code ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 t2.описание ИЗ справочник.документы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.структурыдокументов КАК t2 ПО t1.структура = t2.код СГРУППИРОВАТЬ ПО t1.структура УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
4428;SELECT t2.document_structure_description FROM documents AS t1 JOIN document_structures AS t2 ON t1.document_structure_code  =  t2.document_structure_code GROUP BY t1.document_structure_code ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 t2.описание ИЗ справочник.документы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.структурыдокументов КАК t2 ПО t1.структура = t2.код СГРУППИРОВАТЬ ПО t1.структура УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
4429;"SELECT document_type_code FROM documents WHERE document_name  =  ""David CV""";"ВЫБРАТЬ типдокумента ИЗ справочник.документы ГДЕ наименование = ""David CV"""
4430;"SELECT document_type_code FROM documents WHERE document_name  =  ""David CV""";"ВЫБРАТЬ типдокумента ИЗ справочник.документы ГДЕ наименование = ""David CV"""
4433;SELECT document_type_code FROM documents GROUP BY document_type_code HAVING sum(access_count)  >  10000;ВЫБРАТЬ типдокумента ИЗ справочник.документы СГРУППИРОВАТЬ ПО типдокумента ИМЕЮЩИЕ СУММА(количествопросмотров) > 10000
4434;SELECT document_type_code FROM documents GROUP BY document_type_code HAVING sum(access_count)  >  10000;ВЫБРАТЬ типдокумента ИЗ справочник.документы СГРУППИРОВАТЬ ПО типдокумента ИМЕЮЩИЕ СУММА(количествопросмотров) > 10000
4435;"SELECT t2.section_title FROM documents AS t1 JOIN document_sections AS t2 ON t1.document_code  =  t2.document_code WHERE t1.document_name  =  ""David CV""";"ВЫБРАТЬ t2.заголовок ИЗ справочник.документы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.разделыдокументов КАК t2 ПО t1.код = t2.документ ГДЕ t1.наименование = ""David CV"""
4436;"SELECT t2.section_title FROM documents AS t1 JOIN document_sections AS t2 ON t1.document_code  =  t2.document_code WHERE t1.document_name  =  ""David CV""";"ВЫБРАТЬ t2.заголовок ИЗ справочник.документы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.разделыдокументов КАК t2 ПО t1.код = t2.документ ГДЕ t1.наименование = ""David CV"""
4437;SELECT document_name FROM documents WHERE document_code NOT IN (SELECT document_code FROM document_sections);ВЫБРАТЬ document_name ИЗ справочник.документы ГДЕ document_code НЕ В (ВЫБРАТЬ document_code ИЗ справочник.разделыдокументов)
4438;SELECT document_name FROM documents WHERE document_code NOT IN (SELECT document_code FROM document_sections);ВЫБРАТЬ document_name ИЗ справочник.документы ГДЕ document_code НЕ В (ВЫБРАТЬ document_code ИЗ справочник.разделыдокументов)
4439;SELECT user_name ,  password FROM users GROUP BY role_code ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 имя , пароль ИЗ справочник.пользователи СГРУППИРОВАТЬ ПО роль УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
4440;SELECT user_name ,  password FROM users GROUP BY role_code ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 имя , пароль ИЗ справочник.пользователи СГРУППИРОВАТЬ ПО роль УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
4441;"SELECT avg(t1.access_count) FROM documents AS t1 JOIN document_functional_areas AS t2 ON t1.document_code  =  t2.document_code JOIN functional_areas AS t3 ON t2.functional_area_code  =  t3.functional_area_code WHERE t3.functional_area_description  =  ""Acknowledgement""";"ВЫБРАТЬ СРЕДНЕЕ(t1.количествопросмотров) ИЗ справочник.документы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.функциональныеобластидокументов КАК t2 ПО t1.код = t2.документ ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.функциональныеобласти КАК t3 ПО t2.функциональнаяобласть = t3.код ГДЕ t3.описание = ""Acknowledgement"""
4442;"SELECT avg(t1.access_count) FROM documents AS t1 JOIN document_functional_areas AS t2 ON t1.document_code  =  t2.document_code JOIN functional_areas AS t3 ON t2.functional_area_code  =  t3.functional_area_code WHERE t3.functional_area_description  =  ""Acknowledgement""";"ВЫБРАТЬ СРЕДНЕЕ(t1.количествопросмотров) ИЗ справочник.документы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.функциональныеобластидокументов КАК t2 ПО t1.код = t2.документ ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.функциональныеобласти КАК t3 ПО t2.функциональнаяобласть = t3.код ГДЕ t3.описание = ""Acknowledgement"""
4445;SELECT t1.document_name FROM documents AS t1 JOIN document_sections AS t2 ON t1.document_code  =  t2.document_code GROUP BY t1.document_code ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 t1.наименование ИЗ справочник.документы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.разделыдокументов КАК t2 ПО t1.код = t2.документ СГРУППИРОВАТЬ ПО t1.код УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
4446;SELECT t1.document_name FROM documents AS t1 JOIN document_sections AS t2 ON t1.document_code  =  t2.document_code GROUP BY t1.document_code ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 t1.наименование ИЗ справочник.документы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.разделыдокументов КАК t2 ПО t1.код = t2.документ СГРУППИРОВАТЬ ПО t1.код УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
4447;"SELECT document_name FROM documents WHERE document_name LIKE ""%CV%""";"ВЫБРАТЬ наименование ИЗ справочник.документы ГДЕ наименование ПОДОБНО ""%CV%"""
4448;"SELECT document_name FROM documents WHERE document_name LIKE ""%CV%""";"ВЫБРАТЬ наименование ИЗ справочник.документы ГДЕ наименование ПОДОБНО ""%CV%"""
4449;SELECT count(*) FROM users WHERE user_login  =  1;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.пользователи ГДЕ логин = 1
4450;SELECT count(*) FROM users WHERE user_login  =  1;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.пользователи ГДЕ логин = 1
4451;SELECT role_description FROM ROLES WHERE role_code  =  (SELECT role_code FROM users WHERE user_login  =  1 GROUP BY role_code ORDER BY count(*) DESC LIMIT 1);ВЫБРАТЬ role_description ИЗ справочник.роли ГДЕ роль = (ВЫБРАТЬ роль ИЗ справочник.пользователи ГДЕ логин = 1 СГРУППИРОВАТЬ ПО роль УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ LIMIT 1)
4452;SELECT role_description FROM ROLES WHERE role_code  =  (SELECT role_code FROM users WHERE user_login  =  1 GROUP BY role_code ORDER BY count(*) DESC LIMIT 1);ВЫБРАТЬ role_description ИЗ справочник.роли ГДЕ роль = (ВЫБРАТЬ роль ИЗ справочник.пользователи ГДЕ логин = 1 СГРУППИРОВАТЬ ПО роль УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ LIMIT 1)
4453;SELECT avg(access_count) FROM documents GROUP BY document_structure_code ORDER BY count(*) ASC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 СРЕДНЕЕ(количествопросмотров) ИЗ справочник.документы СГРУППИРОВАТЬ ПО структура УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) ВОЗР
4454;SELECT avg(access_count) FROM documents GROUP BY document_structure_code ORDER BY count(*) ASC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 СРЕДНЕЕ(количествопросмотров) ИЗ справочник.документы СГРУППИРОВАТЬ ПО структура УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) ВОЗР
4455;SELECT image_name ,  image_url FROM images ORDER BY image_name;ВЫБРАТЬ имяфайла , url ИЗ справочник.изображения УПОРЯДОЧИТЬ ПО имяфайла
4456;SELECT image_name ,  image_url FROM images ORDER BY image_name;ВЫБРАТЬ имяфайла , url ИЗ справочник.изображения УПОРЯДОЧИТЬ ПО имяфайла
4457;SELECT count(*) ,  role_code FROM users GROUP BY role_code;ВЫБРАТЬ КОЛИЧЕСТВО(*) , роль ИЗ справочник.пользователи СГРУППИРОВАТЬ ПО роль
4458;SELECT count(*) ,  role_code FROM users GROUP BY role_code;ВЫБРАТЬ КОЛИЧЕСТВО(*) , роль ИЗ справочник.пользователи СГРУППИРОВАТЬ ПО роль
4459;SELECT document_type_code FROM documents GROUP BY document_type_code HAVING count(*)  >  2;ВЫБРАТЬ типдокумента ИЗ справочник.документы СГРУППИРОВАТЬ ПО типдокумента ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 2
4460;SELECT document_type_code FROM documents GROUP BY document_type_code HAVING count(*)  >  2;ВЫБРАТЬ типдокумента ИЗ справочник.документы СГРУППИРОВАТЬ ПО типдокумента ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 2
4461;SELECT count(*) FROM Companies;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.компании
4462;SELECT count(*) FROM Companies;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.компании
4463;SELECT name FROM Companies ORDER BY Market_Value_billion DESC;ВЫБРАТЬ наименование ИЗ справочник.компании УПОРЯДОЧИТЬ ПО рыночнаястоимостьвмлрд УБЫВ
4464;SELECT name FROM Companies ORDER BY Market_Value_billion DESC;ВЫБРАТЬ наименование ИЗ справочник.компании УПОРЯДОЧИТЬ ПО рыночнаястоимостьвмлрд УБЫВ
4465;SELECT name FROM Companies WHERE Headquarters != 'USA';"ВЫБРАТЬ наименование ИЗ справочник.компании ГДЕ штабквартира <> ""USA"""
4466;SELECT name FROM Companies WHERE Headquarters != 'USA';"ВЫБРАТЬ наименование ИЗ справочник.компании ГДЕ штабквартира <> ""USA"""
4467;SELECT name ,  Assets_billion FROM Companies ORDER BY name ASC;ВЫБРАТЬ наименование , активывмлрд ИЗ справочник.компании УПОРЯДОЧИТЬ ПО наименование ВОЗР
4468;SELECT name ,  Assets_billion FROM Companies ORDER BY name ASC;ВЫБРАТЬ наименование , активывмлрд ИЗ справочник.компании УПОРЯДОЧИТЬ ПО наименование ВОЗР
4469;SELECT avg(Profits_billion) FROM Companies;ВЫБРАТЬ СРЕДНЕЕ(прибыльвмлрд) ИЗ справочник.компании
4470;SELECT avg(Profits_billion) FROM Companies;ВЫБРАТЬ СРЕДНЕЕ(прибыльвмлрд) ИЗ справочник.компании
4471;"SELECT max(Sales_billion) ,  min(Sales_billion) FROM Companies WHERE Industry != ""Banking""";"ВЫБРАТЬ МАКСИМУМ(продаживмлрд) , МИНИМУМ(продаживмлрд) ИЗ справочник.компании ГДЕ отрасль <> ""Banking"""
4472;"SELECT max(Sales_billion) ,  min(Sales_billion) FROM Companies WHERE Industry != ""Banking""";"ВЫБРАТЬ МАКСИМУМ(продаживмлрд) , МИНИМУМ(продаживмлрд) ИЗ справочник.компании ГДЕ отрасль <> ""Banking"""
4473;SELECT count(DISTINCT Industry) FROM Companies;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ отрасль) ИЗ справочник.компании
4474;SELECT count(DISTINCT Industry) FROM Companies;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ отрасль) ИЗ справочник.компании
4475;SELECT name FROM buildings ORDER BY Height DESC;ВЫБРАТЬ наименование ИЗ справочник.здания УПОРЯДОЧИТЬ ПО высота УБЫВ
4476;SELECT name FROM buildings ORDER BY Height DESC;ВЫБРАТЬ наименование ИЗ справочник.здания УПОРЯДОЧИТЬ ПО высота УБЫВ
4477;SELECT Stories FROM buildings ORDER BY Height DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 этажей ИЗ справочник.здания УПОРЯДОЧИТЬ ПО высота УБЫВ
4478;SELECT Stories FROM buildings ORDER BY Height DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 этажей ИЗ справочник.здания УПОРЯДОЧИТЬ ПО высота УБЫВ
4479;SELECT T3.name ,  T2.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id  =  T2.id JOIN Companies AS T3 ON T1.company_id  =  T3.id;ВЫБРАТЬ T3.наименование , T2.наименование ИЗ регистрсведений.офисыкомпаний КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.здания КАК T2 ПО T1.здание = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.компании КАК T3 ПО T1.компания = T3.ссылка
4480;SELECT T3.name ,  T2.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id  =  T2.id JOIN Companies AS T3 ON T1.company_id  =  T3.id;ВЫБРАТЬ T3.наименование , T2.наименование ИЗ регистрсведений.офисыкомпаний КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.здания КАК T2 ПО T1.здание = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.компании КАК T3 ПО T1.компания = T3.ссылка
4481;SELECT T2.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id  =  T2.id JOIN Companies AS T3 ON T1.company_id  =  T3.id GROUP BY T1.building_id HAVING COUNT(*)  >  1;ВЫБРАТЬ T2.наименование ИЗ регистрсведений.офисыкомпаний КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.здания КАК T2 ПО T1.здание = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.компании КАК T3 ПО T1.компания = T3.ссылка СГРУППИРОВАТЬ ПО T1.здание ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 1
4482;SELECT T2.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id  =  T2.id JOIN Companies AS T3 ON T1.company_id  =  T3.id GROUP BY T1.building_id HAVING COUNT(*)  >  1;ВЫБРАТЬ T2.наименование ИЗ регистрсведений.офисыкомпаний КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.здания КАК T2 ПО T1.здание = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.компании КАК T3 ПО T1.компания = T3.ссылка СГРУППИРОВАТЬ ПО T1.здание ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 1
4483;SELECT T2.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id  =  T2.id JOIN Companies AS T3 ON T1.company_id  =  T3.id GROUP BY T1.building_id ORDER BY COUNT(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.наименование ИЗ регистрсведений.офисыкомпаний КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.здания КАК T2 ПО T1.здание = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.компании КАК T3 ПО T1.компания = T3.ссылка СГРУППИРОВАТЬ ПО T1.здание УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
4484;SELECT T2.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id  =  T2.id JOIN Companies AS T3 ON T1.company_id  =  T3.id GROUP BY T1.building_id ORDER BY COUNT(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.наименование ИЗ регистрсведений.офисыкомпаний КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.здания КАК T2 ПО T1.здание = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.компании КАК T3 ПО T1.компания = T3.ссылка СГРУППИРОВАТЬ ПО T1.здание УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
4485;"SELECT name FROM buildings WHERE Status  =  ""on-hold"" ORDER BY Stories ASC";"ВЫБРАТЬ наименование ИЗ справочник.здания ГДЕ статус = ""on-hold"" УПОРЯДОЧИТЬ ПО этажей ВОЗР"
4486;"SELECT name FROM buildings WHERE Status  =  ""on-hold"" ORDER BY Stories ASC";"ВЫБРАТЬ наименование ИЗ справочник.здания ГДЕ статус = ""on-hold"" УПОРЯДОЧИТЬ ПО этажей ВОЗР"
4487;SELECT Industry ,  COUNT(*) FROM Companies GROUP BY Industry;ВЫБРАТЬ отрасль , КОЛИЧЕСТВО(*) ИЗ справочник.компании СГРУППИРОВАТЬ ПО отрасль
4488;SELECT Industry ,  COUNT(*) FROM Companies GROUP BY Industry;ВЫБРАТЬ отрасль , КОЛИЧЕСТВО(*) ИЗ справочник.компании СГРУППИРОВАТЬ ПО отрасль
4489;SELECT Industry FROM Companies GROUP BY Industry ORDER BY COUNT(*) DESC;ВЫБРАТЬ отрасль ИЗ справочник.компании СГРУППИРОВАТЬ ПО отрасль УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
4490;SELECT Industry FROM Companies GROUP BY Industry ORDER BY COUNT(*) DESC;ВЫБРАТЬ отрасль ИЗ справочник.компании СГРУППИРОВАТЬ ПО отрасль УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
4491;SELECT Industry FROM Companies GROUP BY Industry ORDER BY COUNT(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 отрасль ИЗ справочник.компании СГРУППИРОВАТЬ ПО отрасль УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
4492;SELECT Industry FROM Companies GROUP BY Industry ORDER BY COUNT(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 отрасль ИЗ справочник.компании СГРУППИРОВАТЬ ПО отрасль УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
4493;SELECT name FROM buildings WHERE id NOT IN (SELECT building_id FROM Office_locations);ВЫБРАТЬ name ИЗ справочник.здания ГДЕ id НЕ В (ВЫБРАТЬ building_id ИЗ регистрсведений.офисыкомпаний)
4494;SELECT name FROM buildings WHERE id NOT IN (SELECT building_id FROM Office_locations);ВЫБРАТЬ name ИЗ справочник.здания ГДЕ id НЕ В (ВЫБРАТЬ building_id ИЗ регистрсведений.офисыкомпаний)
4497;"SELECT count(*) FROM Companies WHERE Industry  =  ""Banking"" OR Industry  =  ""Conglomerate""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.компании ГДЕ отрасль = ""Banking"" ИЛИ отрасль = ""Conglomerate"""
4498;"SELECT count(*) FROM Companies WHERE Industry  =  ""Banking"" OR Industry  =  ""Conglomerate""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.компании ГДЕ отрасль = ""Banking"" ИЛИ отрасль = ""Conglomerate"""
4499;SELECT Headquarters FROM Companies GROUP BY Headquarters HAVING COUNT(*)  >  2;ВЫБРАТЬ штабквартира ИЗ справочник.компании СГРУППИРОВАТЬ ПО штабквартира ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 2
4500;SELECT Headquarters FROM Companies GROUP BY Headquarters HAVING COUNT(*)  >  2;ВЫБРАТЬ штабквартира ИЗ справочник.компании СГРУППИРОВАТЬ ПО штабквартира ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 2
4501;SELECT count(*) FROM Products;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.товары
4502;SELECT Product_Name FROM Products ORDER BY Product_Price ASC;ВЫБРАТЬ наименование ИЗ справочник.товары УПОРЯДОЧИТЬ ПО цена ВОЗР
4503;SELECT Product_Name ,  Product_Type_Code FROM Products;ВЫБРАТЬ наименование , кодтипатовара ИЗ справочник.товары
4504;"SELECT Product_Price FROM Products WHERE Product_Name  =  ""Dining"" OR Product_Name  =  ""Trading Policy""";"ВЫБРАТЬ цена ИЗ справочник.товары ГДЕ наименование = ""Dining"" ИЛИ наименование = ""Trading Policy"""
4505;SELECT avg(Product_Price) FROM Products;ВЫБРАТЬ СРЕДНЕЕ(цена) ИЗ справочник.товары
4506;SELECT Product_Name FROM Products ORDER BY Product_Price DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование ИЗ справочник.товары УПОРЯДОЧИТЬ ПО цена УБЫВ
4507;SELECT Product_Type_Code ,  COUNT(*) FROM Products GROUP BY Product_Type_Code;ВЫБРАТЬ кодтипатовара , КОЛИЧЕСТВО(*) ИЗ справочник.товары СГРУППИРОВАТЬ ПО кодтипатовара
4508;SELECT Product_Type_Code FROM Products GROUP BY Product_Type_Code ORDER BY COUNT(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 кодтипатовара ИЗ справочник.товары СГРУППИРОВАТЬ ПО кодтипатовара УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
4509;SELECT Product_Type_Code FROM Products GROUP BY Product_Type_Code HAVING COUNT(*)  >=  2;ВЫБРАТЬ кодтипатовара ИЗ справочник.товары СГРУППИРОВАТЬ ПО кодтипатовара ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
4511;SELECT T1.Product_Name ,  COUNT(*) FROM Products AS T1 JOIN Products_in_Events AS T2 ON T1.Product_ID  =  T2.Product_ID GROUP BY T1.Product_Name;ВЫБРАТЬ T1.наименование , КОЛИЧЕСТВО(*) ИЗ справочник.товары КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.товарывсобытиях КАК T2 ПО T1.ссылка = T2.товар СГРУППИРОВАТЬ ПО T1.наименование
4512;SELECT T1.Product_Name ,  COUNT(*) FROM Products AS T1 JOIN Products_in_Events AS T2 ON T1.Product_ID  =  T2.Product_ID GROUP BY T1.Product_Name ORDER BY COUNT(*) DESC;ВЫБРАТЬ T1.наименование , КОЛИЧЕСТВО(*) ИЗ справочник.товары КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.товарывсобытиях КАК T2 ПО T1.ссылка = T2.товар СГРУППИРОВАТЬ ПО T1.наименование УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
4513;SELECT T1.Product_Name FROM Products AS T1 JOIN Products_in_Events AS T2 ON T1.Product_ID  =  T2.Product_ID GROUP BY T1.Product_Name HAVING COUNT(*)  >=  2;ВЫБРАТЬ T1.наименование ИЗ справочник.товары КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.товарывсобытиях КАК T2 ПО T1.ссылка = T2.товар СГРУППИРОВАТЬ ПО T1.наименование ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
4514;SELECT T1.Product_Name FROM Products AS T1 JOIN Products_in_Events AS T2 ON T1.Product_ID  =  T2.Product_ID GROUP BY T1.Product_Name HAVING COUNT(*)  >=  2 ORDER BY T1.Product_Name;ВЫБРАТЬ T1.наименование ИЗ справочник.товары КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.товарывсобытиях КАК T2 ПО T1.ссылка = T2.товар СГРУППИРОВАТЬ ПО T1.наименование ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2 УПОРЯДОЧИТЬ ПО T1.наименование
4515;SELECT Product_Name FROM Products WHERE Product_ID NOT IN (SELECT Product_ID FROM Products_in_Events);ВЫБРАТЬ Product_Name ИЗ справочник.товары ГДЕ Product_ID НЕ В (ВЫБРАТЬ Product_ID ИЗ регистрсведений.товарывсобытиях)
4516;SELECT count(*) FROM artwork;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.произведенияискусства
4517;SELECT Name FROM artwork ORDER BY Name ASC;ВЫБРАТЬ наименование ИЗ справочник.произведенияискусства УПОРЯДОЧИТЬ ПО наименование ВОЗР
4518;"SELECT Name FROM artwork WHERE TYPE != ""Program Talent Show""";"ВЫБРАТЬ наименование ИЗ справочник.произведенияискусства ГДЕ тип <> ""Program Talent Show"""
4519;SELECT Festival_Name ,  LOCATION FROM festival_detail;ВЫБРАТЬ наименование , местоположение ИЗ справочник.фестивали
4520;SELECT Chair_Name FROM festival_detail ORDER BY YEAR ASC;ВЫБРАТЬ имяпредседателя ИЗ справочник.фестивали УПОРЯДОЧИТЬ ПО год ВОЗР
4521;SELECT LOCATION FROM festival_detail ORDER BY Num_of_Audience DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 местоположение ИЗ справочник.фестивали УПОРЯДОЧИТЬ ПО количествозрителей УБЫВ
4522;SELECT Festival_Name FROM festival_detail WHERE YEAR  =  2007;ВЫБРАТЬ наименование ИЗ справочник.фестивали ГДЕ год = 2007
4523;SELECT avg(Num_of_Audience) FROM festival_detail;ВЫБРАТЬ СРЕДНЕЕ(количествозрителей) ИЗ справочник.фестивали
4524;SELECT Festival_Name FROM festival_detail ORDER BY YEAR DESC LIMIT 3;ВЫБРАТЬ ПЕРВЫЕ 3 наименование ИЗ справочник.фестивали УПОРЯДОЧИТЬ ПО год УБЫВ
4525;SELECT T2.Name ,  T3.Festival_Name FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID  =  T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID  =  T3.Festival_ID;ВЫБРАТЬ T2.наименование , T3.наименование ИЗ регистрсведений.номинации КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.произведенияискусства КАК T2 ПО T1.произведениеискусства = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.фестивали КАК T3 ПО T1.фестиваль = T3.ссылка
4526;SELECT DISTINCT T2.Type FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID  =  T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID  =  T3.Festival_ID WHERE T3.Year  =  2007;ВЫБРАТЬ РАЗЛИЧНЫЕ T2.тип ИЗ регистрсведений.номинации КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.произведенияискусства КАК T2 ПО T1.произведениеискусства = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.фестивали КАК T3 ПО T1.фестиваль = T3.ссылка ГДЕ T3.год = 2007
4527;SELECT T2.Name FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID  =  T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID  =  T3.Festival_ID ORDER BY T3.Year;ВЫБРАТЬ T2.наименование ИЗ регистрсведений.номинации КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.произведенияискусства КАК T2 ПО T1.произведениеискусства = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.фестивали КАК T3 ПО T1.фестиваль = T3.ссылка УПОРЯДОЧИТЬ ПО T3.год
4528;"SELECT T3.Festival_Name FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID  =  T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID  =  T3.Festival_ID WHERE T2.Type  =  ""Program Talent Show""";"ВЫБРАТЬ T3.наименование ИЗ регистрсведений.номинации КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.произведенияискусства КАК T2 ПО T1.произведениеискусства = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.фестивали КАК T3 ПО T1.фестиваль = T3.ссылка ГДЕ T2.тип = ""Program Talent Show"""
4529;SELECT T1.Festival_ID ,  T3.Festival_Name FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID  =  T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID  =  T3.Festival_ID GROUP BY T1.Festival_ID HAVING COUNT(*)  >=  2;ВЫБРАТЬ T1.фестиваль , T3.наименование ИЗ регистрсведений.номинации КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.произведенияискусства КАК T2 ПО T1.произведениеискусства = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.фестивали КАК T3 ПО T1.фестиваль = T3.ссылка СГРУППИРОВАТЬ ПО T1.фестиваль ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
4530;SELECT T1.Festival_ID ,  T3.Festival_Name ,  COUNT(*) FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID  =  T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID  =  T3.Festival_ID GROUP BY T1.Festival_ID;ВЫБРАТЬ T1.фестиваль , T3.наименование , КОЛИЧЕСТВО(*) ИЗ регистрсведений.номинации КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.произведенияискусства КАК T2 ПО T1.произведениеискусства = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.фестивали КАК T3 ПО T1.фестиваль = T3.ссылка СГРУППИРОВАТЬ ПО T1.фестиваль
4531;SELECT TYPE ,  COUNT(*) FROM artwork GROUP BY TYPE;ВЫБРАТЬ тип , КОЛИЧЕСТВО(*) ИЗ справочник.произведенияискусства СГРУППИРОВАТЬ ПО тип
4532;SELECT TYPE FROM artwork GROUP BY TYPE ORDER BY COUNT(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 тип ИЗ справочник.произведенияискусства СГРУППИРОВАТЬ ПО тип УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
4533;SELECT YEAR FROM festival_detail GROUP BY YEAR HAVING COUNT(*)  >  1;ВЫБРАТЬ год ИЗ справочник.фестивали СГРУППИРОВАТЬ ПО год ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 1
4534;SELECT Name FROM Artwork WHERE Artwork_ID NOT IN (SELECT Artwork_ID FROM nomination);ВЫБРАТЬ Name ИЗ справочник.произведенияискусства ГДЕ Artwork_ID НЕ В (ВЫБРАТЬ Artwork_ID ИЗ регистрсведений.номинации)
4535;SELECT Num_of_Audience FROM festival_detail WHERE YEAR  =  2008 OR YEAR  =  2010;ВЫБРАТЬ количествозрителей ИЗ справочник.фестивали ГДЕ год = 2008 ИЛИ год = 2010
4536;SELECT sum(Num_of_Audience) FROM festival_detail;ВЫБРАТЬ СУММА(количествозрителей) ИЗ справочник.фестивали
4538;SELECT count(*) FROM premises;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.помещения
4539;SELECT DISTINCT premises_type FROM premises;ВЫБРАТЬ РАЗЛИЧНЫЕ типпомещения ИЗ справочник.помещения
4540;SELECT premises_type ,  premise_details FROM premises ORDER BY premises_type;ВЫБРАТЬ типпомещения , описание ИЗ справочник.помещения УПОРЯДОЧИТЬ ПО типпомещения
4541;SELECT premises_type ,  count(*) FROM premises GROUP BY premises_type;ВЫБРАТЬ типпомещения , КОЛИЧЕСТВО(*) ИЗ справочник.помещения СГРУППИРОВАТЬ ПО типпомещения
4542;SELECT product_category ,  count(*) FROM mailshot_campaigns GROUP BY product_category;ВЫБРАТЬ категориятовара , КОЛИЧЕСТВО(*) ИЗ документ.рассылка СГРУППИРОВАТЬ ПО категориятовара
4543;SELECT customer_name ,  customer_phone FROM customers WHERE customer_id NOT IN (SELECT customer_id FROM mailshot_customers);ВЫБРАТЬ customer_name , customer_phone ИЗ справочник.клиенты ГДЕ customer_id НЕ В (ВЫБРАТЬ customer_id ИЗ регистрсведений.участникирассылок)
4544;SELECT T1.customer_name ,  T1.customer_phone FROM customers AS T1 JOIN mailshot_customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.outcome_code  =  'No Response';"ВЫБРАТЬ T1.наименование , T1.телефон ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.участникирассылок КАК T2 ПО T1.ссылка = T2.клиент ГДЕ T2.кодрезультата = ""No Response"""
4545;SELECT outcome_code ,  count(*) FROM mailshot_customers GROUP BY outcome_code;ВЫБРАТЬ кодрезультата , КОЛИЧЕСТВО(*) ИЗ регистрсведений.участникирассылок СГРУППИРОВАТЬ ПО кодрезультата
4546;SELECT T2.customer_name FROM mailshot_customers AS T1 JOIN customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE outcome_code  =  'Order' GROUP BY T1.customer_id HAVING count(*)  >=  2;"ВЫБРАТЬ T2.наименование ИЗ регистрсведений.участникирассылок КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.клиенты КАК T2 ПО T1.клиент = T2.ссылка ГДЕ outcome_code = ""Order"" СГРУППИРОВАТЬ ПО T1.клиент ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2"
4547;SELECT T2.customer_name FROM mailshot_customers AS T1 JOIN customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.наименование ИЗ регистрсведений.участникирассылок КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.клиенты КАК T2 ПО T1.клиент = T2.ссылка СГРУППИРОВАТЬ ПО T1.клиент УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
4549;SELECT T2.premises_type ,  T1.address_type_code FROM customer_addresses AS T1 JOIN premises AS T2 ON T1.premise_id  =  T2.premise_id;ВЫБРАТЬ T2.типпомещения , T1.кодтипаадреса ИЗ регистрсведений.адресаклиентов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.помещения КАК T2 ПО T1.помещение = T2.ссылка
4550;SELECT DISTINCT address_type_code FROM customer_addresses;ВЫБРАТЬ РАЗЛИЧНЫЕ кодтипаадреса ИЗ регистрсведений.адресаклиентов
4551;SELECT order_shipping_charges ,  customer_id FROM customer_orders WHERE order_status_code  =  'Cancelled' OR order_status_code  =  'Paid';"ВЫБРАТЬ стоимостьдоставки , клиент ИЗ документ.заказклиента ГДЕ кодстатусазаказа = ""Cancelled"" ИЛИ кодстатусазаказа = ""Paid"""
4552;SELECT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE shipping_method_code  =  'FedEx' AND order_status_code  =  'Paid';"ВЫБРАТЬ T1.наименование ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.заказклиента КАК T2 ПО T1.ссылка = T2.клиент ГДЕ shipping_method_code = ""FedEx"" И order_status_code = ""Paid"""
4553;SELECT count(*) FROM COURSE;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.курсы
4554;SELECT count(*) FROM COURSE;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.курсы
4555;SELECT count(*) FROM COURSE WHERE Credits  >  2;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.курсы ГДЕ кредиты > 2
4556;SELECT count(*) FROM COURSE WHERE Credits  >  2;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.курсы ГДЕ кредиты > 2
4557;SELECT CName FROM COURSE WHERE Credits  =  1;ВЫБРАТЬ наименование ИЗ справочник.курсы ГДЕ кредиты = 1
4558;SELECT CName FROM COURSE WHERE Credits  =  1;ВЫБРАТЬ наименование ИЗ справочник.курсы ГДЕ кредиты = 1
4559;"SELECT CName FROM COURSE WHERE Days  =  ""MTW""";"ВЫБРАТЬ наименование ИЗ справочник.курсы ГДЕ дни = ""MTW"""
4560;"SELECT CName FROM COURSE WHERE Days  =  ""MTW""";"ВЫБРАТЬ наименование ИЗ справочник.курсы ГДЕ дни = ""MTW"""
4561;"SELECT count(*) FROM DEPARTMENT WHERE Division  =  ""AS""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.кафедры ГДЕ подразделение = ""AS"""
4562;"SELECT count(*) FROM DEPARTMENT WHERE Division  =  ""AS""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.кафедры ГДЕ подразделение = ""AS"""
4563;SELECT DPhone FROM DEPARTMENT WHERE Room  =  268;ВЫБРАТЬ телефон ИЗ справочник.кафедры ГДЕ кабинет = 268
4564;SELECT DPhone FROM DEPARTMENT WHERE Room  =  268;ВЫБРАТЬ телефон ИЗ справочник.кафедры ГДЕ кабинет = 268
4565;"SELECT COUNT(DISTINCT StuID) FROM ENROLLED_IN WHERE Grade  =  ""B""";"ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ студент) ИЗ регистрсведений.записиопосещении ГДЕ оценка = ""B"""
4566;"SELECT COUNT(DISTINCT StuID) FROM ENROLLED_IN WHERE Grade  =  ""B""";"ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ студент) ИЗ регистрсведений.записиопосещении ГДЕ оценка = ""B"""
4567;SELECT max(gradepoint) ,  min(gradepoint) FROM GRADECONVERSION;ВЫБРАТЬ МАКСИМУМ(балл) , МИНИМУМ(балл) ИЗ справочник.шкалаоценок
4568;SELECT max(gradepoint) ,  min(gradepoint) FROM GRADECONVERSION;ВЫБРАТЬ МАКСИМУМ(балл) , МИНИМУМ(балл) ИЗ справочник.шкалаоценок
4569;SELECT DISTINCT Fname FROM STUDENT WHERE Fname LIKE '%a%';"ВЫБРАТЬ РАЗЛИЧНЫЕ имя ИЗ справочник.студенты ГДЕ имя ПОДОБНО ""%a%"""
4570;SELECT DISTINCT Fname FROM STUDENT WHERE Fname LIKE '%a%';"ВЫБРАТЬ РАЗЛИЧНЫЕ имя ИЗ справочник.студенты ГДЕ имя ПОДОБНО ""%a%"""
4571;"SELECT Fname ,  Lname FROM FACULTY WHERE sex  =  ""M"" AND Building  =  ""NEB""";"ВЫБРАТЬ имя , фамилия ИЗ справочник.преподаватели ГДЕ пол = ""M"" И здание = ""NEB"""
4572;"SELECT Fname ,  Lname FROM FACULTY WHERE sex  =  ""M"" AND Building  =  ""NEB""";"ВЫБРАТЬ имя , фамилия ИЗ справочник.преподаватели ГДЕ пол = ""M"" И здание = ""NEB"""
4573;"SELECT Room FROM FACULTY WHERE Rank  =  ""Professor"" AND Building  =  ""NEB""";"ВЫБРАТЬ кабинет ИЗ справочник.преподаватели ГДЕ звание = ""Professor"" И здание = ""NEB"""
4574;"SELECT Room FROM FACULTY WHERE Rank  =  ""Professor"" AND Building  =  ""NEB""";"ВЫБРАТЬ кабинет ИЗ справочник.преподаватели ГДЕ звание = ""Professor"" И здание = ""NEB"""
4575;"SELECT DName FROM DEPARTMENT WHERE Building  =  ""Mergenthaler""";"ВЫБРАТЬ наименование ИЗ справочник.кафедры ГДЕ здание = ""Mergenthaler"""
4576;"SELECT DName FROM DEPARTMENT WHERE Building  =  ""Mergenthaler""";"ВЫБРАТЬ наименование ИЗ справочник.кафедры ГДЕ здание = ""Mergenthaler"""
4577;SELECT * FROM COURSE ORDER BY Credits;ВЫБРАТЬ * ИЗ справочник.курсы УПОРЯДОЧИТЬ ПО кредиты
4578;SELECT * FROM COURSE ORDER BY Credits;ВЫБРАТЬ * ИЗ справочник.курсы УПОРЯДОЧИТЬ ПО кредиты
4579;SELECT CName FROM COURSE ORDER BY Credits;ВЫБРАТЬ наименование ИЗ справочник.курсы УПОРЯДОЧИТЬ ПО кредиты
4580;SELECT CName FROM COURSE ORDER BY Credits;ВЫБРАТЬ наименование ИЗ справочник.курсы УПОРЯДОЧИТЬ ПО кредиты
4581;SELECT Fname FROM STUDENT ORDER BY Age DESC;ВЫБРАТЬ имя ИЗ справочник.студенты УПОРЯДОЧИТЬ ПО возраст УБЫВ
4582;SELECT Fname FROM STUDENT ORDER BY Age DESC;ВЫБРАТЬ имя ИЗ справочник.студенты УПОРЯДОЧИТЬ ПО возраст УБЫВ
4583;"SELECT LName FROM STUDENT WHERE Sex  =  ""F"" ORDER BY Age DESC";"ВЫБРАТЬ фамилия ИЗ справочник.студенты ГДЕ пол = ""F"" УПОРЯДОЧИТЬ ПО возраст УБЫВ"
4584;"SELECT LName FROM STUDENT WHERE Sex  =  ""F"" ORDER BY Age DESC";"ВЫБРАТЬ фамилия ИЗ справочник.студенты ГДЕ пол = ""F"" УПОРЯДОЧИТЬ ПО возраст УБЫВ"
4585;"SELECT Lname FROM FACULTY WHERE Building  =  ""Barton"" ORDER BY Lname";"ВЫБРАТЬ фамилия ИЗ справочник.преподаватели ГДЕ здание = ""Barton"" УПОРЯДОЧИТЬ ПО фамилия"
4586;"SELECT Lname FROM FACULTY WHERE Building  =  ""Barton"" ORDER BY Lname";"ВЫБРАТЬ фамилия ИЗ справочник.преподаватели ГДЕ здание = ""Barton"" УПОРЯДОЧИТЬ ПО фамилия"
4587;"SELECT Fname FROM FACULTY WHERE Rank  =  ""Professor"" ORDER BY Fname";"ВЫБРАТЬ имя ИЗ справочник.преподаватели ГДЕ звание = ""Professor"" УПОРЯДОЧИТЬ ПО имя"
4588;"SELECT Fname FROM FACULTY WHERE Rank  =  ""Professor"" ORDER BY Fname";"ВЫБРАТЬ имя ИЗ справочник.преподаватели ГДЕ звание = ""Professor"" УПОРЯДОЧИТЬ ПО имя"
4589;SELECT T1.DName FROM DEPARTMENT AS T1 JOIN MINOR_IN AS T2 ON T1.DNO  =  T2.DNO GROUP BY T2.DNO ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.наименование ИЗ справочник.кафедры КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.допспециальности КАК T2 ПО T1.ссылка = T2.кафедра СГРУППИРОВАТЬ ПО T2.кафедра УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
4590;SELECT T1.DName FROM DEPARTMENT AS T1 JOIN MINOR_IN AS T2 ON T1.DNO  =  T2.DNO GROUP BY T2.DNO ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.наименование ИЗ справочник.кафедры КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.допспециальности КАК T2 ПО T1.ссылка = T2.кафедра СГРУППИРОВАТЬ ПО T2.кафедра УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
4593;SELECT T1.DName FROM DEPARTMENT AS T1 JOIN MEMBER_OF AS T2 ON T1.DNO  =  T2.DNO GROUP BY T2.DNO ORDER BY count(*) ASC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.наименование ИЗ справочник.кафедры КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.членствокафедры КАК T2 ПО T1.ссылка = T2.кафедра СГРУППИРОВАТЬ ПО T2.кафедра УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) ВОЗР
4594;SELECT T1.DName FROM DEPARTMENT AS T1 JOIN MEMBER_OF AS T2 ON T1.DNO  =  T2.DNO GROUP BY T2.DNO ORDER BY count(*) ASC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.наименование ИЗ справочник.кафедры КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.членствокафедры КАК T2 ПО T1.ссылка = T2.кафедра СГРУППИРОВАТЬ ПО T2.кафедра УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) ВОЗР
4595;SELECT Rank FROM FACULTY GROUP BY Rank ORDER BY count(*) ASC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 звание ИЗ справочник.преподаватели СГРУППИРОВАТЬ ПО звание УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) ВОЗР
4596;SELECT Rank FROM FACULTY GROUP BY Rank ORDER BY count(*) ASC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 звание ИЗ справочник.преподаватели СГРУППИРОВАТЬ ПО звание УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) ВОЗР
4597;SELECT T2.Fname ,  T2.Lname FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor  =  T2.FacID GROUP BY T1.Instructor ORDER BY count(*) DESC LIMIT 3;ВЫБРАТЬ ПЕРВЫЕ 3 T2.имя , T2.фамилия ИЗ справочник.курсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.преподаватели КАК T2 ПО T1.преподаватель = T2.ссылка СГРУППИРОВАТЬ ПО T1.преподаватель УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
4598;SELECT T2.Fname ,  T2.Lname FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor  =  T2.FacID GROUP BY T1.Instructor ORDER BY count(*) DESC LIMIT 3;ВЫБРАТЬ ПЕРВЫЕ 3 T2.имя , T2.фамилия ИЗ справочник.курсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.преподаватели КАК T2 ПО T1.преподаватель = T2.ссылка СГРУППИРОВАТЬ ПО T1.преподаватель УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
4599;SELECT T2.Building FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor  =  T2.FacID GROUP BY T1.Instructor ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.здание ИЗ справочник.курсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.преподаватели КАК T2 ПО T1.преподаватель = T2.ссылка СГРУППИРОВАТЬ ПО T1.преподаватель УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
4600;SELECT T2.Building FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor  =  T2.FacID GROUP BY T1.Instructor ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.здание ИЗ справочник.курсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.преподаватели КАК T2 ПО T1.преподаватель = T2.ссылка СГРУППИРОВАТЬ ПО T1.преподаватель УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
4601;SELECT T1.CName FROM COURSE AS T1 JOIN ENROLLED_IN AS T2 ON T1.CID  =  T2.CID GROUP BY T2.CID HAVING COUNT(*)  >=  5;ВЫБРАТЬ T1.наименование ИЗ справочник.курсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.записиопосещении КАК T2 ПО T1.код = T2.курс СГРУППИРОВАТЬ ПО T2.курс ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 5
4602;SELECT T1.CName FROM COURSE AS T1 JOIN ENROLLED_IN AS T2 ON T1.CID  =  T2.CID GROUP BY T2.CID HAVING COUNT(*)  >=  5;ВЫБРАТЬ T1.наименование ИЗ справочник.курсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.записиопосещении КАК T2 ПО T1.код = T2.курс СГРУППИРОВАТЬ ПО T2.курс ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 5
4603;"SELECT T2.Fname ,  T2.Lname FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor  =  T2.FacID WHERE T1.CName  =  ""COMPUTER LITERACY""";"ВЫБРАТЬ T2.имя , T2.фамилия ИЗ справочник.курсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.преподаватели КАК T2 ПО T1.преподаватель = T2.ссылка ГДЕ T1.наименование = ""COMPUTER LITERACY"""
4604;"SELECT T2.Fname ,  T2.Lname FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor  =  T2.FacID WHERE T1.CName  =  ""COMPUTER LITERACY""";"ВЫБРАТЬ T2.имя , T2.фамилия ИЗ справочник.курсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.преподаватели КАК T2 ПО T1.преподаватель = T2.ссылка ГДЕ T1.наименование = ""COMPUTER LITERACY"""
4605;"SELECT T2.Dname ,  T2.Room FROM COURSE AS T1 JOIN DEPARTMENT AS T2 ON T1.DNO  =  T2.DNO WHERE T1.CName  =  ""INTRODUCTION TO COMPUTER SCIENCE""";"ВЫБРАТЬ T2.наименование , T2.кабинет ИЗ справочник.курсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.кафедры КАК T2 ПО T1.кафедра = T2.ссылка ГДЕ T1.наименование = ""INTRODUCTION TO COMPUTER SCIENCE"""
4606;"SELECT T2.Dname ,  T2.Room FROM COURSE AS T1 JOIN DEPARTMENT AS T2 ON T1.DNO  =  T2.DNO WHERE T1.CName  =  ""INTRODUCTION TO COMPUTER SCIENCE""";"ВЫБРАТЬ T2.наименование , T2.кабинет ИЗ справочник.курсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.кафедры КАК T2 ПО T1.кафедра = T2.ссылка ГДЕ T1.наименование = ""INTRODUCTION TO COMPUTER SCIENCE"""
4607;SELECT T3.Fname ,  T3.LName ,  T2.gradepoint FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade  =  T2.lettergrade AND T1.StuID  =  T3.StuID;ВЫБРАТЬ T3.имя , T3.фамилия , T2.балл ИЗ регистрсведений.записиопосещении КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.шкалаоценок КАК T2 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК T3 ПО T1.оценка = T2.буквеннаяоценка И T1.студент = T3.ссылка
4608;SELECT T3.Fname ,  T3.LName ,  T2.gradepoint FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade  =  T2.lettergrade AND T1.StuID  =  T3.StuID;ВЫБРАТЬ T3.имя , T3.фамилия , T2.балл ИЗ регистрсведений.записиопосещении КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.шкалаоценок КАК T2 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК T3 ПО T1.оценка = T2.буквеннаяоценка И T1.студент = T3.ссылка
4609;SELECT DISTINCT T3.Fname FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade  =  T2.lettergrade AND T1.StuID  =  T3.StuID WHERE T2.gradepoint  >=  3.8;ВЫБРАТЬ РАЗЛИЧНЫЕ T3.имя ИЗ регистрсведений.записиопосещении КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.шкалаоценок КАК T2 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК T3 ПО T1.оценка = T2.буквеннаяоценка И T1.студент = T3.ссылка ГДЕ T2.балл >= 3.8
4610;SELECT DISTINCT T3.Fname FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade  =  T2.lettergrade AND T1.StuID  =  T3.StuID WHERE T2.gradepoint  >=  3.8;ВЫБРАТЬ РАЗЛИЧНЫЕ T3.имя ИЗ регистрсведений.записиопосещении КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.шкалаоценок КАК T2 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК T3 ПО T1.оценка = T2.буквеннаяоценка И T1.студент = T3.ссылка ГДЕ T2.балл >= 3.8
4611;SELECT T1.Fname ,  T1.Lname FROM FACULTY AS T1 JOIN MEMBER_OF AS T2 ON T1.FacID  =  T2.FacID WHERE T2.DNO  =  520;ВЫБРАТЬ T1.имя , T1.фамилия ИЗ справочник.преподаватели КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.членствокафедры КАК T2 ПО T1.ссылка = T2.преподаватель ГДЕ T2.кафедра = 520
4612;SELECT T1.Fname ,  T1.Lname FROM FACULTY AS T1 JOIN MEMBER_OF AS T2 ON T1.FacID  =  T2.FacID WHERE T2.DNO  =  520;ВЫБРАТЬ T1.имя , T1.фамилия ИЗ справочник.преподаватели КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.членствокафедры КАК T2 ПО T1.ссылка = T2.преподаватель ГДЕ T2.кафедра = 520
4613;SELECT T2.Fname ,  T2.Lname FROM MINOR_IN AS T1 JOIN STUDENT AS T2 ON T1.StuID  =  T2.StuID WHERE T1.DNO  =  140;ВЫБРАТЬ T2.имя , T2.фамилия ИЗ регистрсведений.допспециальности КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК T2 ПО T1.студент = T2.ссылка ГДЕ T1.кафедра = 140
4614;SELECT T2.Fname ,  T2.Lname FROM MINOR_IN AS T1 JOIN STUDENT AS T2 ON T1.StuID  =  T2.StuID WHERE T1.DNO  =  140;ВЫБРАТЬ T2.имя , T2.фамилия ИЗ регистрсведений.допспециальности КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК T2 ПО T1.студент = T2.ссылка ГДЕ T1.кафедра = 140
4615;"SELECT T2.Lname FROM DEPARTMENT AS T1 JOIN FACULTY AS T2 ON T1.DNO  =  T3.DNO JOIN MEMBER_OF AS T3 ON T2.FacID  =  T3.FacID WHERE T1.DName  =  ""Computer Science""";"ВЫБРАТЬ T2.фамилия ИЗ справочник.кафедры КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.преподаватели КАК T2 ПО T1.ссылка = T3.кафедра ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.членствокафедры КАК T3 ПО T2.ссылка = T3.преподаватель ГДЕ T1.наименование = ""Computer Science"""
4616;"SELECT T2.Lname FROM DEPARTMENT AS T1 JOIN FACULTY AS T2 ON T1.DNO  =  T3.DNO JOIN MEMBER_OF AS T3 ON T2.FacID  =  T3.FacID WHERE T1.DName  =  ""Computer Science""";"ВЫБРАТЬ T2.фамилия ИЗ справочник.кафедры КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.преподаватели КАК T2 ПО T1.ссылка = T3.кафедра ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.членствокафедры КАК T3 ПО T2.ссылка = T3.преподаватель ГДЕ T1.наименование = ""Computer Science"""
4617;"SELECT avg(T2.gradepoint) FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade  =  T2.lettergrade AND T1.StuID  =  T3.StuID WHERE T3.LName  =  ""Smith""";"ВЫБРАТЬ СРЕДНЕЕ(T2.балл) ИЗ регистрсведений.записиопосещении КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.шкалаоценок КАК T2 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК T3 ПО T1.оценка = T2.буквеннаяоценка И T1.студент = T3.ссылка ГДЕ T3.фамилия = ""Smith"""
4618;"SELECT avg(T2.gradepoint) FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade  =  T2.lettergrade AND T1.StuID  =  T3.StuID WHERE T3.LName  =  ""Smith""";"ВЫБРАТЬ СРЕДНЕЕ(T2.балл) ИЗ регистрсведений.записиопосещении КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.шкалаоценок КАК T2 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК T3 ПО T1.оценка = T2.буквеннаяоценка И T1.студент = T3.ссылка ГДЕ T3.фамилия = ""Smith"""
4619;"SELECT max(T2.gradepoint) ,  min(T2.gradepoint) FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade  =  T2.lettergrade AND T1.StuID  =  T3.StuID WHERE T3.city_code  =  ""NYC""";"ВЫБРАТЬ МАКСИМУМ(T2.балл) , МИНИМУМ(T2.балл) ИЗ регистрсведений.записиопосещении КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.шкалаоценок КАК T2 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК T3 ПО T1.оценка = T2.буквеннаяоценка И T1.студент = T3.ссылка ГДЕ T3.кодгорода = ""NYC"""
4620;"SELECT max(T2.gradepoint) ,  min(T2.gradepoint) FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade  =  T2.lettergrade AND T1.StuID  =  T3.StuID WHERE T3.city_code  =  ""NYC""";"ВЫБРАТЬ МАКСИМУМ(T2.балл) , МИНИМУМ(T2.балл) ИЗ регистрсведений.записиопосещении КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.шкалаоценок КАК T2 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК T3 ПО T1.оценка = T2.буквеннаяоценка И T1.студент = T3.ссылка ГДЕ T3.кодгорода = ""NYC"""
4621;SELECT CName FROM COURSE WHERE Credits  =  3 UNION SELECT CName FROM COURSE WHERE Credits  =  1 AND Hours  =  4;ВЫБРАТЬ наименование ИЗ справочник.курсы ГДЕ кредиты = 3 ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ наименование ИЗ справочник.курсы ГДЕ кредиты = 1 И время = 4
4622;SELECT CName FROM COURSE WHERE Credits  =  3 UNION SELECT CName FROM COURSE WHERE Credits  =  1 AND Hours  =  4;ВЫБРАТЬ наименование ИЗ справочник.курсы ГДЕ кредиты = 3 ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ наименование ИЗ справочник.курсы ГДЕ кредиты = 1 И время = 4
4623;"SELECT DName FROM DEPARTMENT WHERE Division  =  ""AS"" UNION SELECT DName FROM DEPARTMENT WHERE Division  =  ""EN"" AND Building  =  ""NEB""";"ВЫБРАТЬ наименование ИЗ справочник.кафедры ГДЕ подразделение = ""AS"" ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ наименование ИЗ справочник.кафедры ГДЕ подразделение = ""EN"" И здание = ""NEB"""
4624;"SELECT DName FROM DEPARTMENT WHERE Division  =  ""AS"" UNION SELECT DName FROM DEPARTMENT WHERE Division  =  ""EN"" AND Building  =  ""NEB""";"ВЫБРАТЬ наименование ИЗ справочник.кафедры ГДЕ подразделение = ""AS"" ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ наименование ИЗ справочник.кафедры ГДЕ подразделение = ""EN"" И здание = ""NEB"""
4625;SELECT Fname FROM STUDENT WHERE StuID NOT IN (SELECT StuID FROM ENROLLED_IN);ВЫБРАТЬ Fname ИЗ справочник.студенты ГДЕ StuID НЕ В (ВЫБРАТЬ StuID ИЗ регистрсведений.записиопосещении)
4626;SELECT Fname FROM STUDENT WHERE StuID NOT IN (SELECT StuID FROM ENROLLED_IN);ВЫБРАТЬ Fname ИЗ справочник.студенты ГДЕ StuID НЕ В (ВЫБРАТЬ StuID ИЗ регистрсведений.записиопосещении)
4627;SELECT product_id FROM product_suppliers ORDER BY total_amount_purchased DESC LIMIT 3;ВЫБРАТЬ ПЕРВЫЕ 3 товар ИЗ регистрсведений.поставщикитоваров УПОРЯДОЧИТЬ ПО количествозакуплено УБЫВ
4628;SELECT product_id FROM product_suppliers ORDER BY total_amount_purchased DESC LIMIT 3;ВЫБРАТЬ ПЕРВЫЕ 3 товар ИЗ регистрсведений.поставщикитоваров УПОРЯДОЧИТЬ ПО количествозакуплено УБЫВ
4629;SELECT product_id ,  product_type_code FROM products ORDER BY product_price LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 ссылка , кодтипатовара ИЗ справочник.товары УПОРЯДОЧИТЬ ПО цена
4630;SELECT product_id ,  product_type_code FROM products ORDER BY product_price LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 ссылка , кодтипатовара ИЗ справочник.товары УПОРЯДОЧИТЬ ПО цена
4631;SELECT count(DISTINCT product_type_code) FROM products;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ кодтипатовара) ИЗ справочник.товары
4632;SELECT count(DISTINCT product_type_code) FROM products;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ кодтипатовара) ИЗ справочник.товары
4633;SELECT T1.address_details FROM addresses AS T1 JOIN customer_addresses AS T2 ON T1.address_id  =  T2.address_id WHERE T2.customer_id  =  10;ВЫБРАТЬ T1.описаниеадреса ИЗ справочник.адреса КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.адресаклиентов КАК T2 ПО T1.ссылка = T2.адрес ГДЕ T2.клиент = 10
4634;SELECT T1.address_details FROM addresses AS T1 JOIN customer_addresses AS T2 ON T1.address_id  =  T2.address_id WHERE T2.customer_id  =  10;ВЫБРАТЬ T1.описаниеадреса ИЗ справочник.адреса КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.адресаклиентов КАК T2 ПО T1.ссылка = T2.адрес ГДЕ T2.клиент = 10
4635;"SELECT T1.staff_id ,  T1.staff_gender FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.job_title_code  =  ""Department Manager""";"ВЫБРАТЬ T1.ссылка , T1.пол ИЗ справочник.сотрудники КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.назначениясотрудников КАК T2 ПО T1.ссылка = T2.сотрудник ГДЕ T2.коддолжности = ""Department Manager"""
4636;"SELECT T1.staff_id ,  T1.staff_gender FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.job_title_code  =  ""Department Manager""";"ВЫБРАТЬ T1.ссылка , T1.пол ИЗ справочник.сотрудники КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.назначениясотрудников КАК T2 ПО T1.ссылка = T2.сотрудник ГДЕ T2.коддолжности = ""Department Manager"""
4637;SELECT payment_method_code ,  count(*) FROM customers GROUP BY payment_method_code;ВЫБРАТЬ кодспособаоплаты , КОЛИЧЕСТВО(*) ИЗ справочник.клиенты СГРУППИРОВАТЬ ПО кодспособаоплаты
4638;SELECT payment_method_code ,  count(*) FROM customers GROUP BY payment_method_code;ВЫБРАТЬ кодспособаоплаты , КОЛИЧЕСТВО(*) ИЗ справочник.клиенты СГРУППИРОВАТЬ ПО кодспособаоплаты
4639;SELECT product_id FROM order_items GROUP BY product_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 строказаказа ИЗ регистрсведений.товарывзаказах СГРУППИРОВАТЬ ПО строказаказа УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
4640;SELECT product_id FROM order_items GROUP BY product_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 строказаказа ИЗ регистрсведений.товарывзаказах СГРУППИРОВАТЬ ПО строказаказа УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
4641;SELECT T1.customer_name ,  T1.customer_phone ,  T1.customer_email FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T2.customer_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.наименование , T1.телефон , T1.элпочта ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.заказклиента КАК T2 ПО T1.ссылка = T2.клиент СГРУППИРОВАТЬ ПО T2.клиент УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
4642;SELECT T1.customer_name ,  T1.customer_phone ,  T1.customer_email FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T2.customer_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.наименование , T1.телефон , T1.элпочта ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.заказклиента КАК T2 ПО T1.ссылка = T2.клиент СГРУППИРОВАТЬ ПО T2.клиент УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
4643;SELECT product_type_code ,  avg(product_price) FROM products GROUP BY product_type_code;ВЫБРАТЬ кодтипатовара , СРЕДНЕЕ(цена) ИЗ справочник.товары СГРУППИРОВАТЬ ПО кодтипатовара
4644;SELECT product_type_code ,  avg(product_price) FROM products GROUP BY product_type_code;ВЫБРАТЬ кодтипатовара , СРЕДНЕЕ(цена) ИЗ справочник.товары СГРУППИРОВАТЬ ПО кодтипатовара
4645;"SELECT count(*) FROM department_stores AS T1 JOIN department_store_chain AS T2 ON T1.dept_store_chain_id  =  T2.dept_store_chain_id WHERE T2.dept_store_chain_name  =  ""South""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.магазины КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сетимагазинов КАК T2 ПО T1.сетьмагазинов = T2.ссылка ГДЕ T2.наименование = ""South"""
4646;"SELECT count(*) FROM department_stores AS T1 JOIN department_store_chain AS T2 ON T1.dept_store_chain_id  =  T2.dept_store_chain_id WHERE T2.dept_store_chain_name  =  ""South""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.магазины КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сетимагазинов КАК T2 ПО T1.сетьмагазинов = T2.ссылка ГДЕ T2.наименование = ""South"""
4647;SELECT T1.staff_name ,  T2.job_title_code FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id  =  T2.staff_id ORDER BY T2.date_assigned_to DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.наименование , T2.коддолжности ИЗ справочник.сотрудники КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.назначениясотрудников КАК T2 ПО T1.ссылка = T2.сотрудник УПОРЯДОЧИТЬ ПО T2.датаназначенияпо УБЫВ
4648;SELECT T1.staff_name ,  T2.job_title_code FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id  =  T2.staff_id ORDER BY T2.date_assigned_to DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.наименование , T2.коддолжности ИЗ справочник.сотрудники КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.назначениясотрудников КАК T2 ПО T1.ссылка = T2.сотрудник УПОРЯДОЧИТЬ ПО T2.датаназначенияпо УБЫВ
4649;SELECT T2.product_type_code ,  T2.product_name ,  T2.product_price FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id  =  T2.product_id WHERE T1.supplier_id  =  3;ВЫБРАТЬ T2.кодтипатовара , T2.наименование , T2.цена ИЗ регистрсведений.поставщикитоваров КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.товары КАК T2 ПО T1.товар = T2.ссылка ГДЕ T1.поставщик = 3
4650;SELECT T2.product_type_code ,  T2.product_name ,  T2.product_price FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id  =  T2.product_id WHERE T1.supplier_id  =  3;ВЫБРАТЬ T2.кодтипатовара , T2.наименование , T2.цена ИЗ регистрсведений.поставщикитоваров КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.товары КАК T2 ПО T1.товар = T2.ссылка ГДЕ T1.поставщик = 3
4651;"SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.order_status_code  =  ""Pending"" ORDER BY T2.customer_id";"ВЫБРАТЬ РАЗЛИЧНЫЕ T1.наименование ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.заказклиента КАК T2 ПО T1.ссылка = T2.клиент ГДЕ T2.кодстатусазаказа = ""Pending"" УПОРЯДОЧИТЬ ПО T2.клиент"
4652;"SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.order_status_code  =  ""Pending"" ORDER BY T2.customer_id";"ВЫБРАТЬ РАЗЛИЧНЫЕ T1.наименование ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.заказклиента КАК T2 ПО T1.ссылка = T2.клиент ГДЕ T2.кодстатусазаказа = ""Pending"" УПОРЯДОЧИТЬ ПО T2.клиент"
4655;SELECT T1.product_id FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id  =  T2.product_id WHERE T1.supplier_id  =  2 AND T2.product_price  >  (SELECT avg(product_price) FROM products);ВЫБРАТЬ T1.товар ИЗ регистрсведений.поставщикитоваров КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.товары КАК T2 ПО T1.товар = T2.ссылка ГДЕ T1.поставщик = 2 И T2.цена > (ВЫБРАТЬ СРЕДНЕЕ(product_price) ИЗ справочник.товары)
4656;SELECT T1.product_id FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id  =  T2.product_id WHERE T1.supplier_id  =  2 AND T2.product_price  >  (SELECT avg(product_price) FROM products);ВЫБРАТЬ T1.товар ИЗ регистрсведений.поставщикитоваров КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.товары КАК T2 ПО T1.товар = T2.ссылка ГДЕ T1.поставщик = 2 И T2.цена > (ВЫБРАТЬ СРЕДНЕЕ(product_price) ИЗ справочник.товары)
4659;SELECT dept_store_chain_id FROM department_stores GROUP BY dept_store_chain_id ORDER BY count(*) DESC LIMIT 2;ВЫБРАТЬ ПЕРВЫЕ 2 сетьмагазинов ИЗ справочник.магазины СГРУППИРОВАТЬ ПО сетьмагазинов УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
4660;SELECT dept_store_chain_id FROM department_stores GROUP BY dept_store_chain_id ORDER BY count(*) DESC LIMIT 2;ВЫБРАТЬ ПЕРВЫЕ 2 сетьмагазинов ИЗ справочник.магазины СГРУППИРОВАТЬ ПО сетьмагазинов УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
4661;SELECT department_id FROM staff_department_assignments GROUP BY department_id ORDER BY count(*) LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 отдел ИЗ регистрсведений.назначениясотрудников СГРУППИРОВАТЬ ПО отдел УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*)
4662;SELECT department_id FROM staff_department_assignments GROUP BY department_id ORDER BY count(*) LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 отдел ИЗ регистрсведений.назначениясотрудников СГРУППИРОВАТЬ ПО отдел УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*)
4663;SELECT product_type_code ,  max(product_price) ,  min(product_price) FROM products GROUP BY product_type_code;ВЫБРАТЬ кодтипатовара , МАКСИМУМ(цена) , МИНИМУМ(цена) ИЗ справочник.товары СГРУППИРОВАТЬ ПО кодтипатовара
4664;SELECT product_type_code ,  max(product_price) ,  min(product_price) FROM products GROUP BY product_type_code;ВЫБРАТЬ кодтипатовара , МАКСИМУМ(цена) , МИНИМУМ(цена) ИЗ справочник.товары СГРУППИРОВАТЬ ПО кодтипатовара
4665;SELECT product_type_code FROM products GROUP BY product_type_code HAVING avg(product_price)  >  (SELECT avg(product_price) FROM products);ВЫБРАТЬ product_type_code ИЗ справочник.товары СГРУППИРОВАТЬ ПО product_type_code ИМЕЮЩИЕ СРЕДНЕЕ(product_price) > (ВЫБРАТЬ СРЕДНЕЕ(product_price) ИЗ справочник.товары)
4666;SELECT product_type_code FROM products GROUP BY product_type_code HAVING avg(product_price)  >  (SELECT avg(product_price) FROM products);ВЫБРАТЬ product_type_code ИЗ справочник.товары СГРУППИРОВАТЬ ПО product_type_code ИМЕЮЩИЕ СРЕДНЕЕ(product_price) > (ВЫБРАТЬ СРЕДНЕЕ(product_price) ИЗ справочник.товары)
4667;SELECT T1.staff_id ,  T1.staff_name FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id  =  T2.staff_id ORDER BY date_assigned_to - date_assigned_from LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.ссылка , T1.наименование ИЗ справочник.сотрудники КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.назначениясотрудников КАК T2 ПО T1.ссылка = T2.сотрудник УПОРЯДОЧИТЬ ПО date_assigned_to - date_assigned_from
4668;SELECT T1.staff_id ,  T1.staff_name FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id  =  T2.staff_id ORDER BY date_assigned_to - date_assigned_from LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.ссылка , T1.наименование ИЗ справочник.сотрудники КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.назначениясотрудников КАК T2 ПО T1.ссылка = T2.сотрудник УПОРЯДОЧИТЬ ПО date_assigned_to - date_assigned_from
4669;SELECT product_name ,  product_id FROM products WHERE product_price BETWEEN 600 AND 700;ВЫБРАТЬ наименование , ссылка ИЗ справочник.товары ГДЕ цена МЕЖДУ 600 И 700
4670;SELECT product_name ,  product_id FROM products WHERE product_price BETWEEN 600 AND 700;ВЫБРАТЬ наименование , ссылка ИЗ справочник.товары ГДЕ цена МЕЖДУ 600 И 700
4671;"SELECT DISTINCT customer_id FROM Customer_Orders WHERE order_date  >  (SELECT min(order_date) FROM Customer_Orders WHERE order_status_code  =  ""Cancelled"")";"ВЫБРАТЬ РАЗЛИЧНЫЕ клиент ИЗ документ.заказклиента ГДЕ датазаказа > (ВЫБРАТЬ МИНИМУМ(датазаказа) ИЗ документ.заказклиента ГДЕ кодстатусазаказа = ""Cancelled"")"
4672;"SELECT DISTINCT customer_id FROM Customer_Orders WHERE order_date  >  (SELECT min(order_date) FROM Customer_Orders WHERE order_status_code  =  ""Cancelled"")";"ВЫБРАТЬ РАЗЛИЧНЫЕ клиент ИЗ документ.заказклиента ГДЕ датазаказа > (ВЫБРАТЬ МИНИМУМ(датазаказа) ИЗ документ.заказклиента ГДЕ кодстатусазаказа = ""Cancelled"")"
4673;SELECT staff_id FROM Staff_Department_Assignments WHERE date_assigned_to  <  (SELECT max(date_assigned_to) FROM Staff_Department_Assignments WHERE job_title_code  =  'Clerical Staff');"ВЫБРАТЬ сотрудник ИЗ регистрсведений.назначениясотрудников ГДЕ датаназначенияпо < (ВЫБРАТЬ МАКСИМУМ(датаназначенияпо) ИЗ регистрсведений.назначениясотрудников ГДЕ коддолжности = ""Clerical Staff"")"
4674;SELECT staff_id FROM Staff_Department_Assignments WHERE date_assigned_to  <  (SELECT max(date_assigned_to) FROM Staff_Department_Assignments WHERE job_title_code  =  'Clerical Staff');"ВЫБРАТЬ сотрудник ИЗ регистрсведений.назначениясотрудников ГДЕ датаназначенияпо < (ВЫБРАТЬ МАКСИМУМ(датаназначенияпо) ИЗ регистрсведений.назначениясотрудников ГДЕ коддолжности = ""Clerical Staff"")"
4675;"SELECT customer_name ,  customer_id FROM customers WHERE customer_address LIKE ""%TN%""";"ВЫБРАТЬ наименование , ссылка ИЗ справочник.клиенты ГДЕ адрес ПОДОБНО ""%TN%"""
4676;"SELECT customer_name ,  customer_id FROM customers WHERE customer_address LIKE ""%TN%""";"ВЫБРАТЬ наименование , ссылка ИЗ справочник.клиенты ГДЕ адрес ПОДОБНО ""%TN%"""
4677;"SELECT T1.staff_name ,  T1.staff_gender FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.date_assigned_from LIKE ""2016%""";"ВЫБРАТЬ T1.наименование , T1.пол ИЗ справочник.сотрудники КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.назначениясотрудников КАК T2 ПО T1.ссылка = T2.сотрудник ГДЕ T2.датаназначенияс ПОДОБНО ""2016%"""
4678;"SELECT T1.staff_name ,  T1.staff_gender FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.date_assigned_from LIKE ""2016%""";"ВЫБРАТЬ T1.наименование , T1.пол ИЗ справочник.сотрудники КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.назначениясотрудников КАК T2 ПО T1.ссылка = T2.сотрудник ГДЕ T2.датаназначенияс ПОДОБНО ""2016%"""
4679;SELECT T1.staff_name FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id  =  T2.staff_id GROUP BY T2.staff_id HAVING COUNT (*)  >  1;ВЫБРАТЬ T1.наименование ИЗ справочник.сотрудники КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.назначениясотрудников КАК T2 ПО T1.ссылка = T2.сотрудник СГРУППИРОВАТЬ ПО T2.сотрудник ИМЕЮЩИЕ КОЛИЧЕСТВО (*) > 1
4680;SELECT T1.staff_name FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id  =  T2.staff_id GROUP BY T2.staff_id HAVING COUNT (*)  >  1;ВЫБРАТЬ T1.наименование ИЗ справочник.сотрудники КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.назначениясотрудников КАК T2 ПО T1.ссылка = T2.сотрудник СГРУППИРОВАТЬ ПО T2.сотрудник ИМЕЮЩИЕ КОЛИЧЕСТВО (*) > 1
4681;SELECT T1.supplier_name ,  T1.supplier_phone FROM Suppliers AS T1 JOIN supplier_addresses AS T2 ON T1.supplier_id  =  T2.supplier_id JOIN addresses AS T3 ON T2.address_id  =  T3.address_id ORDER BY T3.address_details;ВЫБРАТЬ T1.наименование , T1.телефон ИЗ справочник.поставщики КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.адресапоставщиков КАК T2 ПО T1.ссылка = T2.поставщик ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.адреса КАК T3 ПО T2.адрес = T3.ссылка УПОРЯДОЧИТЬ ПО T3.описаниеадреса
4682;SELECT T1.supplier_name ,  T1.supplier_phone FROM Suppliers AS T1 JOIN supplier_addresses AS T2 ON T1.supplier_id  =  T2.supplier_id JOIN addresses AS T3 ON T2.address_id  =  T3.address_id ORDER BY T3.address_details;ВЫБРАТЬ T1.наименование , T1.телефон ИЗ справочник.поставщики КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.адресапоставщиков КАК T2 ПО T1.ссылка = T2.поставщик ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.адреса КАК T3 ПО T2.адрес = T3.ссылка УПОРЯДОЧИТЬ ПО T3.описаниеадреса
4683;SELECT customer_phone FROM customers UNION SELECT supplier_phone FROM suppliers;ВЫБРАТЬ customer_phone ИЗ справочник.клиенты ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ supplier_phone ИЗ справочник.поставщики
4684;SELECT customer_phone FROM customers UNION SELECT supplier_phone FROM suppliers;ВЫБРАТЬ customer_phone ИЗ справочник.клиенты ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ supplier_phone ИЗ справочник.поставщики
4685;SELECT product_id FROM Order_Items GROUP BY product_id HAVING count(*)  >  3 UNION SELECT product_id FROM Product_Suppliers GROUP BY product_id HAVING sum(total_amount_purchased)  >  80000;ВЫБРАТЬ товар ИЗ регистрсведений.товарывзаказах СГРУППИРОВАТЬ ПО товар ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 3 ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ товар ИЗ регистрсведений.поставщикитоваров СГРУППИРОВАТЬ ПО товар ИМЕЮЩИЕ СУММА(количествозакуплено) > 80000
4686;SELECT product_id FROM Order_Items GROUP BY product_id HAVING count(*)  >  3 UNION SELECT product_id FROM Product_Suppliers GROUP BY product_id HAVING sum(total_amount_purchased)  >  80000;ВЫБРАТЬ товар ИЗ регистрсведений.товарывзаказах СГРУППИРОВАТЬ ПО товар ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 3 ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ товар ИЗ регистрсведений.поставщикитоваров СГРУППИРОВАТЬ ПО товар ИМЕЮЩИЕ СУММА(количествозакуплено) > 80000
4687;SELECT product_id ,  product_name FROM products WHERE product_price  <  600 OR product_price  >  900;ВЫБРАТЬ ссылка , наименование ИЗ справочник.товары ГДЕ цена < 600 ИЛИ цена > 900
4688;SELECT product_id ,  product_name FROM products WHERE product_price  <  600 OR product_price  >  900;ВЫБРАТЬ ссылка , наименование ИЗ справочник.товары ГДЕ цена < 600 ИЛИ цена > 900
4689;SELECT supplier_id FROM Product_Suppliers GROUP BY supplier_id HAVING avg(total_amount_purchased)  >  50000 OR avg(total_amount_purchased)  <  30000;ВЫБРАТЬ поставщик ИЗ регистрсведений.поставщикитоваров СГРУППИРОВАТЬ ПО поставщик ИМЕЮЩИЕ СРЕДНЕЕ(количествозакуплено) > 50000 ИЛИ СРЕДНЕЕ(количествозакуплено) < 30000
4690;SELECT supplier_id FROM Product_Suppliers GROUP BY supplier_id HAVING avg(total_amount_purchased)  >  50000 OR avg(total_amount_purchased)  <  30000;ВЫБРАТЬ поставщик ИЗ регистрсведений.поставщикитоваров СГРУППИРОВАТЬ ПО поставщик ИМЕЮЩИЕ СРЕДНЕЕ(количествозакуплено) > 50000 ИЛИ СРЕДНЕЕ(количествозакуплено) < 30000
4691;SELECT avg(total_amount_purchased) ,  avg(total_value_purchased) FROM Product_Suppliers WHERE supplier_id  =  (SELECT supplier_id FROM Product_Suppliers GROUP BY supplier_id ORDER BY count(*) DESC LIMIT 1);ВЫБРАТЬ СРЕДНЕЕ(total_amount_purchased) , СРЕДНЕЕ(total_value_purchased) ИЗ регистрсведений.поставщикитоваров ГДЕ supplier_id = (ВЫБРАТЬ supplier_id ИЗ регистрсведений.поставщикитоваров СГРУППИРОВАТЬ ПО supplier_id УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ LIMIT 1)
4692;SELECT avg(total_amount_purchased) ,  avg(total_value_purchased) FROM Product_Suppliers WHERE supplier_id  =  (SELECT supplier_id FROM Product_Suppliers GROUP BY supplier_id ORDER BY count(*) DESC LIMIT 1);ВЫБРАТЬ СРЕДНЕЕ(total_amount_purchased) , СРЕДНЕЕ(total_value_purchased) ИЗ регистрсведений.поставщикитоваров ГДЕ supplier_id = (ВЫБРАТЬ supplier_id ИЗ регистрсведений.поставщикитоваров СГРУППИРОВАТЬ ПО supplier_id УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ LIMIT 1)
4693;SELECT max(customer_code) ,  min(customer_code) FROM Customers;ВЫБРАТЬ МАКСИМУМ(кодклиента) , МИНИМУМ(кодклиента) ИЗ справочник.клиенты
4694;SELECT max(customer_code) ,  min(customer_code) FROM Customers;ВЫБРАТЬ МАКСИМУМ(кодклиента) , МИНИМУМ(кодклиента) ИЗ справочник.клиенты
4695;"SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN order_items AS T3 ON T2.order_id  =  T3.order_id JOIN products AS T4 ON T3.product_id  =  T4.product_id WHERE T4.product_name  =  ""keyboard""";"ВЫБРАТЬ РАЗЛИЧНЫЕ T1.наименование ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.заказклиента КАК T2 ПО T1.ссылка = T2.клиент ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.товарывзаказах КАК T3 ПО T2.ссылка = T3.товар ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.товары КАК T4 ПО T3.строказаказа = T4.ссылка ГДЕ T4.наименование = ""keyboard"""
4696;"SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN order_items AS T3 ON T2.order_id  =  T3.order_id JOIN products AS T4 ON T3.product_id  =  T4.product_id WHERE T4.product_name  =  ""keyboard""";"ВЫБРАТЬ РАЗЛИЧНЫЕ T1.наименование ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.заказклиента КАК T2 ПО T1.ссылка = T2.клиент ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.товарывзаказах КАК T3 ПО T2.ссылка = T3.товар ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.товары КАК T4 ПО T3.строказаказа = T4.ссылка ГДЕ T4.наименование = ""keyboard"""
4697;"SELECT DISTINCT T1.supplier_name ,  T1.supplier_phone FROM suppliers AS T1 JOIN product_suppliers AS T2 ON T1.supplier_id  =  T2.supplier_id JOIN products AS T3 ON T2.product_id  =  T3.product_id WHERE T3.product_name  =  ""red jeans""";"ВЫБРАТЬ РАЗЛИЧНЫЕ T1.наименование , T1.телефон ИЗ справочник.поставщики КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.поставщикитоваров КАК T2 ПО T1.ссылка = T2.поставщик ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.товары КАК T3 ПО T2.товар = T3.ссылка ГДЕ T3.наименование = ""red jeans"""
4698;"SELECT DISTINCT T1.supplier_name ,  T1.supplier_phone FROM suppliers AS T1 JOIN product_suppliers AS T2 ON T1.supplier_id  =  T2.supplier_id JOIN products AS T3 ON T2.product_id  =  T3.product_id WHERE T3.product_name  =  ""red jeans""";"ВЫБРАТЬ РАЗЛИЧНЫЕ T1.наименование , T1.телефон ИЗ справочник.поставщики КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.поставщикитоваров КАК T2 ПО T1.ссылка = T2.поставщик ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.товары КАК T3 ПО T2.товар = T3.ссылка ГДЕ T3.наименование = ""red jeans"""
4699;SELECT max(product_price) ,  min(product_price) ,  product_type_code FROM products GROUP BY product_type_code ORDER BY product_type_code;ВЫБРАТЬ МАКСИМУМ(цена) , МИНИМУМ(цена) , кодтипатовара ИЗ справочник.товары СГРУППИРОВАТЬ ПО кодтипатовара УПОРЯДОЧИТЬ ПО кодтипатовара
4700;SELECT max(product_price) ,  min(product_price) ,  product_type_code FROM products GROUP BY product_type_code ORDER BY product_type_code;ВЫБРАТЬ МАКСИМУМ(цена) , МИНИМУМ(цена) , кодтипатовара ИЗ справочник.товары СГРУППИРОВАТЬ ПО кодтипатовара УПОРЯДОЧИТЬ ПО кодтипатовара
4701;"SELECT order_id ,  customer_id FROM customer_orders WHERE order_status_code  =   ""Cancelled"" ORDER BY order_date";"ВЫБРАТЬ ссылка , клиент ИЗ документ.заказклиента ГДЕ кодстатусазаказа = ""Cancelled"" УПОРЯДОЧИТЬ ПО датазаказа"
4702;"SELECT order_id ,  customer_id FROM customer_orders WHERE order_status_code  =   ""Cancelled"" ORDER BY order_date";"ВЫБРАТЬ ссылка , клиент ИЗ документ.заказклиента ГДЕ кодстатусазаказа = ""Cancelled"" УПОРЯДОЧИТЬ ПО датазаказа"
4703;SELECT DISTINCT T3.product_name FROM customer_orders AS T1 JOIN order_items AS T2 ON T1.order_id  =  T2.order_id JOIN products AS T3 ON T2.product_id  =  T3.product_id GROUP BY T3.product_id HAVING COUNT (DISTINCT T1.customer_id)  >=  2;ВЫБРАТЬ РАЗЛИЧНЫЕ T3.наименование ИЗ документ.заказклиента КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.товарывзаказах КАК T2 ПО T1.ссылка = T2.товар ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.товары КАК T3 ПО T2.строказаказа = T3.ссылка СГРУППИРОВАТЬ ПО T3.ссылка ИМЕЮЩИЕ КОЛИЧЕСТВО (РАЗЛИЧНЫЕ T1.клиент) >= 2
4704;SELECT DISTINCT T3.product_name FROM customer_orders AS T1 JOIN order_items AS T2 ON T1.order_id  =  T2.order_id JOIN products AS T3 ON T2.product_id  =  T3.product_id GROUP BY T3.product_id HAVING COUNT (DISTINCT T1.customer_id)  >=  2;ВЫБРАТЬ РАЗЛИЧНЫЕ T3.наименование ИЗ документ.заказклиента КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.товарывзаказах КАК T2 ПО T1.ссылка = T2.товар ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.товары КАК T3 ПО T2.строказаказа = T3.ссылка СГРУППИРОВАТЬ ПО T3.ссылка ИМЕЮЩИЕ КОЛИЧЕСТВО (РАЗЛИЧНЫЕ T1.клиент) >= 2
4705;SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN order_items AS T3 ON T2.order_id  =  T3.order_id GROUP BY T1.customer_id HAVING COUNT (DISTINCT T3.product_id)  >=  3;ВЫБРАТЬ РАЗЛИЧНЫЕ T1.наименование ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.заказклиента КАК T2 ПО T1.ссылка = T2.клиент ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.товарывзаказах КАК T3 ПО T2.ссылка = T3.товар СГРУППИРОВАТЬ ПО T1.ссылка ИМЕЮЩИЕ КОЛИЧЕСТВО (РАЗЛИЧНЫЕ T3.строказаказа) >= 3
4706;SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN order_items AS T3 ON T2.order_id  =  T3.order_id GROUP BY T1.customer_id HAVING COUNT (DISTINCT T3.product_id)  >=  3;ВЫБРАТЬ РАЗЛИЧНЫЕ T1.наименование ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.заказклиента КАК T2 ПО T1.ссылка = T2.клиент ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.товарывзаказах КАК T3 ПО T2.ссылка = T3.товар СГРУППИРОВАТЬ ПО T1.ссылка ИМЕЮЩИЕ КОЛИЧЕСТВО (РАЗЛИЧНЫЕ T3.строказаказа) >= 3
4709;"SELECT customer_id ,  customer_name FROM customers WHERE customer_address LIKE ""%WY%"" AND payment_method_code != ""Credit Card""";"ВЫБРАТЬ ссылка , наименование ИЗ справочник.клиенты ГДЕ адрес ПОДОБНО ""%WY%"" И кодспособаоплаты <> ""Credit Card"""
4710;"SELECT customer_id ,  customer_name FROM customers WHERE customer_address LIKE ""%WY%"" AND payment_method_code != ""Credit Card""";"ВЫБРАТЬ ссылка , наименование ИЗ справочник.клиенты ГДЕ адрес ПОДОБНО ""%WY%"" И кодспособаоплаты <> ""Credit Card"""
4711;SELECT avg(product_price) FROM products WHERE product_type_code  =  'Clothes';"ВЫБРАТЬ СРЕДНЕЕ(цена) ИЗ справочник.товары ГДЕ кодтипатовара = ""Clothes"""
4712;SELECT avg(product_price) FROM products WHERE product_type_code  =  'Clothes';"ВЫБРАТЬ СРЕДНЕЕ(цена) ИЗ справочник.товары ГДЕ кодтипатовара = ""Clothes"""
4713;SELECT product_name FROM products WHERE product_type_code  =  'Hardware' ORDER BY product_price DESC LIMIT 1;"ВЫБРАТЬ ПЕРВЫЕ 1 наименование ИЗ справочник.товары ГДЕ кодтипатовара = ""Hardware"" УПОРЯДОЧИТЬ ПО цена УБЫВ"
4714;SELECT product_name FROM products WHERE product_type_code  =  'Hardware' ORDER BY product_price DESC LIMIT 1;"ВЫБРАТЬ ПЕРВЫЕ 1 наименование ИЗ справочник.товары ГДЕ кодтипатовара = ""Hardware"" УПОРЯДОЧИТЬ ПО цена УБЫВ"
4715;SELECT count(*) FROM aircraft;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ наименование
4716;SELECT count(*) FROM aircraft;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ наименование
4717;SELECT Description FROM aircraft;ВЫБРАТЬ описание ИЗ наименование
4718;SELECT Description FROM aircraft;ВЫБРАТЬ описание ИЗ наименование
4719;SELECT avg(International_Passengers) FROM airport;ВЫБРАТЬ СРЕДНЕЕ(международныхпассажиров) ИЗ справочник.аэропорты
4720;SELECT avg(International_Passengers) FROM airport;ВЫБРАТЬ СРЕДНЕЕ(международныхпассажиров) ИЗ справочник.аэропорты
4721;"SELECT International_Passengers ,  Domestic_Passengers FROM airport WHERE Airport_Name  =  ""London Heathrow""";"ВЫБРАТЬ международныхпассажиров , внутреннихпассажиров ИЗ справочник.аэропорты ГДЕ наименование = ""London Heathrow"""
4722;"SELECT International_Passengers ,  Domestic_Passengers FROM airport WHERE Airport_Name  =  ""London Heathrow""";"ВЫБРАТЬ международныхпассажиров , внутреннихпассажиров ИЗ справочник.аэропорты ГДЕ наименование = ""London Heathrow"""
4723;"SELECT sum(Domestic_Passengers) FROM airport WHERE Airport_Name LIKE ""%London%""";"ВЫБРАТЬ СУММА(внутреннихпассажиров) ИЗ справочник.аэропорты ГДЕ наименование ПОДОБНО ""%London%"""
4724;"SELECT sum(Domestic_Passengers) FROM airport WHERE Airport_Name LIKE ""%London%""";"ВЫБРАТЬ СУММА(внутреннихпассажиров) ИЗ справочник.аэропорты ГДЕ наименование ПОДОБНО ""%London%"""
4725;SELECT max(Transit_Passengers) ,  min(Transit_Passengers) FROM airport;ВЫБРАТЬ МАКСИМУМ(транзитныхпассажиров) , МИНИМУМ(транзитныхпассажиров) ИЗ справочник.аэропорты
4726;SELECT max(Transit_Passengers) ,  min(Transit_Passengers) FROM airport;ВЫБРАТЬ МАКСИМУМ(транзитныхпассажиров) , МИНИМУМ(транзитныхпассажиров) ИЗ справочник.аэропорты
4727;SELECT Name FROM pilot WHERE Age  >=  25;ВЫБРАТЬ наименование ИЗ справочник.пилоты ГДЕ возраст >= 25
4728;SELECT Name FROM pilot WHERE Age  >=  25;ВЫБРАТЬ наименование ИЗ справочник.пилоты ГДЕ возраст >= 25
4729;SELECT Name FROM pilot ORDER BY Name ASC;ВЫБРАТЬ наименование ИЗ справочник.пилоты УПОРЯДОЧИТЬ ПО наименование ВОЗР
4730;SELECT Name FROM pilot ORDER BY Name ASC;ВЫБРАТЬ наименование ИЗ справочник.пилоты УПОРЯДОЧИТЬ ПО наименование ВОЗР
4731;SELECT Name FROM pilot WHERE Age  <=  30 ORDER BY Name DESC;ВЫБРАТЬ наименование ИЗ справочник.пилоты ГДЕ возраст <= 30 УПОРЯДОЧИТЬ ПО наименование УБЫВ
4732;SELECT Name FROM pilot WHERE Age  <=  30 ORDER BY Name DESC;ВЫБРАТЬ наименование ИЗ справочник.пилоты ГДЕ возраст <= 30 УПОРЯДОЧИТЬ ПО наименование УБЫВ
4733;"SELECT T1.Aircraft FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T3.Airport_Name  =  ""London Gatwick""";"ВЫБРАТЬ T1.наименование ИЗ справочник.самолеты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.аэропортысамолеты КАК T2 ПО T1.ссылка = T2.самолет ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.аэропорты КАК T3 ПО T2.аэропорт = T3.ссылка ГДЕ T3.наименование = ""London Gatwick"""
4734;"SELECT T1.Aircraft FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T3.Airport_Name  =  ""London Gatwick""";"ВЫБРАТЬ T1.наименование ИЗ справочник.самолеты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.аэропортысамолеты КАК T2 ПО T1.ссылка = T2.самолет ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.аэропорты КАК T3 ПО T2.аэропорт = T3.ссылка ГДЕ T3.наименование = ""London Gatwick"""
4735;SELECT T1.Aircraft ,  T1.Description FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T3.Total_Passengers  >  10000000;ВЫБРАТЬ T1.наименование , T1.описание ИЗ справочник.самолеты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.аэропортысамолеты КАК T2 ПО T1.ссылка = T2.самолет ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.аэропорты КАК T3 ПО T2.аэропорт = T3.ссылка ГДЕ T3.пассажироввсего > 10000000
4736;SELECT T1.Aircraft ,  T1.Description FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T3.Total_Passengers  >  10000000;ВЫБРАТЬ T1.наименование , T1.описание ИЗ справочник.самолеты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.аэропортысамолеты КАК T2 ПО T1.ссылка = T2.самолет ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.аэропорты КАК T3 ПО T2.аэропорт = T3.ссылка ГДЕ T3.пассажироввсего > 10000000
4737;"SELECT avg(T3.Total_Passengers) FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T1.Aircraft  =  ""Robinson R-22""";"ВЫБРАТЬ СРЕДНЕЕ(T3.пассажироввсего) ИЗ справочник.самолеты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.аэропортысамолеты КАК T2 ПО T1.ссылка = T2.самолет ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.аэропорты КАК T3 ПО T2.аэропорт = T3.ссылка ГДЕ T1.наименование = ""Robinson R-22"""
4738;"SELECT avg(T3.Total_Passengers) FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T1.Aircraft  =  ""Robinson R-22""";"ВЫБРАТЬ СРЕДНЕЕ(T3.пассажироввсего) ИЗ справочник.самолеты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.аэропортысамолеты КАК T2 ПО T1.ссылка = T2.самолет ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.аэропорты КАК T3 ПО T2.аэропорт = T3.ссылка ГДЕ T1.наименование = ""Robinson R-22"""
4739;SELECT T2.Location ,  T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID  =  T2.Winning_Aircraft;ВЫБРАТЬ T2.локация , T1.наименование ИЗ справочник.самолеты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.соревнования КАК T2 ПО T1.ссылка = T2.победившийсамолет
4740;SELECT T2.Location ,  T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID  =  T2.Winning_Aircraft;ВЫБРАТЬ T2.локация , T1.наименование ИЗ справочник.самолеты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.соревнования КАК T2 ПО T1.ссылка = T2.победившийсамолет
4741;SELECT T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID  =  T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft ORDER BY COUNT(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.наименование ИЗ справочник.самолеты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.соревнования КАК T2 ПО T1.ссылка = T2.победившийсамолет СГРУППИРОВАТЬ ПО T2.победившийсамолет УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
4742;SELECT T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID  =  T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft ORDER BY COUNT(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.наименование ИЗ справочник.самолеты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.соревнования КАК T2 ПО T1.ссылка = T2.победившийсамолет СГРУППИРОВАТЬ ПО T2.победившийсамолет УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
4743;SELECT T1.Aircraft ,  COUNT(*) FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID  =  T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft;ВЫБРАТЬ T1.наименование , КОЛИЧЕСТВО(*) ИЗ справочник.самолеты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.соревнования КАК T2 ПО T1.ссылка = T2.победившийсамолет СГРУППИРОВАТЬ ПО T2.победившийсамолет
4744;SELECT T1.Aircraft ,  COUNT(*) FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID  =  T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft;ВЫБРАТЬ T1.наименование , КОЛИЧЕСТВО(*) ИЗ справочник.самолеты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.соревнования КАК T2 ПО T1.ссылка = T2.победившийсамолет СГРУППИРОВАТЬ ПО T2.победившийсамолет
4745;SELECT Name FROM pilot ORDER BY Age DESC;ВЫБРАТЬ наименование ИЗ справочник.пилоты УПОРЯДОЧИТЬ ПО возраст УБЫВ
4746;SELECT Name FROM pilot ORDER BY Age DESC;ВЫБРАТЬ наименование ИЗ справочник.пилоты УПОРЯДОЧИТЬ ПО возраст УБЫВ
4747;SELECT T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID  =  T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft HAVING COUNT(*)  >=  2;ВЫБРАТЬ T1.наименование ИЗ справочник.самолеты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.соревнования КАК T2 ПО T1.ссылка = T2.победившийсамолет СГРУППИРОВАТЬ ПО T2.победившийсамолет ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
4748;SELECT T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID  =  T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft HAVING COUNT(*)  >=  2;ВЫБРАТЬ T1.наименование ИЗ справочник.самолеты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.соревнования КАК T2 ПО T1.ссылка = T2.победившийсамолет СГРУППИРОВАТЬ ПО T2.победившийсамолет ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
4749;SELECT Aircraft FROM aircraft WHERE Aircraft_ID NOT IN (SELECT Winning_Aircraft FROM MATCH);ВЫБРАТЬ Aircraft ИЗ справочник.самолеты ГДЕ Aircraft_ID НЕ В (ВЫБРАТЬ Winning_Aircraft ИЗ справочник.соревнования)
4750;SELECT Aircraft FROM aircraft WHERE Aircraft_ID NOT IN (SELECT Winning_Aircraft FROM MATCH);ВЫБРАТЬ Aircraft ИЗ справочник.самолеты ГДЕ Aircraft_ID НЕ В (ВЫБРАТЬ Winning_Aircraft ИЗ справочник.соревнования)
4753;SELECT * FROM airport ORDER BY International_Passengers DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 * ИЗ справочник.аэропорты УПОРЯДОЧИТЬ ПО международныхпассажиров УБЫВ
4754;SELECT * FROM airport ORDER BY International_Passengers DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 * ИЗ справочник.аэропорты УПОРЯДОЧИТЬ ПО международныхпассажиров УБЫВ
4755;SELECT t1.name ,  t1.age FROM pilot AS t1 JOIN MATCH AS t2 ON t1.pilot_id  =  t2.winning_pilot WHERE t1.age  <  30 GROUP BY t2.winning_pilot ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 t1.наименование , t1.возраст ИЗ справочник.пилоты КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.соревнования КАК t2 ПО t1.ссылка = t2.победившийпилот ГДЕ t1.возраст < 30 СГРУППИРОВАТЬ ПО t2.победившийпилот УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
4756;SELECT t1.name ,  t1.age FROM pilot AS t1 JOIN MATCH AS t2 ON t1.pilot_id  =  t2.winning_pilot WHERE t1.age  <  30 GROUP BY t2.winning_pilot ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 t1.наименование , t1.возраст ИЗ справочник.пилоты КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.соревнования КАК t2 ПО t1.ссылка = t2.победившийпилот ГДЕ t1.возраст < 30 СГРУППИРОВАТЬ ПО t2.победившийпилот УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
4757;SELECT t1.name ,  t1.age FROM pilot AS t1 JOIN MATCH AS t2 ON t1.pilot_id  =  t2.winning_pilot ORDER BY t1.age LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 t1.наименование , t1.возраст ИЗ справочник.пилоты КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.соревнования КАК t2 ПО t1.ссылка = t2.победившийпилот УПОРЯДОЧИТЬ ПО t1.возраст
4758;SELECT t1.name ,  t1.age FROM pilot AS t1 JOIN MATCH AS t2 ON t1.pilot_id  =  t2.winning_pilot ORDER BY t1.age LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 t1.наименование , t1.возраст ИЗ справочник.пилоты КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.соревнования КАК t2 ПО t1.ссылка = t2.победившийпилот УПОРЯДОЧИТЬ ПО t1.возраст
4759;SELECT name FROM pilot WHERE pilot_id NOT IN (SELECT Winning_Pilot  FROM MATCH WHERE country  =  'Australia');"ВЫБРАТЬ name ИЗ справочник.пилоты ГДЕ pilot_id НЕ В (ВЫБРАТЬ победившийпилот ИЗ справочник.соревнования ГДЕ страна = ""Australia"")"
4760;SELECT name FROM pilot WHERE pilot_id NOT IN (SELECT Winning_Pilot  FROM MATCH WHERE country  =  'Australia');"ВЫБРАТЬ name ИЗ справочник.пилоты ГДЕ pilot_id НЕ В (ВЫБРАТЬ победившийпилот ИЗ справочник.соревнования ГДЕ страна = ""Australia"")"
4761;SELECT T1.property_id ,  count(*) FROM properties AS T1 JOIN residents AS T2 ON T1.property_id  =  T2.property_id GROUP BY T1.property_id;ВЫБРАТЬ T1.ссылка , КОЛИЧЕСТВО(*) ИЗ справочник.имущество КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.жильцы КАК T2 ПО T1.ссылка = T2.имущество СГРУППИРОВАТЬ ПО T1.ссылка
4762;SELECT DISTINCT T1.service_type_code FROM services AS T1 JOIN organizations AS T2 ON T1.organization_id  =  T2.organization_id WHERE T2.organization_details  =  'Denesik and Sons Party';"ВЫБРАТЬ РАЗЛИЧНЫЕ T1.кодтипасервиса ИЗ справочник.сервисы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.организации КАК T2 ПО T1.организация = T2.ссылка ГДЕ T2.описаниеорганизации = ""Denesik and Sons Party"""
4763;SELECT T1.resident_id ,  T1.other_details ,  count(*) FROM Residents AS T1 JOIN Residents_Services AS T2 ON T1.resident_id  =  T2.resident_id GROUP BY T1.resident_id ORDER BY count(*) DESC;ВЫБРАТЬ T1.ссылка , T1.прочиедетали , КОЛИЧЕСТВО(*) ИЗ справочник.жильцы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.сервисыжильцов КАК T2 ПО T1.ссылка = T2.жилец СГРУППИРОВАТЬ ПО T1.ссылка УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
4764;SELECT T1.service_id ,  T1.service_details ,  count(*) FROM Services AS T1 JOIN Residents_Services AS T2 ON T1.service_id  =  T2.service_id GROUP BY T1.service_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.ссылка , T1.описаниесервиса , КОЛИЧЕСТВО(*) ИЗ справочник.сервисы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.сервисыжильцов КАК T2 ПО T1.ссылка = T2.сервис СГРУППИРОВАТЬ ПО T1.ссылка УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
4765;SELECT T1.thing_id ,  T1.type_of_Thing_Code ,  T2.organization_details FROM Things AS T1 JOIN Organizations AS T2 ON T1.organization_id  =  T2.organization_id;ВЫБРАТЬ T1.ссылка , T1.кодтипавещи , T2.описаниеорганизации ИЗ справочник.вещи КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.организации КАК T2 ПО T1.организация = T2.ссылка
4766;SELECT T1.customer_id ,  T1.customer_details FROM Customers AS T1 JOIN Customer_Events AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >=  3;ВЫБРАТЬ T1.ссылка , T1.описаниеклиента ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.событияклиентов КАК T2 ПО T1.ссылка = T2.клиент СГРУППИРОВАТЬ ПО T1.ссылка ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 3
4767;SELECT T2.date_moved_in ,  T1.customer_id ,  T1.customer_details FROM Customers AS T1 JOIN Customer_Events AS T2 ON T1.customer_id  =  T2.customer_id;ВЫБРАТЬ T2.датазаселения , T1.ссылка , T1.описаниеклиента ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.событияклиентов КАК T2 ПО T1.ссылка = T2.клиент
4768;SELECT T1.Customer_Event_ID  ,  T1.property_id FROM Customer_Events AS T1 JOIN Customer_Event_Notes AS T2 ON T1.Customer_Event_ID  =  T2.Customer_Event_ID GROUP BY T1.customer_event_id HAVING count(*) BETWEEN 1 AND 3;ВЫБРАТЬ T1.ссылка , T1.имущество ИЗ документ.событияклиентов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.заметкипособытиямклиентов КАК T2 ПО T1.ссылка = T2.событиеклиента СГРУППИРОВАТЬ ПО T1.ссылка ИМЕЮЩИЕ КОЛИЧЕСТВО(*) МЕЖДУ 1 И 3
4769;SELECT DISTINCT T2.thing_id ,  T2.Type_of_Thing_Code FROM Timed_Status_of_Things AS T1 JOIN Things AS T2 ON T1.thing_id  =  T2.thing_id WHERE T1.Status_of_Thing_Code  =  'Close' OR T1.Date_and_Date  <  '2017-06-19 02:59:21';"ВЫБРАТЬ РАЗЛИЧНЫЕ T2.ссылка , T2.кодтипавещи ИЗ регистрсведений.статусывещей КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.вещи КАК T2 ПО T1.вещь = T2.ссылка ГДЕ T1.кодстатусавещи = ""Close"" ИЛИ T1.дата < ""2017-06-19 02:59:21"""
4770;SELECT count(DISTINCT T2.Location_Code) FROM Things AS T1 JOIN Timed_Locations_of_Things AS T2 ON T1.thing_id  =  T2.thing_id WHERE T1.service_details  =  'Unsatisfied';"ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ T2.кодлокации) ИЗ справочник.вещи КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.локациивещей КАК T2 ПО T1.ссылка = T2.вещь ГДЕ T1.описаниесервиса = ""Unsatisfied"""
4771;SELECT count(DISTINCT Status_of_Thing_Code) FROM Timed_Status_of_Things;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ кодстатусавещи) ИЗ регистрсведений.статусывещей
4773;SELECT max(date_moved_in) FROM Residents;ВЫБРАТЬ МАКСИМУМ(датазаселения) ИЗ справочник.жильцы
4774;SELECT other_details FROM Residents WHERE other_details LIKE '%Miss%';"ВЫБРАТЬ прочиедетали ИЗ справочник.жильцы ГДЕ прочиедетали ПОДОБНО ""%Miss%"""
4775;SELECT customer_event_id ,  date_moved_in ,  property_id FROM customer_events;ВЫБРАТЬ ссылка , датазаселения , имущество ИЗ документ.событияклиентов
4776;SELECT count(*) FROM customers WHERE customer_id NOT IN ( SELECT customer_id FROM customer_events );ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.клиенты ГДЕ customer_id НЕ В ( ВЫБРАТЬ customer_id ИЗ документ.событияклиентов )
4777;SELECT DISTINCT date_moved_in FROM residents;ВЫБРАТЬ РАЗЛИЧНЫЕ датазаселения ИЗ справочник.жильцы
4778;SELECT count(*) FROM school;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ наименование
4779;SELECT count(*) FROM school;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ наименование
4780;SELECT LOCATION FROM school ORDER BY Enrollment ASC;ВЫБРАТЬ местоположение ИЗ наименование УПОРЯДОЧИТЬ ПО количествоучащихся ВОЗР
4781;SELECT LOCATION FROM school ORDER BY Enrollment ASC;ВЫБРАТЬ местоположение ИЗ наименование УПОРЯДОЧИТЬ ПО количествоучащихся ВОЗР
4782;SELECT LOCATION FROM school ORDER BY Founded DESC;ВЫБРАТЬ местоположение ИЗ наименование УПОРЯДОЧИТЬ ПО годоснования УБЫВ
4783;SELECT LOCATION FROM school ORDER BY Founded DESC;ВЫБРАТЬ местоположение ИЗ наименование УПОРЯДОЧИТЬ ПО годоснования УБЫВ
4784;"SELECT Enrollment FROM school WHERE Denomination != ""Catholic""";"ВЫБРАТЬ количествоучащихся ИЗ наименование ГДЕ конфессия <> ""Catholic"""
4785;"SELECT Enrollment FROM school WHERE Denomination != ""Catholic""";"ВЫБРАТЬ количествоучащихся ИЗ наименование ГДЕ конфессия <> ""Catholic"""
4786;SELECT avg(Enrollment) FROM school;ВЫБРАТЬ СРЕДНЕЕ(количествоучащихся) ИЗ наименование
4787;SELECT avg(Enrollment) FROM school;ВЫБРАТЬ СРЕДНЕЕ(количествоучащихся) ИЗ наименование
4788;SELECT Team FROM player ORDER BY Team ASC;ВЫБРАТЬ команда ИЗ наименование УПОРЯДОЧИТЬ ПО команда ВОЗР
4789;SELECT Team FROM player ORDER BY Team ASC;ВЫБРАТЬ команда ИЗ наименование УПОРЯДОЧИТЬ ПО команда ВОЗР
4790;SELECT count(DISTINCT POSITION) FROM player;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ позиция) ИЗ наименование
4791;SELECT count(DISTINCT POSITION) FROM player;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ позиция) ИЗ наименование
4792;SELECT Team FROM player ORDER BY Age DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 команда ИЗ наименование УПОРЯДОЧИТЬ ПО возраст УБЫВ
4793;SELECT Team FROM player ORDER BY Age DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 команда ИЗ наименование УПОРЯДОЧИТЬ ПО возраст УБЫВ
4794;SELECT Team FROM player ORDER BY Age DESC LIMIT 5;ВЫБРАТЬ ПЕРВЫЕ 5 команда ИЗ наименование УПОРЯДОЧИТЬ ПО возраст УБЫВ
4795;SELECT Team FROM player ORDER BY Age DESC LIMIT 5;ВЫБРАТЬ ПЕРВЫЕ 5 команда ИЗ наименование УПОРЯДОЧИТЬ ПО возраст УБЫВ
4796;SELECT T1.Team ,  T2.Location FROM player AS T1 JOIN school AS T2 ON T1.School_ID  =  T2.School_ID;ВЫБРАТЬ T1.команда , T2.местоположение ИЗ справочник.игроки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.школы КАК T2 ПО T1.школасправочник = T2.ссылка
4797;SELECT T1.Team ,  T2.Location FROM player AS T1 JOIN school AS T2 ON T1.School_ID  =  T2.School_ID;ВЫБРАТЬ T1.команда , T2.местоположение ИЗ справочник.игроки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.школы КАК T2 ПО T1.школасправочник = T2.ссылка
4798;SELECT T2.Location FROM player AS T1 JOIN school AS T2 ON T1.School_ID  =  T2.School_ID GROUP BY T1.School_ID HAVING COUNT(*)  >  1;ВЫБРАТЬ T2.местоположение ИЗ справочник.игроки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.школы КАК T2 ПО T1.школасправочник = T2.ссылка СГРУППИРОВАТЬ ПО T1.школасправочник ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 1
4799;SELECT T2.Location FROM player AS T1 JOIN school AS T2 ON T1.School_ID  =  T2.School_ID GROUP BY T1.School_ID HAVING COUNT(*)  >  1;ВЫБРАТЬ T2.местоположение ИЗ справочник.игроки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.школы КАК T2 ПО T1.школасправочник = T2.ссылка СГРУППИРОВАТЬ ПО T1.школасправочник ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 1
4800;SELECT T2.Denomination FROM player AS T1 JOIN school AS T2 ON T1.School_ID  =  T2.School_ID GROUP BY T1.School_ID ORDER BY COUNT(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.конфессия ИЗ справочник.игроки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.школы КАК T2 ПО T1.школасправочник = T2.ссылка СГРУППИРОВАТЬ ПО T1.школасправочник УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
4801;SELECT T2.Denomination FROM player AS T1 JOIN school AS T2 ON T1.School_ID  =  T2.School_ID GROUP BY T1.School_ID ORDER BY COUNT(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.конфессия ИЗ справочник.игроки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.школы КАК T2 ПО T1.школасправочник = T2.ссылка СГРУППИРОВАТЬ ПО T1.школасправочник УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
4802;SELECT T1.Location ,  T2.Nickname FROM school AS T1 JOIN school_details AS T2 ON T1.School_ID  =  T2.School_ID;ВЫБРАТЬ T1.местоположение , T2.прозвище ИЗ справочник.школы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.деталишкол КАК T2 ПО T1.ссылка = T2.школа
4803;SELECT T1.Location ,  T2.Nickname FROM school AS T1 JOIN school_details AS T2 ON T1.School_ID  =  T2.School_ID;ВЫБРАТЬ T1.местоположение , T2.прозвище ИЗ справочник.школы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.деталишкол КАК T2 ПО T1.ссылка = T2.школа
4804;SELECT Denomination ,  COUNT(*) FROM school GROUP BY Denomination;ВЫБРАТЬ конфессия , КОЛИЧЕСТВО(*) ИЗ наименование СГРУППИРОВАТЬ ПО конфессия
4805;SELECT Denomination ,  COUNT(*) FROM school GROUP BY Denomination;ВЫБРАТЬ конфессия , КОЛИЧЕСТВО(*) ИЗ наименование СГРУППИРОВАТЬ ПО конфессия
4806;SELECT Denomination ,  COUNT(*) FROM school GROUP BY Denomination ORDER BY COUNT(*) DESC;ВЫБРАТЬ конфессия , КОЛИЧЕСТВО(*) ИЗ наименование СГРУППИРОВАТЬ ПО конфессия УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
4807;SELECT Denomination ,  COUNT(*) FROM school GROUP BY Denomination ORDER BY COUNT(*) DESC;ВЫБРАТЬ конфессия , КОЛИЧЕСТВО(*) ИЗ наименование СГРУППИРОВАТЬ ПО конфессия УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
4808;SELECT School_Colors FROM school ORDER BY Enrollment DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 цветашколы ИЗ наименование УПОРЯДОЧИТЬ ПО количествоучащихся УБЫВ
4809;SELECT School_Colors FROM school ORDER BY Enrollment DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 цветашколы ИЗ наименование УПОРЯДОЧИТЬ ПО количествоучащихся УБЫВ
4810;SELECT LOCATION FROM school WHERE School_ID NOT IN (SELECT School_ID FROM Player);ВЫБРАТЬ LOCATION ИЗ справочник.школы ГДЕ School_ID НЕ В (ВЫБРАТЬ School_ID ИЗ справочник.игроки)
4811;SELECT LOCATION FROM school WHERE School_ID NOT IN (SELECT School_ID FROM Player);ВЫБРАТЬ LOCATION ИЗ справочник.школы ГДЕ School_ID НЕ В (ВЫБРАТЬ School_ID ИЗ справочник.игроки)
4814;"SELECT Nickname FROM school_details WHERE Division != ""Division 1""";"ВЫБРАТЬ прозвище ИЗ регистрсведений.деталишкол ГДЕ дивизион <> ""дивизион 1"""
4815;"SELECT Nickname FROM school_details WHERE Division != ""Division 1""";"ВЫБРАТЬ прозвище ИЗ регистрсведений.деталишкол ГДЕ дивизион <> ""дивизион 1"""
4816;SELECT Denomination FROM school GROUP BY Denomination HAVING COUNT(*)  >  1;ВЫБРАТЬ конфессия ИЗ наименование СГРУППИРОВАТЬ ПО конфессия ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 1
4817;SELECT Denomination FROM school GROUP BY Denomination HAVING COUNT(*)  >  1;ВЫБРАТЬ конфессия ИЗ наименование СГРУППИРОВАТЬ ПО конфессия ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 1
4818;SELECT DISTINCT District_name FROM district ORDER BY city_area DESC;ВЫБРАТЬ РАЗЛИЧНЫЕ наименование ИЗ справочник.районы УПОРЯДОЧИТЬ ПО площадьгорода УБЫВ
4819;SELECT DISTINCT District_name FROM district ORDER BY city_area DESC;ВЫБРАТЬ РАЗЛИЧНЫЕ наименование ИЗ справочник.районы УПОРЯДОЧИТЬ ПО площадьгорода УБЫВ
4820;SELECT max_page_size FROM product GROUP BY max_page_size HAVING count(*)  >  3;ВЫБРАТЬ максимальныйформатбумаги ИЗ наименование СГРУППИРОВАТЬ ПО максимальныйформатбумаги ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 3
4821;SELECT max_page_size FROM product GROUP BY max_page_size HAVING count(*)  >  3;ВЫБРАТЬ максимальныйформатбумаги ИЗ наименование СГРУППИРОВАТЬ ПО максимальныйформатбумаги ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 3
4822;SELECT District_name ,  City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000;ВЫБРАТЬ наименование , населениегорода ИЗ справочник.районы ГДЕ населениегорода МЕЖДУ 200000 И 2000000
4823;SELECT District_name ,  City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000;ВЫБРАТЬ наименование , населениегорода ИЗ справочник.районы ГДЕ населениегорода МЕЖДУ 200000 И 2000000
4824;SELECT district_name FROM district WHERE city_area  >  10 OR City_Population  >  100000;ВЫБРАТЬ наименование ИЗ справочник.районы ГДЕ площадьгорода > 10 ИЛИ населениегорода > 100000
4825;SELECT district_name FROM district WHERE city_area  >  10 OR City_Population  >  100000;ВЫБРАТЬ наименование ИЗ справочник.районы ГДЕ площадьгорода > 10 ИЛИ населениегорода > 100000
4826;SELECT district_name FROM district ORDER BY city_population DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование ИЗ справочник.районы УПОРЯДОЧИТЬ ПО населениегорода УБЫВ
4827;SELECT district_name FROM district ORDER BY city_population DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование ИЗ справочник.районы УПОРЯДОЧИТЬ ПО населениегорода УБЫВ
4828;SELECT district_name FROM district ORDER BY city_area ASC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование ИЗ справочник.районы УПОРЯДОЧИТЬ ПО площадьгорода ВОЗР
4829;SELECT district_name FROM district ORDER BY city_area ASC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование ИЗ справочник.районы УПОРЯДОЧИТЬ ПО площадьгорода ВОЗР
4830;SELECT sum(city_population) FROM district ORDER BY city_area DESC LIMIT 3;ВЫБРАТЬ ПЕРВЫЕ 3 СУММА(населениегорода) ИЗ справочник.районы УПОРЯДОЧИТЬ ПО площадьгорода УБЫВ
4831;SELECT sum(city_population) FROM district ORDER BY city_area DESC LIMIT 3;ВЫБРАТЬ ПЕРВЫЕ 3 СУММА(населениегорода) ИЗ справочник.районы УПОРЯДОЧИТЬ ПО площадьгорода УБЫВ
4832;SELECT TYPE ,  count(*) FROM store GROUP BY TYPE;ВЫБРАТЬ тип , КОЛИЧЕСТВО(*) ИЗ справочник.магазины СГРУППИРОВАТЬ ПО тип
4833;SELECT TYPE ,  count(*) FROM store GROUP BY TYPE;ВЫБРАТЬ тип , КОЛИЧЕСТВО(*) ИЗ справочник.магазины СГРУППИРОВАТЬ ПО тип
4834;"SELECT t1.store_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id WHERE t3.district_name  =  ""Khanewal District""";"ВЫБРАТЬ t1.наименование ИЗ справочник.магазины КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.районымагазинов КАК t2 ПО t1.ссылка = t2.магазин ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.районы КАК t3 ПО t2.район = t3.ссылка ГДЕ t3.наименование = ""Khanewal District"""
4835;"SELECT t1.store_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id WHERE t3.district_name  =  ""Khanewal District""";"ВЫБРАТЬ t1.наименование ИЗ справочник.магазины КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.районымагазинов КАК t2 ПО t1.ссылка = t2.магазин ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.районы КАК t3 ПО t2.район = t3.ссылка ГДЕ t3.наименование = ""Khanewal District"""
4836;SELECT t1.store_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id WHERE district_id  =  (SELECT district_id FROM district ORDER BY city_population DESC LIMIT 1);ВЫБРАТЬ t1.наименование ИЗ справочник.магазины КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.районымагазинов КАК t2 ПО t1.ссылка = t2.магазин ГДЕ district_id = (ВЫБРАТЬ district_id ИЗ справочник.районы УПОРЯДОЧИТЬ ПО city_population УБЫВ LIMIT 1)
4837;SELECT t1.store_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id WHERE district_id  =  (SELECT district_id FROM district ORDER BY city_population DESC LIMIT 1);ВЫБРАТЬ t1.наименование ИЗ справочник.магазины КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.районымагазинов КАК t2 ПО t1.ссылка = t2.магазин ГДЕ district_id = (ВЫБРАТЬ district_id ИЗ справочник.районы УПОРЯДОЧИТЬ ПО city_population УБЫВ LIMIT 1)
4838;"SELECT t3.headquartered_city FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id WHERE t1.store_name  =  ""Blackville""";"ВЫБРАТЬ t3.город ИЗ справочник.магазины КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.районымагазинов КАК t2 ПО t1.ссылка = t2.магазин ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.районы КАК t3 ПО t2.район = t3.ссылка ГДЕ t1.наименование = ""Blackville"""
4839;"SELECT t3.headquartered_city FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id WHERE t1.store_name  =  ""Blackville""";"ВЫБРАТЬ t3.город ИЗ справочник.магазины КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.районымагазинов КАК t2 ПО t1.ссылка = t2.магазин ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.районы КАК t3 ПО t2.район = t3.ссылка ГДЕ t1.наименование = ""Blackville"""
4840;SELECT t3.headquartered_city ,  count(*) FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id GROUP BY t3.headquartered_city;ВЫБРАТЬ t3.город , КОЛИЧЕСТВО(*) ИЗ справочник.магазины КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.районымагазинов КАК t2 ПО t1.ссылка = t2.магазин ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.районы КАК t3 ПО t2.район = t3.ссылка СГРУППИРОВАТЬ ПО t3.город
4841;SELECT t3.headquartered_city ,  count(*) FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id GROUP BY t3.headquartered_city;ВЫБРАТЬ t3.город , КОЛИЧЕСТВО(*) ИЗ справочник.магазины КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.районымагазинов КАК t2 ПО t1.ссылка = t2.магазин ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.районы КАК t3 ПО t2.район = t3.ссылка СГРУППИРОВАТЬ ПО t3.город
4842;SELECT t3.headquartered_city FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id GROUP BY t3.headquartered_city ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 t3.город ИЗ справочник.магазины КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.районымагазинов КАК t2 ПО t1.ссылка = t2.магазин ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.районы КАК t3 ПО t2.район = t3.ссылка СГРУППИРОВАТЬ ПО t3.город УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
4843;SELECT t3.headquartered_city FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id GROUP BY t3.headquartered_city ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 t3.город ИЗ справочник.магазины КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.районымагазинов КАК t2 ПО t1.ссылка = t2.магазин ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.районы КАК t3 ПО t2.район = t3.ссылка СГРУППИРОВАТЬ ПО t3.город УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
4844;SELECT avg(pages_per_minute_color) FROM product;ВЫБРАТЬ СРЕДНЕЕ(скоростьцветнойпечати) ИЗ наименование
4845;SELECT avg(pages_per_minute_color) FROM product;ВЫБРАТЬ СРЕДНЕЕ(скоростьцветнойпечати) ИЗ наименование
4846;"SELECT t1.product FROM product AS t1 JOIN store_product AS t2 ON t1.product_id  =  t2.product_id JOIN store AS t3 ON t2.store_id  =  t3.store_id WHERE t3.store_name  =  ""Miramichi""";"ВЫБРАТЬ t1.наименование ИЗ справочник.товары КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.товарымагазинов КАК t2 ПО t1.ссылка = t2.товар ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.магазины КАК t3 ПО t2.магазин = t3.ссылка ГДЕ t3.наименование = ""Miramichi"""
4847;"SELECT t1.product FROM product AS t1 JOIN store_product AS t2 ON t1.product_id  =  t2.product_id JOIN store AS t3 ON t2.store_id  =  t3.store_id WHERE t3.store_name  =  ""Miramichi""";"ВЫБРАТЬ t1.наименование ИЗ справочник.товары КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.товарымагазинов КАК t2 ПО t1.ссылка = t2.товар ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.магазины КАК t3 ПО t2.магазин = t3.ссылка ГДЕ t3.наименование = ""Miramichi"""
4848;"SELECT product FROM product WHERE max_page_size  =  ""A4"" AND pages_per_minute_color  <  5";"ВЫБРАТЬ наименование ИЗ наименование ГДЕ максимальныйформатбумаги = ""A4"" И скоростьцветнойпечати < 5"
4849;"SELECT product FROM product WHERE max_page_size  =  ""A4"" AND pages_per_minute_color  <  5";"ВЫБРАТЬ наименование ИЗ наименование ГДЕ максимальныйформатбумаги = ""A4"" И скоростьцветнойпечати < 5"
4850;"SELECT product FROM product WHERE max_page_size  =  ""A4"" OR pages_per_minute_color  <  5";"ВЫБРАТЬ наименование ИЗ наименование ГДЕ максимальныйформатбумаги = ""A4"" ИЛИ скоростьцветнойпечати < 5"
4851;"SELECT product FROM product WHERE max_page_size  =  ""A4"" OR pages_per_minute_color  <  5";"ВЫБРАТЬ наименование ИЗ наименование ГДЕ максимальныйформатбумаги = ""A4"" ИЛИ скоростьцветнойпечати < 5"
4852;"SELECT product FROM product WHERE product LIKE ""%Scanner%""";"ВЫБРАТЬ наименование ИЗ наименование ГДЕ наименование ПОДОБНО ""%Scanner%"""
4853;"SELECT product FROM product WHERE product LIKE ""%Scanner%""";"ВЫБРАТЬ наименование ИЗ наименование ГДЕ наименование ПОДОБНО ""%Scanner%"""
4854;SELECT max_page_size FROM product GROUP BY max_page_size ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 максимальныйформатбумаги ИЗ наименование СГРУППИРОВАТЬ ПО максимальныйформатбумаги УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
4855;SELECT max_page_size FROM product GROUP BY max_page_size ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 максимальныйформатбумаги ИЗ наименование СГРУППИРОВАТЬ ПО максимальныйформатбумаги УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
4856;SELECT product FROM product WHERE product != (SELECT max_page_size FROM product GROUP BY max_page_size ORDER BY count(*) DESC LIMIT 1);ВЫБРАТЬ product ИЗ справочник.товары ГДЕ product <> (ВЫБРАТЬ max_page_size ИЗ справочник.товары СГРУППИРОВАТЬ ПО max_page_size УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ LIMIT 1)
4857;SELECT product FROM product WHERE product != (SELECT max_page_size FROM product GROUP BY max_page_size ORDER BY count(*) DESC LIMIT 1);ВЫБРАТЬ product ИЗ справочник.товары ГДЕ product <> (ВЫБРАТЬ max_page_size ИЗ справочник.товары СГРУППИРОВАТЬ ПО max_page_size УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ LIMIT 1)
4858;SELECT sum(city_population) FROM district WHERE city_area  >  (SELECT avg(city_area) FROM district);ВЫБРАТЬ СУММА(city_population) ИЗ справочник.районы ГДЕ city_area > (ВЫБРАТЬ СРЕДНЕЕ(city_area) ИЗ справочник.районы)
4859;SELECT sum(city_population) FROM district WHERE city_area  >  (SELECT avg(city_area) FROM district);ВЫБРАТЬ СУММА(city_population) ИЗ справочник.районы ГДЕ city_area > (ВЫБРАТЬ СРЕДНЕЕ(city_area) ИЗ справочник.районы)
4862;SELECT sum(enr) FROM College;ВЫБРАТЬ СУММА(количествостудентов) ИЗ справочник.колледжи
4863;SELECT sum(enr) FROM College;ВЫБРАТЬ СУММА(количествостудентов) ИЗ справочник.колледжи
4864;SELECT avg(enr) FROM College;ВЫБРАТЬ СРЕДНЕЕ(количествостудентов) ИЗ справочник.колледжи
4865;SELECT avg(enr) FROM College;ВЫБРАТЬ СРЕДНЕЕ(количествостудентов) ИЗ справочник.колледжи
4866;SELECT count(*) FROM College;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.колледжи
4867;SELECT count(*) FROM College;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.колледжи
4868;SELECT count(*) FROM Player WHERE HS  >  1000;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.игроки ГДЕ школа > 1000
4869;SELECT count(*) FROM Player WHERE HS  >  1000;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.игроки ГДЕ школа > 1000
4870;SELECT count(*) FROM College WHERE enr  >  15000;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.колледжи ГДЕ количествостудентов > 15000
4871;SELECT count(*) FROM College WHERE enr  >  15000;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.колледжи ГДЕ количествостудентов > 15000
4872;SELECT avg(HS) FROM Player;ВЫБРАТЬ СРЕДНЕЕ(школа) ИЗ справочник.игроки
4873;SELECT avg(HS) FROM Player;ВЫБРАТЬ СРЕДНЕЕ(школа) ИЗ справочник.игроки
4874;SELECT pName ,  HS FROM Player WHERE HS  <  1500;ВЫБРАТЬ наименование , школа ИЗ справочник.игроки ГДЕ школа < 1500
4875;SELECT pName ,  HS FROM Player WHERE HS  <  1500;ВЫБРАТЬ наименование , школа ИЗ справочник.игроки ГДЕ школа < 1500
4876;SELECT count(DISTINCT cName) FROM tryout;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ колледж) ИЗ регистрсведений.просмотры
4877;SELECT count(DISTINCT cName) FROM tryout;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ колледж) ИЗ регистрсведений.просмотры
4878;SELECT count(DISTINCT pPos) FROM tryout;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ позиция) ИЗ регистрсведений.просмотры
4879;SELECT count(DISTINCT pPos) FROM tryout;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ позиция) ИЗ регистрсведений.просмотры
4880;SELECT count(*) FROM tryout WHERE decision  =  'yes';"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.просмотры ГДЕ решение = ""yes"""
4881;SELECT count(*) FROM tryout WHERE decision  =  'yes';"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.просмотры ГДЕ решение = ""yes"""
4882;SELECT count(*) FROM tryout WHERE pPos  =  'goalie';"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.просмотры ГДЕ позиция = ""goalie"""
4883;SELECT count(*) FROM tryout WHERE pPos  =  'goalie';"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.просмотры ГДЕ позиция = ""goalie"""
4884;SELECT avg(HS) ,  max(HS) ,  min(HS) FROM Player;ВЫБРАТЬ СРЕДНЕЕ(школа) , МАКСИМУМ(школа) , МИНИМУМ(школа) ИЗ справочник.игроки
4885;SELECT avg(HS) ,  max(HS) ,  min(HS) FROM Player;ВЫБРАТЬ СРЕДНЕЕ(школа) , МАКСИМУМ(школа) , МИНИМУМ(школа) ИЗ справочник.игроки
4886;SELECT avg(enr) FROM College WHERE state  =  'FL';"ВЫБРАТЬ СРЕДНЕЕ(количествостудентов) ИЗ справочник.колледжи ГДЕ штат = ""FL"""
4887;SELECT avg(enr) FROM College WHERE state  =  'FL';"ВЫБРАТЬ СРЕДНЕЕ(количествостудентов) ИЗ справочник.колледжи ГДЕ штат = ""FL"""
4888;SELECT pName FROM Player WHERE HS BETWEEN 500 AND 1500;ВЫБРАТЬ наименование ИЗ справочник.игроки ГДЕ школа МЕЖДУ 500 И 1500
4889;SELECT pName FROM Player WHERE HS BETWEEN 500 AND 1500;ВЫБРАТЬ наименование ИЗ справочник.игроки ГДЕ школа МЕЖДУ 500 И 1500
4890;SELECT DISTINCT pName FROM Player WHERE pName LIKE '%a%';"ВЫБРАТЬ РАЗЛИЧНЫЕ наименование ИЗ справочник.игроки ГДЕ наименование ПОДОБНО ""%a%"""
4891;SELECT DISTINCT pName FROM Player WHERE pName LIKE '%a%';"ВЫБРАТЬ РАЗЛИЧНЫЕ наименование ИЗ справочник.игроки ГДЕ наименование ПОДОБНО ""%a%"""
4892;"SELECT cName ,  enr FROM College WHERE enr  >  10000 AND state = ""LA""";"ВЫБРАТЬ наименование , количествостудентов ИЗ справочник.колледжи ГДЕ количествостудентов > 10000 И штат = ""LA"""
4893;"SELECT cName ,  enr FROM College WHERE enr  >  10000 AND state = ""LA""";"ВЫБРАТЬ наименование , количествостудентов ИЗ справочник.колледжи ГДЕ количествостудентов > 10000 И штат = ""LA"""
4894;SELECT * FROM College ORDER BY enr;ВЫБРАТЬ * ИЗ справочник.колледжи УПОРЯДОЧИТЬ ПО количествостудентов
4895;SELECT * FROM College ORDER BY enr;ВЫБРАТЬ * ИЗ справочник.колледжи УПОРЯДОЧИТЬ ПО количествостудентов
4896;SELECT cName FROM College WHERE enr  >  18000 ORDER BY cName;ВЫБРАТЬ наименование ИЗ справочник.колледжи ГДЕ количествостудентов > 18000 УПОРЯДОЧИТЬ ПО наименование
4897;SELECT cName FROM College WHERE enr  >  18000 ORDER BY cName;ВЫБРАТЬ наименование ИЗ справочник.колледжи ГДЕ количествостудентов > 18000 УПОРЯДОЧИТЬ ПО наименование
4898;SELECT pName FROM Player WHERE yCard  =  'yes' ORDER BY HS DESC;"ВЫБРАТЬ наименование ИЗ справочник.игроки ГДЕ предупреждение = ""yes"" УПОРЯДОЧИТЬ ПО школа УБЫВ"
4899;SELECT pName FROM Player WHERE yCard  =  'yes' ORDER BY HS DESC;"ВЫБРАТЬ наименование ИЗ справочник.игроки ГДЕ предупреждение = ""yes"" УПОРЯДОЧИТЬ ПО школа УБЫВ"
4900;SELECT DISTINCT cName FROM tryout ORDER BY cName;ВЫБРАТЬ РАЗЛИЧНЫЕ колледж ИЗ регистрсведений.просмотры УПОРЯДОЧИТЬ ПО колледж
4901;SELECT DISTINCT cName FROM tryout ORDER BY cName;ВЫБРАТЬ РАЗЛИЧНЫЕ колледж ИЗ регистрсведений.просмотры УПОРЯДОЧИТЬ ПО колледж
4902;SELECT pPos FROM tryout GROUP BY pPos ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 позиция ИЗ регистрсведений.просмотры СГРУППИРОВАТЬ ПО позиция УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
4903;SELECT pPos FROM tryout GROUP BY pPos ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 позиция ИЗ регистрсведений.просмотры СГРУППИРОВАТЬ ПО позиция УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
4904;SELECT count(*) ,  cName FROM tryout GROUP BY cName ORDER BY count(*) DESC;ВЫБРАТЬ КОЛИЧЕСТВО(*) , колледж ИЗ регистрсведений.просмотры СГРУППИРОВАТЬ ПО колледж УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
4905;SELECT count(*) ,  cName FROM tryout GROUP BY cName ORDER BY count(*) DESC;ВЫБРАТЬ КОЛИЧЕСТВО(*) , колледж ИЗ регистрсведений.просмотры СГРУППИРОВАТЬ ПО колледж УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
4906;SELECT min(T2.HS) ,   T1.pPos FROM tryout AS T1 JOIN player AS T2 ON T1.pID  =  T2.pID GROUP BY T1.pPos;ВЫБРАТЬ МИНИМУМ(T2.школа) , T1.позиция ИЗ регистрсведений.просмотры КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.игроки КАК T2 ПО T1.игрок = T2.ссылка СГРУППИРОВАТЬ ПО T1.позиция
4907;SELECT min(T2.HS) ,   T1.pPos FROM tryout AS T1 JOIN player AS T2 ON T1.pID  =  T2.pID GROUP BY T1.pPos;ВЫБРАТЬ МИНИМУМ(T2.школа) , T1.позиция ИЗ регистрсведений.просмотры КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.игроки КАК T2 ПО T1.игрок = T2.ссылка СГРУППИРОВАТЬ ПО T1.позиция
4908;SELECT cName FROM college ORDER BY enr DESC LIMIT 3;ВЫБРАТЬ ПЕРВЫЕ 3 наименование ИЗ справочник.колледжи УПОРЯДОЧИТЬ ПО количествостудентов УБЫВ
4909;SELECT cName FROM college ORDER BY enr DESC LIMIT 3;ВЫБРАТЬ ПЕРВЫЕ 3 наименование ИЗ справочник.колледжи УПОРЯДОЧИТЬ ПО количествостудентов УБЫВ
4910;SELECT cName ,  state ,  min(enr) FROM college GROUP BY state;ВЫБРАТЬ наименование , штат , МИНИМУМ(количествостудентов) ИЗ справочник.колледжи СГРУППИРОВАТЬ ПО штат
4911;SELECT cName ,  state ,  min(enr) FROM college GROUP BY state;ВЫБРАТЬ наименование , штат , МИНИМУМ(количествостудентов) ИЗ справочник.колледжи СГРУППИРОВАТЬ ПО штат
4912;SELECT DISTINCT state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName;ВЫБРАТЬ РАЗЛИЧНЫЕ state ИЗ справочник.колледжи КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.просмотры КАК T2 ПО T1.наименование = T2.колледж
4913;SELECT DISTINCT state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName;ВЫБРАТЬ РАЗЛИЧНЫЕ state ИЗ справочник.колледжи КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.просмотры КАК T2 ПО T1.наименование = T2.колледж
4914;SELECT DISTINCT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.decision  =  'yes';"ВЫБРАТЬ РАЗЛИЧНЫЕ T1.штат ИЗ справочник.колледжи КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.просмотры КАК T2 ПО T1.наименование = T2.колледж ГДЕ T2.решение = ""yes"""
4915;SELECT DISTINCT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.decision  =  'yes';"ВЫБРАТЬ РАЗЛИЧНЫЕ T1.штат ИЗ справочник.колледжи КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.просмотры КАК T2 ПО T1.наименование = T2.колледж ГДЕ T2.решение = ""yes"""
4916;SELECT T1.pName ,  T2.cName FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  'yes';"ВЫБРАТЬ T1.наименование , T2.колледж ИЗ справочник.игроки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.просмотры КАК T2 ПО T1.ссылка = T2.игрок ГДЕ T2.решение = ""yes"""
4917;SELECT T1.pName ,  T2.cName FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  'yes';"ВЫБРАТЬ T1.наименование , T2.колледж ИЗ справочник.игроки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.просмотры КАК T2 ПО T1.ссылка = T2.игрок ГДЕ T2.решение = ""yes"""
4918;SELECT T1.pName FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID ORDER BY T1.pName;ВЫБРАТЬ T1.наименование ИЗ справочник.игроки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.просмотры КАК T2 ПО T1.ссылка = T2.игрок УПОРЯДОЧИТЬ ПО T1.наименование
4919;SELECT T1.pName FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID ORDER BY T1.pName;ВЫБРАТЬ T1.наименование ИЗ справочник.игроки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.просмотры КАК T2 ПО T1.ссылка = T2.игрок УПОРЯДОЧИТЬ ПО T1.наименование
4920;SELECT T1.pName ,  T1.HS FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  'yes';"ВЫБРАТЬ T1.наименование , T1.школа ИЗ справочник.игроки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.просмотры КАК T2 ПО T1.ссылка = T2.игрок ГДЕ T2.решение = ""yes"""
4921;SELECT T1.pName ,  T1.HS FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  'yes';"ВЫБРАТЬ T1.наименование , T1.школа ИЗ справочник.игроки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.просмотры КАК T2 ПО T1.ссылка = T2.игрок ГДЕ T2.решение = ""yes"""
4922;SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'striker';"ВЫБРАТЬ T1.штат ИЗ справочник.колледжи КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.просмотры КАК T2 ПО T1.наименование = T2.колледж ГДЕ T2.позиция = ""striker"""
4923;SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'striker';"ВЫБРАТЬ T1.штат ИЗ справочник.колледжи КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.просмотры КАК T2 ПО T1.наименование = T2.колледж ГДЕ T2.позиция = ""striker"""
4924;SELECT T1.pName FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  'yes' AND T2.pPos  =  'striker';"ВЫБРАТЬ T1.наименование ИЗ справочник.игроки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.просмотры КАК T2 ПО T1.ссылка = T2.игрок ГДЕ T2.решение = ""yes"" И T2.позиция = ""striker"""
4925;SELECT T1.pName FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  'yes' AND T2.pPos  =  'striker';"ВЫБРАТЬ T1.наименование ИЗ справочник.игроки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.просмотры КАК T2 ПО T1.ссылка = T2.игрок ГДЕ T2.решение = ""yes"" И T2.позиция = ""striker"""
4926;SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName JOIN player AS T3 ON T2.pID  =  T3.pID WHERE T3.pName  =  'Charles';"ВЫБРАТЬ T1.штат ИЗ справочник.колледжи КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.просмотры КАК T2 ПО T1.наименование = T2.колледж ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.игроки КАК T3 ПО T2.игрок = T3.ссылка ГДЕ T3.наименование = ""Charles"""
4927;SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName JOIN player AS T3 ON T2.pID  =  T3.pID WHERE T3.pName  =  'Charles';"ВЫБРАТЬ T1.штат ИЗ справочник.колледжи КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.просмотры КАК T2 ПО T1.наименование = T2.колледж ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.игроки КАК T3 ПО T2.игрок = T3.ссылка ГДЕ T3.наименование = ""Charles"""
4928;SELECT avg(T1.HS) ,  max(T1.HS) FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  'yes';"ВЫБРАТЬ СРЕДНЕЕ(T1.школа) , МАКСИМУМ(T1.школа) ИЗ справочник.игроки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.просмотры КАК T2 ПО T1.ссылка = T2.игрок ГДЕ T2.решение = ""yes"""
4929;SELECT avg(T1.HS) ,  max(T1.HS) FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  'yes';"ВЫБРАТЬ СРЕДНЕЕ(T1.школа) , МАКСИМУМ(T1.школа) ИЗ справочник.игроки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.просмотры КАК T2 ПО T1.ссылка = T2.игрок ГДЕ T2.решение = ""yes"""
4930;SELECT avg(T1.HS) FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  'no';"ВЫБРАТЬ СРЕДНЕЕ(T1.школа) ИЗ справочник.игроки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.просмотры КАК T2 ПО T1.ссылка = T2.игрок ГДЕ T2.решение = ""no"""
4931;SELECT avg(T1.HS) FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  'no';"ВЫБРАТЬ СРЕДНЕЕ(T1.школа) ИЗ справочник.игроки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.просмотры КАК T2 ПО T1.ссылка = T2.игрок ГДЕ T2.решение = ""no"""
4932;SELECT max(T1.HS) ,  pPos FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T1.HS  >  1000 GROUP BY T2.pPos;ВЫБРАТЬ МАКСИМУМ(T1.школа) , pPos ИЗ справочник.игроки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.просмотры КАК T2 ПО T1.ссылка = T2.игрок ГДЕ T1.школа > 1000 СГРУППИРОВАТЬ ПО T2.позиция
4933;SELECT max(T1.HS) ,  pPos FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T1.HS  >  1000 GROUP BY T2.pPos;ВЫБРАТЬ МАКСИМУМ(T1.школа) , pPos ИЗ справочник.игроки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.просмотры КАК T2 ПО T1.ссылка = T2.игрок ГДЕ T1.школа > 1000 СГРУППИРОВАТЬ ПО T2.позиция
4934;SELECT T1.cName FROM  tryout AS T1 JOIN player AS T2 ON T1.pID  =  T2.pID WHERE T2.pName LIKE 'D%';"ВЫБРАТЬ T1.колледж ИЗ регистрсведений.просмотры КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.игроки КАК T2 ПО T1.игрок = T2.ссылка ГДЕ T2.наименование ПОДОБНО ""D%"""
4935;SELECT T1.cName FROM  tryout AS T1 JOIN player AS T2 ON T1.pID  =  T2.pID WHERE T2.pName LIKE 'D%';"ВЫБРАТЬ T1.колледж ИЗ регистрсведений.просмотры КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.игроки КАК T2 ПО T1.игрок = T2.ссылка ГДЕ T2.наименование ПОДОБНО ""D%"""
4936;SELECT cName FROM  tryout WHERE decision  =  'yes' AND pPos  =  'goalie';"ВЫБРАТЬ колледж ИЗ регистрсведений.просмотры ГДЕ решение = ""yes"" И позиция = ""goalie"""
4937;SELECT cName FROM  tryout WHERE decision  =  'yes' AND pPos  =  'goalie';"ВЫБРАТЬ колледж ИЗ регистрсведений.просмотры ГДЕ решение = ""yes"" И позиция = ""goalie"""
4938;SELECT T2.pName FROM  tryout AS T1 JOIN player AS T2 ON T1.pID  =  T2.pID WHERE T1.cName  =  (SELECT cName FROM college ORDER BY enr DESC LIMIT 1);ВЫБРАТЬ T2.наименование ИЗ регистрсведений.просмотры КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.игроки КАК T2 ПО T1.игрок = T2.ссылка ГДЕ T1.колледж = (ВЫБРАТЬ cName ИЗ справочник.колледжи УПОРЯДОЧИТЬ ПО enr УБЫВ LIMIT 1)
4939;SELECT T2.pName FROM  tryout AS T1 JOIN player AS T2 ON T1.pID  =  T2.pID WHERE T1.cName  =  (SELECT cName FROM college ORDER BY enr DESC LIMIT 1);ВЫБРАТЬ T2.наименование ИЗ регистрсведений.просмотры КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.игроки КАК T2 ПО T1.игрок = T2.ссылка ГДЕ T1.колледж = (ВЫБРАТЬ cName ИЗ справочник.колледжи УПОРЯДОЧИТЬ ПО enr УБЫВ LIMIT 1)
4940;SELECT DISTINCT T1.state ,  T1.enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.decision  =  'yes';"ВЫБРАТЬ РАЗЛИЧНЫЕ T1.штат , T1.количествостудентов ИЗ справочник.колледжи КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.просмотры КАК T2 ПО T1.наименование = T2.колледж ГДЕ T2.решение = ""yes"""
4941;SELECT DISTINCT T1.state ,  T1.enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.decision  =  'yes';"ВЫБРАТЬ РАЗЛИЧНЫЕ T1.штат , T1.количествостудентов ИЗ справочник.колледжи КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.просмотры КАК T2 ПО T1.наименование = T2.колледж ГДЕ T2.решение = ""yes"""
4942;"SELECT cName FROM College WHERE enr  <  13000 AND state = ""AZ"" UNION SELECT cName FROM College WHERE enr  >  15000 AND state = ""LA""";"ВЫБРАТЬ наименование ИЗ справочник.колледжи ГДЕ количествостудентов < 13000 И штат = ""AZ"" ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ наименование ИЗ справочник.колледжи ГДЕ количествостудентов > 15000 И штат = ""LA"""
4943;"SELECT cName FROM College WHERE enr  <  13000 AND state = ""AZ"" UNION SELECT cName FROM College WHERE enr  >  15000 AND state = ""LA""";"ВЫБРАТЬ наименование ИЗ справочник.колледжи ГДЕ количествостудентов < 13000 И штат = ""AZ"" ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ наименование ИЗ справочник.колледжи ГДЕ количествостудентов > 15000 И штат = ""LA"""
4956;SELECT DISTINCT state FROM college WHERE enr  <  (SELECT max(enr) FROM college);ВЫБРАТЬ РАЗЛИЧНЫЕ state ИЗ справочник.колледжи ГДЕ enr < (ВЫБРАТЬ МАКСИМУМ(enr) ИЗ справочник.колледжи)
4957;SELECT DISTINCT state FROM college WHERE enr  <  (SELECT max(enr) FROM college);ВЫБРАТЬ РАЗЛИЧНЫЕ state ИЗ справочник.колледжи ГДЕ enr < (ВЫБРАТЬ МАКСИМУМ(enr) ИЗ справочник.колледжи)
4958;SELECT DISTINCT cName FROM college WHERE enr  >  (SELECT min(enr) FROM college WHERE state  =  'FL');"ВЫБРАТЬ РАЗЛИЧНЫЕ наименование ИЗ справочник.колледжи ГДЕ количествостудентов > (ВЫБРАТЬ МИНИМУМ(количествостудентов) ИЗ справочник.колледжи ГДЕ штат = ""FL"")"
4959;SELECT DISTINCT cName FROM college WHERE enr  >  (SELECT min(enr) FROM college WHERE state  =  'FL');"ВЫБРАТЬ РАЗЛИЧНЫЕ наименование ИЗ справочник.колледжи ГДЕ количествостудентов > (ВЫБРАТЬ МИНИМУМ(количествостудентов) ИЗ справочник.колледжи ГДЕ штат = ""FL"")"
4960;SELECT cName FROM college WHERE enr  >  (SELECT max(enr) FROM college WHERE state  =  'FL');"ВЫБРАТЬ наименование ИЗ справочник.колледжи ГДЕ количествостудентов > (ВЫБРАТЬ МАКСИМУМ(количествостудентов) ИЗ справочник.колледжи ГДЕ штат = ""FL"")"
4961;SELECT cName FROM college WHERE enr  >  (SELECT max(enr) FROM college WHERE state  =  'FL');"ВЫБРАТЬ наименование ИЗ справочник.колледжи ГДЕ количествостудентов > (ВЫБРАТЬ МАКСИМУМ(количествостудентов) ИЗ справочник.колледжи ГДЕ штат = ""FL"")"
4962;"SELECT sum(enr) FROM college WHERE cName NOT IN (SELECT cName FROM tryout WHERE pPos  =  ""goalie"")";"ВЫБРАТЬ СУММА(enr) ИЗ справочник.колледжи ГДЕ колледж НЕ В (ВЫБРАТЬ колледж ИЗ регистрсведений.просмотры ГДЕ позиция = ""goalie"")"
4963;"SELECT sum(enr) FROM college WHERE cName NOT IN (SELECT cName FROM tryout WHERE pPos  =  ""goalie"")";"ВЫБРАТЬ СУММА(enr) ИЗ справочник.колледжи ГДЕ колледж НЕ В (ВЫБРАТЬ колледж ИЗ регистрсведений.просмотры ГДЕ позиция = ""goalie"")"
4964;SELECT count(DISTINCT state) FROM college WHERE enr  >  (SELECT avg(enr) FROM college);ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ state) ИЗ справочник.колледжи ГДЕ enr > (ВЫБРАТЬ СРЕДНЕЕ(enr) ИЗ справочник.колледжи)
4965;SELECT count(DISTINCT state) FROM college WHERE enr  >  (SELECT avg(enr) FROM college);ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ state) ИЗ справочник.колледжи ГДЕ enr > (ВЫБРАТЬ СРЕДНЕЕ(enr) ИЗ справочник.колледжи)
4966;SELECT count(DISTINCT state) FROM college WHERE enr  <  (SELECT avg(enr) FROM college);ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ state) ИЗ справочник.колледжи ГДЕ enr < (ВЫБРАТЬ СРЕДНЕЕ(enr) ИЗ справочник.колледжи)
4967;SELECT count(DISTINCT state) FROM college WHERE enr  <  (SELECT avg(enr) FROM college);ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ state) ИЗ справочник.колледжи ГДЕ enr < (ВЫБРАТЬ СРЕДНЕЕ(enr) ИЗ справочник.колледжи)
4968;SELECT count(*) FROM device;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ наименование
4969;SELECT count(*) FROM device;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ наименование
4970;SELECT Carrier FROM device ORDER BY Carrier ASC;ВЫБРАТЬ оператор ИЗ наименование УПОРЯДОЧИТЬ ПО оператор ВОЗР
4971;SELECT Carrier FROM device ORDER BY Carrier ASC;ВЫБРАТЬ оператор ИЗ наименование УПОРЯДОЧИТЬ ПО оператор ВОЗР
4972;SELECT Carrier FROM device WHERE Software_Platform != 'Android';"ВЫБРАТЬ оператор ИЗ наименование ГДЕ программнаяплатформа <> ""Android"""
4973;SELECT Carrier FROM device WHERE Software_Platform != 'Android';"ВЫБРАТЬ оператор ИЗ наименование ГДЕ программнаяплатформа <> ""Android"""
4974;SELECT Shop_Name FROM shop ORDER BY Open_Year ASC;ВЫБРАТЬ наименование ИЗ справочник.магазины УПОРЯДОЧИТЬ ПО годоткрытия ВОЗР
4975;SELECT Shop_Name FROM shop ORDER BY Open_Year ASC;ВЫБРАТЬ наименование ИЗ справочник.магазины УПОРЯДОЧИТЬ ПО годоткрытия ВОЗР
4976;SELECT avg(Quantity) FROM stock;ВЫБРАТЬ СРЕДНЕЕ(количество) ИЗ регистрсведений.остатки
4977;SELECT avg(Quantity) FROM stock;ВЫБРАТЬ СРЕДНЕЕ(количество) ИЗ регистрсведений.остатки
4978;SELECT Shop_Name ,  LOCATION FROM shop ORDER BY Shop_Name ASC;ВЫБРАТЬ наименование , местоположение ИЗ справочник.магазины УПОРЯДОЧИТЬ ПО наименование ВОЗР
4979;SELECT Shop_Name ,  LOCATION FROM shop ORDER BY Shop_Name ASC;ВЫБРАТЬ наименование , местоположение ИЗ справочник.магазины УПОРЯДОЧИТЬ ПО наименование ВОЗР
4980;SELECT count(DISTINCT Software_Platform) FROM device;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ программнаяплатформа) ИЗ наименование
4981;SELECT count(DISTINCT Software_Platform) FROM device;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ программнаяплатформа) ИЗ наименование
4982;"SELECT Open_Date ,  Open_Year FROM shop WHERE Shop_Name  =  ""Apple""";"ВЫБРАТЬ датаоткрытия , годоткрытия ИЗ справочник.магазины ГДЕ наименование = ""Apple"""
4983;"SELECT Open_Date ,  Open_Year FROM shop WHERE Shop_Name  =  ""Apple""";"ВЫБРАТЬ датаоткрытия , годоткрытия ИЗ справочник.магазины ГДЕ наименование = ""Apple"""
4984;SELECT Shop_Name FROM shop ORDER BY Open_Year DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование ИЗ справочник.магазины УПОРЯДОЧИТЬ ПО годоткрытия УБЫВ
4985;SELECT Shop_Name FROM shop ORDER BY Open_Year DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование ИЗ справочник.магазины УПОРЯДОЧИТЬ ПО годоткрытия УБЫВ
4986;SELECT T3.Shop_Name ,  T2.Carrier FROM stock AS T1 JOIN device AS T2 ON T1.Device_ID  =  T2.Device_ID JOIN shop AS T3 ON T1.Shop_ID  =  T3.Shop_ID;ВЫБРАТЬ T3.наименование , T2.оператор ИЗ регистрсведений.остатки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.устройства КАК T2 ПО T1.устройство = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.магазины КАК T3 ПО T1.магазин = T3.ссылка
4987;SELECT T3.Shop_Name ,  T2.Carrier FROM stock AS T1 JOIN device AS T2 ON T1.Device_ID  =  T2.Device_ID JOIN shop AS T3 ON T1.Shop_ID  =  T3.Shop_ID;ВЫБРАТЬ T3.наименование , T2.оператор ИЗ регистрсведений.остатки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.устройства КАК T2 ПО T1.устройство = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.магазины КАК T3 ПО T1.магазин = T3.ссылка
4988;SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID  =  T2.Shop_ID GROUP BY T1.Shop_ID HAVING COUNT(*)  >  1;ВЫБРАТЬ T2.наименование ИЗ регистрсведений.остатки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.магазины КАК T2 ПО T1.магазин = T2.ссылка СГРУППИРОВАТЬ ПО T1.магазин ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 1
4989;SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID  =  T2.Shop_ID GROUP BY T1.Shop_ID HAVING COUNT(*)  >  1;ВЫБРАТЬ T2.наименование ИЗ регистрсведений.остатки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.магазины КАК T2 ПО T1.магазин = T2.ссылка СГРУППИРОВАТЬ ПО T1.магазин ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 1
4990;SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID  =  T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY COUNT(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.наименование ИЗ регистрсведений.остатки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.магазины КАК T2 ПО T1.магазин = T2.ссылка СГРУППИРОВАТЬ ПО T1.магазин УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
4991;SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID  =  T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY COUNT(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.наименование ИЗ регистрсведений.остатки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.магазины КАК T2 ПО T1.магазин = T2.ссылка СГРУППИРОВАТЬ ПО T1.магазин УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
4992;SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID  =  T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY SUM(T1.quantity) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.наименование ИЗ регистрсведений.остатки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.магазины КАК T2 ПО T1.магазин = T2.ссылка СГРУППИРОВАТЬ ПО T1.магазин УПОРЯДОЧИТЬ ПО SUM(T1.количество) УБЫВ
4993;SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID  =  T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY SUM(T1.quantity) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.наименование ИЗ регистрсведений.остатки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.магазины КАК T2 ПО T1.магазин = T2.ссылка СГРУППИРОВАТЬ ПО T1.магазин УПОРЯДОЧИТЬ ПО SUM(T1.количество) УБЫВ
4994;SELECT Software_Platform ,  COUNT(*) FROM device GROUP BY Software_Platform;ВЫБРАТЬ программнаяплатформа , КОЛИЧЕСТВО(*) ИЗ наименование СГРУППИРОВАТЬ ПО программнаяплатформа
4995;SELECT Software_Platform ,  COUNT(*) FROM device GROUP BY Software_Platform;ВЫБРАТЬ программнаяплатформа , КОЛИЧЕСТВО(*) ИЗ наименование СГРУППИРОВАТЬ ПО программнаяплатформа
4996;SELECT Software_Platform FROM device GROUP BY Software_Platform ORDER BY COUNT(*) DESC;ВЫБРАТЬ программнаяплатформа ИЗ наименование СГРУППИРОВАТЬ ПО программнаяплатформа УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
4997;SELECT Software_Platform FROM device GROUP BY Software_Platform ORDER BY COUNT(*) DESC;ВЫБРАТЬ программнаяплатформа ИЗ наименование СГРУППИРОВАТЬ ПО программнаяплатформа УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
4998;SELECT Software_Platform FROM device GROUP BY Software_Platform ORDER BY COUNT(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 программнаяплатформа ИЗ наименование СГРУППИРОВАТЬ ПО программнаяплатформа УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
4999;SELECT Software_Platform FROM device GROUP BY Software_Platform ORDER BY COUNT(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 программнаяплатформа ИЗ наименование СГРУППИРОВАТЬ ПО программнаяплатформа УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
5000;SELECT Shop_Name FROM shop WHERE Shop_ID NOT IN (SELECT Shop_ID FROM stock);ВЫБРАТЬ Shop_Name ИЗ справочник.магазины ГДЕ Shop_ID НЕ В (ВЫБРАТЬ Shop_ID ИЗ регистрсведений.остатки)
5001;SELECT Shop_Name FROM shop WHERE Shop_ID NOT IN (SELECT Shop_ID FROM stock);ВЫБРАТЬ Shop_Name ИЗ справочник.магазины ГДЕ Shop_ID НЕ В (ВЫБРАТЬ Shop_ID ИЗ регистрсведений.остатки)
5004;SELECT Carrier FROM device WHERE Device_ID NOT IN (SELECT Device_ID FROM stock);ВЫБРАТЬ Carrier ИЗ справочник.устройства ГДЕ Device_ID НЕ В (ВЫБРАТЬ Device_ID ИЗ регистрсведений.остатки)
5005;SELECT Carrier FROM device WHERE Device_ID NOT IN (SELECT Device_ID FROM stock);ВЫБРАТЬ Carrier ИЗ справочник.устройства ГДЕ Device_ID НЕ В (ВЫБРАТЬ Device_ID ИЗ регистрсведений.остатки)
5006;SELECT T2.Carrier FROM stock AS T1 JOIN device AS T2 ON T1.Device_ID  =  T2.Device_ID GROUP BY T1.Device_ID HAVING COUNT(*)  >  1;ВЫБРАТЬ T2.оператор ИЗ регистрсведений.остатки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.устройства КАК T2 ПО T1.устройство = T2.ссылка СГРУППИРОВАТЬ ПО T1.устройство ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 1
5007;SELECT T2.Carrier FROM stock AS T1 JOIN device AS T2 ON T1.Device_ID  =  T2.Device_ID GROUP BY T1.Device_ID HAVING COUNT(*)  >  1;ВЫБРАТЬ T2.оператор ИЗ регистрсведений.остатки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.устройства КАК T2 ПО T1.устройство = T2.ссылка СГРУППИРОВАТЬ ПО T1.устройство ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 1
5008;SELECT count(*) FROM BOOKINGS;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ документ.бронирование
5009;SELECT count(*) FROM BOOKINGS;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ документ.бронирование
5010;SELECT Order_Date FROM BOOKINGS;ВЫБРАТЬ датазаказа ИЗ документ.бронирование
5011;SELECT Order_Date FROM BOOKINGS;ВЫБРАТЬ датазаказа ИЗ документ.бронирование
5012;SELECT Planned_Delivery_Date ,  Actual_Delivery_Date FROM BOOKINGS;ВЫБРАТЬ плановаядатадоставки , фактическаядатадоставки ИЗ документ.бронирование
5013;SELECT Planned_Delivery_Date ,  Actual_Delivery_Date FROM BOOKINGS;ВЫБРАТЬ плановаядатадоставки , фактическаядатадоставки ИЗ документ.бронирование
5014;SELECT count(*) FROM CUSTOMERS;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.покупатели
5015;SELECT count(*) FROM CUSTOMERS;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.покупатели
5016;"SELECT Customer_Phone ,  Customer_Email_Address FROM CUSTOMERS WHERE Customer_Name  =  ""Harold""";"ВЫБРАТЬ телефон , электроннаяпочта ИЗ справочник.покупатели ГДЕ наименование = ""Harold"""
5017;"SELECT Customer_Phone ,  Customer_Email_Address FROM CUSTOMERS WHERE Customer_Name  =  ""Harold""";"ВЫБРАТЬ телефон , электроннаяпочта ИЗ справочник.покупатели ГДЕ наименование = ""Harold"""
5018;SELECT Store_Name FROM Drama_Workshop_Groups;ВЫБРАТЬ наименование ИЗ справочник.театральныегруппы
5019;SELECT Store_Name FROM Drama_Workshop_Groups;ВЫБРАТЬ наименование ИЗ справочник.театральныегруппы
5020;SELECT min(Order_Quantity) ,  avg(Order_Quantity) ,  max(Order_Quantity) FROM INVOICES;ВЫБРАТЬ МИНИМУМ(количество) , СРЕДНЕЕ(количество) , МАКСИМУМ(количество) ИЗ документ.счет
5021;SELECT min(Order_Quantity) ,  avg(Order_Quantity) ,  max(Order_Quantity) FROM INVOICES;ВЫБРАТЬ МИНИМУМ(количество) , СРЕДНЕЕ(количество) , МАКСИМУМ(количество) ИЗ документ.счет
5022;SELECT DISTINCT payment_method_code FROM INVOICES;ВЫБРАТЬ РАЗЛИЧНЫЕ способоплаты ИЗ документ.счет
5023;SELECT DISTINCT payment_method_code FROM INVOICES;ВЫБРАТЬ РАЗЛИЧНЫЕ способоплаты ИЗ документ.счет
5024;"SELECT Marketing_Region_Descriptrion FROM Marketing_Regions WHERE Marketing_Region_Name  =  ""China""";"ВЫБРАТЬ описание ИЗ справочник.маркетинговыерегионы ГДЕ наименование = ""China"""
5025;"SELECT Marketing_Region_Descriptrion FROM Marketing_Regions WHERE Marketing_Region_Name  =  ""China""";"ВЫБРАТЬ описание ИЗ справочник.маркетинговыерегионы ГДЕ наименование = ""China"""
5026;SELECT DISTINCT Product_Name FROM PRODUCTS WHERE Product_Price  >  (SELECT avg(Product_Price) FROM PRODUCTS);ВЫБРАТЬ РАЗЛИЧНЫЕ Product_Name ИЗ справочник.товары ГДЕ Product_Price > (ВЫБРАТЬ СРЕДНЕЕ(Product_Price) ИЗ справочник.товары)
5027;SELECT DISTINCT Product_Name FROM PRODUCTS WHERE Product_Price  >  (SELECT avg(Product_Price) FROM PRODUCTS);ВЫБРАТЬ РАЗЛИЧНЫЕ Product_Name ИЗ справочник.товары ГДЕ Product_Price > (ВЫБРАТЬ СРЕДНЕЕ(Product_Price) ИЗ справочник.товары)
5028;SELECT Product_Name FROM PRODUCTS ORDER BY Product_Price DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование ИЗ справочник.товары УПОРЯДОЧИТЬ ПО цена УБЫВ
5029;SELECT Product_Name FROM PRODUCTS ORDER BY Product_Price DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование ИЗ справочник.товары УПОРЯДОЧИТЬ ПО цена УБЫВ
5030;SELECT Product_Name FROM Products ORDER BY Product_Price ASC;ВЫБРАТЬ наименование ИЗ справочник.товары УПОРЯДОЧИТЬ ПО цена ВОЗР
5031;SELECT Product_Name FROM Products ORDER BY Product_Price ASC;ВЫБРАТЬ наименование ИЗ справочник.товары УПОРЯДОЧИТЬ ПО цена ВОЗР
5032;"SELECT Customer_Phone FROM PERFORMERS WHERE Customer_Name  =  ""Ashley""";"ВЫБРАТЬ телефон ИЗ справочник.артисты ГДЕ наименование = ""Ashley"""
5033;"SELECT Customer_Phone FROM PERFORMERS WHERE Customer_Name  =  ""Ashley""";"ВЫБРАТЬ телефон ИЗ справочник.артисты ГДЕ наименование = ""Ashley"""
5034;SELECT payment_method_code ,  count(*) FROM INVOICES GROUP BY payment_method_code;ВЫБРАТЬ способоплаты , КОЛИЧЕСТВО(*) ИЗ документ.счет СГРУППИРОВАТЬ ПО способоплаты
5035;SELECT payment_method_code ,  count(*) FROM INVOICES GROUP BY payment_method_code;ВЫБРАТЬ способоплаты , КОЛИЧЕСТВО(*) ИЗ документ.счет СГРУППИРОВАТЬ ПО способоплаты
5036;SELECT payment_method_code FROM INVOICES GROUP BY payment_method_code ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 способоплаты ИЗ документ.счет СГРУППИРОВАТЬ ПО способоплаты УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
5037;SELECT payment_method_code FROM INVOICES GROUP BY payment_method_code ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 способоплаты ИЗ документ.счет СГРУППИРОВАТЬ ПО способоплаты УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
5038;"SELECT T1.City_Town FROM Addresses AS T1 JOIN Stores AS T2 ON T1.Address_ID  =  T2.Address_ID WHERE T2.Store_Name  =  ""FJA Filming""";"ВЫБРАТЬ T1.город ИЗ справочник.адреса КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.магазины КАК T2 ПО T1.ссылка = T2.адрессправочник ГДЕ T2.наименование = ""FJA Filming"""
5039;"SELECT T1.City_Town FROM Addresses AS T1 JOIN Stores AS T2 ON T1.Address_ID  =  T2.Address_ID WHERE T2.Store_Name  =  ""FJA Filming""";"ВЫБРАТЬ T1.город ИЗ справочник.адреса КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.магазины КАК T2 ПО T1.ссылка = T2.адрессправочник ГДЕ T2.наименование = ""FJA Filming"""
5040;"SELECT T1.State_County FROM Addresses AS T1 JOIN Stores AS T2 ON T1.Address_ID  =  T2.Address_ID WHERE T2.Marketing_Region_Code  =  ""CA""";"ВЫБРАТЬ T1.область ИЗ справочник.адреса КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.магазины КАК T2 ПО T1.ссылка = T2.адрессправочник ГДЕ T2.регион = ""CA"""
5041;"SELECT T1.State_County FROM Addresses AS T1 JOIN Stores AS T2 ON T1.Address_ID  =  T2.Address_ID WHERE T2.Marketing_Region_Code  =  ""CA""";"ВЫБРАТЬ T1.область ИЗ справочник.адреса КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.магазины КАК T2 ПО T1.ссылка = T2.адрессправочник ГДЕ T2.регион = ""CA"""
5042;"SELECT T1.Marketing_Region_Name FROM Marketing_Regions AS T1 JOIN Stores AS T2 ON T1.Marketing_Region_Code  =  T2.Marketing_Region_Code WHERE T2.Store_Name  =  ""Rob Dinning""";"ВЫБРАТЬ T1.наименование ИЗ справочник.маркетинговыерегионы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.магазины КАК T2 ПО T1.код = T2.регион ГДЕ T2.наименование = ""Rob Dinning"""
5043;"SELECT T1.Marketing_Region_Name FROM Marketing_Regions AS T1 JOIN Stores AS T2 ON T1.Marketing_Region_Code  =  T2.Marketing_Region_Code WHERE T2.Store_Name  =  ""Rob Dinning""";"ВЫБРАТЬ T1.наименование ИЗ справочник.маркетинговыерегионы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.магазины КАК T2 ПО T1.код = T2.регион ГДЕ T2.наименование = ""Rob Dinning"""
5044;SELECT T1.Service_Type_Description FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code WHERE T2.Product_Price  >  100;ВЫБРАТЬ T1.описание ИЗ справочник.видыуслуг КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.услуги КАК T2 ПО T1.код = T2.видуслуги ГДЕ T2.цена > 100
5045;SELECT T1.Service_Type_Description FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code WHERE T2.Product_Price  >  100;ВЫБРАТЬ T1.описание ИЗ справочник.видыуслуг КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.услуги КАК T2 ПО T1.код = T2.видуслуги ГДЕ T2.цена > 100
5046;SELECT T1.Service_Type_Description ,  T2.Service_Type_Code ,  COUNT(*) FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code GROUP BY T2.Service_Type_Code;ВЫБРАТЬ T1.описание , T2.видуслуги , КОЛИЧЕСТВО(*) ИЗ справочник.видыуслуг КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.услуги КАК T2 ПО T1.код = T2.видуслуги СГРУППИРОВАТЬ ПО T2.видуслуги
5047;SELECT T1.Service_Type_Description ,  T2.Service_Type_Code ,  COUNT(*) FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code GROUP BY T2.Service_Type_Code;ВЫБРАТЬ T1.описание , T2.видуслуги , КОЛИЧЕСТВО(*) ИЗ справочник.видыуслуг КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.услуги КАК T2 ПО T1.код = T2.видуслуги СГРУППИРОВАТЬ ПО T2.видуслуги
5048;SELECT T1.Service_Type_Description , T1.Service_Type_Code FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code GROUP BY T1.Service_Type_Code ORDER BY COUNT(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.описание , T1.код ИЗ справочник.видыуслуг КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.услуги КАК T2 ПО T1.код = T2.видуслуги СГРУППИРОВАТЬ ПО T1.код УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
5049;SELECT T1.Service_Type_Description , T1.Service_Type_Code FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code GROUP BY T1.Service_Type_Code ORDER BY COUNT(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.описание , T1.код ИЗ справочник.видыуслуг КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.услуги КАК T2 ПО T1.код = T2.видуслуги СГРУППИРОВАТЬ ПО T1.код УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
5050;SELECT T1.Store_Phone ,  T1.Store_Email_Address FROM Drama_Workshop_Groups AS T1 JOIN Services AS T2 ON T1.Workshop_Group_ID  =  T2.Workshop_Group_ID;ВЫБРАТЬ T1.телефон , T1.электроннаяпочта ИЗ справочник.театральныегруппы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.услуги КАК T2 ПО T1.ссылка = T2.театральнаягруппа
5051;SELECT T1.Store_Phone ,  T1.Store_Email_Address FROM Drama_Workshop_Groups AS T1 JOIN Services AS T2 ON T1.Workshop_Group_ID  =  T2.Workshop_Group_ID;ВЫБРАТЬ T1.телефон , T1.электроннаяпочта ИЗ справочник.театральныегруппы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.услуги КАК T2 ПО T1.ссылка = T2.театральнаягруппа
5052;"SELECT T1.Store_Phone ,  T1.Store_Email_Address FROM Drama_Workshop_Groups AS T1 JOIN Services AS T2 ON T1.Workshop_Group_ID  =  T2.Workshop_Group_ID WHERE T2.Product_Name  =  ""film""";"ВЫБРАТЬ T1.телефон , T1.электроннаяпочта ИЗ справочник.театральныегруппы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.услуги КАК T2 ПО T1.ссылка = T2.театральнаягруппа ГДЕ T2.наименование = ""film"""
5053;"SELECT T1.Store_Phone ,  T1.Store_Email_Address FROM Drama_Workshop_Groups AS T1 JOIN Services AS T2 ON T1.Workshop_Group_ID  =  T2.Workshop_Group_ID WHERE T2.Product_Name  =  ""film""";"ВЫБРАТЬ T1.телефон , T1.электроннаяпочта ИЗ справочник.театральныегруппы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.услуги КАК T2 ПО T1.ссылка = T2.театральнаягруппа ГДЕ T2.наименование = ""film"""
5054;SELECT Product_Name ,  avg(Product_Price) FROM PRODUCTS GROUP BY Product_Name;ВЫБРАТЬ наименование , СРЕДНЕЕ(цена) ИЗ справочник.товары СГРУППИРОВАТЬ ПО наименование
5055;SELECT Product_Name ,  avg(Product_Price) FROM PRODUCTS GROUP BY Product_Name;ВЫБРАТЬ наименование , СРЕДНЕЕ(цена) ИЗ справочник.товары СГРУППИРОВАТЬ ПО наименование
5056;SELECT Product_Name FROM PRODUCTS GROUP BY Product_Name HAVING avg(Product_Price)  <  1000000;ВЫБРАТЬ наименование ИЗ справочник.товары СГРУППИРОВАТЬ ПО наименование ИМЕЮЩИЕ СРЕДНЕЕ(цена) < 1000000
5057;SELECT Product_Name FROM PRODUCTS GROUP BY Product_Name HAVING avg(Product_Price)  <  1000000;ВЫБРАТЬ наименование ИЗ справочник.товары СГРУППИРОВАТЬ ПО наименование ИМЕЮЩИЕ СРЕДНЕЕ(цена) < 1000000
5058;"SELECT sum(T1.Order_Quantity) FROM ORDER_ITEMS AS T1 JOIN Products AS T2 ON T1.Product_ID  =  T2.Product_ID WHERE T2.Product_Name  =  ""photo""";"ВЫБРАТЬ СУММА(T1.количество) ИЗ табличнаячасть.товарызаказа КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.товары КАК T2 ПО T1.товар = T2.ссылка ГДЕ T2.наименование = ""photo"""
5059;"SELECT sum(T1.Order_Quantity) FROM ORDER_ITEMS AS T1 JOIN Products AS T2 ON T1.Product_ID  =  T2.Product_ID WHERE T2.Product_Name  =  ""photo""";"ВЫБРАТЬ СУММА(T1.количество) ИЗ табличнаячасть.товарызаказа КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.товары КАК T2 ПО T1.товар = T2.ссылка ГДЕ T2.наименование = ""photo"""
5060;SELECT T1.Other_Item_Details FROM ORDER_ITEMS AS T1 JOIN Products AS T2 ON T1.Product_ID  =  T2.Product_ID WHERE T2.Product_price  >  2000;ВЫБРАТЬ T1.прочее ИЗ табличнаячасть.товарызаказа КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.товары КАК T2 ПО T1.товар = T2.ссылка ГДЕ T2.цена > 2000
5061;SELECT T1.Other_Item_Details FROM ORDER_ITEMS AS T1 JOIN Products AS T2 ON T1.Product_ID  =  T2.Product_ID WHERE T2.Product_price  >  2000;ВЫБРАТЬ T1.прочее ИЗ табличнаячасть.товарызаказа КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.товары КАК T2 ПО T1.товар = T2.ссылка ГДЕ T2.цена > 2000
5062;SELECT T1.Actual_Delivery_Date FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID  =  T2.Order_ID WHERE T2.Order_Quantity  =  1;ВЫБРАТЬ T1.фактическаядатадоставки ИЗ документ.заказ КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ табличнаячасть.товарызаказа КАК T2 ПО T1.ссылка = T2.заказ ГДЕ T2.количество = 1
5063;SELECT T1.Actual_Delivery_Date FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID  =  T2.Order_ID WHERE T2.Order_Quantity  =  1;ВЫБРАТЬ T1.фактическаядатадоставки ИЗ документ.заказ КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ табличнаячасть.товарызаказа КАК T2 ПО T1.ссылка = T2.заказ ГДЕ T2.количество = 1
5064;SELECT T1.Order_Date FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID  =  T2.Order_ID JOIN Products AS T3 ON T2.Product_ID  =  T3.Product_ID WHERE T3.Product_price  >  1000;ВЫБРАТЬ T1.датазаказа ИЗ документ.заказ КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ табличнаячасть.товарызаказа КАК T2 ПО T1.ссылка = T2.заказ ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.товары КАК T3 ПО T2.товар = T3.ссылка ГДЕ T3.цена > 1000
5065;SELECT T1.Order_Date FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID  =  T2.Order_ID JOIN Products AS T3 ON T2.Product_ID  =  T3.Product_ID WHERE T3.Product_price  >  1000;ВЫБРАТЬ T1.датазаказа ИЗ документ.заказ КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ табличнаячасть.товарызаказа КАК T2 ПО T1.ссылка = T2.заказ ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.товары КАК T3 ПО T2.товар = T3.ссылка ГДЕ T3.цена > 1000
5066;SELECT count(DISTINCT Currency_Code) FROM Drama_Workshop_Groups;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ кодвалюты) ИЗ справочник.театральныегруппы
5067;SELECT count(DISTINCT Currency_Code) FROM Drama_Workshop_Groups;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ кодвалюты) ИЗ справочник.театральныегруппы
5068;"SELECT T2.Store_Name FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID  =  T2.Address_ID WHERE T1.City_Town  =  ""Feliciaberg""";"ВЫБРАТЬ T2.наименование ИЗ справочник.адреса КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.театральныегруппы КАК T2 ПО T1.ссылка = T2.адрес ГДЕ T1.город = ""Feliciaberg"""
5069;"SELECT T2.Store_Name FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID  =  T2.Address_ID WHERE T1.City_Town  =  ""Feliciaberg""";"ВЫБРАТЬ T2.наименование ИЗ справочник.адреса КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.театральныегруппы КАК T2 ПО T1.ссылка = T2.адрес ГДЕ T1.город = ""Feliciaberg"""
5070;"SELECT T2.Store_Email_Address FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID  =  T2.Address_ID WHERE T1.State_County  =  ""Alaska""";"ВЫБРАТЬ T2.электроннаяпочта ИЗ справочник.адреса КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.театральныегруппы КАК T2 ПО T1.ссылка = T2.адрес ГДЕ T1.область = ""Alaska"""
5071;"SELECT T2.Store_Email_Address FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID  =  T2.Address_ID WHERE T1.State_County  =  ""Alaska""";"ВЫБРАТЬ T2.электроннаяпочта ИЗ справочник.адреса КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.театральныегруппы КАК T2 ПО T1.ссылка = T2.адрес ГДЕ T1.область = ""Alaska"""
5072;SELECT T1.City_Town ,  count(*) FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID  =  T2.Address_ID GROUP BY T1.City_Town;ВЫБРАТЬ T1.город , КОЛИЧЕСТВО(*) ИЗ справочник.адреса КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.театральныегруппы КАК T2 ПО T1.ссылка = T2.адрес СГРУППИРОВАТЬ ПО T1.город
5073;SELECT T1.City_Town ,  count(*) FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID  =  T2.Address_ID GROUP BY T1.City_Town;ВЫБРАТЬ T1.город , КОЛИЧЕСТВО(*) ИЗ справочник.адреса КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.театральныегруппы КАК T2 ПО T1.ссылка = T2.адрес СГРУППИРОВАТЬ ПО T1.город
5074;SELECT Marketing_Region_Code FROM Drama_Workshop_Groups GROUP BY Marketing_Region_Code ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 регион ИЗ справочник.театральныегруппы СГРУППИРОВАТЬ ПО регион УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
5075;SELECT Marketing_Region_Code FROM Drama_Workshop_Groups GROUP BY Marketing_Region_Code ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 регион ИЗ справочник.театральныегруппы СГРУППИРОВАТЬ ПО регион УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
5078;SELECT Status_Code FROM BOOKINGS GROUP BY Status_Code ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 статус ИЗ документ.бронирование СГРУППИРОВАТЬ ПО статус УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
5079;SELECT Status_Code FROM BOOKINGS GROUP BY Status_Code ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 статус ИЗ документ.бронирование СГРУППИРОВАТЬ ПО статус УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
5080;"SELECT T2.Store_Name FROM Bookings AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Workshop_Group_ID  =  T2.Workshop_Group_ID WHERE T1.Status_Code  =  ""stop""";"ВЫБРАТЬ T2.наименование ИЗ документ.бронирование КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.театральныегруппы КАК T2 ПО T1.театральнаягруппа = T2.ссылка ГДЕ T1.статус = ""stop"""
5081;"SELECT T2.Store_Name FROM Bookings AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Workshop_Group_ID  =  T2.Workshop_Group_ID WHERE T1.Status_Code  =  ""stop""";"ВЫБРАТЬ T2.наименование ИЗ документ.бронирование КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.театральныегруппы КАК T2 ПО T1.театральнаягруппа = T2.ссылка ГДЕ T1.статус = ""stop"""
5084;"SELECT avg(Order_Quantity) FROM Invoices WHERE payment_method_code  =  ""MasterCard""";"ВЫБРАТЬ СРЕДНЕЕ(количество) ИЗ документ.счет ГДЕ способоплаты = ""MasterCard"""
5085;"SELECT avg(Order_Quantity) FROM Invoices WHERE payment_method_code  =  ""MasterCard""";"ВЫБРАТЬ СРЕДНЕЕ(количество) ИЗ документ.счет ГДЕ способоплаты = ""MasterCard"""
5086;SELECT Product_ID FROM INVOICES GROUP BY Product_ID ORDER BY COUNT(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 товар ИЗ документ.счет СГРУППИРОВАТЬ ПО товар УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
5087;SELECT Product_ID FROM INVOICES GROUP BY Product_ID ORDER BY COUNT(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 товар ИЗ документ.счет СГРУППИРОВАТЬ ПО товар УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
5090;SELECT count(*) FROM Band;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.участникигруппы
5091;SELECT count(*) FROM Band;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.участникигруппы
5092;SELECT DISTINCT label FROM Albums;ВЫБРАТЬ РАЗЛИЧНЫЕ лейбл ИЗ справочник.альбомы
5093;SELECT DISTINCT label FROM Albums;ВЫБРАТЬ РАЗЛИЧНЫЕ лейбл ИЗ справочник.альбомы
5094;SELECT * FROM Albums WHERE YEAR  =  2012;ВЫБРАТЬ * ИЗ справочник.альбомы ГДЕ год = 2012
5095;SELECT * FROM Albums WHERE YEAR  =  2012;ВЫБРАТЬ * ИЗ справочник.альбомы ГДЕ год = 2012
5096;"SELECT DISTINCT T1.stageposition FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id WHERE Firstname  =  ""Solveig""";"ВЫБРАТЬ РАЗЛИЧНЫЕ T1.позициянасцене ИЗ регистрсведений.выступления КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.участникигруппы КАК T2 ПО T1.участник = T2.ссылка ГДЕ Firstname = ""Solveig"""
5097;"SELECT DISTINCT T1.stageposition FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id WHERE Firstname  =  ""Solveig""";"ВЫБРАТЬ РАЗЛИЧНЫЕ T1.позициянасцене ИЗ регистрсведений.выступления КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.участникигруппы КАК T2 ПО T1.участник = T2.ссылка ГДЕ Firstname = ""Solveig"""
5098;SELECT count(*) FROM Songs;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.песни
5099;SELECT count(*) FROM Songs;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.песни
5100;"SELECT T3.Title FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T2.Lastname  =  ""Heilo""";"ВЫБРАТЬ T3.наименование ИЗ регистрсведений.выступления КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.участникигруппы КАК T2 ПО T1.участник = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.песни КАК T3 ПО T3.ссылка = T1.песня ГДЕ T2.фамилия = ""Heilo"""
5101;"SELECT T3.Title FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T2.Lastname  =  ""Heilo""";"ВЫБРАТЬ T3.наименование ИЗ регистрсведений.выступления КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.участникигруппы КАК T2 ПО T1.участник = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.песни КАК T3 ПО T3.ссылка = T1.песня ГДЕ T2.фамилия = ""Heilo"""
5102;"SELECT count(*) FROM performance AS T1 JOIN band AS T2 ON T1.bandmate  =  T2.id JOIN songs AS T3 ON T3.songid  =  T1.songid WHERE T3.Title  =  ""Flash""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.выступления КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.участникигруппы КАК T2 ПО T1.участник = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.песни КАК T3 ПО T3.ссылка = T1.песня ГДЕ T3.наименование = ""Flash"""
5103;"SELECT count(*) FROM performance AS T1 JOIN band AS T2 ON T1.bandmate  =  T2.id JOIN songs AS T3 ON T3.songid  =  T1.songid WHERE T3.Title  =  ""Flash""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.выступления КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.участникигруппы КАК T2 ПО T1.участник = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.песни КАК T3 ПО T3.ссылка = T1.песня ГДЕ T3.наименование = ""Flash"""
5104;"SELECT T3.Title FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T2.firstname  =  ""Marianne""";"ВЫБРАТЬ T3.наименование ИЗ регистрсведений.выступления КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.участникигруппы КАК T2 ПО T1.участник = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.песни КАК T3 ПО T3.ссылка = T1.песня ГДЕ T2.имя = ""Marianne"""
5105;"SELECT T3.Title FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T2.firstname  =  ""Marianne""";"ВЫБРАТЬ T3.наименование ИЗ регистрсведений.выступления КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.участникигруппы КАК T2 ПО T1.участник = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.песни КАК T3 ПО T3.ссылка = T1.песня ГДЕ T2.имя = ""Marianne"""
5106;"SELECT T2.firstname ,  T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T3.Title  =  ""Badlands""";"ВЫБРАТЬ T2.имя , T2.фамилия ИЗ регистрсведений.выступления КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.участникигруппы КАК T2 ПО T1.участник = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.песни КАК T3 ПО T3.ссылка = T1.песня ГДЕ T3.наименование = ""Badlands"""
5107;"SELECT T2.firstname ,  T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T3.Title  =  ""Badlands""";"ВЫБРАТЬ T2.имя , T2.фамилия ИЗ регистрсведений.выступления КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.участникигруппы КАК T2 ПО T1.участник = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.песни КАК T3 ПО T3.ссылка = T1.песня ГДЕ T3.наименование = ""Badlands"""
5108;"SELECT T2.firstname ,  T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T3.Title  =  ""Badlands"" AND T1.StagePosition  =  ""back""";"ВЫБРАТЬ T2.имя , T2.фамилия ИЗ регистрсведений.выступления КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.участникигруппы КАК T2 ПО T1.участник = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.песни КАК T3 ПО T3.ссылка = T1.песня ГДЕ T3.наименование = ""Badlands"" И T1.позициянасцене = ""back"""
5109;"SELECT T2.firstname ,  T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T3.Title  =  ""Badlands"" AND T1.StagePosition  =  ""back""";"ВЫБРАТЬ T2.имя , T2.фамилия ИЗ регистрсведений.выступления КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.участникигруппы КАК T2 ПО T1.участник = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.песни КАК T3 ПО T3.ссылка = T1.песня ГДЕ T3.наименование = ""Badlands"" И T1.позициянасцене = ""back"""
5110;SELECT count(DISTINCT label) FROM albums;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ лейбл) ИЗ справочник.альбомы
5111;SELECT count(DISTINCT label) FROM albums;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ лейбл) ИЗ справочник.альбомы
5112;SELECT label FROM albums GROUP BY label ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 лейбл ИЗ справочник.альбомы СГРУППИРОВАТЬ ПО лейбл УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
5113;SELECT label FROM albums GROUP BY label ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 лейбл ИЗ справочник.альбомы СГРУППИРОВАТЬ ПО лейбл УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
5114;SELECT T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId GROUP BY lastname ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.фамилия ИЗ регистрсведений.выступления КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.участникигруппы КАК T2 ПО T1.участник = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.песни КАК T3 ПО T3.ссылка = T1.песня СГРУППИРОВАТЬ ПО lastname УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
5115;SELECT T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId GROUP BY lastname ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.фамилия ИЗ регистрсведений.выступления КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.участникигруппы КАК T2 ПО T1.участник = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.песни КАК T3 ПО T3.ссылка = T1.песня СГРУППИРОВАТЬ ПО lastname УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
5116;"SELECT T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id WHERE stageposition  =  ""back"" GROUP BY lastname ORDER BY count(*) DESC LIMIT 1";"ВЫБРАТЬ ПЕРВЫЕ 1 T2.фамилия ИЗ регистрсведений.выступления КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.участникигруппы КАК T2 ПО T1.участник = T2.ссылка ГДЕ stageposition = ""back"" СГРУППИРОВАТЬ ПО lastname УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ"
5117;"SELECT T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id WHERE stageposition  =  ""back"" GROUP BY lastname ORDER BY count(*) DESC LIMIT 1";"ВЫБРАТЬ ПЕРВЫЕ 1 T2.фамилия ИЗ регистрсведений.выступления КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.участникигруппы КАК T2 ПО T1.участник = T2.ссылка ГДЕ stageposition = ""back"" СГРУППИРОВАТЬ ПО lastname УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ"
5118;SELECT title FROM songs WHERE title LIKE '% the %';"ВЫБРАТЬ наименование ИЗ справочник.песни ГДЕ наименование ПОДОБНО ""% the %"""
5119;SELECT title FROM songs WHERE title LIKE '% the %';"ВЫБРАТЬ наименование ИЗ справочник.песни ГДЕ наименование ПОДОБНО ""% the %"""
5120;SELECT DISTINCT instrument FROM Instruments;ВЫБРАТЬ РАЗЛИЧНЫЕ инструмент ИЗ регистрсведений.используемыеинструменты
5121;SELECT DISTINCT instrument FROM Instruments;ВЫБРАТЬ РАЗЛИЧНЫЕ инструмент ИЗ регистрсведений.используемыеинструменты
5122;"SELECT T4.instrument FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId JOIN Instruments AS T4 ON T4.songid  =  T3.songid AND T4.bandmateid  =  T2.id WHERE T2.lastname  =  ""Heilo"" AND T3.title  =  ""Le Pop""";"ВЫБРАТЬ T4.инструмент ИЗ регистрсведений.выступления КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.участникигруппы КАК T2 ПО T1.участник = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.песни КАК T3 ПО T3.ссылка = T1.песня ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.используемыеинструменты КАК T4 ПО T4.песня = T3.ссылка И T4.участник = T2.ссылка ГДЕ T2.фамилия = ""Heilo"" И T3.наименование = ""Le Pop"""
5123;"SELECT T4.instrument FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId JOIN Instruments AS T4 ON T4.songid  =  T3.songid AND T4.bandmateid  =  T2.id WHERE T2.lastname  =  ""Heilo"" AND T3.title  =  ""Le Pop""";"ВЫБРАТЬ T4.инструмент ИЗ регистрсведений.выступления КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.участникигруппы КАК T2 ПО T1.участник = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.песни КАК T3 ПО T3.ссылка = T1.песня ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.используемыеинструменты КАК T4 ПО T4.песня = T3.ссылка И T4.участник = T2.ссылка ГДЕ T2.фамилия = ""Heilo"" И T3.наименование = ""Le Pop"""
5124;SELECT instrument FROM instruments GROUP BY instrument ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 инструмент ИЗ регистрсведений.используемыеинструменты СГРУППИРОВАТЬ ПО инструмент УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
5125;SELECT instrument FROM instruments GROUP BY instrument ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 инструмент ИЗ регистрсведений.используемыеинструменты СГРУППИРОВАТЬ ПО инструмент УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
5126;"SELECT count(*) FROM instruments WHERE instrument  =  ""drums""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.используемыеинструменты ГДЕ инструмент = ""drums"""
5127;"SELECT count(*) FROM instruments WHERE instrument  =  ""drums""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.используемыеинструменты ГДЕ инструмент = ""drums"""
5128;"SELECT instrument FROM instruments AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  ""Le Pop""";"ВЫБРАТЬ instrument ИЗ регистрсведений.используемыеинструменты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.песни КАК T2 ПО T1.песня = T2.ссылка ГДЕ title = ""Le Pop"""
5129;"SELECT instrument FROM instruments AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  ""Le Pop""";"ВЫБРАТЬ instrument ИЗ регистрсведений.используемыеинструменты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.песни КАК T2 ПО T1.песня = T2.ссылка ГДЕ title = ""Le Pop"""
5130;"SELECT count(DISTINCT instrument) FROM instruments AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  ""Le Pop""";"ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ instrument) ИЗ регистрсведений.используемыеинструменты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.песни КАК T2 ПО T1.песня = T2.ссылка ГДЕ title = ""Le Pop"""
5131;"SELECT count(DISTINCT instrument) FROM instruments AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  ""Le Pop""";"ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ instrument) ИЗ регистрсведений.используемыеинструменты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.песни КАК T2 ПО T1.песня = T2.ссылка ГДЕ title = ""Le Pop"""
5132;"SELECT count(DISTINCT instrument) FROM instruments AS T1 JOIN Band AS T2 ON T1.bandmateid  =  T2.id WHERE T2.lastname  =  ""Heilo""";"ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ instrument) ИЗ регистрсведений.используемыеинструменты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.участникигруппы КАК T2 ПО T1.участник = T2.ссылка ГДЕ T2.фамилия = ""Heilo"""
5133;"SELECT count(DISTINCT instrument) FROM instruments AS T1 JOIN Band AS T2 ON T1.bandmateid  =  T2.id WHERE T2.lastname  =  ""Heilo""";"ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ instrument) ИЗ регистрсведений.используемыеинструменты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.участникигруппы КАК T2 ПО T1.участник = T2.ссылка ГДЕ T2.фамилия = ""Heilo"""
5134;"SELECT instrument FROM instruments AS T1 JOIN Band AS T2 ON T1.bandmateid  =  T2.id WHERE T2.lastname  =  ""Heilo""";"ВЫБРАТЬ instrument ИЗ регистрсведений.используемыеинструменты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.участникигруппы КАК T2 ПО T1.участник = T2.ссылка ГДЕ T2.фамилия = ""Heilo"""
5135;"SELECT instrument FROM instruments AS T1 JOIN Band AS T2 ON T1.bandmateid  =  T2.id WHERE T2.lastname  =  ""Heilo""";"ВЫБРАТЬ instrument ИЗ регистрсведений.используемыеинструменты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.участникигруппы КАК T2 ПО T1.участник = T2.ссылка ГДЕ T2.фамилия = ""Heilo"""
5136;SELECT title FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid GROUP BY T1.songid ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 title ИЗ регистрсведений.вокальныепартии КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.песни КАК T2 ПО T1.песня = T2.ссылка СГРУППИРОВАТЬ ПО T1.песня УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
5137;SELECT title FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid GROUP BY T1.songid ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 title ИЗ регистрсведений.вокальныепартии КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.песни КАК T2 ПО T1.песня = T2.ссылка СГРУППИРОВАТЬ ПО T1.песня УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
5138;SELECT TYPE FROM vocals GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 типвокала ИЗ регистрсведений.вокальныепартии СГРУППИРОВАТЬ ПО типвокала УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
5139;SELECT TYPE FROM vocals GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 типвокала ИЗ регистрсведений.вокальныепартии СГРУППИРОВАТЬ ПО типвокала УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
5140;"SELECT TYPE FROM vocals AS T1 JOIN band AS T2 ON T1.bandmate  =  T2.id WHERE lastname  =  ""Heilo"" GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1";"ВЫБРАТЬ ПЕРВЫЕ 1 TYPE ИЗ регистрсведений.вокальныепартии КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.участникигруппы КАК T2 ПО T1.участник = T2.ссылка ГДЕ lastname = ""Heilo"" СГРУППИРОВАТЬ ПО TYPE УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ"
5141;"SELECT TYPE FROM vocals AS T1 JOIN band AS T2 ON T1.bandmate  =  T2.id WHERE lastname  =  ""Heilo"" GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1";"ВЫБРАТЬ ПЕРВЫЕ 1 TYPE ИЗ регистрсведений.вокальныепартии КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.участникигруппы КАК T2 ПО T1.участник = T2.ссылка ГДЕ lastname = ""Heilo"" СГРУППИРОВАТЬ ПО TYPE УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ"
5142;"SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  ""Le Pop""";"ВЫБРАТЬ TYPE ИЗ регистрсведений.вокальныепартии КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.песни КАК T2 ПО T1.песня = T2.ссылка ГДЕ title = ""Le Pop"""
5143;"SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  ""Le Pop""";"ВЫБРАТЬ TYPE ИЗ регистрсведений.вокальныепартии КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.песни КАК T2 ПО T1.песня = T2.ссылка ГДЕ title = ""Le Pop"""
5144;"SELECT count(*) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  ""Demon Kitty Rag""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.вокальныепартии КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.песни КАК T2 ПО T1.песня = T2.ссылка ГДЕ title = ""Demon Kitty Rag"""
5145;"SELECT count(*) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  ""Demon Kitty Rag""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.вокальныепартии КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.песни КАК T2 ПО T1.песня = T2.ссылка ГДЕ title = ""Demon Kitty Rag"""
5146;"SELECT count(DISTINCT title) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE TYPE  =  ""lead""";"ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ title) ИЗ регистрсведений.вокальныепартии КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.песни КАК T2 ПО T1.песня = T2.ссылка ГДЕ TYPE = ""lead"""
5147;"SELECT count(DISTINCT title) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE TYPE  =  ""lead""";"ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ title) ИЗ регистрсведений.вокальныепартии КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.песни КАК T2 ПО T1.песня = T2.ссылка ГДЕ TYPE = ""lead"""
5148;"SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid JOIN band AS T3 ON T1.bandmate  =  T3.id WHERE T3.firstname  =  ""Solveig"" AND T2.title  =  ""A Bar In Amsterdam""";"ВЫБРАТЬ TYPE ИЗ регистрсведений.вокальныепартии КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.песни КАК T2 ПО T1.песня = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.участникигруппы КАК T3 ПО T1.участник = T3.ссылка ГДЕ T3.имя = ""Solveig"" И T2.наименование = ""A Bar In Amsterdam"""
5149;"SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid JOIN band AS T3 ON T1.bandmate  =  T3.id WHERE T3.firstname  =  ""Solveig"" AND T2.title  =  ""A Bar In Amsterdam""";"ВЫБРАТЬ TYPE ИЗ регистрсведений.вокальныепартии КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.песни КАК T2 ПО T1.песня = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.участникигруппы КАК T3 ПО T1.участник = T3.ссылка ГДЕ T3.имя = ""Solveig"" И T2.наименование = ""A Bar In Amsterdam"""
5152;SELECT DISTINCT TYPE FROM vocals;ВЫБРАТЬ РАЗЛИЧНЫЕ типвокала ИЗ регистрсведений.вокальныепартии
5153;SELECT DISTINCT TYPE FROM vocals;ВЫБРАТЬ РАЗЛИЧНЫЕ типвокала ИЗ регистрсведений.вокальныепартии
5154;SELECT * FROM Albums WHERE YEAR  =  2010;ВЫБРАТЬ * ИЗ справочник.альбомы ГДЕ год = 2010
5155;SELECT * FROM Albums WHERE YEAR  =  2010;ВЫБРАТЬ * ИЗ справочник.альбомы ГДЕ год = 2010
5156;"SELECT T2.firstname ,  T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T3.Title  =  ""Le Pop""";"ВЫБРАТЬ T2.имя , T2.фамилия ИЗ регистрсведений.выступления КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.участникигруппы КАК T2 ПО T1.участник = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.песни КАК T3 ПО T3.ссылка = T1.песня ГДЕ T3.наименование = ""Le Pop"""
5157;"SELECT T2.firstname ,  T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T3.Title  =  ""Le Pop""";"ВЫБРАТЬ T2.имя , T2.фамилия ИЗ регистрсведений.выступления КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.участникигруппы КАК T2 ПО T1.участник = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.песни КАК T3 ПО T3.ссылка = T1.песня ГДЕ T3.наименование = ""Le Pop"""
5158;SELECT T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId GROUP BY lastname ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.фамилия ИЗ регистрсведений.выступления КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.участникигруппы КАК T2 ПО T1.участник = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.песни КАК T3 ПО T3.ссылка = T1.песня СГРУППИРОВАТЬ ПО lastname УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
5159;SELECT T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId GROUP BY lastname ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.фамилия ИЗ регистрсведений.выступления КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.участникигруппы КАК T2 ПО T1.участник = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.песни КАК T3 ПО T3.ссылка = T1.песня СГРУППИРОВАТЬ ПО lastname УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
5160;"SELECT T4.instrument FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId JOIN Instruments AS T4 ON T4.songid  =  T3.songid AND T4.bandmateid  =  T2.id WHERE T2.lastname  =  ""Heilo"" AND T3.title  =  ""Badlands""";"ВЫБРАТЬ T4.инструмент ИЗ регистрсведений.выступления КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.участникигруппы КАК T2 ПО T1.участник = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.песни КАК T3 ПО T3.ссылка = T1.песня ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.используемыеинструменты КАК T4 ПО T4.песня = T3.ссылка И T4.участник = T2.ссылка ГДЕ T2.фамилия = ""Heilo"" И T3.наименование = ""Badlands"""
5161;"SELECT T4.instrument FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId JOIN Instruments AS T4 ON T4.songid  =  T3.songid AND T4.bandmateid  =  T2.id WHERE T2.lastname  =  ""Heilo"" AND T3.title  =  ""Badlands""";"ВЫБРАТЬ T4.инструмент ИЗ регистрсведений.выступления КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.участникигруппы КАК T2 ПО T1.участник = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.песни КАК T3 ПО T3.ссылка = T1.песня ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.используемыеинструменты КАК T4 ПО T4.песня = T3.ссылка И T4.участник = T2.ссылка ГДЕ T2.фамилия = ""Heilo"" И T3.наименование = ""Badlands"""
5162;"SELECT count(DISTINCT instrument) FROM instruments AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  ""Badlands""";"ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ instrument) ИЗ регистрсведений.используемыеинструменты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.песни КАК T2 ПО T1.песня = T2.ссылка ГДЕ title = ""Badlands"""
5163;"SELECT count(DISTINCT instrument) FROM instruments AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  ""Badlands""";"ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ instrument) ИЗ регистрсведений.используемыеинструменты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.песни КАК T2 ПО T1.песня = T2.ссылка ГДЕ title = ""Badlands"""
5164;"SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  ""Badlands""";"ВЫБРАТЬ TYPE ИЗ регистрсведений.вокальныепартии КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.песни КАК T2 ПО T1.песня = T2.ссылка ГДЕ title = ""Badlands"""
5165;"SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  ""Badlands""";"ВЫБРАТЬ TYPE ИЗ регистрсведений.вокальныепартии КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.песни КАК T2 ПО T1.песня = T2.ссылка ГДЕ title = ""Badlands"""
5166;"SELECT count(*) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  ""Le Pop""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.вокальныепартии КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.песни КАК T2 ПО T1.песня = T2.ссылка ГДЕ title = ""Le Pop"""
5167;"SELECT count(*) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  ""Le Pop""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.вокальныепартии КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.песни КАК T2 ПО T1.песня = T2.ссылка ГДЕ title = ""Le Pop"""
5168;"SELECT count(DISTINCT title) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE TYPE  =  ""shared""";"ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ title) ИЗ регистрсведений.вокальныепартии КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.песни КАК T2 ПО T1.песня = T2.ссылка ГДЕ TYPE = ""shared"""
5169;"SELECT count(DISTINCT title) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE TYPE  =  ""shared""";"ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ title) ИЗ регистрсведений.вокальныепартии КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.песни КАК T2 ПО T1.песня = T2.ссылка ГДЕ TYPE = ""shared"""
5172;"SELECT TYPE FROM vocals AS T1 JOIN band AS T2 ON T1.bandmate  =  T2.id WHERE firstname  =  ""Solveig"" GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1";"ВЫБРАТЬ ПЕРВЫЕ 1 TYPE ИЗ регистрсведений.вокальныепартии КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.участникигруппы КАК T2 ПО T1.участник = T2.ссылка ГДЕ firstname = ""Solveig"" СГРУППИРОВАТЬ ПО TYPE УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ"
5173;"SELECT TYPE FROM vocals AS T1 JOIN band AS T2 ON T1.bandmate  =  T2.id WHERE firstname  =  ""Solveig"" GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1";"ВЫБРАТЬ ПЕРВЫЕ 1 TYPE ИЗ регистрсведений.вокальныепартии КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.участникигруппы КАК T2 ПО T1.участник = T2.ссылка ГДЕ firstname = ""Solveig"" СГРУППИРОВАТЬ ПО TYPE УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ"
5174;"SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid JOIN band AS T3 ON T1.bandmate  =  T3.id WHERE T3.lastname  =  ""Heilo"" AND T2.title  =  ""Der Kapitan""";"ВЫБРАТЬ TYPE ИЗ регистрсведений.вокальныепартии КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.песни КАК T2 ПО T1.песня = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.участникигруппы КАК T3 ПО T1.участник = T3.ссылка ГДЕ T3.фамилия = ""Heilo"" И T2.наименование = ""Der Kapitan"""
5175;"SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid JOIN band AS T3 ON T1.bandmate  =  T3.id WHERE T3.lastname  =  ""Heilo"" AND T2.title  =  ""Der Kapitan""";"ВЫБРАТЬ TYPE ИЗ регистрсведений.вокальныепартии КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.песни КАК T2 ПО T1.песня = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.участникигруппы КАК T3 ПО T1.участник = T3.ссылка ГДЕ T3.фамилия = ""Heilo"" И T2.наименование = ""Der Kapitan"""
5176;SELECT t2.firstname FROM Performance AS t1 JOIN Band AS t2 ON t1.bandmate  =  t2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId GROUP BY firstname ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 t2.имя ИЗ регистрсведений.выступления КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.участникигруппы КАК t2 ПО t1.участник = t2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.песни КАК T3 ПО T3.ссылка = T1.SongId СГРУППИРОВАТЬ ПО firstname УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
5177;SELECT t2.firstname FROM Performance AS t1 JOIN Band AS t2 ON t1.bandmate  =  t2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId GROUP BY firstname ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 t2.имя ИЗ регистрсведений.выступления КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.участникигруппы КАК t2 ПО t1.участник = t2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.песни КАК T3 ПО T3.ссылка = T1.SongId СГРУППИРОВАТЬ ПО firstname УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
5178;"SELECT TYPE FROM vocals AS T1 JOIN band AS T2 ON T1.bandmate  =  T2.id WHERE firstname  =  ""Marianne"" GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1";"ВЫБРАТЬ ПЕРВЫЕ 1 TYPE ИЗ регистрсведений.вокальныепартии КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.участникигруппы КАК T2 ПО T1.участник = T2.ссылка ГДЕ firstname = ""Marianne"" СГРУППИРОВАТЬ ПО TYPE УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ"
5179;"SELECT TYPE FROM vocals AS T1 JOIN band AS T2 ON T1.bandmate  =  T2.id WHERE firstname  =  ""Marianne"" GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1";"ВЫБРАТЬ ПЕРВЫЕ 1 TYPE ИЗ регистрсведений.вокальныепартии КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.участникигруппы КАК T2 ПО T1.участник = T2.ссылка ГДЕ firstname = ""Marianne"" СГРУППИРОВАТЬ ПО TYPE УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ"
5180;"SELECT T2.firstname ,  T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T3.Title  =  ""Der Kapitan"" AND T1.StagePosition  =  ""back""";"ВЫБРАТЬ T2.имя , T2.фамилия ИЗ регистрсведений.выступления КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.участникигруппы КАК T2 ПО T1.участник = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.песни КАК T3 ПО T3.ссылка = T1.песня ГДЕ T3.наименование = ""Der Kapitan"" И T1.позициянасцене = ""back"""
5181;"SELECT T2.firstname ,  T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T3.Title  =  ""Der Kapitan"" AND T1.StagePosition  =  ""back""";"ВЫБРАТЬ T2.имя , T2.фамилия ИЗ регистрсведений.выступления КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.участникигруппы КАК T2 ПО T1.участник = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.песни КАК T3 ПО T3.ссылка = T1.песня ГДЕ T3.наименование = ""Der Kapitan"" И T1.позициянасцене = ""back"""
5184;"SELECT T3.title FROM albums AS T1 JOIN tracklists AS T2 ON T1.aid  =  T2.albumid JOIN songs AS T3 ON T2.songid  =  T3.songid WHERE T1.title  =  ""A Kiss Before You Go: Live in Hamburg""";"ВЫБРАТЬ T3.наименование ИЗ справочник.альбомы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.треклисты КАК T2 ПО T1.ссылка = T2.альбом ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.песни КАК T3 ПО T2.песня = T3.ссылка ГДЕ T1.наименование = ""A Kiss Before You Go: Live in Hamburg"""
5185;"SELECT T3.title FROM albums AS T1 JOIN tracklists AS T2 ON T1.aid  =  T2.albumid JOIN songs AS T3 ON T2.songid  =  T3.songid WHERE T1.title  =  ""A Kiss Before You Go: Live in Hamburg""";"ВЫБРАТЬ T3.наименование ИЗ справочник.альбомы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.треклисты КАК T2 ПО T1.ссылка = T2.альбом ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.песни КАК T3 ПО T2.песня = T3.ссылка ГДЕ T1.наименование = ""A Kiss Before You Go: Live in Hamburg"""
5186;"SELECT T3.title FROM albums AS T1 JOIN tracklists AS T2 ON T1.aid  =  T2.albumid JOIN songs AS T3 ON T2.songid  =  T3.songid WHERE t1.label  =  ""Universal Music Group""";"ВЫБРАТЬ T3.наименование ИЗ справочник.альбомы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.треклисты КАК T2 ПО T1.ссылка = T2.альбом ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.песни КАК T3 ПО T2.песня = T3.ссылка ГДЕ t1.label = ""Universal Music Group"""
5187;"SELECT T3.title FROM albums AS T1 JOIN tracklists AS T2 ON T1.aid  =  T2.albumid JOIN songs AS T3 ON T2.songid  =  T3.songid WHERE t1.label  =  ""Universal Music Group""";"ВЫБРАТЬ T3.наименование ИЗ справочник.альбомы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.треклисты КАК T2 ПО T1.ссылка = T2.альбом ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.песни КАК T3 ПО T2.песня = T3.ссылка ГДЕ t1.label = ""Universal Music Group"""
5188;"SELECT count(DISTINCT T3.title) FROM albums AS T1 JOIN tracklists AS T2 ON T1.aid  =  T2.albumid JOIN songs AS T3 ON T2.songid  =  T3.songid WHERE t1.type  =  ""Studio""";"ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ T3.наименование) ИЗ справочник.альбомы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.треклисты КАК T2 ПО T1.ссылка = T2.альбом ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.песни КАК T3 ПО T2.песня = T3.ссылка ГДЕ t1.type = ""Studio"""
5189;"SELECT count(DISTINCT T3.title) FROM albums AS T1 JOIN tracklists AS T2 ON T1.aid  =  T2.albumid JOIN songs AS T3 ON T2.songid  =  T3.songid WHERE t1.type  =  ""Studio""";"ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ T3.наименование) ИЗ справочник.альбомы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.треклисты КАК T2 ПО T1.ссылка = T2.альбом ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.песни КАК T3 ПО T2.песня = T3.ссылка ГДЕ t1.type = ""Studio"""
5190;SELECT founder FROM manufacturers WHERE name  =  'Sony';"ВЫБРАТЬ основатель ИЗ справочник.производители ГДЕ наименование = ""Sony"""
5191;SELECT founder FROM manufacturers WHERE name  =  'Sony';"ВЫБРАТЬ основатель ИЗ справочник.производители ГДЕ наименование = ""Sony"""
5192;SELECT headquarter FROM manufacturers WHERE founder  =  'James';"ВЫБРАТЬ штабквартира ИЗ справочник.производители ГДЕ основатель = ""James"""
5193;SELECT headquarter FROM manufacturers WHERE founder  =  'James';"ВЫБРАТЬ штабквартира ИЗ справочник.производители ГДЕ основатель = ""James"""
5194;SELECT name ,  headquarter FROM manufacturers ORDER BY revenue DESC;ВЫБРАТЬ наименование , штабквартира ИЗ справочник.производители УПОРЯДОЧИТЬ ПО доход УБЫВ
5195;SELECT name ,  headquarter FROM manufacturers ORDER BY revenue DESC;ВЫБРАТЬ наименование , штабквартира ИЗ справочник.производители УПОРЯДОЧИТЬ ПО доход УБЫВ
5196;SELECT avg(revenue) ,  max(revenue) ,  sum(revenue) FROM manufacturers;ВЫБРАТЬ СРЕДНЕЕ(доход) , МАКСИМУМ(доход) , СУММА(доход) ИЗ справочник.производители
5197;SELECT avg(revenue) ,  max(revenue) ,  sum(revenue) FROM manufacturers;ВЫБРАТЬ СРЕДНЕЕ(доход) , МАКСИМУМ(доход) , СУММА(доход) ИЗ справочник.производители
5198;SELECT count(*) FROM manufacturers WHERE founder  =  'Andy';"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.производители ГДЕ основатель = ""Andy"""
5199;SELECT count(*) FROM manufacturers WHERE founder  =  'Andy';"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.производители ГДЕ основатель = ""Andy"""
5200;SELECT sum(revenue) FROM manufacturers WHERE headquarter  =  'Austin';"ВЫБРАТЬ СУММА(доход) ИЗ справочник.производители ГДЕ штабквартира = ""Austin"""
5201;SELECT sum(revenue) FROM manufacturers WHERE headquarter  =  'Austin';"ВЫБРАТЬ СУММА(доход) ИЗ справочник.производители ГДЕ штабквартира = ""Austin"""
5202;SELECT DISTINCT headquarter FROM manufacturers;ВЫБРАТЬ РАЗЛИЧНЫЕ штабквартира ИЗ справочник.производители
5203;SELECT DISTINCT headquarter FROM manufacturers;ВЫБРАТЬ РАЗЛИЧНЫЕ штабквартира ИЗ справочник.производители
5204;SELECT count(*) FROM manufacturers WHERE headquarter  =  'Tokyo' OR headquarter  =  'Beijing';"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.производители ГДЕ штабквартира = ""Tokyo"" ИЛИ штабквартира = ""Beijing"""
5205;SELECT count(*) FROM manufacturers WHERE headquarter  =  'Tokyo' OR headquarter  =  'Beijing';"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.производители ГДЕ штабквартира = ""Tokyo"" ИЛИ штабквартира = ""Beijing"""
5206;SELECT founder FROM manufacturers WHERE name LIKE 'S%';"ВЫБРАТЬ основатель ИЗ справочник.производители ГДЕ наименование ПОДОБНО ""S%"""
5207;SELECT founder FROM manufacturers WHERE name LIKE 'S%';"ВЫБРАТЬ основатель ИЗ справочник.производители ГДЕ наименование ПОДОБНО ""S%"""
5208;SELECT name FROM manufacturers WHERE revenue BETWEEN 100 AND 150;ВЫБРАТЬ наименование ИЗ справочник.производители ГДЕ доход МЕЖДУ 100 И 150
5209;SELECT name FROM manufacturers WHERE revenue BETWEEN 100 AND 150;ВЫБРАТЬ наименование ИЗ справочник.производители ГДЕ доход МЕЖДУ 100 И 150
5210;SELECT sum(revenue) FROM manufacturers WHERE Headquarter  =  'Tokyo' OR Headquarter  =  'Taiwan';"ВЫБРАТЬ СУММА(доход) ИЗ справочник.производители ГДЕ штабквартира = ""Tokyo"" ИЛИ штабквартира = ""Taiwan"""
5211;SELECT sum(revenue) FROM manufacturers WHERE Headquarter  =  'Tokyo' OR Headquarter  =  'Taiwan';"ВЫБРАТЬ СУММА(доход) ИЗ справочник.производители ГДЕ штабквартира = ""Tokyo"" ИЛИ штабквартира = ""Taiwan"""
5214;SELECT name ,  headquarter ,  founder FROM manufacturers ORDER BY revenue DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование , штабквартира , основатель ИЗ справочник.производители УПОРЯДОЧИТЬ ПО доход УБЫВ
5215;SELECT name ,  headquarter ,  founder FROM manufacturers ORDER BY revenue DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование , штабквартира , основатель ИЗ справочник.производители УПОРЯДОЧИТЬ ПО доход УБЫВ
5216;SELECT name ,  headquarter ,  revenue FROM manufacturers ORDER BY revenue DESC;ВЫБРАТЬ наименование , штабквартира , доход ИЗ справочник.производители УПОРЯДОЧИТЬ ПО доход УБЫВ
5217;SELECT name ,  headquarter ,  revenue FROM manufacturers ORDER BY revenue DESC;ВЫБРАТЬ наименование , штабквартира , доход ИЗ справочник.производители УПОРЯДОЧИТЬ ПО доход УБЫВ
5218;SELECT name FROM manufacturers WHERE revenue  >  (SELECT avg(revenue) FROM manufacturers);ВЫБРАТЬ name ИЗ справочник.производители ГДЕ revenue > (ВЫБРАТЬ СРЕДНЕЕ(revenue) ИЗ справочник.производители)
5219;SELECT name FROM manufacturers WHERE revenue  >  (SELECT avg(revenue) FROM manufacturers);ВЫБРАТЬ name ИЗ справочник.производители ГДЕ revenue > (ВЫБРАТЬ СРЕДНЕЕ(revenue) ИЗ справочник.производители)
5220;SELECT name FROM manufacturers WHERE revenue  <  (SELECT min(revenue) FROM manufacturers WHERE headquarter  =  'Austin');"ВЫБРАТЬ наименование ИЗ справочник.производители ГДЕ доход < (ВЫБРАТЬ МИНИМУМ(доход) ИЗ справочник.производители ГДЕ штабквартира = ""Austin"")"
5221;SELECT name FROM manufacturers WHERE revenue  <  (SELECT min(revenue) FROM manufacturers WHERE headquarter  =  'Austin');"ВЫБРАТЬ наименование ИЗ справочник.производители ГДЕ доход < (ВЫБРАТЬ МИНИМУМ(доход) ИЗ справочник.производители ГДЕ штабквартира = ""Austin"")"
5222;SELECT sum(revenue) FROM manufacturers WHERE revenue  >  (SELECT min(revenue) FROM manufacturers WHERE headquarter  =  'Austin');"ВЫБРАТЬ СУММА(доход) ИЗ справочник.производители ГДЕ доход > (ВЫБРАТЬ МИНИМУМ(доход) ИЗ справочник.производители ГДЕ штабквартира = ""Austin"")"
5223;SELECT sum(revenue) FROM manufacturers WHERE revenue  >  (SELECT min(revenue) FROM manufacturers WHERE headquarter  =  'Austin');"ВЫБРАТЬ СУММА(доход) ИЗ справочник.производители ГДЕ доход > (ВЫБРАТЬ МИНИМУМ(доход) ИЗ справочник.производители ГДЕ штабквартира = ""Austin"")"
5224;SELECT sum(revenue) ,  founder FROM manufacturers GROUP BY founder;ВЫБРАТЬ СУММА(доход) , основатель ИЗ справочник.производители СГРУППИРОВАТЬ ПО основатель
5225;SELECT sum(revenue) ,  founder FROM manufacturers GROUP BY founder;ВЫБРАТЬ СУММА(доход) , основатель ИЗ справочник.производители СГРУППИРОВАТЬ ПО основатель
5226;SELECT name ,  max(revenue) ,  Headquarter FROM manufacturers GROUP BY Headquarter;ВЫБРАТЬ наименование , МАКСИМУМ(доход) , штабквартира ИЗ справочник.производители СГРУППИРОВАТЬ ПО штабквартира
5227;SELECT name ,  max(revenue) ,  Headquarter FROM manufacturers GROUP BY Headquarter;ВЫБРАТЬ наименование , МАКСИМУМ(доход) , штабквартира ИЗ справочник.производители СГРУППИРОВАТЬ ПО штабквартира
5228;SELECT sum(revenue) ,  name FROM manufacturers GROUP BY name;ВЫБРАТЬ СУММА(доход) , наименование ИЗ справочник.производители СГРУППИРОВАТЬ ПО наименование
5229;SELECT sum(revenue) ,  name FROM manufacturers GROUP BY name;ВЫБРАТЬ СУММА(доход) , наименование ИЗ справочник.производители СГРУППИРОВАТЬ ПО наименование
5230;SELECT avg(T1.price) ,  T2.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code GROUP BY T2.name;ВЫБРАТЬ СРЕДНЕЕ(T1.цена) , T2.наименование ИЗ справочник.товары КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.производители КАК T2 ПО T1.производитель = T2.ссылка СГРУППИРОВАТЬ ПО T2.наименование
5231;SELECT avg(T1.price) ,  T2.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code GROUP BY T2.name;ВЫБРАТЬ СРЕДНЕЕ(T1.цена) , T2.наименование ИЗ справочник.товары КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.производители КАК T2 ПО T1.производитель = T2.ссылка СГРУППИРОВАТЬ ПО T2.наименование
5232;SELECT count(DISTINCT T1.name) ,  T2.Headquarter FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code GROUP BY T2.Headquarter;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ T1.наименование) , T2.штабквартира ИЗ справочник.товары КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.производители КАК T2 ПО T1.производитель = T2.ссылка СГРУППИРОВАТЬ ПО T2.штабквартира
5233;SELECT count(DISTINCT T1.name) ,  T2.Headquarter FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code GROUP BY T2.Headquarter;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ T1.наименование) , T2.штабквартира ИЗ справочник.товары КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.производители КАК T2 ПО T1.производитель = T2.ссылка СГРУППИРОВАТЬ ПО T2.штабквартира
5234;SELECT count(DISTINCT name) FROM products WHERE name NOT IN (SELECT T1.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code WHERE T2.name  =  'Sony');"ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ name) ИЗ справочник.товары ГДЕ name НЕ В (ВЫБРАТЬ T1.наименование ИЗ справочник.товары КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.производители КАК T2 ПО T1.производитель = T2.ссылка ГДЕ T2.наименование = ""Sony"")"
5235;SELECT count(DISTINCT name) FROM products WHERE name NOT IN (SELECT T1.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code WHERE T2.name  =  'Sony');"ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ name) ИЗ справочник.товары ГДЕ name НЕ В (ВЫБРАТЬ T1.наименование ИЗ справочник.товары КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.производители КАК T2 ПО T1.производитель = T2.ссылка ГДЕ T2.наименование = ""Sony"")"
5238;SELECT count(*) ,  T2.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code GROUP BY T2.name;ВЫБРАТЬ КОЛИЧЕСТВО(*) , T2.наименование ИЗ справочник.товары КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.производители КАК T2 ПО T1.производитель = T2.ссылка СГРУППИРОВАТЬ ПО T2.наименование
5239;SELECT count(*) ,  T2.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code GROUP BY T2.name;ВЫБРАТЬ КОЛИЧЕСТВО(*) , T2.наименование ИЗ справочник.товары КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.производители КАК T2 ПО T1.производитель = T2.ссылка СГРУППИРОВАТЬ ПО T2.наименование
5240;SELECT Name FROM Products;ВЫБРАТЬ наименование ИЗ справочник.товары
5241;SELECT Name FROM Products;ВЫБРАТЬ наименование ИЗ справочник.товары
5242;SELECT name ,  price FROM products;ВЫБРАТЬ наименование , цена ИЗ справочник.товары
5243;SELECT name ,  price FROM products;ВЫБРАТЬ наименование , цена ИЗ справочник.товары
5244;SELECT name FROM products WHERE price  <=  200;ВЫБРАТЬ наименование ИЗ справочник.товары ГДЕ цена <= 200
5245;SELECT name FROM products WHERE price  <=  200;ВЫБРАТЬ наименование ИЗ справочник.товары ГДЕ цена <= 200
5246;SELECT * FROM products WHERE price BETWEEN 60 AND 120;ВЫБРАТЬ * ИЗ справочник.товары ГДЕ цена МЕЖДУ 60 И 120
5247;SELECT * FROM products WHERE price BETWEEN 60 AND 120;ВЫБРАТЬ * ИЗ справочник.товары ГДЕ цена МЕЖДУ 60 И 120
5248;SELECT avg(price) FROM products;ВЫБРАТЬ СРЕДНЕЕ(цена) ИЗ справочник.товары
5249;SELECT avg(price) FROM products;ВЫБРАТЬ СРЕДНЕЕ(цена) ИЗ справочник.товары
5250;SELECT avg(price) FROM products WHERE Manufacturer  =  2;ВЫБРАТЬ СРЕДНЕЕ(цена) ИЗ справочник.товары ГДЕ производитель = 2
5251;SELECT avg(price) FROM products WHERE Manufacturer  =  2;ВЫБРАТЬ СРЕДНЕЕ(цена) ИЗ справочник.товары ГДЕ производитель = 2
5252;SELECT count(*) FROM products WHERE price >= 180;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.товары ГДЕ цена >= 180
5253;SELECT count(*) FROM products WHERE price >= 180;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.товары ГДЕ цена >= 180
5254;SELECT name ,  price FROM products WHERE price  >=  180 ORDER BY price DESC ,  name ASC;ВЫБРАТЬ наименование , цена ИЗ справочник.товары ГДЕ цена >= 180 УПОРЯДОЧИТЬ ПО цена УБЫВ , наименование ВОЗР
5255;SELECT name ,  price FROM products WHERE price  >=  180 ORDER BY price DESC ,  name ASC;ВЫБРАТЬ наименование , цена ИЗ справочник.товары ГДЕ цена >= 180 УПОРЯДОЧИТЬ ПО цена УБЫВ , наименование ВОЗР
5256;SELECT * FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer  =  T2.code;ВЫБРАТЬ * ИЗ справочник.товары КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.производители КАК T2 ПО T1.производитель = T2.ссылка
5257;SELECT * FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer  =  T2.code;ВЫБРАТЬ * ИЗ справочник.товары КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.производители КАК T2 ПО T1.производитель = T2.ссылка
5258;SELECT AVG(Price) ,  Manufacturer FROM Products GROUP BY Manufacturer;ВЫБРАТЬ AVG(цена) , производитель ИЗ справочник.товары СГРУППИРОВАТЬ ПО производитель
5259;SELECT AVG(Price) ,  Manufacturer FROM Products GROUP BY Manufacturer;ВЫБРАТЬ AVG(цена) , производитель ИЗ справочник.товары СГРУППИРОВАТЬ ПО производитель
5260;SELECT avg(T1.Price) ,  T2.name FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer  =  T2.code GROUP BY T2.name;ВЫБРАТЬ СРЕДНЕЕ(T1.цена) , T2.наименование ИЗ справочник.товары КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.производители КАК T2 ПО T1.производитель = T2.ссылка СГРУППИРОВАТЬ ПО T2.наименование
5261;SELECT avg(T1.Price) ,  T2.name FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer  =  T2.code GROUP BY T2.name;ВЫБРАТЬ СРЕДНЕЕ(T1.цена) , T2.наименование ИЗ справочник.товары КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.производители КАК T2 ПО T1.производитель = T2.ссылка СГРУППИРОВАТЬ ПО T2.наименование
5262;SELECT avg(T1.Price) ,  T2.name FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer  =  T2.code GROUP BY T2.name HAVING avg(T1.price) >= 150;ВЫБРАТЬ СРЕДНЕЕ(T1.цена) , T2.наименование ИЗ справочник.товары КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.производители КАК T2 ПО T1.производитель = T2.ссылка СГРУППИРОВАТЬ ПО T2.наименование ИМЕЮЩИЕ СРЕДНЕЕ(T1.цена) >= 150
5263;SELECT avg(T1.Price) ,  T2.name FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer  =  T2.code GROUP BY T2.name HAVING avg(T1.price) >= 150;ВЫБРАТЬ СРЕДНЕЕ(T1.цена) , T2.наименование ИЗ справочник.товары КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.производители КАК T2 ПО T1.производитель = T2.ссылка СГРУППИРОВАТЬ ПО T2.наименование ИМЕЮЩИЕ СРЕДНЕЕ(T1.цена) >= 150
5264;SELECT name ,  price FROM Products ORDER BY price ASC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование , цена ИЗ справочник.товары УПОРЯДОЧИТЬ ПО цена ВОЗР
5265;SELECT name ,  price FROM Products ORDER BY price ASC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование , цена ИЗ справочник.товары УПОРЯДОЧИТЬ ПО цена ВОЗР
5266;SELECT T1.Name ,  max(T1.Price) ,  T2.name FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer  =  T2.code GROUP BY T2.name;ВЫБРАТЬ T1.наименование , МАКСИМУМ(T1.цена) , T2.наименование ИЗ справочник.товары КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.производители КАК T2 ПО T1.производитель = T2.ссылка СГРУППИРОВАТЬ ПО T2.наименование
5267;SELECT T1.Name ,  max(T1.Price) ,  T2.name FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer  =  T2.code GROUP BY T2.name;ВЫБРАТЬ T1.наименование , МАКСИМУМ(T1.цена) , T2.наименование ИЗ справочник.товары КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.производители КАК T2 ПО T1.производитель = T2.ссылка СГРУППИРОВАТЬ ПО T2.наименование
5268;SELECT code ,  name ,  min(price) FROM products GROUP BY name;ВЫБРАТЬ ссылка , наименование , МИНИМУМ(цена) ИЗ справочник.товары СГРУППИРОВАТЬ ПО наименование
5269;SELECT code ,  name ,  min(price) FROM products GROUP BY name;ВЫБРАТЬ ссылка , наименование , МИНИМУМ(цена) ИЗ справочник.товары СГРУППИРОВАТЬ ПО наименование
5270;SELECT problem_log_id FROM problem_log ORDER BY log_entry_date DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 ссылка ИЗ регистрсведений.журналпроблем УПОРЯДОЧИТЬ ПО датазаписи УБЫВ
5271;SELECT problem_log_id FROM problem_log ORDER BY log_entry_date DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 ссылка ИЗ регистрсведений.журналпроблем УПОРЯДОЧИТЬ ПО датазаписи УБЫВ
5272;SELECT problem_log_id ,  problem_id FROM problem_log ORDER BY log_entry_date LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 ссылка , проблема ИЗ регистрсведений.журналпроблем УПОРЯДОЧИТЬ ПО датазаписи
5273;SELECT problem_log_id ,  problem_id FROM problem_log ORDER BY log_entry_date LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 ссылка , проблема ИЗ регистрсведений.журналпроблем УПОРЯДОЧИТЬ ПО датазаписи
5274;SELECT problem_log_id ,  log_entry_date FROM problem_log WHERE problem_id = 10;ВЫБРАТЬ ссылка , датазаписи ИЗ регистрсведений.журналпроблем ГДЕ проблема = 10
5275;SELECT problem_log_id ,  log_entry_date FROM problem_log WHERE problem_id = 10;ВЫБРАТЬ ссылка , датазаписи ИЗ регистрсведений.журналпроблем ГДЕ проблема = 10
5276;SELECT problem_log_id ,  log_entry_description FROM problem_log;ВЫБРАТЬ ссылка , описаниезаписи ИЗ регистрсведений.журналпроблем
5277;SELECT problem_log_id ,  log_entry_description FROM problem_log;ВЫБРАТЬ ссылка , описаниезаписи ИЗ регистрсведений.журналпроблем
5278;SELECT DISTINCT staff_first_name ,  staff_last_name FROM staff AS T1 JOIN problem_log AS T2 ON T1.staff_id = T2.assigned_to_staff_id WHERE T2.problem_id = 1;ВЫБРАТЬ РАЗЛИЧНЫЕ staff_first_name , staff_last_name ИЗ справочник.сотрудники КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.журналпроблем КАК T2 ПО T1.ссылка = T2.ответственныйсотрудник ГДЕ T2.проблема = 1
5279;SELECT DISTINCT staff_first_name ,  staff_last_name FROM staff AS T1 JOIN problem_log AS T2 ON T1.staff_id = T2.assigned_to_staff_id WHERE T2.problem_id = 1;ВЫБРАТЬ РАЗЛИЧНЫЕ staff_first_name , staff_last_name ИЗ справочник.сотрудники КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.журналпроблем КАК T2 ПО T1.ссылка = T2.ответственныйсотрудник ГДЕ T2.проблема = 1
5280;"SELECT DISTINCT T2.problem_id ,  T2.problem_log_id FROM staff AS T1 JOIN problem_log AS T2 ON T1.staff_id = T2.assigned_to_staff_id WHERE T1.staff_first_name = ""Rylan"" AND T1.staff_last_name = ""Homenick""";"ВЫБРАТЬ РАЗЛИЧНЫЕ T2.проблема , T2.ссылка ИЗ справочник.сотрудники КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.журналпроблем КАК T2 ПО T1.ссылка = T2.ответственныйсотрудник ГДЕ T1.имя = ""Rylan"" И T1.фамилия = ""Homenick"""
5281;"SELECT DISTINCT T2.problem_id ,  T2.problem_log_id FROM staff AS T1 JOIN problem_log AS T2 ON T1.staff_id = T2.assigned_to_staff_id WHERE T1.staff_first_name = ""Rylan"" AND T1.staff_last_name = ""Homenick""";"ВЫБРАТЬ РАЗЛИЧНЫЕ T2.проблема , T2.ссылка ИЗ справочник.сотрудники КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.журналпроблем КАК T2 ПО T1.ссылка = T2.ответственныйсотрудник ГДЕ T1.имя = ""Rylan"" И T1.фамилия = ""Homenick"""
5282;"SELECT count(*) FROM product AS T1 JOIN problems AS T2 ON T1.product_id = T2.product_id WHERE T1.product_name = ""voluptatem""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.товары КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.проблемы КАК T2 ПО T1.ссылка = T2.товар ГДЕ T1.наименование = ""voluptatem"""
5283;"SELECT count(*) FROM product AS T1 JOIN problems AS T2 ON T1.product_id = T2.product_id WHERE T1.product_name = ""voluptatem""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.товары КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.проблемы КАК T2 ПО T1.ссылка = T2.товар ГДЕ T1.наименование = ""voluptatem"""
5284;SELECT count(*) ,  T1.product_name FROM product AS T1 JOIN problems AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_name ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 КОЛИЧЕСТВО(*) , T1.наименование ИЗ справочник.товары КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.проблемы КАК T2 ПО T1.ссылка = T2.товар СГРУППИРОВАТЬ ПО T1.наименование УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
5285;SELECT count(*) ,  T1.product_name FROM product AS T1 JOIN problems AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_name ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 КОЛИЧЕСТВО(*) , T1.наименование ИЗ справочник.товары КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.проблемы КАК T2 ПО T1.ссылка = T2.товар СГРУППИРОВАТЬ ПО T1.наименование УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
5286;"SELECT T1.problem_description FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = ""Christop""";"ВЫБРАТЬ T1.описание ИЗ справочник.проблемы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сотрудники КАК T2 ПО T1.заявилсотрудник = T2.ссылка ГДЕ T2.имя = ""Christop"""
5287;"SELECT T1.problem_description FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = ""Christop""";"ВЫБРАТЬ T1.описание ИЗ справочник.проблемы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сотрудники КАК T2 ПО T1.заявилсотрудник = T2.ссылка ГДЕ T2.имя = ""Christop"""
5288;"SELECT T1.problem_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_last_name = ""Bosco""";"ВЫБРАТЬ T1.ссылка ИЗ справочник.проблемы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сотрудники КАК T2 ПО T1.заявилсотрудник = T2.ссылка ГДЕ T2.фамилия = ""Bosco"""
5289;"SELECT T1.problem_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_last_name = ""Bosco""";"ВЫБРАТЬ T1.ссылка ИЗ справочник.проблемы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сотрудники КАК T2 ПО T1.заявилсотрудник = T2.ссылка ГДЕ T2.фамилия = ""Bosco"""
5290;"SELECT problem_id FROM problems WHERE date_problem_reported > ""1978-06-26""";"ВЫБРАТЬ ссылка ИЗ справочник.проблемы ГДЕ датапроблемы > ""1978-06-26"""
5291;"SELECT problem_id FROM problems WHERE date_problem_reported > ""1978-06-26""";"ВЫБРАТЬ ссылка ИЗ справочник.проблемы ГДЕ датапроблемы > ""1978-06-26"""
5292;"SELECT problem_id FROM problems WHERE date_problem_reported < ""1978-06-26""";"ВЫБРАТЬ ссылка ИЗ справочник.проблемы ГДЕ датапроблемы < ""1978-06-26"""
5293;"SELECT problem_id FROM problems WHERE date_problem_reported < ""1978-06-26""";"ВЫБРАТЬ ссылка ИЗ справочник.проблемы ГДЕ датапроблемы < ""1978-06-26"""
5294;SELECT count(*) ,  T2.product_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id GROUP BY T2.product_id;ВЫБРАТЬ КОЛИЧЕСТВО(*) , T2.ссылка ИЗ справочник.проблемы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.товары КАК T2 ПО T1.товар = T2.ссылка СГРУППИРОВАТЬ ПО T2.ссылка
5295;SELECT count(*) ,  T2.product_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id GROUP BY T2.product_id;ВЫБРАТЬ КОЛИЧЕСТВО(*) , T2.ссылка ИЗ справочник.проблемы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.товары КАК T2 ПО T1.товар = T2.ссылка СГРУППИРОВАТЬ ПО T2.ссылка
5296;"SELECT count(*) ,  T2.product_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id WHERE T1.date_problem_reported > ""1986-11-13"" GROUP BY T2.product_id";"ВЫБРАТЬ КОЛИЧЕСТВО(*) , T2.ссылка ИЗ справочник.проблемы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.товары КАК T2 ПО T1.товар = T2.ссылка ГДЕ T1.датапроблемы > ""1986-11-13"" СГРУППИРОВАТЬ ПО T2.ссылка"
5297;"SELECT count(*) ,  T2.product_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id WHERE T1.date_problem_reported > ""1986-11-13"" GROUP BY T2.product_id";"ВЫБРАТЬ КОЛИЧЕСТВО(*) , T2.ссылка ИЗ справочник.проблемы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.товары КАК T2 ПО T1.товар = T2.ссылка ГДЕ T1.датапроблемы > ""1986-11-13"" СГРУППИРОВАТЬ ПО T2.ссылка"
5298;SELECT DISTINCT product_name FROM product ORDER BY product_name;ВЫБРАТЬ РАЗЛИЧНЫЕ наименование ИЗ справочник.товары УПОРЯДОЧИТЬ ПО наименование
5299;SELECT DISTINCT product_name FROM product ORDER BY product_name;ВЫБРАТЬ РАЗЛИЧНЫЕ наименование ИЗ справочник.товары УПОРЯДОЧИТЬ ПО наименование
5300;SELECT DISTINCT product_name FROM product ORDER BY product_id;ВЫБРАТЬ РАЗЛИЧНЫЕ наименование ИЗ справочник.товары УПОРЯДОЧИТЬ ПО ссылка
5301;SELECT DISTINCT product_name FROM product ORDER BY product_id;ВЫБРАТЬ РАЗЛИЧНЫЕ наименование ИЗ справочник.товары УПОРЯДОЧИТЬ ПО ссылка
5302;"SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = ""Dameon"" AND T2.staff_last_name = ""Frami"" UNION SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = ""Jolie"" AND T2.staff_last_name = ""Weber""";"ВЫБРАТЬ product_id ИЗ справочник.проблемы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сотрудники КАК T2 ПО T1.заявилсотрудник = T2.ссылка ГДЕ T2.имя = ""Dameon"" И T2.фамилия = ""Frami"" ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ product_id ИЗ справочник.проблемы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сотрудники КАК T2 ПО T1.заявилсотрудник = T2.ссылка ГДЕ T2.имя = ""Jolie"" И T2.фамилия = ""Weber"""
5303;"SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = ""Dameon"" AND T2.staff_last_name = ""Frami"" UNION SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = ""Jolie"" AND T2.staff_last_name = ""Weber""";"ВЫБРАТЬ product_id ИЗ справочник.проблемы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сотрудники КАК T2 ПО T1.заявилсотрудник = T2.ссылка ГДЕ T2.имя = ""Dameon"" И T2.фамилия = ""Frami"" ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ product_id ИЗ справочник.проблемы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сотрудники КАК T2 ПО T1.заявилсотрудник = T2.ссылка ГДЕ T2.имя = ""Jolie"" И T2.фамилия = ""Weber"""
5306;"SELECT T1.problem_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE date_problem_reported  <  ( SELECT min(date_problem_reported) FROM problems AS T3 JOIN staff AS T4 ON T3.reported_by_staff_id = T4.staff_id WHERE T4.staff_first_name = ""Lysanne"" AND T4.staff_last_name = ""Turcotte"" )";"ВЫБРАТЬ T1.ссылка ИЗ справочник.проблемы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сотрудники КАК T2 ПО T1.заявилсотрудник = T2.ссылка ГДЕ date_problem_reported < ( ВЫБРАТЬ МИНИМУМ(date_problem_reported) ИЗ справочник.проблемы КАК T3 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сотрудники КАК T4 ПО T3.заявилсотрудник = T4.ссылка ГДЕ T4.имя = ""Lysanne"" И T4.фамилия = ""Turcotte"" )"
5307;"SELECT T1.problem_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE date_problem_reported  <  ( SELECT min(date_problem_reported) FROM problems AS T3 JOIN staff AS T4 ON T3.reported_by_staff_id = T4.staff_id WHERE T4.staff_first_name = ""Lysanne"" AND T4.staff_last_name = ""Turcotte"" )";"ВЫБРАТЬ T1.ссылка ИЗ справочник.проблемы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сотрудники КАК T2 ПО T1.заявилсотрудник = T2.ссылка ГДЕ date_problem_reported < ( ВЫБРАТЬ МИНИМУМ(date_problem_reported) ИЗ справочник.проблемы КАК T3 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сотрудники КАК T4 ПО T3.заявилсотрудник = T4.ссылка ГДЕ T4.имя = ""Lysanne"" И T4.фамилия = ""Turcotte"" )"
5308;"SELECT T1.problem_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE date_problem_reported  >  ( SELECT max(date_problem_reported) FROM problems AS T3 JOIN staff AS T4 ON T3.reported_by_staff_id = T4.staff_id WHERE T4.staff_first_name = ""Rylan"" AND T4.staff_last_name = ""Homenick"" )";"ВЫБРАТЬ T1.ссылка ИЗ справочник.проблемы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сотрудники КАК T2 ПО T1.заявилсотрудник = T2.ссылка ГДЕ date_problem_reported > ( ВЫБРАТЬ МАКСИМУМ(date_problem_reported) ИЗ справочник.проблемы КАК T3 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сотрудники КАК T4 ПО T3.заявилсотрудник = T4.ссылка ГДЕ T4.имя = ""Rylan"" И T4.фамилия = ""Homenick"" )"
5309;"SELECT T1.problem_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE date_problem_reported  >  ( SELECT max(date_problem_reported) FROM problems AS T3 JOIN staff AS T4 ON T3.reported_by_staff_id = T4.staff_id WHERE T4.staff_first_name = ""Rylan"" AND T4.staff_last_name = ""Homenick"" )";"ВЫБРАТЬ T1.ссылка ИЗ справочник.проблемы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сотрудники КАК T2 ПО T1.заявилсотрудник = T2.ссылка ГДЕ date_problem_reported > ( ВЫБРАТЬ МАКСИМУМ(date_problem_reported) ИЗ справочник.проблемы КАК T3 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сотрудники КАК T4 ПО T3.заявилсотрудник = T4.ссылка ГДЕ T4.имя = ""Rylan"" И T4.фамилия = ""Homenick"" )"
5310;SELECT T2.product_name FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id GROUP BY T2.product_name ORDER BY count(*) DESC LIMIT 3;ВЫБРАТЬ ПЕРВЫЕ 3 T2.наименование ИЗ справочник.проблемы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.товары КАК T2 ПО T1.товар = T2.ссылка СГРУППИРОВАТЬ ПО T2.наименование УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
5311;SELECT T2.product_name FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id GROUP BY T2.product_name ORDER BY count(*) DESC LIMIT 3;ВЫБРАТЬ ПЕРВЫЕ 3 T2.наименование ИЗ справочник.проблемы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.товары КАК T2 ПО T1.товар = T2.ссылка СГРУППИРОВАТЬ ПО T2.наименование УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
5312;"SELECT T1.problem_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id WHERE T2.product_name = ""voluptatem"" AND T1.date_problem_reported > ""1995""";"ВЫБРАТЬ T1.ссылка ИЗ справочник.проблемы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.товары КАК T2 ПО T1.товар = T2.ссылка ГДЕ T2.наименование = ""voluptatem"" И T1.датапроблемы > ""1995"""
5313;"SELECT T1.problem_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id WHERE T2.product_name = ""voluptatem"" AND T1.date_problem_reported > ""1995""";"ВЫБРАТЬ T1.ссылка ИЗ справочник.проблемы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.товары КАК T2 ПО T1.товар = T2.ссылка ГДЕ T2.наименование = ""voluptatem"" И T1.датапроблемы > ""1995"""
5318;SELECT count(*) FROM branch WHERE membership_amount  >  (SELECT avg(membership_amount) FROM branch);ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.филиалы ГДЕ membership_amount > (ВЫБРАТЬ СРЕДНЕЕ(membership_amount) ИЗ справочник.филиалы)
5319;SELECT count(*) FROM branch WHERE membership_amount  >  (SELECT avg(membership_amount) FROM branch);ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.филиалы ГДЕ membership_amount > (ВЫБРАТЬ СРЕДНЕЕ(membership_amount) ИЗ справочник.филиалы)
5320;SELECT name ,  address_road ,  city FROM branch ORDER BY open_year;ВЫБРАТЬ наименование , адресулица , город ИЗ справочник.филиалы УПОРЯДОЧИТЬ ПО годоткрытия
5321;SELECT name ,  address_road ,  city FROM branch ORDER BY open_year;ВЫБРАТЬ наименование , адресулица , город ИЗ справочник.филиалы УПОРЯДОЧИТЬ ПО годоткрытия
5322;SELECT name FROM branch ORDER BY membership_amount DESC LIMIT 3;ВЫБРАТЬ ПЕРВЫЕ 3 наименование ИЗ справочник.филиалы УПОРЯДОЧИТЬ ПО размерчленскоговзноса УБЫВ
5323;SELECT name FROM branch ORDER BY membership_amount DESC LIMIT 3;ВЫБРАТЬ ПЕРВЫЕ 3 наименование ИЗ справочник.филиалы УПОРЯДОЧИТЬ ПО размерчленскоговзноса УБЫВ
5324;SELECT DISTINCT city FROM branch WHERE membership_amount  >=  100;ВЫБРАТЬ РАЗЛИЧНЫЕ город ИЗ справочник.филиалы ГДЕ размерчленскоговзноса >= 100
5325;SELECT DISTINCT city FROM branch WHERE membership_amount  >=  100;ВЫБРАТЬ РАЗЛИЧНЫЕ город ИЗ справочник.филиалы ГДЕ размерчленскоговзноса >= 100
5326;SELECT open_year FROM branch GROUP BY open_year HAVING count(*)  >=  2;ВЫБРАТЬ годоткрытия ИЗ справочник.филиалы СГРУППИРОВАТЬ ПО годоткрытия ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
5327;SELECT open_year FROM branch GROUP BY open_year HAVING count(*)  >=  2;ВЫБРАТЬ годоткрытия ИЗ справочник.филиалы СГРУППИРОВАТЬ ПО годоткрытия ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
5328;SELECT min(membership_amount) ,  max(membership_amount) FROM branch WHERE open_year  =  2011 OR city  =  'London';"ВЫБРАТЬ МИНИМУМ(размерчленскоговзноса) , МАКСИМУМ(размерчленскоговзноса) ИЗ справочник.филиалы ГДЕ годоткрытия = 2011 ИЛИ город = ""London"""
5329;SELECT min(membership_amount) ,  max(membership_amount) FROM branch WHERE open_year  =  2011 OR city  =  'London';"ВЫБРАТЬ МИНИМУМ(размерчленскоговзноса) , МАКСИМУМ(размерчленскоговзноса) ИЗ справочник.филиалы ГДЕ годоткрытия = 2011 ИЛИ город = ""London"""
5330;SELECT city ,  count(*) FROM branch WHERE open_year  <  2010 GROUP BY city;ВЫБРАТЬ город , КОЛИЧЕСТВО(*) ИЗ справочник.филиалы ГДЕ годоткрытия < 2010 СГРУППИРОВАТЬ ПО город
5331;SELECT city ,  count(*) FROM branch WHERE open_year  <  2010 GROUP BY city;ВЫБРАТЬ город , КОЛИЧЕСТВО(*) ИЗ справочник.филиалы ГДЕ годоткрытия < 2010 СГРУППИРОВАТЬ ПО город
5332;SELECT count(DISTINCT LEVEL) FROM member;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ уровень) ИЗ справочник.члены
5333;SELECT count(DISTINCT LEVEL) FROM member;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ уровень) ИЗ справочник.члены
5334;SELECT card_number ,  name ,  hometown FROM member ORDER BY LEVEL DESC;ВЫБРАТЬ номеркарты , наименование , городпроживания ИЗ справочник.члены УПОРЯДОЧИТЬ ПО уровень УБЫВ
5335;SELECT card_number ,  name ,  hometown FROM member ORDER BY LEVEL DESC;ВЫБРАТЬ номеркарты , наименование , городпроживания ИЗ справочник.члены УПОРЯДОЧИТЬ ПО уровень УБЫВ
5336;SELECT LEVEL FROM member GROUP BY LEVEL ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 уровень ИЗ справочник.члены СГРУППИРОВАТЬ ПО уровень УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
5337;SELECT LEVEL FROM member GROUP BY LEVEL ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 уровень ИЗ справочник.члены СГРУППИРОВАТЬ ПО уровень УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
5338;SELECT T3.name ,  T2.name FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id JOIN member AS T3 ON T1.member_id  =  T3.member_id ORDER BY T1.register_year;ВЫБРАТЬ T3.наименование , T2.наименование ИЗ регистрсведений.регистрациявфилиалах КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.филиалы КАК T2 ПО T1.филиал = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.члены КАК T3 ПО T1.член = T3.ссылка УПОРЯДОЧИТЬ ПО T1.годрегистрации
5339;SELECT T3.name ,  T2.name FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id JOIN member AS T3 ON T1.member_id  =  T3.member_id ORDER BY T1.register_year;ВЫБРАТЬ T3.наименование , T2.наименование ИЗ регистрсведений.регистрациявфилиалах КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.филиалы КАК T2 ПО T1.филиал = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.члены КАК T3 ПО T1.член = T3.ссылка УПОРЯДОЧИТЬ ПО T1.годрегистрации
5340;SELECT T2.name ,  count(*) FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id WHERE T1.register_year  >  2015 GROUP BY T2.branch_id;ВЫБРАТЬ T2.наименование , КОЛИЧЕСТВО(*) ИЗ регистрсведений.регистрациявфилиалах КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.филиалы КАК T2 ПО T1.филиал = T2.ссылка ГДЕ T1.годрегистрации > 2015 СГРУППИРОВАТЬ ПО T2.ссылка
5341;SELECT T2.name ,  count(*) FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id WHERE T1.register_year  >  2015 GROUP BY T2.branch_id;ВЫБРАТЬ T2.наименование , КОЛИЧЕСТВО(*) ИЗ регистрсведений.регистрациявфилиалах КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.филиалы КАК T2 ПО T1.филиал = T2.ссылка ГДЕ T1.годрегистрации > 2015 СГРУППИРОВАТЬ ПО T2.ссылка
5342;SELECT name FROM member WHERE member_id NOT IN (SELECT member_id FROM membership_register_branch);ВЫБРАТЬ name ИЗ справочник.члены ГДЕ member_id НЕ В (ВЫБРАТЬ member_id ИЗ регистрсведений.регистрациявфилиалах)
5343;SELECT name FROM member WHERE member_id NOT IN (SELECT member_id FROM membership_register_branch);ВЫБРАТЬ name ИЗ справочник.члены ГДЕ member_id НЕ В (ВЫБРАТЬ member_id ИЗ регистрсведений.регистрациявфилиалах)
5344;SELECT name ,  city FROM branch WHERE branch_id NOT IN (SELECT branch_id FROM membership_register_branch);ВЫБРАТЬ name , city ИЗ справочник.филиалы ГДЕ branch_id НЕ В (ВЫБРАТЬ branch_id ИЗ регистрсведений.регистрациявфилиалах)
5345;SELECT name ,  city FROM branch WHERE branch_id NOT IN (SELECT branch_id FROM membership_register_branch);ВЫБРАТЬ name , city ИЗ справочник.филиалы ГДЕ branch_id НЕ В (ВЫБРАТЬ branch_id ИЗ регистрсведений.регистрациявфилиалах)
5346;SELECT T2.name ,  T2.open_year FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id WHERE T1.register_year  =  2016 GROUP BY T2.branch_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.наименование , T2.годоткрытия ИЗ регистрсведений.регистрациявфилиалах КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.филиалы КАК T2 ПО T1.филиал = T2.ссылка ГДЕ T1.годрегистрации = 2016 СГРУППИРОВАТЬ ПО T2.ссылка УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
5347;SELECT T2.name ,  T2.open_year FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id WHERE T1.register_year  =  2016 GROUP BY T2.branch_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.наименование , T2.годоткрытия ИЗ регистрсведений.регистрациявфилиалах КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.филиалы КАК T2 ПО T1.филиал = T2.ссылка ГДЕ T1.годрегистрации = 2016 СГРУППИРОВАТЬ ПО T2.ссылка УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
5348;SELECT T2.name ,  T2.hometown FROM membership_register_branch AS T1 JOIN member AS T2 ON T1.member_id  =  T2.member_id WHERE T1.register_year  =  2016;ВЫБРАТЬ T2.наименование , T2.городпроживания ИЗ регистрсведений.регистрациявфилиалах КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.члены КАК T2 ПО T1.член = T2.ссылка ГДЕ T1.годрегистрации = 2016
5349;SELECT T2.name ,  T2.hometown FROM membership_register_branch AS T1 JOIN member AS T2 ON T1.member_id  =  T2.member_id WHERE T1.register_year  =  2016;ВЫБРАТЬ T2.наименование , T2.городпроживания ИЗ регистрсведений.регистрациявфилиалах КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.члены КАК T2 ПО T1.член = T2.ссылка ГДЕ T1.годрегистрации = 2016
5350;SELECT city FROM branch WHERE open_year  =  2001 AND membership_amount  >  100;ВЫБРАТЬ город ИЗ справочник.филиалы ГДЕ годоткрытия = 2001 И размерчленскоговзноса > 100
5351;SELECT city FROM branch WHERE open_year  =  2001 AND membership_amount  >  100;ВЫБРАТЬ город ИЗ справочник.филиалы ГДЕ годоткрытия = 2001 И размерчленскоговзноса > 100
5354;SELECT sum(total_pounds) FROM purchase AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id WHERE T2.city  =  'London' AND T1.year  =  2018;"ВЫБРАТЬ СУММА(total_pounds) ИЗ регистрсведений.покупкичленов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.филиалы КАК T2 ПО T1.филиал = T2.ссылка ГДЕ T2.город = ""London"" И T1.год = 2018"
5355;SELECT sum(total_pounds) FROM purchase AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id WHERE T2.city  =  'London' AND T1.year  =  2018;"ВЫБРАТЬ СУММА(total_pounds) ИЗ регистрсведений.покупкичленов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.филиалы КАК T2 ПО T1.филиал = T2.ссылка ГДЕ T2.город = ""London"" И T1.год = 2018"
5356;SELECT count(*) FROM purchase AS T1 JOIN member AS T2 ON T1.member_id  =  T2.member_id WHERE T2.level  =  6;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.покупкичленов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.члены КАК T2 ПО T1.член = T2.ссылка ГДЕ T2.уровень = 6
5357;SELECT count(*) FROM purchase AS T1 JOIN member AS T2 ON T1.member_id  =  T2.member_id WHERE T2.level  =  6;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.покупкичленов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.члены КАК T2 ПО T1.член = T2.ссылка ГДЕ T2.уровень = 6
5360;"SELECT card_number FROM member WHERE Hometown LIKE ""%Kentucky%""";"ВЫБРАТЬ номеркарты ИЗ справочник.члены ГДЕ городпроживания ПОДОБНО ""%Kentucky%"""
5361;"SELECT card_number FROM member WHERE Hometown LIKE ""%Kentucky%""";"ВЫБРАТЬ номеркарты ИЗ справочник.члены ГДЕ городпроживания ПОДОБНО ""%Kentucky%"""
5362;SELECT count(*) FROM STUDENT;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.студенты
5363;SELECT count(*) FROM STUDENT;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.студенты
5364;SELECT count(*) FROM VOTING_RECORD;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.результатыголосования
5365;SELECT count(*) FROM VOTING_RECORD;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.результатыголосования
5366;SELECT count(DISTINCT President_Vote) FROM VOTING_RECORD;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ президент) ИЗ регистрсведений.результатыголосования
5367;SELECT count(DISTINCT President_Vote) FROM VOTING_RECORD;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ президент) ИЗ регистрсведений.результатыголосования
5368;SELECT max(Age) FROM STUDENT;ВЫБРАТЬ МАКСИМУМ(возраст) ИЗ справочник.студенты
5369;SELECT max(Age) FROM STUDENT;ВЫБРАТЬ МАКСИМУМ(возраст) ИЗ справочник.студенты
5370;SELECT LName FROM STUDENT WHERE Major  =  50;ВЫБРАТЬ фамилия ИЗ справочник.студенты ГДЕ специальность = 50
5371;SELECT LName FROM STUDENT WHERE Major  =  50;ВЫБРАТЬ фамилия ИЗ справочник.студенты ГДЕ специальность = 50
5372;SELECT Fname FROM STUDENT WHERE Age  >  22;ВЫБРАТЬ имя ИЗ справочник.студенты ГДЕ возраст > 22
5373;SELECT Fname FROM STUDENT WHERE Age  >  22;ВЫБРАТЬ имя ИЗ справочник.студенты ГДЕ возраст > 22
5374;"SELECT Major FROM STUDENT WHERE Sex  =  ""M""";"ВЫБРАТЬ специальность ИЗ справочник.студенты ГДЕ пол = ""M"""
5375;"SELECT Major FROM STUDENT WHERE Sex  =  ""M""";"ВЫБРАТЬ специальность ИЗ справочник.студенты ГДЕ пол = ""M"""
5376;"SELECT avg(Age) FROM STUDENT WHERE Sex  =  ""F""";"ВЫБРАТЬ СРЕДНЕЕ(возраст) ИЗ справочник.студенты ГДЕ пол = ""F"""
5377;"SELECT avg(Age) FROM STUDENT WHERE Sex  =  ""F""";"ВЫБРАТЬ СРЕДНЕЕ(возраст) ИЗ справочник.студенты ГДЕ пол = ""F"""
5378;SELECT max(Age) ,  min(Age) FROM STUDENT WHERE Major  =  600;ВЫБРАТЬ МАКСИМУМ(возраст) , МИНИМУМ(возраст) ИЗ справочник.студенты ГДЕ специальность = 600
5379;SELECT max(Age) ,  min(Age) FROM STUDENT WHERE Major  =  600;ВЫБРАТЬ МАКСИМУМ(возраст) , МИНИМУМ(возраст) ИЗ справочник.студенты ГДЕ специальность = 600
5380;"SELECT Advisor FROM STUDENT WHERE city_code  =  ""BAL""";"ВЫБРАТЬ руководитель ИЗ справочник.студенты ГДЕ кодгорода = ""BAL"""
5381;"SELECT Advisor FROM STUDENT WHERE city_code  =  ""BAL""";"ВЫБРАТЬ руководитель ИЗ справочник.студенты ГДЕ кодгорода = ""BAL"""
5382;"SELECT DISTINCT Secretary_Vote FROM VOTING_RECORD WHERE ELECTION_CYCLE  =  ""Fall""";"ВЫБРАТЬ РАЗЛИЧНЫЕ секретарь ИЗ регистрсведений.результатыголосования ГДЕ избирательныйцикл = ""Fall"""
5383;"SELECT DISTINCT Secretary_Vote FROM VOTING_RECORD WHERE ELECTION_CYCLE  =  ""Fall""";"ВЫБРАТЬ РАЗЛИЧНЫЕ секретарь ИЗ регистрсведений.результатыголосования ГДЕ избирательныйцикл = ""Fall"""
5384;"SELECT DISTINCT PRESIDENT_Vote FROM VOTING_RECORD WHERE Registration_Date  =  ""08/30/2015""";"ВЫБРАТЬ РАЗЛИЧНЫЕ президент ИЗ регистрсведений.результатыголосования ГДЕ датарегистрации = ""08/30/2015"""
5385;"SELECT DISTINCT PRESIDENT_Vote FROM VOTING_RECORD WHERE Registration_Date  =  ""08/30/2015""";"ВЫБРАТЬ РАЗЛИЧНЫЕ президент ИЗ регистрсведений.результатыголосования ГДЕ датарегистрации = ""08/30/2015"""
5386;SELECT DISTINCT Registration_Date ,  Election_Cycle FROM VOTING_RECORD;ВЫБРАТЬ РАЗЛИЧНЫЕ датарегистрации , избирательныйцикл ИЗ регистрсведений.результатыголосования
5387;SELECT DISTINCT Registration_Date ,  Election_Cycle FROM VOTING_RECORD;ВЫБРАТЬ РАЗЛИЧНЫЕ датарегистрации , избирательныйцикл ИЗ регистрсведений.результатыголосования
5388;SELECT DISTINCT President_Vote ,  VICE_President_Vote FROM VOTING_RECORD;ВЫБРАТЬ РАЗЛИЧНЫЕ президент , вицепрезидент ИЗ регистрсведений.результатыголосования
5389;SELECT DISTINCT President_Vote ,  VICE_President_Vote FROM VOTING_RECORD;ВЫБРАТЬ РАЗЛИЧНЫЕ президент , вицепрезидент ИЗ регистрсведений.результатыголосования
5390;SELECT DISTINCT T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.CLASS_President_VOTE;ВЫБРАТЬ РАЗЛИЧНЫЕ T1.фамилия ИЗ справочник.студенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.результатыголосования КАК T2 ПО T1.ссылка = T2.президенткласса
5391;SELECT DISTINCT T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.CLASS_President_VOTE;ВЫБРАТЬ РАЗЛИЧНЫЕ T1.фамилия ИЗ справочник.студенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.результатыголосования КАК T2 ПО T1.ссылка = T2.президенткласса
5392;SELECT DISTINCT T1.Fname FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.CLASS_Senator_VOTE;ВЫБРАТЬ РАЗЛИЧНЫЕ T1.имя ИЗ справочник.студенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.результатыголосования КАК T2 ПО T1.ссылка = T2.сенаторкласса
5393;SELECT DISTINCT T1.Fname FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.CLASS_Senator_VOTE;ВЫБРАТЬ РАЗЛИЧНЫЕ T1.имя ИЗ справочник.студенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.результатыголосования КАК T2 ПО T1.ссылка = T2.сенаторкласса
5394;"SELECT DISTINCT T1.Age FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.Secretary_Vote WHERE T2.Election_Cycle  =  ""Fall""";"ВЫБРАТЬ РАЗЛИЧНЫЕ T1.возраст ИЗ справочник.студенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.результатыголосования КАК T2 ПО T1.ссылка = T2.секретарь ГДЕ T2.избирательныйцикл = ""Fall"""
5395;"SELECT DISTINCT T1.Age FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.Secretary_Vote WHERE T2.Election_Cycle  =  ""Fall""";"ВЫБРАТЬ РАЗЛИЧНЫЕ T1.возраст ИЗ справочник.студенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.результатыголосования КАК T2 ПО T1.ссылка = T2.секретарь ГДЕ T2.избирательныйцикл = ""Fall"""
5396;"SELECT DISTINCT T1.Advisor FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.Treasurer_Vote WHERE T2.Election_Cycle  =  ""Spring""";"ВЫБРАТЬ РАЗЛИЧНЫЕ T1.руководитель ИЗ справочник.студенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.результатыголосования КАК T2 ПО T1.ссылка = T2.казначей ГДЕ T2.избирательныйцикл = ""Spring"""
5397;"SELECT DISTINCT T1.Advisor FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.Treasurer_Vote WHERE T2.Election_Cycle  =  ""Spring""";"ВЫБРАТЬ РАЗЛИЧНЫЕ T1.руководитель ИЗ справочник.студенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.результатыголосования КАК T2 ПО T1.ссылка = T2.казначей ГДЕ T2.избирательныйцикл = ""Spring"""
5398;SELECT DISTINCT T1.Major FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.Treasurer_Vote;ВЫБРАТЬ РАЗЛИЧНЫЕ T1.специальность ИЗ справочник.студенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.результатыголосования КАК T2 ПО T1.ссылка = T2.казначей
5399;SELECT DISTINCT T1.Major FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.Treasurer_Vote;ВЫБРАТЬ РАЗЛИЧНЫЕ T1.специальность ИЗ справочник.студенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.результатыголосования КАК T2 ПО T1.ссылка = T2.казначей
5400;"SELECT DISTINCT T1.Fname ,  T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.President_VOTE WHERE T1.sex  =  ""F""";"ВЫБРАТЬ РАЗЛИЧНЫЕ T1.имя , T1.фамилия ИЗ справочник.студенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.результатыголосования КАК T2 ПО T1.ссылка = T2.президент ГДЕ T1.пол = ""F"""
5401;"SELECT DISTINCT T1.Fname ,  T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.President_VOTE WHERE T1.sex  =  ""F""";"ВЫБРАТЬ РАЗЛИЧНЫЕ T1.имя , T1.фамилия ИЗ справочник.студенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.результатыголосования КАК T2 ПО T1.ссылка = T2.президент ГДЕ T1.пол = ""F"""
5402;SELECT DISTINCT T1.Fname ,  T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.VICE_President_VOTE WHERE T1.age  =  18;ВЫБРАТЬ РАЗЛИЧНЫЕ T1.имя , T1.фамилия ИЗ справочник.студенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.результатыголосования КАК T2 ПО T1.ссылка = T2.вицепрезидент ГДЕ T1.возраст = 18
5403;SELECT DISTINCT T1.Fname ,  T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.VICE_President_VOTE WHERE T1.age  =  18;ВЫБРАТЬ РАЗЛИЧНЫЕ T1.имя , T1.фамилия ИЗ справочник.студенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.результатыголосования КАК T2 ПО T1.ссылка = T2.вицепрезидент ГДЕ T1.возраст = 18
5404;"SELECT count(*) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  Class_Senator_Vote WHERE T1.Sex  =  ""M"" AND T2.Election_Cycle  =  ""Fall""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.студенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.результатыголосования КАК T2 ПО T1.ссылка = Class_Senator_Vote ГДЕ T1.пол = ""M"" И T2.избирательныйцикл = ""Fall"""
5405;"SELECT count(*) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  Class_Senator_Vote WHERE T1.Sex  =  ""M"" AND T2.Election_Cycle  =  ""Fall""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.студенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.результатыголосования КАК T2 ПО T1.ссылка = Class_Senator_Vote ГДЕ T1.пол = ""M"" И T2.избирательныйцикл = ""Fall"""
5406;"SELECT count(*) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  Class_Senator_Vote WHERE T1.city_code  =  ""NYC"" AND T2.Election_Cycle  =  ""Spring""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.студенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.результатыголосования КАК T2 ПО T1.ссылка = Class_Senator_Vote ГДЕ T1.кодгорода = ""NYC"" И T2.избирательныйцикл = ""Spring"""
5407;"SELECT count(*) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  Class_Senator_Vote WHERE T1.city_code  =  ""NYC"" AND T2.Election_Cycle  =  ""Spring""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.студенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.результатыголосования КАК T2 ПО T1.ссылка = Class_Senator_Vote ГДЕ T1.кодгорода = ""NYC"" И T2.избирательныйцикл = ""Spring"""
5408;"SELECT avg(T1.Age) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  SECRETARY_Vote WHERE T1.city_code  =  ""NYC"" AND T2.Election_Cycle  =  ""Spring""";"ВЫБРАТЬ СРЕДНЕЕ(T1.возраст) ИЗ справочник.студенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.результатыголосования КАК T2 ПО T1.ссылка = SECRETARY_Vote ГДЕ T1.кодгорода = ""NYC"" И T2.избирательныйцикл = ""Spring"""
5409;"SELECT avg(T1.Age) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  SECRETARY_Vote WHERE T1.city_code  =  ""NYC"" AND T2.Election_Cycle  =  ""Spring""";"ВЫБРАТЬ СРЕДНЕЕ(T1.возраст) ИЗ справочник.студенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.результатыголосования КАК T2 ПО T1.ссылка = SECRETARY_Vote ГДЕ T1.кодгорода = ""NYC"" И T2.избирательныйцикл = ""Spring"""
5410;"SELECT avg(T1.Age) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  SECRETARY_Vote WHERE T1.Sex  =  ""F"" AND T2.Election_Cycle  =  ""Spring""";"ВЫБРАТЬ СРЕДНЕЕ(T1.возраст) ИЗ справочник.студенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.результатыголосования КАК T2 ПО T1.ссылка = SECRETARY_Vote ГДЕ T1.пол = ""F"" И T2.избирательныйцикл = ""Spring"""
5411;"SELECT avg(T1.Age) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  SECRETARY_Vote WHERE T1.Sex  =  ""F"" AND T2.Election_Cycle  =  ""Spring""";"ВЫБРАТЬ СРЕДНЕЕ(T1.возраст) ИЗ справочник.студенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.результатыголосования КАК T2 ПО T1.ссылка = SECRETARY_Vote ГДЕ T1.пол = ""F"" И T2.избирательныйцикл = ""Spring"""
5418;SELECT Advisor ,  count(*) FROM STUDENT GROUP BY Advisor;ВЫБРАТЬ руководитель , КОЛИЧЕСТВО(*) ИЗ справочник.студенты СГРУППИРОВАТЬ ПО руководитель
5419;SELECT Advisor ,  count(*) FROM STUDENT GROUP BY Advisor;ВЫБРАТЬ руководитель , КОЛИЧЕСТВО(*) ИЗ справочник.студенты СГРУППИРОВАТЬ ПО руководитель
5420;SELECT Advisor FROM STUDENT GROUP BY Advisor HAVING COUNT(*)  >  2;ВЫБРАТЬ руководитель ИЗ справочник.студенты СГРУППИРОВАТЬ ПО руководитель ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 2
5421;SELECT Advisor FROM STUDENT GROUP BY Advisor HAVING COUNT(*)  >  2;ВЫБРАТЬ руководитель ИЗ справочник.студенты СГРУППИРОВАТЬ ПО руководитель ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 2
5422;SELECT Major FROM STUDENT GROUP BY Major HAVING COUNT(*)  <  3;ВЫБРАТЬ специальность ИЗ справочник.студенты СГРУППИРОВАТЬ ПО специальность ИМЕЮЩИЕ КОЛИЧЕСТВО(*) < 3
5423;SELECT Major FROM STUDENT GROUP BY Major HAVING COUNT(*)  <  3;ВЫБРАТЬ специальность ИЗ справочник.студенты СГРУППИРОВАТЬ ПО специальность ИМЕЮЩИЕ КОЛИЧЕСТВО(*) < 3
5424;SELECT Election_Cycle ,  count(*) FROM VOTING_RECORD GROUP BY Election_Cycle;ВЫБРАТЬ избирательныйцикл , КОЛИЧЕСТВО(*) ИЗ регистрсведений.результатыголосования СГРУППИРОВАТЬ ПО избирательныйцикл
5425;SELECT Election_Cycle ,  count(*) FROM VOTING_RECORD GROUP BY Election_Cycle;ВЫБРАТЬ избирательныйцикл , КОЛИЧЕСТВО(*) ИЗ регистрсведений.результатыголосования СГРУППИРОВАТЬ ПО избирательныйцикл
5426;SELECT Major FROM STUDENT GROUP BY major ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 специальность ИЗ справочник.студенты СГРУППИРОВАТЬ ПО специальность УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
5427;SELECT Major FROM STUDENT GROUP BY major ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 специальность ИЗ справочник.студенты СГРУППИРОВАТЬ ПО специальность УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
5428;"SELECT Major FROM STUDENT WHERE Sex  =  ""F"" GROUP BY major ORDER BY count(*) DESC LIMIT 1";"ВЫБРАТЬ ПЕРВЫЕ 1 специальность ИЗ справочник.студенты ГДЕ пол = ""F"" СГРУППИРОВАТЬ ПО специальность УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ"
5429;"SELECT Major FROM STUDENT WHERE Sex  =  ""F"" GROUP BY major ORDER BY count(*) DESC LIMIT 1";"ВЫБРАТЬ ПЕРВЫЕ 1 специальность ИЗ справочник.студенты ГДЕ пол = ""F"" СГРУППИРОВАТЬ ПО специальность УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ"
5430;SELECT city_code FROM STUDENT GROUP BY city_code ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 кодгорода ИЗ справочник.студенты СГРУППИРОВАТЬ ПО кодгорода УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
5431;SELECT city_code FROM STUDENT GROUP BY city_code ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 кодгорода ИЗ справочник.студенты СГРУППИРОВАТЬ ПО кодгорода УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
5432;SELECT Advisor FROM STUDENT GROUP BY Advisor HAVING count(*)  >  2;ВЫБРАТЬ руководитель ИЗ справочник.студенты СГРУППИРОВАТЬ ПО руководитель ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 2
5433;SELECT Advisor FROM STUDENT GROUP BY Advisor HAVING count(*)  >  2;ВЫБРАТЬ руководитель ИЗ справочник.студенты СГРУППИРОВАТЬ ПО руководитель ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 2
5434;SELECT count(*) FROM products;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.товары
5435;SELECT count(*) FROM products;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.товары
5436;SELECT count(*) FROM ref_colors;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.цвета
5437;SELECT count(*) FROM ref_colors;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.цвета
5438;SELECT count(*) FROM CHARACTERISTICS;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.характеристики
5439;SELECT count(*) FROM CHARACTERISTICS;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.характеристики
5440;SELECT product_name ,  typical_buying_price FROM products;ВЫБРАТЬ наименование , ценазакупки ИЗ справочник.товары
5441;SELECT product_name ,  typical_buying_price FROM products;ВЫБРАТЬ наименование , ценазакупки ИЗ справочник.товары
5442;SELECT color_description FROM ref_colors;ВЫБРАТЬ наименование ИЗ справочник.цвета
5443;SELECT color_description FROM ref_colors;ВЫБРАТЬ наименование ИЗ справочник.цвета
5444;SELECT DISTINCT characteristic_name FROM CHARACTERISTICS;ВЫБРАТЬ РАЗЛИЧНЫЕ наименование ИЗ справочник.характеристики
5445;SELECT DISTINCT characteristic_name FROM CHARACTERISTICS;ВЫБРАТЬ РАЗЛИЧНЫЕ наименование ИЗ справочник.характеристики
5446;"SELECT product_name FROM products WHERE product_category_code  =  ""Spices""";"ВЫБРАТЬ наименование ИЗ справочник.товары ГДЕ категориятовара = ""Spices"""
5447;"SELECT product_name FROM products WHERE product_category_code  =  ""Spices""";"ВЫБРАТЬ наименование ИЗ справочник.товары ГДЕ категориятовара = ""Spices"""
5448;"SELECT T1.product_name ,  T2.color_description ,  T1.product_description FROM products AS T1 JOIN Ref_colors AS T2 ON T1.color_code  =  T2.color_code WHERE product_category_code  =  ""Herbs""";"ВЫБРАТЬ T1.наименование , T2.наименование , T1.описание ИЗ справочник.товары КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.цвета КАК T2 ПО T1.цвет = T2.код ГДЕ product_category_code = ""Herbs"""
5449;"SELECT T1.product_name ,  T2.color_description ,  T1.product_description FROM products AS T1 JOIN Ref_colors AS T2 ON T1.color_code  =  T2.color_code WHERE product_category_code  =  ""Herbs""";"ВЫБРАТЬ T1.наименование , T2.наименование , T1.описание ИЗ справочник.товары КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.цвета КАК T2 ПО T1.цвет = T2.код ГДЕ product_category_code = ""Herbs"""
5450;"SELECT count(*) FROM products WHERE product_category_code  =  ""Seeds""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.товары ГДЕ категориятовара = ""Seeds"""
5451;"SELECT count(*) FROM products WHERE product_category_code  =  ""Seeds""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.товары ГДЕ категориятовара = ""Seeds"""
5452;"SELECT count(*) FROM products WHERE product_category_code  =  ""Spices"" AND typical_buying_price  >  1000";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.товары ГДЕ категориятовара = ""Spices"" И ценазакупки > 1000"
5453;"SELECT count(*) FROM products WHERE product_category_code  =  ""Spices"" AND typical_buying_price  >  1000";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.товары ГДЕ категориятовара = ""Spices"" И ценазакупки > 1000"
5454;"SELECT product_category_code ,  typical_buying_price FROM products WHERE product_name  =  ""cumin""";"ВЫБРАТЬ категориятовара , ценазакупки ИЗ справочник.товары ГДЕ наименование = ""cumin"""
5455;"SELECT product_category_code ,  typical_buying_price FROM products WHERE product_name  =  ""cumin""";"ВЫБРАТЬ категориятовара , ценазакупки ИЗ справочник.товары ГДЕ наименование = ""cumin"""
5456;"SELECT product_category_code FROM products WHERE product_name  =  ""flax""";"ВЫБРАТЬ категориятовара ИЗ справочник.товары ГДЕ наименование = ""flax"""
5457;"SELECT product_category_code FROM products WHERE product_name  =  ""flax""";"ВЫБРАТЬ категориятовара ИЗ справочник.товары ГДЕ наименование = ""flax"""
5458;SELECT T1.product_name FROM products AS T1 JOIN ref_colors AS T2 ON T1.color_code  =  T2.color_code WHERE T2.color_description  =  'yellow';"ВЫБРАТЬ T1.наименование ИЗ справочник.товары КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.цвета КАК T2 ПО T1.цвет = T2.код ГДЕ T2.наименование = ""yellow"""
5459;SELECT T1.product_name FROM products AS T1 JOIN ref_colors AS T2 ON T1.color_code  =  T2.color_code WHERE T2.color_description  =  'yellow';"ВЫБРАТЬ T1.наименование ИЗ справочник.товары КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.цвета КАК T2 ПО T1.цвет = T2.код ГДЕ T2.наименование = ""yellow"""
5460;SELECT T1.product_category_description FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code  =  T2.product_category_code WHERE T2.product_description LIKE '%t%';"ВЫБРАТЬ T1.наименование ИЗ справочник.категориитоваров КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.товары КАК T2 ПО T1.код = T2.категориятовара ГДЕ T2.описание ПОДОБНО ""%t%"""
5461;SELECT T1.product_category_description FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code  =  T2.product_category_code WHERE T2.product_description LIKE '%t%';"ВЫБРАТЬ T1.наименование ИЗ справочник.категориитоваров КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.товары КАК T2 ПО T1.код = T2.категориятовара ГДЕ T2.описание ПОДОБНО ""%t%"""
5462;"SELECT t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t1.product_name  =  ""catnip""";"ВЫБРАТЬ t2.наименование ИЗ справочник.товары КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.цвета КАК t2 ПО t1.цвет = t2.код ГДЕ t1.наименование = ""catnip"""
5463;"SELECT t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t1.product_name  =  ""catnip""";"ВЫБРАТЬ t2.наименование ИЗ справочник.товары КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.цвета КАК t2 ПО t1.цвет = t2.код ГДЕ t1.наименование = ""catnip"""
5464;"SELECT t1.color_code ,  t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t1.product_name  =  ""chervil""";"ВЫБРАТЬ t1.цвет , t2.наименование ИЗ справочник.товары КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.цвета КАК t2 ПО t1.цвет = t2.код ГДЕ t1.наименование = ""chervil"""
5465;"SELECT t1.color_code ,  t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t1.product_name  =  ""chervil""";"ВЫБРАТЬ t1.цвет , t2.наименование ИЗ справочник.товары КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.цвета КАК t2 ПО t1.цвет = t2.код ГДЕ t1.наименование = ""chervil"""
5466;SELECT t1.product_id ,  t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code JOIN product_characteristics AS t3 ON t1.product_id  =  t3.product_id GROUP BY t1.product_id HAVING count(*)  >=  2;ВЫБРАТЬ t1.ссылка , t2.наименование ИЗ справочник.товары КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.цвета КАК t2 ПО t1.цвет = t2.код ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.характеристикитоваров КАК t3 ПО t1.ссылка = t3.товар СГРУППИРОВАТЬ ПО t1.ссылка ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
5467;SELECT t1.product_id ,  t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code JOIN product_characteristics AS t3 ON t1.product_id  =  t3.product_id GROUP BY t1.product_id HAVING count(*)  >=  2;ВЫБРАТЬ t1.ссылка , t2.наименование ИЗ справочник.товары КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.цвета КАК t2 ПО t1.цвет = t2.код ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.характеристикитоваров КАК t3 ПО t1.ссылка = t3.товар СГРУППИРОВАТЬ ПО t1.ссылка ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
5468;"SELECT t1.product_name FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t2.color_description  =  ""white""";"ВЫБРАТЬ t1.наименование ИЗ справочник.товары КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.цвета КАК t2 ПО t1.цвет = t2.код ГДЕ t2.наименование = ""white"""
5469;"SELECT t1.product_name FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t2.color_description  =  ""white""";"ВЫБРАТЬ t1.наименование ИЗ справочник.товары КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.цвета КАК t2 ПО t1.цвет = t2.код ГДЕ t2.наименование = ""white"""
5470;"SELECT t1.product_name ,  t1.typical_buying_price ,  t1.typical_selling_price FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t2.color_description  =  ""yellow""";"ВЫБРАТЬ t1.наименование , t1.ценазакупки , t1.ценапродажи ИЗ справочник.товары КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.цвета КАК t2 ПО t1.цвет = t2.код ГДЕ t2.наименование = ""yellow"""
5471;"SELECT t1.product_name ,  t1.typical_buying_price ,  t1.typical_selling_price FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t2.color_description  =  ""yellow""";"ВЫБРАТЬ t1.наименование , t1.ценазакупки , t1.ценапродажи ИЗ справочник.товары КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.цвета КАК t2 ПО t1.цвет = t2.код ГДЕ t2.наименование = ""yellow"""
5472;"SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id WHERE t1.product_name  =  ""sesame""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.товары КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.характеристикитоваров КАК t2 ПО t1.ссылка = t2.товар ГДЕ t1.наименование = ""sesame"""
5473;"SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id WHERE t1.product_name  =  ""sesame""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.товары КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.характеристикитоваров КАК t2 ПО t1.ссылка = t2.товар ГДЕ t1.наименование = ""sesame"""
5474;"SELECT count(DISTINCT t3.characteristic_name) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  ""sesame""";"ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ t3.наименование) ИЗ справочник.товары КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.характеристикитоваров КАК t2 ПО t1.ссылка = t2.товар ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.характеристики КАК t3 ПО t2.характеристика = t3.ссылка ГДЕ t1.наименование = ""sesame"""
5475;"SELECT count(DISTINCT t3.characteristic_name) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  ""sesame""";"ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ t3.наименование) ИЗ справочник.товары КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.характеристикитоваров КАК t2 ПО t1.ссылка = t2.товар ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.характеристики КАК t3 ПО t2.характеристика = t3.ссылка ГДЕ t1.наименование = ""sesame"""
5476;"SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  ""sesame""";"ВЫБРАТЬ t3.наименование ИЗ справочник.товары КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.характеристикитоваров КАК t2 ПО t1.ссылка = t2.товар ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.характеристики КАК t3 ПО t2.характеристика = t3.ссылка ГДЕ t1.наименование = ""sesame"""
5477;"SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  ""sesame""";"ВЫБРАТЬ t3.наименование ИЗ справочник.товары КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.характеристикитоваров КАК t2 ПО t1.ссылка = t2.товар ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.характеристики КАК t3 ПО t2.характеристика = t3.ссылка ГДЕ t1.наименование = ""sesame"""
5478;"SELECT t3.characteristic_name ,  t3.characteristic_data_type FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  ""cumin""";"ВЫБРАТЬ t3.наименование , t3.типданных ИЗ справочник.товары КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.характеристикитоваров КАК t2 ПО t1.ссылка = t2.товар ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.характеристики КАК t3 ПО t2.характеристика = t3.ссылка ГДЕ t1.наименование = ""cumin"""
5479;"SELECT t3.characteristic_name ,  t3.characteristic_data_type FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  ""cumin""";"ВЫБРАТЬ t3.наименование , t3.типданных ИЗ справочник.товары КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.характеристикитоваров КАК t2 ПО t1.ссылка = t2.товар ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.характеристики КАК t3 ПО t2.характеристика = t3.ссылка ГДЕ t1.наименование = ""cumin"""
5480;"SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  ""sesame"" AND t3.characteristic_type_code  =  ""Grade""";"ВЫБРАТЬ t3.наименование ИЗ справочник.товары КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.характеристикитоваров КАК t2 ПО t1.ссылка = t2.товар ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.характеристики КАК t3 ПО t2.характеристика = t3.ссылка ГДЕ t1.наименование = ""sesame"" И t3.видхарактеристики = ""Grade"""
5481;"SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  ""sesame"" AND t3.characteristic_type_code  =  ""Grade""";"ВЫБРАТЬ t3.наименование ИЗ справочник.товары КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.характеристикитоваров КАК t2 ПО t1.ссылка = t2.товар ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.характеристики КАК t3 ПО t2.характеристика = t3.ссылка ГДЕ t1.наименование = ""sesame"" И t3.видхарактеристики = ""Grade"""
5482;"SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  ""laurel""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.товары КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.характеристикитоваров КАК t2 ПО t1.ссылка = t2.товар ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.характеристики КАК t3 ПО t2.характеристика = t3.ссылка ГДЕ t1.наименование = ""laurel"""
5483;"SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  ""laurel""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.товары КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.характеристикитоваров КАК t2 ПО t1.ссылка = t2.товар ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.характеристики КАК t3 ПО t2.характеристика = t3.ссылка ГДЕ t1.наименование = ""laurel"""
5484;"SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  ""flax""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.товары КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.характеристикитоваров КАК t2 ПО t1.ссылка = t2.товар ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.характеристики КАК t3 ПО t2.характеристика = t3.ссылка ГДЕ t1.наименование = ""flax"""
5485;"SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  ""flax""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.товары КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.характеристикитоваров КАК t2 ПО t1.ссылка = t2.товар ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.характеристики КАК t3 ПО t2.характеристика = t3.ссылка ГДЕ t1.наименование = ""flax"""
5486;"SELECT product_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id JOIN ref_colors AS t4 ON t1.color_code  =  t4.color_code WHERE t4.color_description  =  ""red"" AND t3.characteristic_name  =  ""fast""";"ВЫБРАТЬ product_name ИЗ справочник.товары КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.характеристикитоваров КАК t2 ПО t1.ссылка = t2.товар ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.характеристики КАК t3 ПО t2.характеристика = t3.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.цвета КАК t4 ПО t1.цвет = t4.код ГДЕ t4.наименование = ""red"" И t3.наименование = ""fast"""
5487;"SELECT product_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id JOIN ref_colors AS t4 ON t1.color_code  =  t4.color_code WHERE t4.color_description  =  ""red"" AND t3.characteristic_name  =  ""fast""";"ВЫБРАТЬ product_name ИЗ справочник.товары КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.характеристикитоваров КАК t2 ПО t1.ссылка = t2.товар ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.характеристики КАК t3 ПО t2.характеристика = t3.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.цвета КАК t4 ПО t1.цвет = t4.код ГДЕ t4.наименование = ""red"" И t3.наименование = ""fast"""
5488;"SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t3.characteristic_name  =  ""hot""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.товары КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.характеристикитоваров КАК t2 ПО t1.ссылка = t2.товар ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.характеристики КАК t3 ПО t2.характеристика = t3.ссылка ГДЕ t3.наименование = ""hot"""
5489;"SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t3.characteristic_name  =  ""hot""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.товары КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.характеристикитоваров КАК t2 ПО t1.ссылка = t2.товар ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.характеристики КАК t3 ПО t2.характеристика = t3.ссылка ГДЕ t3.наименование = ""hot"""
5490;"SELECT DISTINCT t1.product_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t3.characteristic_name  =  ""warm""";"ВЫБРАТЬ РАЗЛИЧНЫЕ t1.наименование ИЗ справочник.товары КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.характеристикитоваров КАК t2 ПО t1.ссылка = t2.товар ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.характеристики КАК t3 ПО t2.характеристика = t3.ссылка ГДЕ t3.наименование = ""warm"""
5491;"SELECT DISTINCT t1.product_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t3.characteristic_name  =  ""warm""";"ВЫБРАТЬ РАЗЛИЧНЫЕ t1.наименование ИЗ справочник.товары КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.характеристикитоваров КАК t2 ПО t1.ссылка = t2.товар ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.характеристики КАК t3 ПО t2.характеристика = t3.ссылка ГДЕ t3.наименование = ""warm"""
5492;"SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id JOIN ref_colors AS t4 ON t1.color_code  =  t4.color_code WHERE t4.color_description  =  ""red"" AND t3.characteristic_name  =  ""slow""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.товары КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.характеристикитоваров КАК t2 ПО t1.ссылка = t2.товар ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.характеристики КАК t3 ПО t2.характеристика = t3.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.цвета КАК t4 ПО t1.цвет = t4.код ГДЕ t4.наименование = ""red"" И t3.наименование = ""slow"""
5493;"SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id JOIN ref_colors AS t4 ON t1.color_code  =  t4.color_code WHERE t4.color_description  =  ""red"" AND t3.characteristic_name  =  ""slow""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.товары КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.характеристикитоваров КАК t2 ПО t1.ссылка = t2.товар ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.характеристики КАК t3 ПО t2.характеристика = t3.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.цвета КАК t4 ПО t1.цвет = t4.код ГДЕ t4.наименование = ""red"" И t3.наименование = ""slow"""
5494;"SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id JOIN ref_colors AS t4 ON t1.color_code  =  t4.color_code WHERE t4.color_description  =  ""white"" OR t3.characteristic_name  =  ""hot""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.товары КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.характеристикитоваров КАК t2 ПО t1.ссылка = t2.товар ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.характеристики КАК t3 ПО t2.характеристика = t3.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.цвета КАК t4 ПО t1.цвет = t4.код ГДЕ t4.наименование = ""white"" ИЛИ t3.наименование = ""hot"""
5495;"SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id JOIN ref_colors AS t4 ON t1.color_code  =  t4.color_code WHERE t4.color_description  =  ""white"" OR t3.characteristic_name  =  ""hot""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.товары КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.характеристикитоваров КАК t2 ПО t1.ссылка = t2.товар ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.характеристики КАК t3 ПО t2.характеристика = t3.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.цвета КАК t4 ПО t1.цвет = t4.код ГДЕ t4.наименование = ""white"" ИЛИ t3.наименование = ""hot"""
5496;"SELECT unit_of_measure FROM ref_product_categories WHERE product_category_code  =  ""Herbs""";"ВЫБРАТЬ единицаизмерения ИЗ справочник.категориитоваров ГДЕ код = ""Herbs"""
5497;"SELECT unit_of_measure FROM ref_product_categories WHERE product_category_code  =  ""Herbs""";"ВЫБРАТЬ единицаизмерения ИЗ справочник.категориитоваров ГДЕ код = ""Herbs"""
5498;"SELECT product_category_description FROM ref_product_categories WHERE product_category_code  =  ""Spices""";"ВЫБРАТЬ наименование ИЗ справочник.категориитоваров ГДЕ код = ""Spices"""
5499;"SELECT product_category_description FROM ref_product_categories WHERE product_category_code  =  ""Spices""";"ВЫБРАТЬ наименование ИЗ справочник.категориитоваров ГДЕ код = ""Spices"""
5500;"SELECT product_category_description ,  unit_of_measure FROM ref_product_categories WHERE product_category_code  =  ""Herbs""";"ВЫБРАТЬ наименование , единицаизмерения ИЗ справочник.категориитоваров ГДЕ код = ""Herbs"""
5501;"SELECT product_category_description ,  unit_of_measure FROM ref_product_categories WHERE product_category_code  =  ""Herbs""";"ВЫБРАТЬ наименование , единицаизмерения ИЗ справочник.категориитоваров ГДЕ код = ""Herbs"""
5502;"SELECT t2.unit_of_measure FROM products AS t1 JOIN ref_product_categories AS t2 ON t1.product_category_code  =  t2.product_category_code WHERE t1.product_name  =  ""cumin""";"ВЫБРАТЬ t2.единицаизмерения ИЗ справочник.товары КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.категориитоваров КАК t2 ПО t1.категориятовара = t2.код ГДЕ t1.наименование = ""cumin"""
5503;"SELECT t2.unit_of_measure FROM products AS t1 JOIN ref_product_categories AS t2 ON t1.product_category_code  =  t2.product_category_code WHERE t1.product_name  =  ""cumin""";"ВЫБРАТЬ t2.единицаизмерения ИЗ справочник.товары КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.категориитоваров КАК t2 ПО t1.категориятовара = t2.код ГДЕ t1.наименование = ""cumin"""
5504;"SELECT t2.unit_of_measure ,  t2.product_category_code FROM products AS t1 JOIN ref_product_categories AS t2 ON t1.product_category_code  =  t2.product_category_code WHERE t1.product_name  =  ""chervil""";"ВЫБРАТЬ t2.единицаизмерения , t2.код ИЗ справочник.товары КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.категориитоваров КАК t2 ПО t1.категориятовара = t2.код ГДЕ t1.наименование = ""chervil"""
5505;"SELECT t2.unit_of_measure ,  t2.product_category_code FROM products AS t1 JOIN ref_product_categories AS t2 ON t1.product_category_code  =  t2.product_category_code WHERE t1.product_name  =  ""chervil""";"ВЫБРАТЬ t2.единицаизмерения , t2.код ИЗ справочник.товары КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.категориитоваров КАК t2 ПО t1.категориятовара = t2.код ГДЕ t1.наименование = ""chervil"""
5506;"SELECT t1.product_name FROM products AS t1 JOIN ref_product_categories AS t2 ON t1.product_category_code  =  t2.product_category_code JOIN ref_colors AS t3 ON t1.color_code  =  t3.color_code WHERE t3.color_description  =  ""white"" AND t2.unit_of_measure != ""Handful""";"ВЫБРАТЬ t1.наименование ИЗ справочник.товары КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.категориитоваров КАК t2 ПО t1.категориятовара = t2.код ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.цвета КАК t3 ПО t1.цвет = t3.код ГДЕ t3.наименование = ""white"" И t2.единицаизмерения <> ""Handful"""
5507;"SELECT t1.product_name FROM products AS t1 JOIN ref_product_categories AS t2 ON t1.product_category_code  =  t2.product_category_code JOIN ref_colors AS t3 ON t1.color_code  =  t3.color_code WHERE t3.color_description  =  ""white"" AND t2.unit_of_measure != ""Handful""";"ВЫБРАТЬ t1.наименование ИЗ справочник.товары КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.категориитоваров КАК t2 ПО t1.категориятовара = t2.код ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.цвета КАК t3 ПО t1.цвет = t3.код ГДЕ t3.наименование = ""white"" И t2.единицаизмерения <> ""Handful"""
5508;SELECT t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code GROUP BY t2.color_description ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 t2.наименование ИЗ справочник.товары КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.цвета КАК t2 ПО t1.цвет = t2.код СГРУППИРОВАТЬ ПО t2.наименование УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
5509;SELECT t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code GROUP BY t2.color_description ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 t2.наименование ИЗ справочник.товары КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.цвета КАК t2 ПО t1.цвет = t2.код СГРУППИРОВАТЬ ПО t2.наименование УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
5510;SELECT t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code GROUP BY t2.color_description ORDER BY count(*) ASC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 t2.наименование ИЗ справочник.товары КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.цвета КАК t2 ПО t1.цвет = t2.код СГРУППИРОВАТЬ ПО t2.наименование УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) ВОЗР
5511;SELECT t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code GROUP BY t2.color_description ORDER BY count(*) ASC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 t2.наименование ИЗ справочник.товары КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.цвета КАК t2 ПО t1.цвет = t2.код СГРУППИРОВАТЬ ПО t2.наименование УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) ВОЗР
5512;SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id GROUP BY t3.characteristic_name ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 t3.наименование ИЗ справочник.товары КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.характеристикитоваров КАК t2 ПО t1.ссылка = t2.товар ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.характеристики КАК t3 ПО t2.характеристика = t3.ссылка СГРУППИРОВАТЬ ПО t3.наименование УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
5513;SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id GROUP BY t3.characteristic_name ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 t3.наименование ИЗ справочник.товары КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.характеристикитоваров КАК t2 ПО t1.ссылка = t2.товар ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.характеристики КАК t3 ПО t2.характеристика = t3.ссылка СГРУППИРОВАТЬ ПО t3.наименование УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
5516;SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id GROUP BY t3.characteristic_name HAVING count(*)  >= 2;ВЫБРАТЬ t3.наименование ИЗ справочник.товары КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.характеристикитоваров КАК t2 ПО t1.ссылка = t2.товар ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.характеристики КАК t3 ПО t2.характеристика = t3.ссылка СГРУППИРОВАТЬ ПО t3.наименование ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
5517;SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id GROUP BY t3.characteristic_name HAVING count(*)  >= 2;ВЫБРАТЬ t3.наименование ИЗ справочник.товары КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.характеристикитоваров КАК t2 ПО t1.ссылка = t2.товар ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.характеристики КАК t3 ПО t2.характеристика = t3.ссылка СГРУППИРОВАТЬ ПО t3.наименование ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
5518;SELECT count(*) FROM Ref_colors WHERE color_code NOT IN ( SELECT color_code FROM products );ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.цвета ГДЕ color_code НЕ В ( ВЫБРАТЬ color_code ИЗ справочник.товары )
5519;SELECT count(*) FROM Ref_colors WHERE color_code NOT IN ( SELECT color_code FROM products );ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.цвета ГДЕ color_code НЕ В ( ВЫБРАТЬ color_code ИЗ справочник.товары )
5520;SELECT count(*) FROM event;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.соревнования
5521;SELECT name FROM event ORDER BY YEAR DESC;ВЫБРАТЬ наименование ИЗ справочник.соревнования УПОРЯДОЧИТЬ ПО год УБЫВ
5522;SELECT name FROM event ORDER BY YEAR DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование ИЗ справочник.соревнования УПОРЯДОЧИТЬ ПО год УБЫВ
5523;SELECT count(*) FROM stadium;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.стадионы
5524;SELECT name FROM stadium ORDER BY capacity DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование ИЗ справочник.стадионы УПОРЯДОЧИТЬ ПО вместимость УБЫВ
5525;SELECT name FROM stadium WHERE capacity  <  (SELECT avg(capacity) FROM stadium);ВЫБРАТЬ name ИЗ справочник.стадионы ГДЕ capacity < (ВЫБРАТЬ СРЕДНЕЕ(capacity) ИЗ справочник.стадионы)
5526;SELECT country FROM stadium GROUP BY country ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 страна ИЗ справочник.стадионы СГРУППИРОВАТЬ ПО страна УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
5527;SELECT country FROM stadium GROUP BY country HAVING count(*)  <=  3;ВЫБРАТЬ страна ИЗ справочник.стадионы СГРУППИРОВАТЬ ПО страна ИМЕЮЩИЕ КОЛИЧЕСТВО(*) <= 3
5529;SELECT count(DISTINCT city) FROM stadium WHERE opening_year  <  2006;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ город) ИЗ справочник.стадионы ГДЕ годоткрытия < 2006
5530;SELECT country ,  count(*) FROM stadium GROUP BY country;ВЫБРАТЬ страна , КОЛИЧЕСТВО(*) ИЗ справочник.стадионы СГРУППИРОВАТЬ ПО страна
5532;SELECT count(*) FROM stadium WHERE country != 'Russia';"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.стадионы ГДЕ страна <> ""Russia"""
5533;SELECT name FROM swimmer ORDER BY meter_100;ВЫБРАТЬ наименование ИЗ справочник.пловцы УПОРЯДОЧИТЬ ПО результат100м
5534;SELECT count(DISTINCT nationality) FROM swimmer;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ национальность) ИЗ справочник.пловцы
5535;SELECT nationality ,  count(*) FROM swimmer GROUP BY nationality HAVING count(*)  >  1;ВЫБРАТЬ национальность , КОЛИЧЕСТВО(*) ИЗ справочник.пловцы СГРУППИРОВАТЬ ПО национальность ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 1
5536;SELECT meter_200 ,  meter_300 FROM swimmer WHERE nationality  =  'Australia';"ВЫБРАТЬ результат200м , результат300м ИЗ справочник.пловцы ГДЕ национальность = ""Australia"""
5537;SELECT t1.name FROM swimmer AS t1 JOIN record AS t2 ON t1.id  =  t2.swimmer_id WHERE RESULT  =  'Win';"ВЫБРАТЬ t1.наименование ИЗ справочник.пловцы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.рекорды КАК t2 ПО t1.ссылка = t2.пловец ГДЕ RESULT = ""Win"""
5538;SELECT t1.name FROM stadium AS t1 JOIN event AS t2 ON t1.id  =  t2.stadium_id GROUP BY t2.stadium_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 t1.наименование ИЗ справочник.стадионы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.соревнования КАК t2 ПО t1.ссылка = t2.стадион СГРУППИРОВАТЬ ПО t2.стадион УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
5539;SELECT t1.name ,  t1.capacity FROM stadium AS t1 JOIN event AS t2 ON t1.id  =  t2.stadium_id WHERE t2.name  =  'World Junior';"ВЫБРАТЬ t1.наименование , t1.вместимость ИЗ справочник.стадионы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.соревнования КАК t2 ПО t1.ссылка = t2.стадион ГДЕ t2.наименование = ""World Junior"""
5540;SELECT name FROM stadium WHERE id NOT IN (SELECT stadium_id FROM event);ВЫБРАТЬ name ИЗ справочник.стадионы ГДЕ id НЕ В (ВЫБРАТЬ stadium_id ИЗ справочник.соревнования)
5541;SELECT t1.name FROM swimmer AS t1 JOIN record AS t2 ON t1.id  =  t2.swimmer_id GROUP BY t2.swimmer_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 t1.наименование ИЗ справочник.пловцы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.рекорды КАК t2 ПО t1.ссылка = t2.пловец СГРУППИРОВАТЬ ПО t2.пловец УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
5542;SELECT t1.name FROM swimmer AS t1 JOIN record AS t2 ON t1.id  =  t2.swimmer_id GROUP BY t2.swimmer_id HAVING count(*)  >=  2;ВЫБРАТЬ t1.наименование ИЗ справочник.пловцы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.рекорды КАК t2 ПО t1.ссылка = t2.пловец СГРУППИРОВАТЬ ПО t2.пловец ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
5543;SELECT t1.name ,  t1.nationality FROM swimmer AS t1 JOIN record AS t2 ON t1.id  =  t2.swimmer_id WHERE RESULT  =  'Win' GROUP BY t2.swimmer_id HAVING count(*)  >  1;"ВЫБРАТЬ t1.наименование , t1.национальность ИЗ справочник.пловцы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.рекорды КАК t2 ПО t1.ссылка = t2.пловец ГДЕ RESULT = ""Win"" СГРУППИРОВАТЬ ПО t2.пловец ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 1"
5544;SELECT name FROM swimmer WHERE id NOT IN (SELECT swimmer_id FROM record);ВЫБРАТЬ name ИЗ справочник.пловцы ГДЕ id НЕ В (ВЫБРАТЬ swimmer_id ИЗ регистрсведений.рекорды)
5546;SELECT t4.name FROM swimmer AS t1 JOIN record AS t2 ON t1.id  =  t2.swimmer_id JOIN event AS t3 ON t2.event_id  =  t3.id JOIN stadium AS t4 ON t4.id  =  t3.stadium_id WHERE t1.nationality  =  'Australia';"ВЫБРАТЬ t4.наименование ИЗ справочник.пловцы КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.рекорды КАК t2 ПО t1.ссылка = t2.пловец ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.соревнования КАК t3 ПО t2.соревнование = t3.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.стадионы КАК t4 ПО t4.ссылка = t3.стадион ГДЕ t1.национальность = ""Australia"""
5547;SELECT t3.name FROM record AS t1 JOIN event AS t2 ON t1.event_id  =  t2.id JOIN stadium AS t3 ON t3.id  =  t2.stadium_id GROUP BY t2.stadium_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 t3.наименование ИЗ регистрсведений.рекорды КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.соревнования КАК t2 ПО t1.соревнование = t2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.стадионы КАК t3 ПО t3.ссылка = t2.стадион СГРУППИРОВАТЬ ПО t2.стадион УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
5548;SELECT * FROM swimmer;ВЫБРАТЬ * ИЗ справочник.пловцы
5549;SELECT avg(capacity) FROM stadium WHERE opening_year  =  2005;ВЫБРАТЬ СРЕДНЕЕ(вместимость) ИЗ справочник.стадионы ГДЕ годоткрытия = 2005
5550;SELECT count(*) FROM railway;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ наименование
5551;SELECT Builder FROM railway ORDER BY Builder ASC;ВЫБРАТЬ строитель ИЗ наименование УПОРЯДОЧИТЬ ПО строитель ВОЗР
5552;SELECT Wheels ,  LOCATION FROM railway;ВЫБРАТЬ типколес , местоположение ИЗ наименование
5553;"SELECT max(LEVEL) FROM manager WHERE Country != ""Australia	""";"ВЫБРАТЬ МАКСИМУМ(уровень) ИЗ справочник.менеджеры ГДЕ страна <> ""Australia	"""
5554;SELECT avg(Age) FROM manager;ВЫБРАТЬ СРЕДНЕЕ(возраст) ИЗ справочник.менеджеры
5555;SELECT Name FROM manager ORDER BY LEVEL ASC;ВЫБРАТЬ наименование ИЗ справочник.менеджеры УПОРЯДОЧИТЬ ПО уровень ВОЗР
5556;SELECT Name ,  Arrival FROM train;ВЫБРАТЬ наименование , станцияприбытия ИЗ справочник.поезда
5557;SELECT Name FROM manager ORDER BY Age DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование ИЗ справочник.менеджеры УПОРЯДОЧИТЬ ПО возраст УБЫВ
5558;SELECT T2.Name ,  T1.Location FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID  =  T2.Railway_ID;ВЫБРАТЬ T2.наименование , T1.местоположение ИЗ справочник.железныедороги КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.поезда КАК T2 ПО T1.ссылка = T2.железнаядорога
5559;"SELECT T1.Builder FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID  =  T2.Railway_ID WHERE T2.Name  =  ""Andaman Exp""";"ВЫБРАТЬ T1.строитель ИЗ справочник.железныедороги КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.поезда КАК T2 ПО T1.ссылка = T2.железнаядорога ГДЕ T2.наименование = ""Andaman Exp"""
5560;SELECT T2.Railway_ID ,  T1.Location FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID  =  T2.Railway_ID GROUP BY T2.Railway_ID HAVING COUNT(*)  >  1;ВЫБРАТЬ T2.железнаядорога , T1.местоположение ИЗ справочник.железныедороги КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.поезда КАК T2 ПО T1.ссылка = T2.железнаядорога СГРУППИРОВАТЬ ПО T2.железнаядорога ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 1
5561;SELECT T2.Railway_ID ,  T1.Builder FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID  =  T2.Railway_ID GROUP BY T2.Railway_ID ORDER BY COUNT(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.железнаядорога , T1.строитель ИЗ справочник.железныедороги КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.поезда КАК T2 ПО T1.ссылка = T2.железнаядорога СГРУППИРОВАТЬ ПО T2.железнаядорога УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
5562;SELECT Builder ,  COUNT(*) FROM railway GROUP BY Builder;ВЫБРАТЬ строитель , КОЛИЧЕСТВО(*) ИЗ наименование СГРУППИРОВАТЬ ПО строитель
5563;SELECT Builder FROM railway GROUP BY Builder ORDER BY COUNT(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 строитель ИЗ наименование СГРУППИРОВАТЬ ПО строитель УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
5564;SELECT LOCATION ,  COUNT(*) FROM railway GROUP BY LOCATION;ВЫБРАТЬ местоположение , КОЛИЧЕСТВО(*) ИЗ наименование СГРУППИРОВАТЬ ПО местоположение
5565;SELECT LOCATION FROM railway GROUP BY LOCATION HAVING COUNT(*)  >  1;ВЫБРАТЬ местоположение ИЗ наименование СГРУППИРОВАТЬ ПО местоположение ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 1
5566;SELECT ObjectNumber FROM railway WHERE Railway_ID NOT IN (SELECT Railway_ID FROM train);ВЫБРАТЬ ObjectNumber ИЗ справочник.железныедороги ГДЕ Railway_ID НЕ В (ВЫБРАТЬ Railway_ID ИЗ справочник.поезда)
5568;SELECT DISTINCT Country FROM manager;ВЫБРАТЬ РАЗЛИЧНЫЕ страна ИЗ справочник.менеджеры
5569;SELECT Working_year_starts FROM manager ORDER BY LEVEL DESC;ВЫБРАТЬ годначалаработы ИЗ справочник.менеджеры УПОРЯДОЧИТЬ ПО уровень УБЫВ
5570;SELECT Country FROM manager WHERE Age  >  50 OR Age  <  46;ВЫБРАТЬ страна ИЗ справочник.менеджеры ГДЕ возраст > 50 ИЛИ возраст < 46
5571;SELECT count(*) FROM addresses WHERE country  =  'USA';"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.адреса ГДЕ страна = ""USA"""
5572;SELECT DISTINCT city FROM addresses;ВЫБРАТЬ РАЗЛИЧНЫЕ город ИЗ справочник.адреса
5573;SELECT state_province_county ,  count(*) FROM addresses GROUP BY state_province_county;ВЫБРАТЬ регион , КОЛИЧЕСТВО(*) ИЗ справочник.адреса СГРУППИРОВАТЬ ПО регион
5574;SELECT customer_name ,  customer_phone FROM customers WHERE customer_id NOT IN (SELECT customer_id FROM customer_address_history);ВЫБРАТЬ customer_name , customer_phone ИЗ справочник.клиенты ГДЕ customer_id НЕ В (ВЫБРАТЬ customer_id ИЗ регистрсведений.историяадресовклиентов)
5575;SELECT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.наименование ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.заказ КАК T2 ПО T1.ссылка = T2.клиент СГРУППИРОВАТЬ ПО T1.ссылка УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
5576;SELECT product_type_code FROM products GROUP BY product_type_code HAVING count(*)  >=  2;ВЫБРАТЬ кодтипа ИЗ справочник.товары СГРУППИРОВАТЬ ПО кодтипа ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
5578;SELECT customer_name ,  customer_phone ,  payment_method_code FROM customers ORDER BY customer_number DESC;ВЫБРАТЬ наименование , телефон , кодспособаоплаты ИЗ справочник.клиенты УПОРЯДОЧИТЬ ПО номерклиента УБЫВ
5579;SELECT T1.product_name ,  sum(T2.order_quantity) FROM products AS T1 JOIN order_items AS T2 ON T1.product_id  =  T2.product_id GROUP BY T1.product_id;ВЫБРАТЬ T1.наименование , СУММА(T2.количество) ИЗ справочник.товары КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ табличнаячасть.товарызаказа КАК T2 ПО T1.ссылка = T2.товар СГРУППИРОВАТЬ ПО T1.ссылка
5580;SELECT min(product_price) ,  max(product_price) ,  avg(product_price) FROM products;ВЫБРАТЬ МИНИМУМ(цена) , МАКСИМУМ(цена) , СРЕДНЕЕ(цена) ИЗ справочник.товары
5581;SELECT count(*) FROM products WHERE product_price  >  (SELECT avg(product_price) FROM products);ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.товары ГДЕ product_price > (ВЫБРАТЬ СРЕДНЕЕ(product_price) ИЗ справочник.товары)
5582;SELECT T2.customer_name ,  T3.city ,  T1.date_from ,  T1.date_to FROM customer_address_history AS T1 JOIN customers AS T2 ON T1.customer_id  =  T2.customer_id JOIN addresses AS T3 ON T1.address_id  =  T3.address_id;ВЫБРАТЬ T2.наименование , T3.город , T1.датас , T1.датапо ИЗ регистрсведений.историяадресовклиентов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.клиенты КАК T2 ПО T1.клиент = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.адреса КАК T3 ПО T1.адрес = T3.ссылка
5583;SELECT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.payment_method_code  =  'Credit Card' GROUP BY T1.customer_id HAVING count(*)  >  2;"ВЫБРАТЬ T1.наименование ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.заказ КАК T2 ПО T1.ссылка = T2.клиент ГДЕ T1.кодспособаоплаты = ""Credit Card"" СГРУППИРОВАТЬ ПО T1.ссылка ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 2"
5584;SELECT  T1.customer_name ,  T1.customer_phone FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN order_items AS T3 ON T3.order_id  =  T2.order_id GROUP BY T1.customer_id ORDER BY sum(T3.order_quantity) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.наименование , T1.телефон ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.заказ КАК T2 ПО T1.ссылка = T2.клиент ВНУТРЕННЕЕ СОЕДИНЕНИЕ табличнаячасть.товарызаказа КАК T3 ПО T3.заказ = T2.ссылка СГРУППИРОВАТЬ ПО T1.ссылка УПОРЯДОЧИТЬ ПО СУММА(T3.количество) УБЫВ
5585;SELECT product_type_code ,  product_name FROM products WHERE product_price  >  1000 OR product_price  <  500;ВЫБРАТЬ кодтипа , наименование ИЗ справочник.товары ГДЕ цена > 1000 ИЛИ цена < 500
5586;SELECT dorm_name FROM dorm WHERE gender  =  'F';"ВЫБРАТЬ наименование ИЗ справочник.общежития ГДЕ пол = ""F"""
5587;SELECT dorm_name FROM dorm WHERE gender  =  'F';"ВЫБРАТЬ наименование ИЗ справочник.общежития ГДЕ пол = ""F"""
5588;SELECT dorm_name FROM dorm WHERE student_capacity  >  300;ВЫБРАТЬ наименование ИЗ справочник.общежития ГДЕ вместимость > 300
5589;SELECT dorm_name FROM dorm WHERE student_capacity  >  300;ВЫБРАТЬ наименование ИЗ справочник.общежития ГДЕ вместимость > 300
5590;SELECT count(*) FROM student WHERE sex  =  'F' AND age  <  25;"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.студенты ГДЕ пол = ""F"" И возраст < 25"
5591;SELECT count(*) FROM student WHERE sex  =  'F' AND age  <  25;"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.студенты ГДЕ пол = ""F"" И возраст < 25"
5592;SELECT fname FROM student WHERE age  >  20;ВЫБРАТЬ имя ИЗ справочник.студенты ГДЕ возраст > 20
5593;SELECT fname FROM student WHERE age  >  20;ВЫБРАТЬ имя ИЗ справочник.студенты ГДЕ возраст > 20
5594;SELECT fname FROM student WHERE city_code  =  'PHL' AND age BETWEEN 20 AND 25;"ВЫБРАТЬ имя ИЗ справочник.студенты ГДЕ кодгорода = ""PHL"" И возраст МЕЖДУ 20 И 25"
5595;SELECT fname FROM student WHERE city_code  =  'PHL' AND age BETWEEN 20 AND 25;"ВЫБРАТЬ имя ИЗ справочник.студенты ГДЕ кодгорода = ""PHL"" И возраст МЕЖДУ 20 И 25"
5596;SELECT count(*) FROM dorm;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.общежития
5597;SELECT count(*) FROM dorm;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.общежития
5598;SELECT count(*) FROM dorm_amenity;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.удобстваобщежитий
5599;SELECT count(*) FROM dorm_amenity;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.удобстваобщежитий
5600;SELECT sum(student_capacity) FROM dorm;ВЫБРАТЬ СУММА(вместимость) ИЗ справочник.общежития
5601;SELECT sum(student_capacity) FROM dorm;ВЫБРАТЬ СУММА(вместимость) ИЗ справочник.общежития
5602;SELECT count(*) FROM student;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.студенты
5603;SELECT count(*) FROM student;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.студенты
5604;SELECT avg(age) ,  city_code FROM student GROUP BY city_code;ВЫБРАТЬ СРЕДНЕЕ(возраст) , кодгорода ИЗ справочник.студенты СГРУППИРОВАТЬ ПО кодгорода
5605;SELECT avg(age) ,  city_code FROM student GROUP BY city_code;ВЫБРАТЬ СРЕДНЕЕ(возраст) , кодгорода ИЗ справочник.студенты СГРУППИРОВАТЬ ПО кодгорода
5606;SELECT avg(student_capacity) ,  sum(student_capacity) FROM dorm WHERE gender  =  'X';"ВЫБРАТЬ СРЕДНЕЕ(вместимость) , СУММА(вместимость) ИЗ справочник.общежития ГДЕ пол = ""X"""
5607;SELECT avg(student_capacity) ,  sum(student_capacity) FROM dorm WHERE gender  =  'X';"ВЫБРАТЬ СРЕДНЕЕ(вместимость) , СУММА(вместимость) ИЗ справочник.общежития ГДЕ пол = ""X"""
5608;SELECT count(DISTINCT dormid) FROM has_amenity;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ общежитие) ИЗ регистрсведений.удобствавобщежитиях
5609;SELECT count(DISTINCT dormid) FROM has_amenity;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ общежитие) ИЗ регистрсведений.удобствавобщежитиях
5610;SELECT dorm_name FROM dorm WHERE dormid NOT IN (SELECT dormid FROM has_amenity);ВЫБРАТЬ dorm_name ИЗ справочник.общежития ГДЕ dormid НЕ В (ВЫБРАТЬ dormid ИЗ регистрсведений.удобствавобщежитиях)
5611;SELECT dorm_name FROM dorm WHERE dormid NOT IN (SELECT dormid FROM has_amenity);ВЫБРАТЬ dorm_name ИЗ справочник.общежития ГДЕ dormid НЕ В (ВЫБРАТЬ dormid ИЗ регистрсведений.удобствавобщежитиях)
5612;SELECT count(DISTINCT gender) FROM dorm;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ пол) ИЗ справочник.общежития
5613;SELECT count(DISTINCT gender) FROM dorm;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ пол) ИЗ справочник.общежития
5614;SELECT student_capacity ,  gender FROM dorm WHERE dorm_name LIKE '%Donor%';"ВЫБРАТЬ вместимость , пол ИЗ справочник.общежития ГДЕ наименование ПОДОБНО ""%Donor%"""
5615;SELECT student_capacity ,  gender FROM dorm WHERE dorm_name LIKE '%Donor%';"ВЫБРАТЬ вместимость , пол ИЗ справочник.общежития ГДЕ наименование ПОДОБНО ""%Donor%"""
5616;SELECT dorm_name ,  gender FROM dorm WHERE student_capacity  >  300 OR student_capacity  <  100;ВЫБРАТЬ наименование , пол ИЗ справочник.общежития ГДЕ вместимость > 300 ИЛИ вместимость < 100
5617;SELECT dorm_name ,  gender FROM dorm WHERE student_capacity  >  300 OR student_capacity  <  100;ВЫБРАТЬ наименование , пол ИЗ справочник.общежития ГДЕ вместимость > 300 ИЛИ вместимость < 100
5618;SELECT count(DISTINCT major) ,  count(DISTINCT city_code) FROM student;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ специальность) , КОЛИЧЕСТВО(РАЗЛИЧНЫЕ кодгорода) ИЗ справочник.студенты
5619;SELECT count(DISTINCT major) ,  count(DISTINCT city_code) FROM student;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ специальность) , КОЛИЧЕСТВО(РАЗЛИЧНЫЕ кодгорода) ИЗ справочник.студенты
5624;SELECT lname FROM student WHERE sex  =  'F' AND city_code  =  'BAL' UNION SELECT lname FROM student WHERE sex  =  'M' AND age  <  20;"ВЫБРАТЬ фамилия ИЗ справочник.студенты ГДЕ пол = ""F"" И кодгорода = ""BAL"" ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ фамилия ИЗ справочник.студенты ГДЕ пол = ""M"" И возраст < 20"
5625;SELECT lname FROM student WHERE sex  =  'F' AND city_code  =  'BAL' UNION SELECT lname FROM student WHERE sex  =  'M' AND age  <  20;"ВЫБРАТЬ фамилия ИЗ справочник.студенты ГДЕ пол = ""F"" И кодгорода = ""BAL"" ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ фамилия ИЗ справочник.студенты ГДЕ пол = ""M"" И возраст < 20"
5626;SELECT dorm_name FROM dorm ORDER BY student_capacity DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование ИЗ справочник.общежития УПОРЯДОЧИТЬ ПО вместимость УБЫВ
5627;SELECT dorm_name FROM dorm ORDER BY student_capacity DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование ИЗ справочник.общежития УПОРЯДОЧИТЬ ПО вместимость УБЫВ
5628;SELECT amenity_name FROM dorm_amenity ORDER BY amenity_name;ВЫБРАТЬ наименование ИЗ справочник.удобстваобщежитий УПОРЯДОЧИТЬ ПО наименование
5629;SELECT amenity_name FROM dorm_amenity ORDER BY amenity_name;ВЫБРАТЬ наименование ИЗ справочник.удобстваобщежитий УПОРЯДОЧИТЬ ПО наименование
5630;SELECT city_code FROM student GROUP BY city_code ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 кодгорода ИЗ справочник.студенты СГРУППИРОВАТЬ ПО кодгорода УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
5631;SELECT city_code FROM student GROUP BY city_code ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 кодгорода ИЗ справочник.студенты СГРУППИРОВАТЬ ПО кодгорода УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
5632;SELECT fname ,  lname FROM student WHERE age  <  (SELECT avg(age) FROM student);ВЫБРАТЬ fname , lname ИЗ справочник.студенты ГДЕ age < (ВЫБРАТЬ СРЕДНЕЕ(age) ИЗ справочник.студенты)
5633;SELECT fname ,  lname FROM student WHERE age  <  (SELECT avg(age) FROM student);ВЫБРАТЬ fname , lname ИЗ справочник.студенты ГДЕ age < (ВЫБРАТЬ СРЕДНЕЕ(age) ИЗ справочник.студенты)
5634;SELECT fname ,  lname FROM student WHERE city_code != 'HKG' ORDER BY age;"ВЫБРАТЬ имя , фамилия ИЗ справочник.студенты ГДЕ кодгорода <> ""HKG"" УПОРЯДОЧИТЬ ПО возраст"
5635;SELECT fname ,  lname FROM student WHERE city_code != 'HKG' ORDER BY age;"ВЫБРАТЬ имя , фамилия ИЗ справочник.студенты ГДЕ кодгорода <> ""HKG"" УПОРЯДОЧИТЬ ПО возраст"
5636;SELECT T1.amenity_name FROM dorm_amenity AS T1 JOIN has_amenity AS T2 ON T2.amenid  =  T1.amenid JOIN dorm AS T3 ON T2.dormid  =  T3.dormid WHERE T3.dorm_name  =  'Anonymous Donor Hall' ORDER BY T1.amenity_name;"ВЫБРАТЬ T1.наименование ИЗ справочник.удобстваобщежитий КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.удобствавобщежитиях КАК T2 ПО T2.удобство = T1.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.общежития КАК T3 ПО T2.общежитие = T3.ссылка ГДЕ T3.наименование = ""Anonymous Donor Hall"" УПОРЯДОЧИТЬ ПО T1.наименование"
5637;SELECT T1.amenity_name FROM dorm_amenity AS T1 JOIN has_amenity AS T2 ON T2.amenid  =  T1.amenid JOIN dorm AS T3 ON T2.dormid  =  T3.dormid WHERE T3.dorm_name  =  'Anonymous Donor Hall' ORDER BY T1.amenity_name;"ВЫБРАТЬ T1.наименование ИЗ справочник.удобстваобщежитий КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.удобствавобщежитиях КАК T2 ПО T2.удобство = T1.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.общежития КАК T3 ПО T2.общежитие = T3.ссылка ГДЕ T3.наименование = ""Anonymous Donor Hall"" УПОРЯДОЧИТЬ ПО T1.наименование"
5638;SELECT count(*) ,  sum(student_capacity) ,  gender FROM dorm GROUP BY gender;ВЫБРАТЬ КОЛИЧЕСТВО(*) , СУММА(вместимость) , пол ИЗ справочник.общежития СГРУППИРОВАТЬ ПО пол
5639;SELECT count(*) ,  sum(student_capacity) ,  gender FROM dorm GROUP BY gender;ВЫБРАТЬ КОЛИЧЕСТВО(*) , СУММА(вместимость) , пол ИЗ справочник.общежития СГРУППИРОВАТЬ ПО пол
5640;SELECT avg(age) ,  max(age) ,  sex FROM student GROUP BY sex;ВЫБРАТЬ СРЕДНЕЕ(возраст) , МАКСИМУМ(возраст) , пол ИЗ справочник.студенты СГРУППИРОВАТЬ ПО пол
5641;SELECT avg(age) ,  max(age) ,  sex FROM student GROUP BY sex;ВЫБРАТЬ СРЕДНЕЕ(возраст) , МАКСИМУМ(возраст) , пол ИЗ справочник.студенты СГРУППИРОВАТЬ ПО пол
5642;SELECT count(*) ,  major FROM student GROUP BY major;ВЫБРАТЬ КОЛИЧЕСТВО(*) , специальность ИЗ справочник.студенты СГРУППИРОВАТЬ ПО специальность
5643;SELECT count(*) ,  major FROM student GROUP BY major;ВЫБРАТЬ КОЛИЧЕСТВО(*) , специальность ИЗ справочник.студенты СГРУППИРОВАТЬ ПО специальность
5644;SELECT count(*) ,  avg(age) ,  city_code FROM student GROUP BY city_code;ВЫБРАТЬ КОЛИЧЕСТВО(*) , СРЕДНЕЕ(возраст) , кодгорода ИЗ справочник.студенты СГРУППИРОВАТЬ ПО кодгорода
5645;SELECT count(*) ,  avg(age) ,  city_code FROM student GROUP BY city_code;ВЫБРАТЬ КОЛИЧЕСТВО(*) , СРЕДНЕЕ(возраст) , кодгорода ИЗ справочник.студенты СГРУППИРОВАТЬ ПО кодгорода
5646;SELECT count(*) ,  avg(age) ,  city_code FROM student WHERE sex  =  'M' GROUP BY city_code;"ВЫБРАТЬ КОЛИЧЕСТВО(*) , СРЕДНЕЕ(возраст) , кодгорода ИЗ справочник.студенты ГДЕ пол = ""M"" СГРУППИРОВАТЬ ПО кодгорода"
5647;SELECT count(*) ,  avg(age) ,  city_code FROM student WHERE sex  =  'M' GROUP BY city_code;"ВЫБРАТЬ КОЛИЧЕСТВО(*) , СРЕДНЕЕ(возраст) , кодгорода ИЗ справочник.студенты ГДЕ пол = ""M"" СГРУППИРОВАТЬ ПО кодгорода"
5648;SELECT count(*) ,  city_code FROM student GROUP BY city_code HAVING count(*)  >  1;ВЫБРАТЬ КОЛИЧЕСТВО(*) , кодгорода ИЗ справочник.студенты СГРУППИРОВАТЬ ПО кодгорода ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 1
5649;SELECT count(*) ,  city_code FROM student GROUP BY city_code HAVING count(*)  >  1;ВЫБРАТЬ КОЛИЧЕСТВО(*) , кодгорода ИЗ справочник.студенты СГРУППИРОВАТЬ ПО кодгорода ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 1
5650;SELECT fname ,  lname FROM student WHERE major != (SELECT major FROM student GROUP BY major ORDER BY count(*) DESC LIMIT 1);ВЫБРАТЬ fname , lname ИЗ справочник.студенты ГДЕ major <> (ВЫБРАТЬ major ИЗ справочник.студенты СГРУППИРОВАТЬ ПО major УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ LIMIT 1)
5651;SELECT fname ,  lname FROM student WHERE major != (SELECT major FROM student GROUP BY major ORDER BY count(*) DESC LIMIT 1);ВЫБРАТЬ fname , lname ИЗ справочник.студенты ГДЕ major <> (ВЫБРАТЬ major ИЗ справочник.студенты СГРУППИРОВАТЬ ПО major УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ LIMIT 1)
5652;SELECT count(*) ,  sex FROM student WHERE age  >  (SELECT avg(age) FROM student) GROUP BY sex;ВЫБРАТЬ КОЛИЧЕСТВО(*) , sex ИЗ справочник.студенты ГДЕ age > (ВЫБРАТЬ СРЕДНЕЕ(age) ИЗ справочник.студенты) СГРУППИРОВАТЬ ПО sex
5653;SELECT count(*) ,  sex FROM student WHERE age  >  (SELECT avg(age) FROM student) GROUP BY sex;ВЫБРАТЬ КОЛИЧЕСТВО(*) , sex ИЗ справочник.студенты ГДЕ age > (ВЫБРАТЬ СРЕДНЕЕ(age) ИЗ справочник.студенты) СГРУППИРОВАТЬ ПО sex
5654;SELECT avg(T1.age) ,  T3.dorm_name FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid GROUP BY T3.dorm_name;ВЫБРАТЬ СРЕДНЕЕ(T1.возраст) , T3.наименование ИЗ справочник.студенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.проживаниевстудоме КАК T2 ПО T1.ссылка = T2.студент ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.общежития КАК T3 ПО T3.ссылка = T2.общежитие СГРУППИРОВАТЬ ПО T3.наименование
5655;SELECT avg(T1.age) ,  T3.dorm_name FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid GROUP BY T3.dorm_name;ВЫБРАТЬ СРЕДНЕЕ(T1.возраст) , T3.наименование ИЗ справочник.студенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.проживаниевстудоме КАК T2 ПО T1.ссылка = T2.студент ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.общежития КАК T3 ПО T3.ссылка = T2.общежитие СГРУППИРОВАТЬ ПО T3.наименование
5656;SELECT count(*) ,  T1.dormid FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid WHERE T1.student_capacity  >  100 GROUP BY T1.dormid;ВЫБРАТЬ КОЛИЧЕСТВО(*) , T1.ссылка ИЗ справочник.общежития КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.удобствавобщежитиях КАК T2 ПО T1.ссылка = T2.общежитие ГДЕ T1.вместимость > 100 СГРУППИРОВАТЬ ПО T1.ссылка
5657;SELECT count(*) ,  T1.dormid FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid WHERE T1.student_capacity  >  100 GROUP BY T1.dormid;ВЫБРАТЬ КОЛИЧЕСТВО(*) , T1.ссылка ИЗ справочник.общежития КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.удобствавобщежитиях КАК T2 ПО T1.ссылка = T2.общежитие ГДЕ T1.вместимость > 100 СГРУППИРОВАТЬ ПО T1.ссылка
5658;SELECT count(*) ,  T3.dorm_name FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid WHERE T1.age  >  20 GROUP BY T3.dorm_name;ВЫБРАТЬ КОЛИЧЕСТВО(*) , T3.наименование ИЗ справочник.студенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.проживаниевстудоме КАК T2 ПО T1.ссылка = T2.студент ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.общежития КАК T3 ПО T3.ссылка = T2.общежитие ГДЕ T1.возраст > 20 СГРУППИРОВАТЬ ПО T3.наименование
5659;SELECT count(*) ,  T3.dorm_name FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid WHERE T1.age  >  20 GROUP BY T3.dorm_name;ВЫБРАТЬ КОЛИЧЕСТВО(*) , T3.наименование ИЗ справочник.студенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.проживаниевстудоме КАК T2 ПО T1.ссылка = T2.студент ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.общежития КАК T3 ПО T3.ссылка = T2.общежитие ГДЕ T1.возраст > 20 СГРУППИРОВАТЬ ПО T3.наименование
5660;SELECT T1.fname FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid WHERE T3.dorm_name  =  'Smith Hall';"ВЫБРАТЬ T1.имя ИЗ справочник.студенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.проживаниевстудоме КАК T2 ПО T1.ссылка = T2.студент ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.общежития КАК T3 ПО T3.ссылка = T2.общежитие ГДЕ T3.наименование = ""Smith Hall"""
5661;SELECT T1.fname FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid WHERE T3.dorm_name  =  'Smith Hall';"ВЫБРАТЬ T1.имя ИЗ справочник.студенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.проживаниевстудоме КАК T2 ПО T1.ссылка = T2.студент ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.общежития КАК T3 ПО T3.ссылка = T2.общежитие ГДЕ T3.наименование = ""Smith Hall"""
5662;SELECT avg(T1.age) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid WHERE T3.student_capacity  =  (SELECT max(student_capacity) FROM dorm);ВЫБРАТЬ СРЕДНЕЕ(T1.возраст) ИЗ справочник.студенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.проживаниевстудоме КАК T2 ПО T1.ссылка = T2.студент ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.общежития КАК T3 ПО T3.ссылка = T2.общежитие ГДЕ T3.вместимость = (ВЫБРАТЬ МАКСИМУМ(student_capacity) ИЗ справочник.общежития)
5663;SELECT avg(T1.age) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid WHERE T3.student_capacity  =  (SELECT max(student_capacity) FROM dorm);ВЫБРАТЬ СРЕДНЕЕ(T1.возраст) ИЗ справочник.студенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.проживаниевстудоме КАК T2 ПО T1.ссылка = T2.студент ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.общежития КАК T3 ПО T3.ссылка = T2.общежитие ГДЕ T3.вместимость = (ВЫБРАТЬ МАКСИМУМ(student_capacity) ИЗ справочник.общежития)
5664;SELECT count(*) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid WHERE T3.gender  =  'M';"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.студенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.проживаниевстудоме КАК T2 ПО T1.ссылка = T2.студент ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.общежития КАК T3 ПО T3.ссылка = T2.общежитие ГДЕ T3.пол = ""M"""
5665;SELECT count(*) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid WHERE T3.gender  =  'M';"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.студенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.проживаниевстудоме КАК T2 ПО T1.ссылка = T2.студент ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.общежития КАК T3 ПО T3.ссылка = T2.общежитие ГДЕ T3.пол = ""M"""
5666;SELECT count(*) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid WHERE T3.dorm_name  =  'Smith Hall' AND T1.sex  =  'F';"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.студенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.проживаниевстудоме КАК T2 ПО T1.ссылка = T2.студент ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.общежития КАК T3 ПО T3.ссылка = T2.общежитие ГДЕ T3.наименование = ""Smith Hall"" И T1.пол = ""F"""
5667;SELECT count(*) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid WHERE T3.dorm_name  =  'Smith Hall' AND T1.sex  =  'F';"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.студенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.проживаниевстудоме КАК T2 ПО T1.ссылка = T2.студент ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.общежития КАК T3 ПО T3.ссылка = T2.общежитие ГДЕ T3.наименование = ""Smith Hall"" И T1.пол = ""F"""
5668;SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T1.dorm_name  =  'Smith Hall';"ВЫБРАТЬ T3.наименование ИЗ справочник.общежития КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.удобствавобщежитиях КАК T2 ПО T1.ссылка = T2.общежитие ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.удобстваобщежитий КАК T3 ПО T2.удобство = T3.ссылка ГДЕ T1.наименование = ""Smith Hall"""
5669;SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T1.dorm_name  =  'Smith Hall';"ВЫБРАТЬ T3.наименование ИЗ справочник.общежития КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.удобствавобщежитиях КАК T2 ПО T1.ссылка = T2.общежитие ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.удобстваобщежитий КАК T3 ПО T2.удобство = T3.ссылка ГДЕ T1.наименование = ""Smith Hall"""
5670;SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T1.dorm_name  =  'Smith Hall' ORDER BY T3.amenity_name;"ВЫБРАТЬ T3.наименование ИЗ справочник.общежития КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.удобствавобщежитиях КАК T2 ПО T1.ссылка = T2.общежитие ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.удобстваобщежитий КАК T3 ПО T2.удобство = T3.ссылка ГДЕ T1.наименование = ""Smith Hall"" УПОРЯДОЧИТЬ ПО T3.наименование"
5671;SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T1.dorm_name  =  'Smith Hall' ORDER BY T3.amenity_name;"ВЫБРАТЬ T3.наименование ИЗ справочник.общежития КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.удобствавобщежитиях КАК T2 ПО T1.ссылка = T2.общежитие ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.удобстваобщежитий КАК T3 ПО T2.удобство = T3.ссылка ГДЕ T1.наименование = ""Smith Hall"" УПОРЯДОЧИТЬ ПО T3.наименование"
5672;SELECT T1.amenity_name FROM dorm_amenity AS T1 JOIN has_amenity AS T2 ON T1.amenid  =  T2.amenid GROUP BY T2.amenid ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.наименование ИЗ справочник.удобстваобщежитий КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.удобствавобщежитиях КАК T2 ПО T1.ссылка = T2.удобство СГРУППИРОВАТЬ ПО T2.удобство УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
5673;SELECT T1.amenity_name FROM dorm_amenity AS T1 JOIN has_amenity AS T2 ON T1.amenid  =  T2.amenid GROUP BY T2.amenid ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.наименование ИЗ справочник.удобстваобщежитий КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.удобствавобщежитиях КАК T2 ПО T1.ссылка = T2.удобство СГРУППИРОВАТЬ ПО T2.удобство УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
5674;SELECT T1.fname FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid WHERE T2.dormid IN (SELECT T2.dormid FROM dorm AS T3 JOIN has_amenity AS T4 ON T3.dormid  =  T4.dormid JOIN dorm_amenity AS T5 ON T4.amenid  =  T5.amenid GROUP BY T3.dormid ORDER BY count(*) DESC LIMIT 1);ВЫБРАТЬ T1.имя ИЗ справочник.студенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.проживаниевстудоме КАК T2 ПО T1.ссылка = T2.студент ГДЕ T2.общежитие В (ВЫБРАТЬ T2.общежитие ИЗ справочник.общежития КАК T3 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.удобствавобщежитиях КАК T4 ПО T3.ссылка = T4.общежитие ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.удобстваобщежитий КАК T5 ПО T4.удобство = T5.ссылка СГРУППИРОВАТЬ ПО T3.ссылка УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ LIMIT 1)
5675;SELECT T1.fname FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid WHERE T2.dormid IN (SELECT T2.dormid FROM dorm AS T3 JOIN has_amenity AS T4 ON T3.dormid  =  T4.dormid JOIN dorm_amenity AS T5 ON T4.amenid  =  T5.amenid GROUP BY T3.dormid ORDER BY count(*) DESC LIMIT 1);ВЫБРАТЬ T1.имя ИЗ справочник.студенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.проживаниевстудоме КАК T2 ПО T1.ссылка = T2.студент ГДЕ T2.общежитие В (ВЫБРАТЬ T2.общежитие ИЗ справочник.общежития КАК T3 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.удобствавобщежитиях КАК T4 ПО T3.ссылка = T4.общежитие ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.удобстваобщежитий КАК T5 ПО T4.удобство = T5.ссылка СГРУППИРОВАТЬ ПО T3.ссылка УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ LIMIT 1)
5676;SELECT T1.dorm_name ,  T1.student_capacity FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid GROUP BY T2.dormid ORDER BY count(*) LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.наименование , T1.вместимость ИЗ справочник.общежития КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.удобствавобщежитиях КАК T2 ПО T1.ссылка = T2.общежитие ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.удобстваобщежитий КАК T3 ПО T2.удобство = T3.ссылка СГРУППИРОВАТЬ ПО T2.общежитие УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*)
5677;SELECT T1.dorm_name ,  T1.student_capacity FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid GROUP BY T2.dormid ORDER BY count(*) LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.наименование , T1.вместимость ИЗ справочник.общежития КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.удобствавобщежитиях КАК T2 ПО T1.ссылка = T2.общежитие ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.удобстваобщежитий КАК T3 ПО T2.удобство = T3.ссылка СГРУППИРОВАТЬ ПО T2.общежитие УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*)
5680;SELECT T1.fname ,  T1.lname FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid WHERE T2.dormid IN (SELECT T3.dormid FROM has_amenity AS T3 JOIN dorm_amenity AS T4 ON T3.amenid  =  T4.amenid WHERE T4.amenity_name  =  'TV Lounge');"ВЫБРАТЬ T1.имя , T1.фамилия ИЗ справочник.студенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.проживаниевстудоме КАК T2 ПО T1.ссылка = T2.студент ГДЕ T2.общежитие В (ВЫБРАТЬ T3.общежитие ИЗ регистрсведений.удобствавобщежитиях КАК T3 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.удобстваобщежитий КАК T4 ПО T3.удобство = T4.ссылка ГДЕ T4.наименование = ""TV Lounge"")"
5681;SELECT T1.fname ,  T1.lname FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid WHERE T2.dormid IN (SELECT T3.dormid FROM has_amenity AS T3 JOIN dorm_amenity AS T4 ON T3.amenid  =  T4.amenid WHERE T4.amenity_name  =  'TV Lounge');"ВЫБРАТЬ T1.имя , T1.фамилия ИЗ справочник.студенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.проживаниевстудоме КАК T2 ПО T1.ссылка = T2.студент ГДЕ T2.общежитие В (ВЫБРАТЬ T3.общежитие ИЗ регистрсведений.удобствавобщежитиях КАК T3 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.удобстваобщежитий КАК T4 ПО T3.удобство = T4.ссылка ГДЕ T4.наименование = ""TV Lounge"")"
5682;SELECT T1.fname ,  T1.age FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid WHERE T2.dormid NOT IN (SELECT T3.dormid FROM has_amenity AS T3 JOIN dorm_amenity AS T4 ON T3.amenid  =  T4.amenid WHERE T4.amenity_name  =  'TV Lounge');"ВЫБРАТЬ T1.имя , T1.возраст ИЗ справочник.студенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.проживаниевстудоме КАК T2 ПО T1.ссылка = T2.студент ГДЕ T2.общежитие НЕ В (ВЫБРАТЬ T3.общежитие ИЗ регистрсведений.удобствавобщежитиях КАК T3 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.удобстваобщежитий КАК T4 ПО T3.удобство = T4.ссылка ГДЕ T4.наименование = ""TV Lounge"")"
5683;SELECT T1.fname ,  T1.age FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid WHERE T2.dormid NOT IN (SELECT T3.dormid FROM has_amenity AS T3 JOIN dorm_amenity AS T4 ON T3.amenid  =  T4.amenid WHERE T4.amenity_name  =  'TV Lounge');"ВЫБРАТЬ T1.имя , T1.возраст ИЗ справочник.студенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.проживаниевстудоме КАК T2 ПО T1.ссылка = T2.студент ГДЕ T2.общежитие НЕ В (ВЫБРАТЬ T3.общежитие ИЗ регистрсведений.удобствавобщежитиях КАК T3 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.удобстваобщежитий КАК T4 ПО T3.удобство = T4.ссылка ГДЕ T4.наименование = ""TV Lounge"")"
5684;SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid JOIN lives_in AS T4 ON T4.dormid  =  T1.dormid JOIN student AS T5 ON T5.stuid  =  T4.stuid WHERE T5.lname  =  'Smith';"ВЫБРАТЬ T3.наименование ИЗ справочник.общежития КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.удобствавобщежитиях КАК T2 ПО T1.ссылка = T2.общежитие ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.удобстваобщежитий КАК T3 ПО T2.удобство = T3.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.проживаниевстудоме КАК T4 ПО T4.общежитие = T1.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК T5 ПО T5.ссылка = T4.студент ГДЕ T5.фамилия = ""Smith"""
5685;SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid JOIN lives_in AS T4 ON T4.dormid  =  T1.dormid JOIN student AS T5 ON T5.stuid  =  T4.stuid WHERE T5.lname  =  'Smith';"ВЫБРАТЬ T3.наименование ИЗ справочник.общежития КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.удобствавобщежитиях КАК T2 ПО T1.ссылка = T2.общежитие ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.удобстваобщежитий КАК T3 ПО T2.удобство = T3.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.проживаниевстудоме КАК T4 ПО T4.общежитие = T1.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК T5 ПО T5.ссылка = T4.студент ГДЕ T5.фамилия = ""Smith"""
5686;SELECT count(*) FROM customers;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.клиенты
5687;SELECT count(*) FROM customers;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.клиенты
5688;SELECT email_address ,  phone_number FROM customers ORDER BY email_address ,  phone_number;ВЫБРАТЬ электроннаяпочта , телефон ИЗ справочник.клиенты УПОРЯДОЧИТЬ ПО электроннаяпочта , телефон
5689;SELECT email_address ,  phone_number FROM customers ORDER BY email_address ,  phone_number;ВЫБРАТЬ электроннаяпочта , телефон ИЗ справочник.клиенты УПОРЯДОЧИТЬ ПО электроннаяпочта , телефон
5690;"SELECT town_city FROM customers WHERE customer_type_code  =  ""Good Credit Rating"" GROUP BY town_city ORDER BY count(*) LIMIT 1";"ВЫБРАТЬ ПЕРВЫЕ 1 город ИЗ справочник.клиенты ГДЕ типклиента = ""Good Credit Rating"" СГРУППИРОВАТЬ ПО город УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*)"
5691;"SELECT town_city FROM customers WHERE customer_type_code  =  ""Good Credit Rating"" GROUP BY town_city ORDER BY count(*) LIMIT 1";"ВЫБРАТЬ ПЕРВЫЕ 1 город ИЗ справочник.клиенты ГДЕ типклиента = ""Good Credit Rating"" СГРУППИРОВАТЬ ПО город УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*)"
5692;SELECT t1.product_name ,  count(*) FROM products AS t1 JOIN complaints AS t2 ON t1.product_id  =  t2.product_id GROUP BY t1.product_name;ВЫБРАТЬ t1.наименование , КОЛИЧЕСТВО(*) ИЗ справочник.товары КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.жалоба КАК t2 ПО t1.ссылка = t2.товар СГРУППИРОВАТЬ ПО t1.наименование
5693;SELECT t1.product_name ,  count(*) FROM products AS t1 JOIN complaints AS t2 ON t1.product_id  =  t2.product_id GROUP BY t1.product_name;ВЫБРАТЬ t1.наименование , КОЛИЧЕСТВО(*) ИЗ справочник.товары КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.жалоба КАК t2 ПО t1.ссылка = t2.товар СГРУППИРОВАТЬ ПО t1.наименование
5694;SELECT t1.email_address FROM customers AS t1 JOIN complaints AS t2 ON t1.customer_id  =  t2.customer_id GROUP BY t1.customer_id ORDER BY count(*) LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 t1.электроннаяпочта ИЗ справочник.клиенты КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.жалоба КАК t2 ПО t1.ссылка = t2.клиент СГРУППИРОВАТЬ ПО t1.ссылка УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*)
5695;SELECT t1.email_address FROM customers AS t1 JOIN complaints AS t2 ON t1.customer_id  =  t2.customer_id GROUP BY t1.customer_id ORDER BY count(*) LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 t1.электроннаяпочта ИЗ справочник.клиенты КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.жалоба КАК t2 ПО t1.ссылка = t2.клиент СГРУППИРОВАТЬ ПО t1.ссылка УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*)
5696;SELECT DISTINCT t1.product_name FROM products AS t1 JOIN complaints AS t2 ON t1.product_id  =  t2.product_id JOIN customers AS t3 GROUP BY t3.customer_id ORDER BY count(*) LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 РАЗЛИЧНЫЕ t1.наименование ИЗ справочник.товары КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.жалоба КАК t2 ПО t1.ссылка = t2.товар ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.клиенты КАК t3 СГРУППИРОВАТЬ ПО t3.ссылка УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*)
5697;SELECT DISTINCT t1.product_name FROM products AS t1 JOIN complaints AS t2 ON t1.product_id  =  t2.product_id JOIN customers AS t3 GROUP BY t3.customer_id ORDER BY count(*) LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 РАЗЛИЧНЫЕ t1.наименование ИЗ справочник.товары КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.жалоба КАК t2 ПО t1.ссылка = t2.товар ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.клиенты КАК t3 СГРУППИРОВАТЬ ПО t3.ссылка УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*)
5698;SELECT t1.phone_number FROM customers AS t1 JOIN complaints AS t2 ON t1.customer_id  =  t2.customer_id ORDER BY t2.date_complaint_raised DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 t1.телефон ИЗ справочник.клиенты КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.жалоба КАК t2 ПО t1.ссылка = t2.клиент УПОРЯДОЧИТЬ ПО t2.датасоздания УБЫВ
5699;SELECT t1.phone_number FROM customers AS t1 JOIN complaints AS t2 ON t1.customer_id  =  t2.customer_id ORDER BY t2.date_complaint_raised DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 t1.телефон ИЗ справочник.клиенты КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.жалоба КАК t2 ПО t1.ссылка = t2.клиент УПОРЯДОЧИТЬ ПО t2.датасоздания УБЫВ
5700;SELECT email_address ,  phone_number FROM customers WHERE customer_id NOT IN (SELECT customer_id FROM complaints);ВЫБРАТЬ email_address , phone_number ИЗ справочник.клиенты ГДЕ customer_id НЕ В (ВЫБРАТЬ customer_id ИЗ документ.жалоба)
5701;SELECT email_address ,  phone_number FROM customers WHERE customer_id NOT IN (SELECT customer_id FROM complaints);ВЫБРАТЬ email_address , phone_number ИЗ справочник.клиенты ГДЕ customer_id НЕ В (ВЫБРАТЬ customer_id ИЗ документ.жалоба)
5702;SELECT phone_number FROM customers UNION SELECT phone_number FROM staff;ВЫБРАТЬ phone_number ИЗ справочник.клиенты ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ phone_number ИЗ справочник.сотрудники
5703;SELECT phone_number FROM customers UNION SELECT phone_number FROM staff;ВЫБРАТЬ phone_number ИЗ справочник.клиенты ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ phone_number ИЗ справочник.сотрудники
5704;"SELECT product_description FROM products WHERE product_name  =  ""Chocolate""";"ВЫБРАТЬ описание ИЗ справочник.товары ГДЕ наименование = ""Chocolate"""
5705;"SELECT product_description FROM products WHERE product_name  =  ""Chocolate""";"ВЫБРАТЬ описание ИЗ справочник.товары ГДЕ наименование = ""Chocolate"""
5706;SELECT product_name ,  product_category_code FROM products ORDER BY product_price DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование , категория ИЗ справочник.товары УПОРЯДОЧИТЬ ПО цена УБЫВ
5707;SELECT product_name ,  product_category_code FROM products ORDER BY product_price DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование , категория ИЗ справочник.товары УПОРЯДОЧИТЬ ПО цена УБЫВ
5708;SELECT product_price FROM products WHERE product_id NOT IN (SELECT product_id FROM complaints);ВЫБРАТЬ product_price ИЗ справочник.товары ГДЕ product_id НЕ В (ВЫБРАТЬ product_id ИЗ документ.жалоба)
5709;SELECT product_price FROM products WHERE product_id NOT IN (SELECT product_id FROM complaints);ВЫБРАТЬ product_price ИЗ справочник.товары ГДЕ product_id НЕ В (ВЫБРАТЬ product_id ИЗ документ.жалоба)
5710;SELECT avg(product_price) ,  product_category_code FROM products GROUP BY product_category_code;ВЫБРАТЬ СРЕДНЕЕ(цена) , категория ИЗ справочник.товары СГРУППИРОВАТЬ ПО категория
5711;SELECT avg(product_price) ,  product_category_code FROM products GROUP BY product_category_code;ВЫБРАТЬ СРЕДНЕЕ(цена) , категория ИЗ справочник.товары СГРУППИРОВАТЬ ПО категория
5712;SELECT t1.last_name FROM staff AS t1 JOIN complaints AS t2 ON t1.staff_id  =  t2.staff_id JOIN products AS t3 ON t2.product_id  =  t3.product_id ORDER BY t3.product_price LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 t1.фамилия ИЗ справочник.сотрудники КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.жалоба КАК t2 ПО t1.ссылка = t2.ответственный ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.товары КАК t3 ПО t2.товар = t3.ссылка УПОРЯДОЧИТЬ ПО t3.цена
5713;SELECT t1.last_name FROM staff AS t1 JOIN complaints AS t2 ON t1.staff_id  =  t2.staff_id JOIN products AS t3 ON t2.product_id  =  t3.product_id ORDER BY t3.product_price LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 t1.фамилия ИЗ справочник.сотрудники КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.жалоба КАК t2 ПО t1.ссылка = t2.ответственный ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.товары КАК t3 ПО t2.товар = t3.ссылка УПОРЯДОЧИТЬ ПО t3.цена
5714;SELECT complaint_status_code FROM complaints GROUP BY complaint_status_code HAVING count(*)  >  3;ВЫБРАТЬ статус ИЗ документ.жалоба СГРУППИРОВАТЬ ПО статус ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 3
5715;SELECT complaint_status_code FROM complaints GROUP BY complaint_status_code HAVING count(*)  >  3;ВЫБРАТЬ статус ИЗ документ.жалоба СГРУППИРОВАТЬ ПО статус ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 3
5716;"SELECT last_name FROM staff WHERE email_address LIKE ""%wrau%""";"ВЫБРАТЬ фамилия ИЗ справочник.сотрудники ГДЕ электроннаяпочта ПОДОБНО ""%wrau%"""
5717;"SELECT last_name FROM staff WHERE email_address LIKE ""%wrau%""";"ВЫБРАТЬ фамилия ИЗ справочник.сотрудники ГДЕ электроннаяпочта ПОДОБНО ""%wrau%"""
5718;SELECT count(*) FROM customers GROUP BY customer_type_code ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 КОЛИЧЕСТВО(*) ИЗ справочник.клиенты СГРУППИРОВАТЬ ПО типклиента УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
5719;SELECT count(*) FROM customers GROUP BY customer_type_code ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 КОЛИЧЕСТВО(*) ИЗ справочник.клиенты СГРУППИРОВАТЬ ПО типклиента УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
5720;SELECT t1.last_name FROM staff AS t1 JOIN complaints AS t2 ON t1.staff_id  =  t2.staff_id ORDER BY t2.date_complaint_raised LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 t1.фамилия ИЗ справочник.сотрудники КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.жалоба КАК t2 ПО t1.ссылка = t2.ответственный УПОРЯДОЧИТЬ ПО t2.датасоздания
5721;SELECT t1.last_name FROM staff AS t1 JOIN complaints AS t2 ON t1.staff_id  =  t2.staff_id ORDER BY t2.date_complaint_raised LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 t1.фамилия ИЗ справочник.сотрудники КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.жалоба КАК t2 ПО t1.ссылка = t2.ответственный УПОРЯДОЧИТЬ ПО t2.датасоздания
5722;SELECT count(DISTINCT complaint_type_code) FROM complaints;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ тип) ИЗ документ.жалоба
5723;SELECT count(DISTINCT complaint_type_code) FROM complaints;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ тип) ИЗ документ.жалоба
5724;"SELECT address_line_1 ,  address_line_2 FROM customers WHERE email_address  =  ""vbogisich@example.org""";"ВЫБРАТЬ адресстрока1 , адресстрока2 ИЗ справочник.клиенты ГДЕ электроннаяпочта = ""vbogisich@example.org"""
5725;"SELECT address_line_1 ,  address_line_2 FROM customers WHERE email_address  =  ""vbogisich@example.org""";"ВЫБРАТЬ адресстрока1 , адресстрока2 ИЗ справочник.клиенты ГДЕ электроннаяпочта = ""vbogisich@example.org"""
5726;"SELECT complaint_status_code ,  count(*) FROM complaints WHERE complaint_type_code  =  ""Product Failure"" GROUP BY complaint_status_code";"ВЫБРАТЬ статус , КОЛИЧЕСТВО(*) ИЗ документ.жалоба ГДЕ тип = ""Product Failure"" СГРУППИРОВАТЬ ПО статус"
5727;"SELECT complaint_status_code ,  count(*) FROM complaints WHERE complaint_type_code  =  ""Product Failure"" GROUP BY complaint_status_code";"ВЫБРАТЬ статус , КОЛИЧЕСТВО(*) ИЗ документ.жалоба ГДЕ тип = ""Product Failure"" СГРУППИРОВАТЬ ПО статус"
5728;SELECT t1.first_name FROM staff AS t1 JOIN complaints AS t2 ON t1.staff_id  =  t2.staff_id GROUP BY t2.staff_id ORDER BY count(*) LIMIT 5;ВЫБРАТЬ ПЕРВЫЕ 5 t1.имя ИЗ справочник.сотрудники КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.жалоба КАК t2 ПО t1.ссылка = t2.ответственный СГРУППИРОВАТЬ ПО t2.ответственный УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*)
5729;SELECT t1.first_name FROM staff AS t1 JOIN complaints AS t2 ON t1.staff_id  =  t2.staff_id GROUP BY t2.staff_id ORDER BY count(*) LIMIT 5;ВЫБРАТЬ ПЕРВЫЕ 5 t1.имя ИЗ справочник.сотрудники КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.жалоба КАК t2 ПО t1.ссылка = t2.ответственный СГРУППИРОВАТЬ ПО t2.ответственный УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*)
5730;SELECT state FROM customers GROUP BY state ORDER BY count(*) LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 штат ИЗ справочник.клиенты СГРУППИРОВАТЬ ПО штат УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*)
5731;SELECT state FROM customers GROUP BY state ORDER BY count(*) LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 штат ИЗ справочник.клиенты СГРУППИРОВАТЬ ПО штат УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*)
5732;SELECT count(*) FROM submission;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.заявки
5733;SELECT count(*) FROM submission;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.заявки
5734;SELECT Author FROM submission ORDER BY Scores ASC;ВЫБРАТЬ автор ИЗ справочник.заявки УПОРЯДОЧИТЬ ПО оценка ВОЗР
5735;SELECT Author FROM submission ORDER BY Scores ASC;ВЫБРАТЬ автор ИЗ справочник.заявки УПОРЯДОЧИТЬ ПО оценка ВОЗР
5736;SELECT Author ,  College FROM submission;ВЫБРАТЬ автор , колледж ИЗ справочник.заявки
5737;SELECT Author ,  College FROM submission;ВЫБРАТЬ автор , колледж ИЗ справочник.заявки
5738;"SELECT Author FROM submission WHERE College  =  ""Florida"" OR College  =  ""Temple""";"ВЫБРАТЬ автор ИЗ справочник.заявки ГДЕ колледж = ""Florida"" ИЛИ колледж = ""Temple"""
5739;"SELECT Author FROM submission WHERE College  =  ""Florida"" OR College  =  ""Temple""";"ВЫБРАТЬ автор ИЗ справочник.заявки ГДЕ колледж = ""Florida"" ИЛИ колледж = ""Temple"""
5740;SELECT avg(Scores) FROM submission;ВЫБРАТЬ СРЕДНЕЕ(оценка) ИЗ справочник.заявки
5741;SELECT avg(Scores) FROM submission;ВЫБРАТЬ СРЕДНЕЕ(оценка) ИЗ справочник.заявки
5742;SELECT Author FROM submission ORDER BY Scores DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 автор ИЗ справочник.заявки УПОРЯДОЧИТЬ ПО оценка УБЫВ
5743;SELECT Author FROM submission ORDER BY Scores DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 автор ИЗ справочник.заявки УПОРЯДОЧИТЬ ПО оценка УБЫВ
5744;SELECT College ,  COUNT(*) FROM submission GROUP BY College;ВЫБРАТЬ колледж , КОЛИЧЕСТВО(*) ИЗ справочник.заявки СГРУППИРОВАТЬ ПО колледж
5745;SELECT College ,  COUNT(*) FROM submission GROUP BY College;ВЫБРАТЬ колледж , КОЛИЧЕСТВО(*) ИЗ справочник.заявки СГРУППИРОВАТЬ ПО колледж
5746;SELECT College FROM submission GROUP BY College ORDER BY COUNT(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 колледж ИЗ справочник.заявки СГРУППИРОВАТЬ ПО колледж УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
5747;SELECT College FROM submission GROUP BY College ORDER BY COUNT(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 колледж ИЗ справочник.заявки СГРУППИРОВАТЬ ПО колледж УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
5750;SELECT T2.Author ,  T1.Result FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID  =  T2.Submission_ID;ВЫБРАТЬ T2.автор , T1.результат ИЗ регистрсведений.результатырассмотрения КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.заявки КАК T2 ПО T1.заявка = T2.ссылка
5751;SELECT T2.Author ,  T1.Result FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID  =  T2.Submission_ID;ВЫБРАТЬ T2.автор , T1.результат ИЗ регистрсведений.результатырассмотрения КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.заявки КАК T2 ПО T1.заявка = T2.ссылка
5752;SELECT T1.Result FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID  =  T2.Submission_ID ORDER BY T2.Scores DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.результат ИЗ регистрсведений.результатырассмотрения КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.заявки КАК T2 ПО T1.заявка = T2.ссылка УПОРЯДОЧИТЬ ПО T2.оценка УБЫВ
5753;SELECT T1.Result FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID  =  T2.Submission_ID ORDER BY T2.Scores DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.результат ИЗ регистрсведений.результатырассмотрения КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.заявки КАК T2 ПО T1.заявка = T2.ссылка УПОРЯДОЧИТЬ ПО T2.оценка УБЫВ
5754;SELECT T2.Author ,  COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID  =  T2.Submission_ID GROUP BY T2.Author;ВЫБРАТЬ T2.автор , КОЛИЧЕСТВО(РАЗЛИЧНЫЕ T1.семинар) ИЗ регистрсведений.результатырассмотрения КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.заявки КАК T2 ПО T1.заявка = T2.ссылка СГРУППИРОВАТЬ ПО T2.автор
5755;SELECT T2.Author ,  COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID  =  T2.Submission_ID GROUP BY T2.Author;ВЫБРАТЬ T2.автор , КОЛИЧЕСТВО(РАЗЛИЧНЫЕ T1.семинар) ИЗ регистрсведений.результатырассмотрения КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.заявки КАК T2 ПО T1.заявка = T2.ссылка СГРУППИРОВАТЬ ПО T2.автор
5756;SELECT T2.Author FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID  =  T2.Submission_ID GROUP BY T2.Author HAVING COUNT(DISTINCT T1.workshop_id)  >  1;ВЫБРАТЬ T2.автор ИЗ регистрсведений.результатырассмотрения КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.заявки КАК T2 ПО T1.заявка = T2.ссылка СГРУППИРОВАТЬ ПО T2.автор ИМЕЮЩИЕ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ T1.семинар) > 1
5757;SELECT T2.Author FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID  =  T2.Submission_ID GROUP BY T2.Author HAVING COUNT(DISTINCT T1.workshop_id)  >  1;ВЫБРАТЬ T2.автор ИЗ регистрсведений.результатырассмотрения КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.заявки КАК T2 ПО T1.заявка = T2.ссылка СГРУППИРОВАТЬ ПО T2.автор ИМЕЮЩИЕ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ T1.семинар) > 1
5758;SELECT Date ,  Venue FROM workshop ORDER BY Venue;ВЫБРАТЬ дата , местопроведения ИЗ справочник.семинары УПОРЯДОЧИТЬ ПО местопроведения
5759;SELECT Date ,  Venue FROM workshop ORDER BY Venue;ВЫБРАТЬ дата , местопроведения ИЗ справочник.семинары УПОРЯДОЧИТЬ ПО местопроведения
5760;SELECT Author FROM submission WHERE Submission_ID NOT IN (SELECT Submission_ID FROM acceptance);ВЫБРАТЬ Author ИЗ справочник.заявки ГДЕ Submission_ID НЕ В (ВЫБРАТЬ Submission_ID ИЗ регистрсведений.результатырассмотрения)
5761;SELECT Author FROM submission WHERE Submission_ID NOT IN (SELECT Submission_ID FROM acceptance);ВЫБРАТЬ Author ИЗ справочник.заявки ГДЕ Submission_ID НЕ В (ВЫБРАТЬ Submission_ID ИЗ регистрсведений.результатырассмотрения)
5762;SELECT count(*) FROM INVESTORS;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.инвесторы
5763;SELECT Investor_details FROM INVESTORS;ВЫБРАТЬ описание ИЗ справочник.инвесторы
5764;SELECT DISTINCT lot_details FROM LOTS;ВЫБРАТЬ РАЗЛИЧНЫЕ описание ИЗ справочник.лоты
5765;SELECT max(amount_of_transaction) FROM TRANSACTIONS;ВЫБРАТЬ МАКСИМУМ(сумматранзакции) ИЗ документ.транзакция
5766;SELECT date_of_transaction ,  share_count FROM TRANSACTIONS;ВЫБРАТЬ дататранзакции , количествоакций ИЗ документ.транзакция
5767;SELECT sum(share_count) FROM TRANSACTIONS;ВЫБРАТЬ СУММА(количествоакций) ИЗ документ.транзакция
5768;SELECT transaction_id FROM TRANSACTIONS WHERE transaction_type_code  =  'PUR';"ВЫБРАТЬ ссылка ИЗ документ.транзакция ГДЕ кодвидатранзакции = ""PUR"""
5769;"SELECT date_of_transaction FROM TRANSACTIONS WHERE transaction_type_code  =  ""SALE""";"ВЫБРАТЬ дататранзакции ИЗ документ.транзакция ГДЕ кодвидатранзакции = ""SALE"""
5770;"SELECT avg(amount_of_transaction) FROM TRANSACTIONS WHERE transaction_type_code  =  ""SALE""";"ВЫБРАТЬ СРЕДНЕЕ(сумматранзакции) ИЗ документ.транзакция ГДЕ кодвидатранзакции = ""SALE"""
5771;"SELECT transaction_type_description FROM Ref_Transaction_Types WHERE transaction_type_code	  =  ""PUR""";"ВЫБРАТЬ описаниевидатранзакции ИЗ справочник.видытранзакций ГДЕ кодвидатранзакции = ""PUR"""
5772;"SELECT min(amount_of_transaction) FROM TRANSACTIONS WHERE transaction_type_code  =  ""PUR"" AND share_count  >  50";"ВЫБРАТЬ МИНИМУМ(сумматранзакции) ИЗ документ.транзакция ГДЕ кодвидатранзакции = ""PUR"" И количествоакций > 50"
5773;SELECT max(share_count) FROM TRANSACTIONS WHERE amount_of_transaction  <  10000;ВЫБРАТЬ МАКСИМУМ(количествоакций) ИЗ документ.транзакция ГДЕ сумматранзакции < 10000
5774;SELECT date_of_transaction FROM TRANSACTIONS WHERE share_count  >  100 OR amount_of_transaction  >  1000;ВЫБРАТЬ дататранзакции ИЗ документ.транзакция ГДЕ количествоакций > 100 ИЛИ сумматранзакции > 1000
5775;SELECT T1.transaction_type_description ,  T2.date_of_transaction FROM Ref_Transaction_Types AS T1 JOIN TRANSACTIONS AS T2 ON T1.transaction_type_code  =  T2.transaction_type_code WHERE T2.share_count  <  10;ВЫБРАТЬ T1.описаниевидатранзакции , T2.дататранзакции ИЗ справочник.видытранзакций КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.транзакция КАК T2 ПО T1.кодвидатранзакции = T2.кодвидатранзакции ГДЕ T2.количествоакций < 10
5776;SELECT T1.Investor_details FROM  INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id  =  T2.investor_id WHERE T2.share_count  >  100;ВЫБРАТЬ T1.описание ИЗ справочник.инвесторы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.транзакция КАК T2 ПО T1.ссылка = T2.инвестор ГДЕ T2.количествоакций > 100
5777;SELECT COUNT(DISTINCT transaction_type_code) FROM TRANSACTIONS;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ кодвидатранзакции) ИЗ документ.транзакция
5778;SELECT lot_details ,  investor_id FROM LOTS;ВЫБРАТЬ описание , инвестор ИЗ справочник.лоты
5779;"SELECT T2.lot_details FROM INVESTORS AS T1 JOIN LOTS AS T2 ON  T1.investor_id  =  T2.investor_id WHERE T1.Investor_details  =  ""l""";"ВЫБРАТЬ T2.описание ИЗ справочник.инвесторы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.лоты КАК T2 ПО T1.ссылка = T2.инвестор ГДЕ T1.описание = ""l"""
5780;SELECT T1.purchase_details FROM PURCHASES AS T1 JOIN TRANSACTIONS AS T2 ON T1.purchase_transaction_id  =  T2.transaction_id WHERE T2.amount_of_transaction  >  10000;ВЫБРАТЬ T1.описание ИЗ документ.покупка КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.транзакция КАК T2 ПО T1.ссылка = T2.ссылка ГДЕ T2.сумматранзакции > 10000
5781;SELECT T1.sales_details ,  T2.date_of_transaction FROM SALES AS T1 JOIN TRANSACTIONS AS T2 ON T1.sales_transaction_id  =  T2.transaction_id WHERE T2.amount_of_transaction  <  3000;ВЫБРАТЬ T1.описание , T2.дататранзакции ИЗ документ.продажа КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.транзакция КАК T2 ПО T1.ссылка = T2.ссылка ГДЕ T2.сумматранзакции < 3000
5782;SELECT T1.lot_details FROM LOTS AS T1 JOIN TRANSACTIONS_LOTS AS T2 ON T1.lot_id  =  T2.transaction_id JOIN TRANSACTIONS AS T3 ON T2.transaction_id  =  T3.transaction_id WHERE T3.share_count  <  50;ВЫБРАТЬ T1.описание ИЗ справочник.лоты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.транзакциилоты КАК T2 ПО T1.ссылка = T2.транзакция ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.транзакция КАК T3 ПО T2.транзакция = T3.ссылка ГДЕ T3.количествоакций < 50
5783;"SELECT T1.lot_details FROM LOTS AS T1 JOIN TRANSACTIONS_LOTS AS T2 ON  T1.lot_id  =  T2.transaction_id JOIN TRANSACTIONS AS T3 ON T2.transaction_id  =  T3.transaction_id WHERE T3.share_count  >  100 AND T3.transaction_type_code  =  ""PUR""";"ВЫБРАТЬ T1.описание ИЗ справочник.лоты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.транзакциилоты КАК T2 ПО T1.ссылка = T2.транзакция ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.транзакция КАК T3 ПО T2.транзакция = T3.ссылка ГДЕ T3.количествоакций > 100 И T3.кодвидатранзакции = ""PUR"""
5784;SELECT transaction_type_code ,  avg(amount_of_transaction) FROM TRANSACTIONS GROUP BY transaction_type_code;ВЫБРАТЬ кодвидатранзакции , СРЕДНЕЕ(сумматранзакции) ИЗ документ.транзакция СГРУППИРОВАТЬ ПО кодвидатранзакции
5785;SELECT transaction_type_code ,  max(share_count) ,  min(share_count) FROM TRANSACTIONS GROUP BY transaction_type_code;ВЫБРАТЬ кодвидатранзакции , МАКСИМУМ(количествоакций) , МИНИМУМ(количествоакций) ИЗ документ.транзакция СГРУППИРОВАТЬ ПО кодвидатранзакции
5786;SELECT investor_id ,  avg(share_count) FROM TRANSACTIONS GROUP BY investor_id;ВЫБРАТЬ инвестор , СРЕДНЕЕ(количествоакций) ИЗ документ.транзакция СГРУППИРОВАТЬ ПО инвестор
5787;SELECT investor_id ,  avg(share_count) FROM TRANSACTIONS GROUP BY investor_id ORDER BY avg(share_count);ВЫБРАТЬ инвестор , СРЕДНЕЕ(количествоакций) ИЗ документ.транзакция СГРУППИРОВАТЬ ПО инвестор УПОРЯДОЧИТЬ ПО СРЕДНЕЕ(количествоакций)
5788;SELECT investor_id ,  avg(amount_of_transaction) FROM TRANSACTIONS GROUP BY investor_id;ВЫБРАТЬ инвестор , СРЕДНЕЕ(сумматранзакции) ИЗ документ.транзакция СГРУППИРОВАТЬ ПО инвестор
5789;SELECT T2.lot_id ,  avg(amount_of_transaction) FROM TRANSACTIONS AS T1 JOIN Transactions_Lots AS T2 ON T1.transaction_id  =  T2.transaction_id GROUP BY T2.lot_id;ВЫБРАТЬ T2.лот , СРЕДНЕЕ(amount_of_transaction) ИЗ документ.транзакция КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.транзакциилоты КАК T2 ПО T1.ссылка = T2.транзакция СГРУППИРОВАТЬ ПО T2.лот
5790;SELECT T2.lot_id ,  avg(amount_of_transaction) FROM TRANSACTIONS AS T1 JOIN Transactions_Lots AS T2 ON T1.transaction_id  =  T2.transaction_id GROUP BY T2.lot_id ORDER BY avg(amount_of_transaction);ВЫБРАТЬ T2.лот , СРЕДНЕЕ(amount_of_transaction) ИЗ документ.транзакция КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.транзакциилоты КАК T2 ПО T1.ссылка = T2.транзакция СГРУППИРОВАТЬ ПО T2.лот УПОРЯДОЧИТЬ ПО СРЕДНЕЕ(amount_of_transaction)
5791;"SELECT investor_id ,  COUNT(*) FROM TRANSACTIONS WHERE transaction_type_code  =  ""SALE"" GROUP BY investor_id";"ВЫБРАТЬ инвестор , КОЛИЧЕСТВО(*) ИЗ документ.транзакция ГДЕ кодвидатранзакции = ""SALE"" СГРУППИРОВАТЬ ПО инвестор"
5792;SELECT investor_id ,  COUNT(*) FROM TRANSACTIONS GROUP BY investor_id;ВЫБРАТЬ инвестор , КОЛИЧЕСТВО(*) ИЗ документ.транзакция СГРУППИРОВАТЬ ПО инвестор
5793;SELECT transaction_type_code FROM TRANSACTIONS GROUP BY transaction_type_code ORDER BY COUNT(*) ASC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 кодвидатранзакции ИЗ документ.транзакция СГРУППИРОВАТЬ ПО кодвидатранзакции УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) ВОЗР
5794;SELECT transaction_type_code FROM TRANSACTIONS GROUP BY transaction_type_code ORDER BY COUNT(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 кодвидатранзакции ИЗ документ.транзакция СГРУППИРОВАТЬ ПО кодвидатранзакции УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
5795;SELECT T1.transaction_type_description FROM Ref_Transaction_Types AS T1 JOIN TRANSACTIONS AS T2 ON T1.transaction_type_code  =  T2.transaction_type_code GROUP BY T1.transaction_type_code ORDER BY COUNT(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.описаниевидатранзакции ИЗ справочник.видытранзакций КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.транзакция КАК T2 ПО T1.кодвидатранзакции = T2.кодвидатранзакции СГРУППИРОВАТЬ ПО T1.кодвидатранзакции УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
5796;SELECT T2.investor_id ,  T1.Investor_details FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id  =  T2.investor_id GROUP BY T2.investor_id ORDER BY COUNT(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.инвестор , T1.описание ИЗ справочник.инвесторы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.транзакция КАК T2 ПО T1.ссылка = T2.инвестор СГРУППИРОВАТЬ ПО T2.инвестор УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
5797;SELECT T2.investor_id ,  T1.Investor_details FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id  =  T2.investor_id GROUP BY T2.investor_id ORDER BY COUNT(*) DESC LIMIT 3;ВЫБРАТЬ ПЕРВЫЕ 3 T2.инвестор , T1.описание ИЗ справочник.инвесторы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.транзакция КАК T2 ПО T1.ссылка = T2.инвестор СГРУППИРОВАТЬ ПО T2.инвестор УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
5798;SELECT T2.investor_id FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id  =  T2.investor_id GROUP BY T2.investor_id HAVING COUNT(*)  >=  2;ВЫБРАТЬ T2.инвестор ИЗ справочник.инвесторы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.транзакция КАК T2 ПО T1.ссылка = T2.инвестор СГРУППИРОВАТЬ ПО T2.инвестор ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
5799;"SELECT T2.investor_id ,  T1.Investor_details FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id  =  T2.investor_id WHERE T2.transaction_type_code  =  ""SALE"" GROUP BY T2.investor_id HAVING COUNT(*)  >=  2";"ВЫБРАТЬ T2.инвестор , T1.описание ИЗ справочник.инвесторы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.транзакция КАК T2 ПО T1.ссылка = T2.инвестор ГДЕ T2.кодвидатранзакции = ""SALE"" СГРУППИРОВАТЬ ПО T2.инвестор ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2"
5800;SELECT date_of_transaction FROM TRANSACTIONS WHERE share_count  >=  100 OR amount_of_transaction  >=  100;ВЫБРАТЬ дататранзакции ИЗ документ.транзакция ГДЕ количествоакций >= 100 ИЛИ сумматранзакции >= 100
5801;SELECT sales_details FROM sales UNION SELECT purchase_details FROM purchases;ВЫБРАТЬ sales_details ИЗ документ.продажа ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ purchase_details ИЗ документ.покупка
5803;SELECT count(*) FROM HOTELS;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.отели
5804;SELECT count(*) FROM HOTELS;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.отели
5805;SELECT price_range FROM HOTELS;ВЫБРАТЬ ценоваякатегория ИЗ справочник.отели
5806;SELECT price_range FROM HOTELS;ВЫБРАТЬ ценоваякатегория ИЗ справочник.отели
5807;SELECT DISTINCT Location_Name FROM LOCATIONS;ВЫБРАТЬ РАЗЛИЧНЫЕ наименование ИЗ справочник.локации
5808;SELECT DISTINCT Location_Name FROM LOCATIONS;ВЫБРАТЬ РАЗЛИЧНЫЕ наименование ИЗ справочник.локации
5809;SELECT Name ,  Other_Details FROM Staff;ВЫБРАТЬ имя , прочее ИЗ справочник.сотрудникидостопримечательностей
5810;SELECT Name ,  Other_Details FROM Staff;ВЫБРАТЬ имя , прочее ИЗ справочник.сотрудникидостопримечательностей
5811;SELECT Tourist_Details FROM VISITORS;ВЫБРАТЬ описание ИЗ справочник.туристы
5812;SELECT Tourist_Details FROM VISITORS;ВЫБРАТЬ описание ИЗ справочник.туристы
5813;"SELECT price_range FROM HOTELS WHERE star_rating_code  =  ""5""";"ВЫБРАТЬ ценоваякатегория ИЗ справочник.отели ГДЕ класс = ""5"""
5814;"SELECT price_range FROM HOTELS WHERE star_rating_code  =  ""5""";"ВЫБРАТЬ ценоваякатегория ИЗ справочник.отели ГДЕ класс = ""5"""
5815;"SELECT avg(price_range) FROM HOTELS WHERE star_rating_code  =  ""5"" AND pets_allowed_yn  =  1";"ВЫБРАТЬ СРЕДНЕЕ(ценоваякатегория) ИЗ справочник.отели ГДЕ класс = ""5"" И разрешеныживотные = 1"
5816;"SELECT avg(price_range) FROM HOTELS WHERE star_rating_code  =  ""5"" AND pets_allowed_yn  =  1";"ВЫБРАТЬ СРЕДНЕЕ(ценоваякатегория) ИЗ справочник.отели ГДЕ класс = ""5"" И разрешеныживотные = 1"
5817;"SELECT Address FROM LOCATIONS WHERE Location_Name  =  ""UK Gallery""";"ВЫБРАТЬ адрес ИЗ справочник.локации ГДЕ наименование = ""UK Gallery"""
5818;"SELECT Address FROM LOCATIONS WHERE Location_Name  =  ""UK Gallery""";"ВЫБРАТЬ адрес ИЗ справочник.локации ГДЕ наименование = ""UK Gallery"""
5819;"SELECT Other_Details FROM LOCATIONS WHERE Location_Name  =  ""UK Gallery""";"ВЫБРАТЬ прочее ИЗ справочник.локации ГДЕ наименование = ""UK Gallery"""
5820;"SELECT Other_Details FROM LOCATIONS WHERE Location_Name  =  ""UK Gallery""";"ВЫБРАТЬ прочее ИЗ справочник.локации ГДЕ наименование = ""UK Gallery"""
5821;"SELECT Location_Name FROM LOCATIONS WHERE Location_Name LIKE ""%film%""";"ВЫБРАТЬ наименование ИЗ справочник.локации ГДЕ наименование ПОДОБНО ""%film%"""
5822;"SELECT Location_Name FROM LOCATIONS WHERE Location_Name LIKE ""%film%""";"ВЫБРАТЬ наименование ИЗ справочник.локации ГДЕ наименование ПОДОБНО ""%film%"""
5823;SELECT count(DISTINCT Name) FROM PHOTOS;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ наименование) ИЗ регистрсведений.фотографии
5824;SELECT count(DISTINCT Name) FROM PHOTOS;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ наименование) ИЗ регистрсведений.фотографии
5825;SELECT DISTINCT Visit_Date FROM VISITS;ВЫБРАТЬ РАЗЛИЧНЫЕ датавизита ИЗ регистрсведений.визиты
5826;SELECT DISTINCT Visit_Date FROM VISITS;ВЫБРАТЬ РАЗЛИЧНЫЕ датавизита ИЗ регистрсведений.визиты
5827;"SELECT Name FROM TOURIST_ATTRACTIONS WHERE How_to_Get_There  =  ""bus""";"ВЫБРАТЬ наименование ИЗ справочник.достопримечательности ГДЕ какдобраться = ""bus"""
5828;"SELECT Name FROM TOURIST_ATTRACTIONS WHERE How_to_Get_There  =  ""bus""";"ВЫБРАТЬ наименование ИЗ справочник.достопримечательности ГДЕ какдобраться = ""bus"""
5829;"SELECT Name ,  Opening_Hours FROM TOURIST_ATTRACTIONS WHERE How_to_Get_There  =  ""bus"" OR How_to_Get_There  =  ""walk""";"ВЫБРАТЬ наименование , часыработы ИЗ справочник.достопримечательности ГДЕ какдобраться = ""bus"" ИЛИ какдобраться = ""walk"""
5830;"SELECT Name ,  Opening_Hours FROM TOURIST_ATTRACTIONS WHERE How_to_Get_There  =  ""bus"" OR How_to_Get_There  =  ""walk""";"ВЫБРАТЬ наименование , часыработы ИЗ справочник.достопримечательности ГДЕ какдобраться = ""bus"" ИЛИ какдобраться = ""walk"""
5831;SELECT T2.star_rating_description FROM HOTELS AS T1 JOIN Ref_Hotel_Star_Ratings AS T2 ON T1.star_rating_code  =  T2.star_rating_code WHERE T1.price_range  >  10000;ВЫБРАТЬ T2.описание ИЗ справочник.отели КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.классыотелей КАК T2 ПО T1.класс = T2.код ГДЕ T1.ценоваякатегория > 10000
5832;SELECT T2.star_rating_description FROM HOTELS AS T1 JOIN Ref_Hotel_Star_Ratings AS T2 ON T1.star_rating_code  =  T2.star_rating_code WHERE T1.price_range  >  10000;ВЫБРАТЬ T2.описание ИЗ справочник.отели КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.классыотелей КАК T2 ПО T1.класс = T2.код ГДЕ T1.ценоваякатегория > 10000
5833;SELECT T1.Museum_Details ,  T2.Opening_Hours FROM MUSEUMS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Museum_ID  =  T2.Tourist_Attraction_ID;ВЫБРАТЬ T1.описание , T2.часыработы ИЗ справочник.музеи КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.достопримечательности КАК T2 ПО T1.ссылка = T2.ссылка
5834;SELECT T1.Museum_Details ,  T2.Opening_Hours FROM MUSEUMS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Museum_ID  =  T2.Tourist_Attraction_ID;ВЫБРАТЬ T1.описание , T2.часыработы ИЗ справочник.музеи КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.достопримечательности КАК T2 ПО T1.ссылка = T2.ссылка
5835;"SELECT T2.Name FROM PHOTOS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID WHERE T1.Name  =  ""game1""";"ВЫБРАТЬ T2.наименование ИЗ регистрсведений.фотографии КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.достопримечательности КАК T2 ПО T1.достопримечательность = T2.ссылка ГДЕ T1.наименование = ""game1"""
5836;"SELECT T2.Name FROM PHOTOS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID WHERE T1.Name  =  ""game1""";"ВЫБРАТЬ T2.наименование ИЗ регистрсведений.фотографии КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.достопримечательности КАК T2 ПО T1.достопримечательность = T2.ссылка ГДЕ T1.наименование = ""game1"""
5837;"SELECT T1.Name ,  T1.Description FROM PHOTOS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID WHERE T2.Name  =  ""film festival""";"ВЫБРАТЬ T1.наименование , T1.описание ИЗ регистрсведений.фотографии КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.достопримечательности КАК T2 ПО T1.достопримечательность = T2.ссылка ГДЕ T2.наименование = ""film festival"""
5838;"SELECT T1.Name ,  T1.Description FROM PHOTOS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID WHERE T2.Name  =  ""film festival""";"ВЫБРАТЬ T1.наименование , T1.описание ИЗ регистрсведений.фотографии КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.достопримечательности КАК T2 ПО T1.достопримечательность = T2.ссылка ГДЕ T2.наименование = ""film festival"""
5839;SELECT T1.Royal_Family_Details ,  T2.How_to_Get_There FROM ROYAL_FAMILY AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Royal_Family_ID  =  T2.Tourist_Attraction_ID;ВЫБРАТЬ T1.описание , T2.какдобраться ИЗ справочник.королевскиесемьи КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.достопримечательности КАК T2 ПО T1.ссылка = T2.ссылка
5840;SELECT T1.Royal_Family_Details ,  T2.How_to_Get_There FROM ROYAL_FAMILY AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Royal_Family_ID  =  T2.Tourist_Attraction_ID;ВЫБРАТЬ T1.описание , T2.какдобраться ИЗ справочник.королевскиесемьи КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.достопримечательности КАК T2 ПО T1.ссылка = T2.ссылка
5841;"SELECT T1.Shop_Details FROM SHOPS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Shop_ID  =  T2.Tourist_Attraction_ID WHERE T2.How_to_Get_There  =  ""walk""";"ВЫБРАТЬ T1.описание ИЗ справочник.магазины КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.достопримечательности КАК T2 ПО T1.ссылка = T2.ссылка ГДЕ T2.какдобраться = ""walk"""
5842;"SELECT T1.Shop_Details FROM SHOPS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Shop_ID  =  T2.Tourist_Attraction_ID WHERE T2.How_to_Get_There  =  ""walk""";"ВЫБРАТЬ T1.описание ИЗ справочник.магазины КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.достопримечательности КАК T2 ПО T1.ссылка = T2.ссылка ГДЕ T2.какдобраться = ""walk"""
5843;"SELECT T1.Name FROM STAFF AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID WHERE T2.Name  =  ""US museum""";"ВЫБРАТЬ T1.имя ИЗ справочник.сотрудникидостопримечательностей КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.достопримечательности КАК T2 ПО T1.достопримечательность = T2.ссылка ГДЕ T2.наименование = ""US museum"""
5844;"SELECT T1.Name FROM STAFF AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID WHERE T2.Name  =  ""US museum""";"ВЫБРАТЬ T1.имя ИЗ справочник.сотрудникидостопримечательностей КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.достопримечательности КАК T2 ПО T1.достопримечательность = T2.ссылка ГДЕ T2.наименование = ""US museum"""
5845;"SELECT T1.Market_Details FROM Street_Markets AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Market_ID  =  T2.Tourist_Attraction_ID WHERE T2.How_to_Get_There  =  ""walk"" OR  T2.How_to_Get_There  =  ""bus""";"ВЫБРАТЬ T1.описание ИЗ справочник.уличныерынки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.достопримечательности КАК T2 ПО T1.ссылка = T2.ссылка ГДЕ T2.какдобраться = ""walk"" ИЛИ T2.какдобраться = ""bus"""
5846;"SELECT T1.Market_Details FROM Street_Markets AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Market_ID  =  T2.Tourist_Attraction_ID WHERE T2.How_to_Get_There  =  ""walk"" OR  T2.How_to_Get_There  =  ""bus""";"ВЫБРАТЬ T1.описание ИЗ справочник.уличныерынки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.достопримечательности КАК T2 ПО T1.ссылка = T2.ссылка ГДЕ T2.какдобраться = ""walk"" ИЛИ T2.какдобраться = ""bus"""
5847;"SELECT T2.Visit_Date ,  T2.Visit_Details FROM VISITORS AS T1 JOIN VISITS AS T2 ON T1.Tourist_ID  =  T2.Tourist_ID WHERE T1.Tourist_Details  =  ""Vincent""";"ВЫБРАТЬ T2.датавизита , T2.прочее ИЗ справочник.туристы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.визиты КАК T2 ПО T1.ссылка = T2.турист ГДЕ T1.описание = ""Vincent"""
5848;"SELECT T2.Visit_Date ,  T2.Visit_Details FROM VISITORS AS T1 JOIN VISITS AS T2 ON T1.Tourist_ID  =  T2.Tourist_ID WHERE T1.Tourist_Details  =  ""Vincent""";"ВЫБРАТЬ T2.датавизита , T2.прочее ИЗ справочник.туристы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.визиты КАК T2 ПО T1.ссылка = T2.турист ГДЕ T1.описание = ""Vincent"""
5849;"SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID JOIN VISITORS AS T3 ON T2.Tourist_ID  =  T3.Tourist_ID WHERE T3.Tourist_Details  =  ""Vincent""";"ВЫБРАТЬ T1.наименование ИЗ справочник.достопримечательности КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.визиты КАК T2 ПО T1.ссылка = T2.достопримечательность ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.туристы КАК T3 ПО T2.турист = T3.ссылка ГДЕ T3.описание = ""Vincent"""
5850;"SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID JOIN VISITORS AS T3 ON T2.Tourist_ID  =  T3.Tourist_ID WHERE T3.Tourist_Details  =  ""Vincent""";"ВЫБРАТЬ T1.наименование ИЗ справочник.достопримечательности КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.визиты КАК T2 ПО T1.ссылка = T2.достопримечательность ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.туристы КАК T3 ПО T2.турист = T3.ссылка ГДЕ T3.описание = ""Vincent"""
5851;"SELECT T1.Name ,  T3.Visit_Date FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID  =  T3.Tourist_Attraction_ID AND T2.Tourist_ID  =  T3.Tourist_ID WHERE T2.Tourist_Details  =  ""Vincent"" OR T2.Tourist_Details  =  ""Vivian""";"ВЫБРАТЬ T1.наименование , T3.датавизита ИЗ справочник.достопримечательности КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.туристы КАК T2 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.визиты КАК T3 ПО T1.ссылка = T3.достопримечательность И T2.ссылка = T3.турист ГДЕ T2.описание = ""Vincent"" ИЛИ T2.описание = ""Vivian"""
5852;"SELECT T1.Name ,  T3.Visit_Date FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID  =  T3.Tourist_Attraction_ID AND T2.Tourist_ID  =  T3.Tourist_ID WHERE T2.Tourist_Details  =  ""Vincent"" OR T2.Tourist_Details  =  ""Vivian""";"ВЫБРАТЬ T1.наименование , T3.датавизита ИЗ справочник.достопримечательности КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.туристы КАК T2 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.визиты КАК T3 ПО T1.ссылка = T3.достопримечательность И T2.ссылка = T3.турист ГДЕ T2.описание = ""Vincent"" ИЛИ T2.описание = ""Vivian"""
5853;SELECT star_rating_code ,  avg(price_range) FROM HOTELS GROUP BY star_rating_code;ВЫБРАТЬ класс , СРЕДНЕЕ(ценоваякатегория) ИЗ справочник.отели СГРУППИРОВАТЬ ПО класс
5854;SELECT star_rating_code ,  avg(price_range) FROM HOTELS GROUP BY star_rating_code;ВЫБРАТЬ класс , СРЕДНЕЕ(ценоваякатегория) ИЗ справочник.отели СГРУППИРОВАТЬ ПО класс
5855;SELECT pets_allowed_yn ,  avg(price_range) FROM HOTELS GROUP BY pets_allowed_yn;ВЫБРАТЬ разрешеныживотные , СРЕДНЕЕ(ценоваякатегория) ИЗ справочник.отели СГРУППИРОВАТЬ ПО разрешеныживотные
5856;SELECT pets_allowed_yn ,  avg(price_range) FROM HOTELS GROUP BY pets_allowed_yn;ВЫБРАТЬ разрешеныживотные , СРЕДНЕЕ(ценоваякатегория) ИЗ справочник.отели СГРУППИРОВАТЬ ПО разрешеныживотные
5857;SELECT hotel_id ,  star_rating_code FROM HOTELS ORDER BY price_range ASC;ВЫБРАТЬ ссылка , класс ИЗ справочник.отели УПОРЯДОЧИТЬ ПО ценоваякатегория ВОЗР
5858;SELECT hotel_id ,  star_rating_code FROM HOTELS ORDER BY price_range ASC;ВЫБРАТЬ ссылка , класс ИЗ справочник.отели УПОРЯДОЧИТЬ ПО ценоваякатегория ВОЗР
5859;SELECT other_hotel_details FROM HOTELS ORDER BY price_range DESC LIMIT 3;ВЫБРАТЬ ПЕРВЫЕ 3 прочее ИЗ справочник.отели УПОРЯДОЧИТЬ ПО ценоваякатегория УБЫВ
5860;SELECT other_hotel_details FROM HOTELS ORDER BY price_range DESC LIMIT 3;ВЫБРАТЬ ПЕРВЫЕ 3 прочее ИЗ справочник.отели УПОРЯДОЧИТЬ ПО ценоваякатегория УБЫВ
5861;SELECT other_hotel_details ,  star_rating_code FROM HOTELS ORDER BY price_range ASC LIMIT 3;ВЫБРАТЬ ПЕРВЫЕ 3 прочее , класс ИЗ справочник.отели УПОРЯДОЧИТЬ ПО ценоваякатегория ВОЗР
5862;SELECT other_hotel_details ,  star_rating_code FROM HOTELS ORDER BY price_range ASC LIMIT 3;ВЫБРАТЬ ПЕРВЫЕ 3 прочее , класс ИЗ справочник.отели УПОРЯДОЧИТЬ ПО ценоваякатегория ВОЗР
5863;SELECT How_to_Get_There FROM Tourist_Attractions GROUP BY How_to_Get_There ORDER BY COUNT(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 какдобраться ИЗ справочник.достопримечательности СГРУППИРОВАТЬ ПО какдобраться УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
5864;SELECT How_to_Get_There FROM Tourist_Attractions GROUP BY How_to_Get_There ORDER BY COUNT(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 какдобраться ИЗ справочник.достопримечательности СГРУППИРОВАТЬ ПО какдобраться УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
5865;SELECT T1.Attraction_Type_Description ,  T2.Attraction_Type_Code FROM Ref_Attraction_Types AS T1 JOIN Tourist_Attractions AS T2 ON T1.Attraction_Type_Code  =  T2.Attraction_Type_Code GROUP BY T2.Attraction_Type_Code ORDER BY COUNT(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.описание , T2.вид ИЗ справочник.видыдостопримечательностей КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.достопримечательности КАК T2 ПО T1.код = T2.вид СГРУППИРОВАТЬ ПО T2.вид УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
5866;SELECT T1.Attraction_Type_Description ,  T2.Attraction_Type_Code FROM Ref_Attraction_Types AS T1 JOIN Tourist_Attractions AS T2 ON T1.Attraction_Type_Code  =  T2.Attraction_Type_Code GROUP BY T2.Attraction_Type_Code ORDER BY COUNT(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.описание , T2.вид ИЗ справочник.видыдостопримечательностей КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.достопримечательности КАК T2 ПО T1.код = T2.вид СГРУППИРОВАТЬ ПО T2.вид УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
5867;SELECT How_to_Get_There ,  COUNT(*) FROM Tourist_Attractions GROUP BY How_to_Get_There;ВЫБРАТЬ какдобраться , КОЛИЧЕСТВО(*) ИЗ справочник.достопримечательности СГРУППИРОВАТЬ ПО какдобраться
5868;SELECT How_to_Get_There ,  COUNT(*) FROM Tourist_Attractions GROUP BY How_to_Get_There;ВЫБРАТЬ какдобраться , КОЛИЧЕСТВО(*) ИЗ справочник.достопримечательности СГРУППИРОВАТЬ ПО какдобраться
5869;SELECT T1.Name ,  T2.Tourist_Attraction_ID ,   COUNT(*) FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID;ВЫБРАТЬ T1.наименование , T2.достопримечательность , КОЛИЧЕСТВО(*) ИЗ справочник.достопримечательности КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.визиты КАК T2 ПО T1.ссылка = T2.достопримечательность СГРУППИРОВАТЬ ПО T2.достопримечательность
5870;SELECT T1.Name ,  T2.Tourist_Attraction_ID ,   COUNT(*) FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID;ВЫБРАТЬ T1.наименование , T2.достопримечательность , КОЛИЧЕСТВО(*) ИЗ справочник.достопримечательности КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.визиты КАК T2 ПО T1.ссылка = T2.достопримечательность СГРУППИРОВАТЬ ПО T2.достопримечательность
5871;SELECT T1.Name ,  T2.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID HAVING count(*)  >=  2;ВЫБРАТЬ T1.наименование , T2.достопримечательность ИЗ справочник.достопримечательности КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.визиты КАК T2 ПО T1.ссылка = T2.достопримечательность СГРУППИРОВАТЬ ПО T2.достопримечательность ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
5872;SELECT T1.Name ,  T2.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID HAVING count(*)  >=  2;ВЫБРАТЬ T1.наименование , T2.достопримечательность ИЗ справочник.достопримечательности КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.визиты КАК T2 ПО T1.ссылка = T2.достопримечательность СГРУППИРОВАТЬ ПО T2.достопримечательность ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
5873;SELECT T1.Name ,  T1.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID HAVING count(*)  <=  1;ВЫБРАТЬ T1.наименование , T1.ссылка ИЗ справочник.достопримечательности КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.визиты КАК T2 ПО T1.ссылка = T2.достопримечательность СГРУППИРОВАТЬ ПО T2.достопримечательность ИМЕЮЩИЕ КОЛИЧЕСТВО(*) <= 1
5874;SELECT T1.Name ,  T1.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID HAVING count(*)  <=  1;ВЫБРАТЬ T1.наименование , T1.ссылка ИЗ справочник.достопримечательности КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.визиты КАК T2 ПО T1.ссылка = T2.достопримечательность СГРУППИРОВАТЬ ПО T2.достопримечательность ИМЕЮЩИЕ КОЛИЧЕСТВО(*) <= 1
5875;"SELECT T2.Name FROM Locations AS T1 JOIN Tourist_Attractions AS T2 ON T1.Location_ID  =  T2.Location_ID WHERE T1.Address  =  ""660 Shea Crescent"" OR T2.How_to_Get_There  =  ""walk""";"ВЫБРАТЬ T2.наименование ИЗ справочник.локации КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.достопримечательности КАК T2 ПО T1.ссылка = T2.локация ГДЕ T1.адрес = ""660 Shea Crescent"" ИЛИ T2.какдобраться = ""walk"""
5876;"SELECT T2.Name FROM Locations AS T1 JOIN Tourist_Attractions AS T2 ON T1.Location_ID  =  T2.Location_ID WHERE T1.Address  =  ""660 Shea Crescent"" OR T2.How_to_Get_There  =  ""walk""";"ВЫБРАТЬ T2.наименование ИЗ справочник.локации КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.достопримечательности КАК T2 ПО T1.ссылка = T2.локация ГДЕ T1.адрес = ""660 Shea Crescent"" ИЛИ T2.какдобраться = ""walk"""
5877;SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN Tourist_Attraction_Features AS T2 ON T1.tourist_attraction_id  =  T2.tourist_attraction_id JOIN Features AS T3 ON T2.Feature_ID  =  T3.Feature_ID WHERE T3.feature_Details  =  'park' UNION SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN Tourist_Attraction_Features AS T2 ON T1.tourist_attraction_id  =  T2.tourist_attraction_id JOIN Features AS T3 ON T2.Feature_ID  =  T3.Feature_ID WHERE T3.feature_Details  =  'shopping';"ВЫБРАТЬ T1.наименование ИЗ справочник.достопримечательности КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.особенностидостопримечательностей КАК T2 ПО T1.ссылка = T2.достопримечательность ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.особенности КАК T3 ПО T2.особенность = T3.ссылка ГДЕ T3.описание = ""park"" ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ T1.наименование ИЗ справочник.достопримечательности КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.особенностидостопримечательностей КАК T2 ПО T1.ссылка = T2.достопримечательность ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.особенности КАК T3 ПО T2.особенность = T3.ссылка ГДЕ T3.описание = ""shopping"""
5878;SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN Tourist_Attraction_Features AS T2 ON T1.tourist_attraction_id  =  T2.tourist_attraction_id JOIN Features AS T3 ON T2.Feature_ID  =  T3.Feature_ID WHERE T3.feature_Details  =  'park' UNION SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN Tourist_Attraction_Features AS T2 ON T1.tourist_attraction_id  =  T2.tourist_attraction_id JOIN Features AS T3 ON T2.Feature_ID  =  T3.Feature_ID WHERE T3.feature_Details  =  'shopping';"ВЫБРАТЬ T1.наименование ИЗ справочник.достопримечательности КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.особенностидостопримечательностей КАК T2 ПО T1.ссылка = T2.достопримечательность ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.особенности КАК T3 ПО T2.особенность = T3.ссылка ГДЕ T3.описание = ""park"" ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ T1.наименование ИЗ справочник.достопримечательности КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.особенностидостопримечательностей КАК T2 ПО T1.ссылка = T2.достопримечательность ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.особенности КАК T3 ПО T2.особенность = T3.ссылка ГДЕ T3.описание = ""shopping"""
5879;"SELECT T2.Name FROM Locations AS T1 JOIN Tourist_Attractions AS T2 ON T1.Location_ID  =  T2.Location_ID WHERE T1.Address  =  ""254 Ottilie Junction"" OR T2.How_to_Get_There  =  ""bus""";"ВЫБРАТЬ T2.наименование ИЗ справочник.локации КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.достопримечательности КАК T2 ПО T1.ссылка = T2.локация ГДЕ T1.адрес = ""254 Ottilie Junction"" ИЛИ T2.какдобраться = ""bus"""
5880;"SELECT T2.Name FROM Locations AS T1 JOIN Tourist_Attractions AS T2 ON T1.Location_ID  =  T2.Location_ID WHERE T1.Address  =  ""254 Ottilie Junction"" OR T2.How_to_Get_There  =  ""bus""";"ВЫБРАТЬ T2.наименование ИЗ справочник.локации КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.достопримечательности КАК T2 ПО T1.ссылка = T2.локация ГДЕ T1.адрес = ""254 Ottilie Junction"" ИЛИ T2.какдобраться = ""bus"""
5885;SELECT count(*) FROM Visitors WHERE Tourist_ID NOT IN ( SELECT Tourist_ID FROM Visits );ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.туристы ГДЕ Tourist_ID НЕ В ( ВЫБРАТЬ Tourist_ID ИЗ регистрсведений.визиты )
5886;SELECT count(*) FROM Visitors WHERE Tourist_ID NOT IN ( SELECT Tourist_ID FROM Visits );ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.туристы ГДЕ Tourist_ID НЕ В ( ВЫБРАТЬ Tourist_ID ИЗ регистрсведений.визиты )
5887;SELECT count(*) FROM Video_games;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.видеоигры
5888;SELECT count(*) FROM Video_games;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.видеоигры
5889;SELECT count(DISTINCT gtype) FROM Video_games;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ жанр) ИЗ справочник.видеоигры
5890;SELECT count(DISTINCT gtype) FROM Video_games;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ жанр) ИЗ справочник.видеоигры
5891;SELECT DISTINCT gtype FROM Video_games;ВЫБРАТЬ РАЗЛИЧНЫЕ жанр ИЗ справочник.видеоигры
5892;SELECT DISTINCT gtype FROM Video_games;ВЫБРАТЬ РАЗЛИЧНЫЕ жанр ИЗ справочник.видеоигры
5893;SELECT gname ,  gtype FROM Video_games ORDER BY gname;ВЫБРАТЬ наименование , жанр ИЗ справочник.видеоигры УПОРЯДОЧИТЬ ПО наименование
5894;SELECT gname ,  gtype FROM Video_games ORDER BY gname;ВЫБРАТЬ наименование , жанр ИЗ справочник.видеоигры УПОРЯДОЧИТЬ ПО наименование
5895;"SELECT gname FROM Video_games WHERE gtype  =  ""Collectible card game""";"ВЫБРАТЬ наименование ИЗ справочник.видеоигры ГДЕ жанр = ""Collectible card game"""
5896;"SELECT gname FROM Video_games WHERE gtype  =  ""Collectible card game""";"ВЫБРАТЬ наименование ИЗ справочник.видеоигры ГДЕ жанр = ""Collectible card game"""
5897;"SELECT gtype FROM Video_games WHERE gname  =  ""Call of Destiny""";"ВЫБРАТЬ жанр ИЗ справочник.видеоигры ГДЕ наименование = ""Call of Destiny"""
5898;"SELECT gtype FROM Video_games WHERE gname  =  ""Call of Destiny""";"ВЫБРАТЬ жанр ИЗ справочник.видеоигры ГДЕ наименование = ""Call of Destiny"""
5899;"SELECT count(*) FROM Video_games WHERE gtype  =  ""Massively multiplayer online game""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.видеоигры ГДЕ жанр = ""Massively multiplayer online game"""
5900;"SELECT count(*) FROM Video_games WHERE gtype  =  ""Massively multiplayer online game""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.видеоигры ГДЕ жанр = ""Massively multiplayer online game"""
5901;SELECT gtype ,  count(*) FROM Video_games GROUP BY gtype;ВЫБРАТЬ жанр , КОЛИЧЕСТВО(*) ИЗ справочник.видеоигры СГРУППИРОВАТЬ ПО жанр
5902;SELECT gtype ,  count(*) FROM Video_games GROUP BY gtype;ВЫБРАТЬ жанр , КОЛИЧЕСТВО(*) ИЗ справочник.видеоигры СГРУППИРОВАТЬ ПО жанр
5903;SELECT gtype FROM Video_games GROUP BY gtype ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 жанр ИЗ справочник.видеоигры СГРУППИРОВАТЬ ПО жанр УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
5904;SELECT gtype FROM Video_games GROUP BY gtype ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 жанр ИЗ справочник.видеоигры СГРУППИРОВАТЬ ПО жанр УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
5905;SELECT gtype FROM Video_games GROUP BY gtype ORDER BY count(*) LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 жанр ИЗ справочник.видеоигры СГРУППИРОВАТЬ ПО жанр УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*)
5906;SELECT gtype FROM Video_games GROUP BY gtype ORDER BY count(*) LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 жанр ИЗ справочник.видеоигры СГРУППИРОВАТЬ ПО жанр УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*)
5907;"SELECT StuID FROM Student WHERE city_code  =  ""CHI""";"ВЫБРАТЬ ссылка ИЗ справочник.студенты ГДЕ кодгорода = ""CHI"""
5908;"SELECT StuID FROM Student WHERE city_code  =  ""CHI""";"ВЫБРАТЬ ссылка ИЗ справочник.студенты ГДЕ кодгорода = ""CHI"""
5909;SELECT StuID FROM Student WHERE Advisor  =  1121;ВЫБРАТЬ ссылка ИЗ справочник.студенты ГДЕ руководитель = 1121
5910;SELECT StuID FROM Student WHERE Advisor  =  1121;ВЫБРАТЬ ссылка ИЗ справочник.студенты ГДЕ руководитель = 1121
5911;SELECT Fname FROM Student WHERE Major  =  600;ВЫБРАТЬ имя ИЗ справочник.студенты ГДЕ специальность = 600
5912;SELECT Fname FROM Student WHERE Major  =  600;ВЫБРАТЬ имя ИЗ справочник.студенты ГДЕ специальность = 600
5913;SELECT major ,  avg(age) ,  min(age) ,  max(age) FROM Student GROUP BY major;ВЫБРАТЬ специальность , СРЕДНЕЕ(возраст) , МИНИМУМ(возраст) , МАКСИМУМ(возраст) ИЗ справочник.студенты СГРУППИРОВАТЬ ПО специальность
5914;SELECT major ,  avg(age) ,  min(age) ,  max(age) FROM Student GROUP BY major;ВЫБРАТЬ специальность , СРЕДНЕЕ(возраст) , МИНИМУМ(возраст) , МАКСИМУМ(возраст) ИЗ справочник.студенты СГРУППИРОВАТЬ ПО специальность
5915;SELECT advisor FROM Student GROUP BY advisor HAVING count(*)  >=  2;ВЫБРАТЬ руководитель ИЗ справочник.студенты СГРУППИРОВАТЬ ПО руководитель ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
5916;SELECT advisor FROM Student GROUP BY advisor HAVING count(*)  >=  2;ВЫБРАТЬ руководитель ИЗ справочник.студенты СГРУППИРОВАТЬ ПО руководитель ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
5917;SELECT count(DISTINCT sportname) FROM Sportsinfo;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ видспорта) ИЗ регистрсведений.спортстудентов
5918;SELECT count(DISTINCT sportname) FROM Sportsinfo;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ видспорта) ИЗ регистрсведений.спортстудентов
5919;SELECT count(DISTINCT StuID) FROM Sportsinfo;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ студент) ИЗ регистрсведений.спортстудентов
5920;SELECT count(DISTINCT StuID) FROM Sportsinfo;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ студент) ИЗ регистрсведений.спортстудентов
5921;SELECT StuID FROM Sportsinfo WHERE onscholarship  =  'Y';"ВЫБРАТЬ студент ИЗ регистрсведений.спортстудентов ГДЕ стипендия = ""Y"""
5922;SELECT StuID FROM Sportsinfo WHERE onscholarship  =  'Y';"ВЫБРАТЬ студент ИЗ регистрсведений.спортстудентов ГДЕ стипендия = ""Y"""
5923;SELECT T2.Lname FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID WHERE T1.onscholarship  =  'Y';"ВЫБРАТЬ T2.фамилия ИЗ регистрсведений.спортстудентов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК T2 ПО T1.студент = T2.ссылка ГДЕ T1.стипендия = ""Y"""
5924;SELECT T2.Lname FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID WHERE T1.onscholarship  =  'Y';"ВЫБРАТЬ T2.фамилия ИЗ регистрсведений.спортстудентов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК T2 ПО T1.студент = T2.ссылка ГДЕ T1.стипендия = ""Y"""
5925;SELECT sum(gamesplayed) FROM Sportsinfo;ВЫБРАТЬ СУММА(игрсыграно) ИЗ регистрсведений.спортстудентов
5926;SELECT sum(gamesplayed) FROM Sportsinfo;ВЫБРАТЬ СУММА(игрсыграно) ИЗ регистрсведений.спортстудентов
5927;"SELECT sum(gamesplayed) FROM Sportsinfo WHERE sportname  =  ""Football"" AND onscholarship  =  'Y'";"ВЫБРАТЬ СУММА(игрсыграно) ИЗ регистрсведений.спортстудентов ГДЕ видспорта = ""Football"" И стипендия = ""Y"""
5928;"SELECT sum(gamesplayed) FROM Sportsinfo WHERE sportname  =  ""Football"" AND onscholarship  =  'Y'";"ВЫБРАТЬ СУММА(игрсыграно) ИЗ регистрсведений.спортстудентов ГДЕ видспорта = ""Football"" И стипендия = ""Y"""
5929;SELECT sportname ,  count(*) FROM Sportsinfo GROUP BY sportname;ВЫБРАТЬ видспорта , КОЛИЧЕСТВО(*) ИЗ регистрсведений.спортстудентов СГРУППИРОВАТЬ ПО видспорта
5930;SELECT sportname ,  count(*) FROM Sportsinfo GROUP BY sportname;ВЫБРАТЬ видспорта , КОЛИЧЕСТВО(*) ИЗ регистрсведений.спортстудентов СГРУППИРОВАТЬ ПО видспорта
5931;SELECT StuID ,  count(*) ,  sum(gamesplayed) FROM Sportsinfo GROUP BY StuID;ВЫБРАТЬ студент , КОЛИЧЕСТВО(*) , СУММА(игрсыграно) ИЗ регистрсведений.спортстудентов СГРУППИРОВАТЬ ПО студент
5932;SELECT StuID ,  count(*) ,  sum(gamesplayed) FROM Sportsinfo GROUP BY StuID;ВЫБРАТЬ студент , КОЛИЧЕСТВО(*) , СУММА(игрсыграно) ИЗ регистрсведений.спортстудентов СГРУППИРОВАТЬ ПО студент
5933;SELECT StuID FROM Sportsinfo GROUP BY StuID HAVING sum(hoursperweek)  >  10;ВЫБРАТЬ студент ИЗ регистрсведений.спортстудентов СГРУППИРОВАТЬ ПО студент ИМЕЮЩИЕ СУММА(часоввнеделю) > 10
5934;SELECT StuID FROM Sportsinfo GROUP BY StuID HAVING sum(hoursperweek)  >  10;ВЫБРАТЬ студент ИЗ регистрсведений.спортстудентов СГРУППИРОВАТЬ ПО студент ИМЕЮЩИЕ СУММА(часоввнеделю) > 10
5935;SELECT T2.Fname ,  T2.Lname FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID GROUP BY T1.StuID ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.имя , T2.фамилия ИЗ регистрсведений.спортстудентов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК T2 ПО T1.студент = T2.ссылка СГРУППИРОВАТЬ ПО T1.студент УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
5936;SELECT T2.Fname ,  T2.Lname FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID GROUP BY T1.StuID ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.имя , T2.фамилия ИЗ регистрсведений.спортстудентов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК T2 ПО T1.студент = T2.ссылка СГРУППИРОВАТЬ ПО T1.студент УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
5937;SELECT sportname FROM Sportsinfo WHERE onscholarship  =  'Y' GROUP BY sportname ORDER BY count(*) DESC LIMIT 1;"ВЫБРАТЬ ПЕРВЫЕ 1 видспорта ИЗ регистрсведений.спортстудентов ГДЕ стипендия = ""Y"" СГРУППИРОВАТЬ ПО видспорта УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ"
5938;SELECT sportname FROM Sportsinfo WHERE onscholarship  =  'Y' GROUP BY sportname ORDER BY count(*) DESC LIMIT 1;"ВЫБРАТЬ ПЕРВЫЕ 1 видспорта ИЗ регистрсведений.спортстудентов ГДЕ стипендия = ""Y"" СГРУППИРОВАТЬ ПО видспорта УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ"
5947;"SELECT sum(hoursperweek) ,  sum(gamesplayed) FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID WHERE T2.Fname  =  ""David"" AND T2.Lname  =  ""Shieber""";"ВЫБРАТЬ СУММА(hoursperweek) , СУММА(gamesplayed) ИЗ регистрсведений.спортстудентов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК T2 ПО T1.студент = T2.ссылка ГДЕ T2.имя = ""David"" И T2.фамилия = ""Shieber"""
5948;"SELECT sum(hoursperweek) ,  sum(gamesplayed) FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID WHERE T2.Fname  =  ""David"" AND T2.Lname  =  ""Shieber""";"ВЫБРАТЬ СУММА(hoursperweek) , СУММА(gamesplayed) ИЗ регистрсведений.спортстудентов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК T2 ПО T1.студент = T2.ссылка ГДЕ T2.имя = ""David"" И T2.фамилия = ""Shieber"""
5949;SELECT sum(hoursperweek) ,  sum(gamesplayed) FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID WHERE T2.age  <  20;ВЫБРАТЬ СУММА(hoursperweek) , СУММА(gamesplayed) ИЗ регистрсведений.спортстудентов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК T2 ПО T1.студент = T2.ссылка ГДЕ T2.возраст < 20
5950;SELECT sum(hoursperweek) ,  sum(gamesplayed) FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID WHERE T2.age  <  20;ВЫБРАТЬ СУММА(hoursperweek) , СУММА(gamesplayed) ИЗ регистрсведений.спортстудентов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК T2 ПО T1.студент = T2.ссылка ГДЕ T2.возраст < 20
5951;SELECT count(DISTINCT StuID) FROM Plays_games;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ студент) ИЗ регистрсведений.игрыстудентов
5952;SELECT count(DISTINCT StuID) FROM Plays_games;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ студент) ИЗ регистрсведений.игрыстудентов
5957;SELECT gameid ,  sum(hours_played) FROM Plays_games GROUP BY gameid;ВЫБРАТЬ игра , СУММА(часовиграно) ИЗ регистрсведений.игрыстудентов СГРУППИРОВАТЬ ПО игра
5958;SELECT gameid ,  sum(hours_played) FROM Plays_games GROUP BY gameid;ВЫБРАТЬ игра , СУММА(часовиграно) ИЗ регистрсведений.игрыстудентов СГРУППИРОВАТЬ ПО игра
5959;SELECT Stuid ,  sum(hours_played) FROM Plays_games GROUP BY Stuid;ВЫБРАТЬ студент , СУММА(часовиграно) ИЗ регистрсведений.игрыстудентов СГРУППИРОВАТЬ ПО студент
5960;SELECT Stuid ,  sum(hours_played) FROM Plays_games GROUP BY Stuid;ВЫБРАТЬ студент , СУММА(часовиграно) ИЗ регистрсведений.игрыстудентов СГРУППИРОВАТЬ ПО студент
5961;SELECT gname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid  =  T2.gameid GROUP BY T1.gameid ORDER BY sum(hours_played) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 gname ИЗ регистрсведений.игрыстудентов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.видеоигры КАК T2 ПО T1.игра = T2.ссылка СГРУППИРОВАТЬ ПО T1.игра УПОРЯДОЧИТЬ ПО СУММА(hours_played) УБЫВ
5962;SELECT gname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid  =  T2.gameid GROUP BY T1.gameid ORDER BY sum(hours_played) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 gname ИЗ регистрсведений.игрыстудентов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.видеоигры КАК T2 ПО T1.игра = T2.ссылка СГРУППИРОВАТЬ ПО T1.игра УПОРЯДОЧИТЬ ПО СУММА(hours_played) УБЫВ
5963;SELECT gname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid  =  T2.gameid GROUP BY T1.gameid HAVING sum(hours_played)  >=  1000;ВЫБРАТЬ gname ИЗ регистрсведений.игрыстудентов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.видеоигры КАК T2 ПО T1.игра = T2.ссылка СГРУППИРОВАТЬ ПО T1.игра ИМЕЮЩИЕ СУММА(hours_played) >= 1000
5964;SELECT gname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid  =  T2.gameid GROUP BY T1.gameid HAVING sum(hours_played)  >=  1000;ВЫБРАТЬ gname ИЗ регистрсведений.игрыстудентов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.видеоигры КАК T2 ПО T1.игра = T2.ссылка СГРУППИРОВАТЬ ПО T1.игра ИМЕЮЩИЕ СУММА(hours_played) >= 1000
5965;"SELECT Gname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid  =  T2.gameid JOIN Student AS T3 ON T3.Stuid  =  T1.Stuid WHERE T3.Lname  =  ""Smith"" AND T3.Fname  =  ""Linda""";"ВЫБРАТЬ Gname ИЗ регистрсведений.игрыстудентов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.видеоигры КАК T2 ПО T1.игра = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК T3 ПО T3.ссылка = T1.студент ГДЕ T3.фамилия = ""Smith"" И T3.имя = ""Linda"""
5966;"SELECT Gname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid  =  T2.gameid JOIN Student AS T3 ON T3.Stuid  =  T1.Stuid WHERE T3.Lname  =  ""Smith"" AND T3.Fname  =  ""Linda""";"ВЫБРАТЬ Gname ИЗ регистрсведений.игрыстудентов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.видеоигры КАК T2 ПО T1.игра = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК T3 ПО T3.ссылка = T1.студент ГДЕ T3.фамилия = ""Smith"" И T3.имя = ""Linda"""
5967;"SELECT T2.lname ,  T2.fname FROM SportsInfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID WHERE T1.SportName  =  ""Football"" OR T1.SportName  =  ""Lacrosse""";"ВЫБРАТЬ T2.фамилия , T2.имя ИЗ регистрсведений.спортстудентов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК T2 ПО T1.студент = T2.ссылка ГДЕ T1.видспорта = ""Football"" ИЛИ T1.видспорта = ""Lacrosse"""
5968;"SELECT T2.lname ,  T2.fname FROM SportsInfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID WHERE T1.SportName  =  ""Football"" OR T1.SportName  =  ""Lacrosse""";"ВЫБРАТЬ T2.фамилия , T2.имя ИЗ регистрсведений.спортстудентов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК T2 ПО T1.студент = T2.ссылка ГДЕ T1.видспорта = ""Football"" ИЛИ T1.видспорта = ""Lacrosse"""
5973;SELECT customer_name FROM customers;ВЫБРАТЬ наименование ИЗ справочник.клиенты
5974;SELECT customer_name FROM customers;ВЫБРАТЬ наименование ИЗ справочник.клиенты
5975;SELECT count(*) FROM customers;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.клиенты
5976;SELECT count(*) FROM customers;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.клиенты
5977;SELECT avg(order_quantity) FROM order_items;ВЫБРАТЬ СРЕДНЕЕ(количество) ИЗ табличнаячасть.товарызаказа
5978;SELECT avg(order_quantity) FROM order_items;ВЫБРАТЬ СРЕДНЕЕ(количество) ИЗ табличнаячасть.товарызаказа
5979;"SELECT customer_name FROM customers WHERE payment_method  =  ""Cash""";"ВЫБРАТЬ наименование ИЗ справочник.клиенты ГДЕ способоплаты = ""Cash"""
5980;"SELECT customer_name FROM customers WHERE payment_method  =  ""Cash""";"ВЫБРАТЬ наименование ИЗ справочник.клиенты ГДЕ способоплаты = ""Cash"""
5981;SELECT date_became_customer FROM customers WHERE customer_id BETWEEN 10 AND 20;ВЫБРАТЬ датарегистрации ИЗ справочник.клиенты ГДЕ ссылка МЕЖДУ 10 И 20
5982;SELECT date_became_customer FROM customers WHERE customer_id BETWEEN 10 AND 20;ВЫБРАТЬ датарегистрации ИЗ справочник.клиенты ГДЕ ссылка МЕЖДУ 10 И 20
5983;SELECT payment_method FROM customers GROUP BY payment_method ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 способоплаты ИЗ справочник.клиенты СГРУППИРОВАТЬ ПО способоплаты УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
5984;SELECT payment_method FROM customers GROUP BY payment_method ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 способоплаты ИЗ справочник.клиенты СГРУППИРОВАТЬ ПО способоплаты УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
5985;SELECT customer_name FROM customers WHERE payment_method  =  (SELECT payment_method FROM customers GROUP BY payment_method ORDER BY count(*) DESC LIMIT 1);ВЫБРАТЬ customer_name ИЗ справочник.клиенты ГДЕ payment_method = (ВЫБРАТЬ payment_method ИЗ справочник.клиенты СГРУППИРОВАТЬ ПО payment_method УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ LIMIT 1)
5986;SELECT customer_name FROM customers WHERE payment_method  =  (SELECT payment_method FROM customers GROUP BY payment_method ORDER BY count(*) DESC LIMIT 1);ВЫБРАТЬ customer_name ИЗ справочник.клиенты ГДЕ payment_method = (ВЫБРАТЬ payment_method ИЗ справочник.клиенты СГРУППИРОВАТЬ ПО payment_method УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ LIMIT 1)
5987;SELECT DISTINCT payment_method FROM customers;ВЫБРАТЬ РАЗЛИЧНЫЕ способоплаты ИЗ справочник.клиенты
5988;SELECT DISTINCT payment_method FROM customers;ВЫБРАТЬ РАЗЛИЧНЫЕ способоплаты ИЗ справочник.клиенты
5989;SELECT DISTINCT product_details FROM products;ВЫБРАТЬ РАЗЛИЧНЫЕ описание ИЗ справочник.товары
5990;SELECT DISTINCT product_details FROM products;ВЫБРАТЬ РАЗЛИЧНЫЕ описание ИЗ справочник.товары
5991;"SELECT customer_name FROM customers WHERE customer_name LIKE ""%Alex%""";"ВЫБРАТЬ наименование ИЗ справочник.клиенты ГДЕ наименование ПОДОБНО ""%Alex%"""
5992;"SELECT customer_name FROM customers WHERE customer_name LIKE ""%Alex%""";"ВЫБРАТЬ наименование ИЗ справочник.клиенты ГДЕ наименование ПОДОБНО ""%Alex%"""
5993;"SELECT product_details FROM products WHERE product_details LIKE ""%Latte%"" OR product_details LIKE ""%Americano%""";"ВЫБРАТЬ описание ИЗ справочник.товары ГДЕ описание ПОДОБНО ""%Latte%"" ИЛИ описание ПОДОБНО ""%Americano%"""
5994;"SELECT product_details FROM products WHERE product_details LIKE ""%Latte%"" OR product_details LIKE ""%Americano%""";"ВЫБРАТЬ описание ИЗ справочник.товары ГДЕ описание ПОДОБНО ""%Latte%"" ИЛИ описание ПОДОБНО ""%Americano%"""
5995;"SELECT t3.address_content FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id WHERE t1.customer_name  =  ""Maudie Kertzmann""";"ВЫБРАТЬ t3.содержимоеадреса ИЗ справочник.клиенты КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.адресаклиентов КАК t2 ПО t1.ссылка = t2.клиент ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.адреса КАК t3 ПО t2.адрес = t3.ссылка ГДЕ t1.наименование = ""Maudie Kertzmann"""
5996;"SELECT t3.address_content FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id WHERE t1.customer_name  =  ""Maudie Kertzmann""";"ВЫБРАТЬ t3.содержимоеадреса ИЗ справочник.клиенты КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.адресаклиентов КАК t2 ПО t1.ссылка = t2.клиент ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.адреса КАК t3 ПО t2.адрес = t3.ссылка ГДЕ t1.наименование = ""Maudie Kertzmann"""
5997;"SELECT count(*) FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id WHERE t3.city  =  ""Lake Geovannyton""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.клиенты КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.адресаклиентов КАК t2 ПО t1.ссылка = t2.клиент ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.адреса КАК t3 ПО t2.адрес = t3.ссылка ГДЕ t3.город = ""Lake Geovannyton"""
5998;"SELECT count(*) FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id WHERE t3.city  =  ""Lake Geovannyton""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.клиенты КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.адресаклиентов КАК t2 ПО t1.ссылка = t2.клиент ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.адреса КАК t3 ПО t2.адрес = t3.ссылка ГДЕ t3.город = ""Lake Geovannyton"""
5999;"SELECT t1.customer_name FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id WHERE t3.state_province_county  =  ""Colorado""";"ВЫБРАТЬ t1.наименование ИЗ справочник.клиенты КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.адресаклиентов КАК t2 ПО t1.ссылка = t2.клиент ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.адреса КАК t3 ПО t2.адрес = t3.ссылка ГДЕ t3.регион = ""Colorado"""
6000;"SELECT t1.customer_name FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id WHERE t3.state_province_county  =  ""Colorado""";"ВЫБРАТЬ t1.наименование ИЗ справочник.клиенты КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.адресаклиентов КАК t2 ПО t1.ссылка = t2.клиент ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.адреса КАК t3 ПО t2.адрес = t3.ссылка ГДЕ t3.регион = ""Colorado"""
6001;SELECT city FROM addresses WHERE city NOT IN ( SELECT DISTINCT t3.city FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id);ВЫБРАТЬ city ИЗ справочник.адреса ГДЕ city НЕ В ( ВЫБРАТЬ РАЗЛИЧНЫЕ t3.город ИЗ справочник.клиенты КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.адресаклиентов КАК t2 ПО t1.ссылка = t2.клиент ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.адреса КАК t3 ПО t2.адрес = t3.ссылка)
6002;SELECT city FROM addresses WHERE city NOT IN ( SELECT DISTINCT t3.city FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id);ВЫБРАТЬ city ИЗ справочник.адреса ГДЕ city НЕ В ( ВЫБРАТЬ РАЗЛИЧНЫЕ t3.город ИЗ справочник.клиенты КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.адресаклиентов КАК t2 ПО t1.ссылка = t2.клиент ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.адреса КАК t3 ПО t2.адрес = t3.ссылка)
6003;SELECT t3.city FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id GROUP BY t3.city ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 t3.город ИЗ справочник.клиенты КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.адресаклиентов КАК t2 ПО t1.ссылка = t2.клиент ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.адреса КАК t3 ПО t2.адрес = t3.ссылка СГРУППИРОВАТЬ ПО t3.город УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
6004;SELECT t3.city FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id GROUP BY t3.city ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 t3.город ИЗ справочник.клиенты КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.адресаклиентов КАК t2 ПО t1.ссылка = t2.клиент ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.адреса КАК t3 ПО t2.адрес = t3.ссылка СГРУППИРОВАТЬ ПО t3.город УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
6005;SELECT DISTINCT city FROM addresses;ВЫБРАТЬ РАЗЛИЧНЫЕ город ИЗ справочник.адреса
6006;SELECT DISTINCT city FROM addresses;ВЫБРАТЬ РАЗЛИЧНЫЕ город ИЗ справочник.адреса
6007;SELECT city FROM addresses WHERE zip_postcode  =  255;ВЫБРАТЬ город ИЗ справочник.адреса ГДЕ индекс = 255
6008;SELECT city FROM addresses WHERE zip_postcode  =  255;ВЫБРАТЬ город ИЗ справочник.адреса ГДЕ индекс = 255
6009;"SELECT state_province_county ,  country FROM addresses WHERE zip_postcode LIKE ""4%""";"ВЫБРАТЬ регион , страна ИЗ справочник.адреса ГДЕ индекс ПОДОБНО ""4%"""
6010;"SELECT state_province_county ,  country FROM addresses WHERE zip_postcode LIKE ""4%""";"ВЫБРАТЬ регион , страна ИЗ справочник.адреса ГДЕ индекс ПОДОБНО ""4%"""
6011;SELECT country FROM addresses GROUP BY country HAVING count(address_id)  >  4;ВЫБРАТЬ страна ИЗ справочник.адреса СГРУППИРОВАТЬ ПО страна ИМЕЮЩИЕ КОЛИЧЕСТВО(ссылка) > 4
6012;SELECT country FROM addresses GROUP BY country HAVING count(address_id)  >  4;ВЫБРАТЬ страна ИЗ справочник.адреса СГРУППИРОВАТЬ ПО страна ИМЕЮЩИЕ КОЛИЧЕСТВО(ссылка) > 4
6013;SELECT channel_code FROM customer_contact_channels GROUP BY channel_code HAVING count(customer_id)  <  5;ВЫБРАТЬ кодканала ИЗ регистрсведений.контактныеканалыклиентов СГРУППИРОВАТЬ ПО кодканала ИМЕЮЩИЕ КОЛИЧЕСТВО(клиент) < 5
6014;SELECT channel_code FROM customer_contact_channels GROUP BY channel_code HAVING count(customer_id)  <  5;ВЫБРАТЬ кодканала ИЗ регистрсведений.контактныеканалыклиентов СГРУППИРОВАТЬ ПО кодканала ИМЕЮЩИЕ КОЛИЧЕСТВО(клиент) < 5
6015;"SELECT DISTINCT channel_code FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.customer_name  =  ""Tillman Ernser""";"ВЫБРАТЬ РАЗЛИЧНЫЕ channel_code ИЗ справочник.клиенты КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.контактныеканалыклиентов КАК t2 ПО t1.ссылка = t2.клиент ГДЕ t1.наименование = ""Tillman Ernser"""
6016;"SELECT DISTINCT channel_code FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.customer_name  =  ""Tillman Ernser""";"ВЫБРАТЬ РАЗЛИЧНЫЕ channel_code ИЗ справочник.клиенты КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.контактныеканалыклиентов КАК t2 ПО t1.ссылка = t2.клиент ГДЕ t1.наименование = ""Tillman Ernser"""
6017;"SELECT max(t2.active_to_date) FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.customer_name  =  ""Tillman Ernser""";"ВЫБРАТЬ МАКСИМУМ(t2.датапо) ИЗ справочник.клиенты КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.контактныеканалыклиентов КАК t2 ПО t1.ссылка = t2.клиент ГДЕ t1.наименование = ""Tillman Ernser"""
6018;"SELECT max(t2.active_to_date) FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.customer_name  =  ""Tillman Ernser""";"ВЫБРАТЬ МАКСИМУМ(t2.датапо) ИЗ справочник.клиенты КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.контактныеканалыклиентов КАК t2 ПО t1.ссылка = t2.клиент ГДЕ t1.наименование = ""Tillman Ernser"""
6019;SELECT avg(active_to_date - active_from_date) FROM customer_contact_channels;ВЫБРАТЬ СРЕДНЕЕ(датапо - датас) ИЗ регистрсведений.контактныеканалыклиентов
6020;SELECT avg(active_to_date - active_from_date) FROM customer_contact_channels;ВЫБРАТЬ СРЕДНЕЕ(датапо - датас) ИЗ регистрсведений.контактныеканалыклиентов
6021;SELECT channel_code ,  contact_number FROM customer_contact_channels WHERE active_to_date - active_from_date  =  (SELECT active_to_date - active_from_date FROM customer_contact_channels ORDER BY (active_to_date - active_from_date) DESC LIMIT 1);ВЫБРАТЬ channel_code , contact_number ИЗ регистрсведений.контактныеканалыклиентов ГДЕ active_to_date - active_from_date = (ВЫБРАТЬ active_to_date - active_from_date ИЗ регистрсведений.контактныеканалыклиентов УПОРЯДОЧИТЬ ПО (active_to_date - active_from_date) УБЫВ LIMIT 1)
6022;SELECT channel_code ,  contact_number FROM customer_contact_channels WHERE active_to_date - active_from_date  =  (SELECT active_to_date - active_from_date FROM customer_contact_channels ORDER BY (active_to_date - active_from_date) DESC LIMIT 1);ВЫБРАТЬ channel_code , contact_number ИЗ регистрсведений.контактныеканалыклиентов ГДЕ active_to_date - active_from_date = (ВЫБРАТЬ active_to_date - active_from_date ИЗ регистрсведений.контактныеканалыклиентов УПОРЯДОЧИТЬ ПО (active_to_date - active_from_date) УБЫВ LIMIT 1)
6023;SELECT t1.customer_name ,  t2.active_from_date FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id  =  t2.customer_id WHERE t2.channel_code  =  'Email';"ВЫБРАТЬ t1.наименование , t2.датас ИЗ справочник.клиенты КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.контактныеканалыклиентов КАК t2 ПО t1.ссылка = t2.клиент ГДЕ t2.кодканала = ""Email"""
6024;SELECT t1.customer_name ,  t2.active_from_date FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id  =  t2.customer_id WHERE t2.channel_code  =  'Email';"ВЫБРАТЬ t1.наименование , t2.датас ИЗ справочник.клиенты КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.контактныеканалыклиентов КАК t2 ПО t1.ссылка = t2.клиент ГДЕ t2.кодканала = ""Email"""
6025;SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id WHERE t3.order_quantity  =  ( SELECT max(order_quantity) FROM order_items);ВЫБРАТЬ t1.наименование ИЗ справочник.клиенты КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.заказ КАК t2 ПО t1.ссылка = t2.клиент ВНУТРЕННЕЕ СОЕДИНЕНИЕ табличнаячасть.товарызаказа КАК t3 ПО t2.ссылка = t3.заказ ГДЕ t3.количество = ( ВЫБРАТЬ МАКСИМУМ(order_quantity) ИЗ табличнаячасть.товарызаказа)
6026;SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id WHERE t3.order_quantity  =  ( SELECT max(order_quantity) FROM order_items);ВЫБРАТЬ t1.наименование ИЗ справочник.клиенты КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.заказ КАК t2 ПО t1.ссылка = t2.клиент ВНУТРЕННЕЕ СОЕДИНЕНИЕ табличнаячасть.товарызаказа КАК t3 ПО t2.ссылка = t3.заказ ГДЕ t3.количество = ( ВЫБРАТЬ МАКСИМУМ(order_quantity) ИЗ табличнаячасть.товарызаказа)
6027;SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id GROUP BY t1.customer_name ORDER BY sum(t3.order_quantity) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 t1.наименование ИЗ справочник.клиенты КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.заказ КАК t2 ПО t1.ссылка = t2.клиент ВНУТРЕННЕЕ СОЕДИНЕНИЕ табличнаячасть.товарызаказа КАК t3 ПО t2.ссылка = t3.заказ СГРУППИРОВАТЬ ПО t1.наименование УПОРЯДОЧИТЬ ПО СУММА(t3.количество) УБЫВ
6028;SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id GROUP BY t1.customer_name ORDER BY sum(t3.order_quantity) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 t1.наименование ИЗ справочник.клиенты КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.заказ КАК t2 ПО t1.ссылка = t2.клиент ВНУТРЕННЕЕ СОЕДИНЕНИЕ табличнаячасть.товарызаказа КАК t3 ПО t2.ссылка = t3.заказ СГРУППИРОВАТЬ ПО t1.наименование УПОРЯДОЧИТЬ ПО СУММА(t3.количество) УБЫВ
6029;SELECT t1.payment_method FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id GROUP BY t1.customer_name ORDER BY sum(t3.order_quantity) LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 t1.способоплаты ИЗ справочник.клиенты КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.заказ КАК t2 ПО t1.ссылка = t2.клиент ВНУТРЕННЕЕ СОЕДИНЕНИЕ табличнаячасть.товарызаказа КАК t3 ПО t2.ссылка = t3.заказ СГРУППИРОВАТЬ ПО t1.наименование УПОРЯДОЧИТЬ ПО СУММА(t3.количество)
6030;SELECT t1.payment_method FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id GROUP BY t1.customer_name ORDER BY sum(t3.order_quantity) LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 t1.способоплаты ИЗ справочник.клиенты КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.заказ КАК t2 ПО t1.ссылка = t2.клиент ВНУТРЕННЕЕ СОЕДИНЕНИЕ табличнаячасть.товарызаказа КАК t3 ПО t2.ссылка = t3.заказ СГРУППИРОВАТЬ ПО t1.наименование УПОРЯДОЧИТЬ ПО СУММА(t3.количество)
6031;"SELECT count(DISTINCT t3.product_id) FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id WHERE t1.customer_name  =  ""Rodrick Heaney""";"ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ t3.товар) ИЗ справочник.клиенты КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.заказ КАК t2 ПО t1.ссылка = t2.клиент ВНУТРЕННЕЕ СОЕДИНЕНИЕ табличнаячасть.товарызаказа КАК t3 ПО t2.ссылка = t3.заказ ГДЕ t1.наименование = ""Rodrick Heaney"""
6032;"SELECT count(DISTINCT t3.product_id) FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id WHERE t1.customer_name  =  ""Rodrick Heaney""";"ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ t3.товар) ИЗ справочник.клиенты КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.заказ КАК t2 ПО t1.ссылка = t2.клиент ВНУТРЕННЕЕ СОЕДИНЕНИЕ табличнаячасть.товарызаказа КАК t3 ПО t2.ссылка = t3.заказ ГДЕ t1.наименование = ""Rodrick Heaney"""
6033;"SELECT sum(t3.order_quantity) FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id WHERE t1.customer_name  =  ""Rodrick Heaney""";"ВЫБРАТЬ СУММА(t3.количество) ИЗ справочник.клиенты КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.заказ КАК t2 ПО t1.ссылка = t2.клиент ВНУТРЕННЕЕ СОЕДИНЕНИЕ табличнаячасть.товарызаказа КАК t3 ПО t2.ссылка = t3.заказ ГДЕ t1.наименование = ""Rodrick Heaney"""
6034;"SELECT sum(t3.order_quantity) FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id WHERE t1.customer_name  =  ""Rodrick Heaney""";"ВЫБРАТЬ СУММА(t3.количество) ИЗ справочник.клиенты КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.заказ КАК t2 ПО t1.ссылка = t2.клиент ВНУТРЕННЕЕ СОЕДИНЕНИЕ табличнаячасть.товарызаказа КАК t3 ПО t2.ссылка = t3.заказ ГДЕ t1.наименование = ""Rodrick Heaney"""
6035;"SELECT count(DISTINCT customer_id) FROM customer_orders WHERE order_status  =  ""Cancelled""";"ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ клиент) ИЗ документ.заказ ГДЕ статус = ""Cancelled"""
6036;"SELECT count(DISTINCT customer_id) FROM customer_orders WHERE order_status  =  ""Cancelled""";"ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ клиент) ИЗ документ.заказ ГДЕ статус = ""Cancelled"""
6037;"SELECT count(*) FROM customer_orders WHERE order_details  =  ""Second time""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ документ.заказ ГДЕ детали = ""Second time"""
6038;"SELECT count(*) FROM customer_orders WHERE order_details  =  ""Second time""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ документ.заказ ГДЕ детали = ""Second time"""
6039;"SELECT t1.customer_name ,  t2.order_date FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id WHERE order_status  =  ""Delivered""";"ВЫБРАТЬ t1.наименование , t2.датазаказа ИЗ справочник.клиенты КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.заказ КАК t2 ПО t1.ссылка = t2.клиент ГДЕ order_status = ""Delivered"""
6040;"SELECT t1.customer_name ,  t2.order_date FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id WHERE order_status  =  ""Delivered""";"ВЫБРАТЬ t1.наименование , t2.датазаказа ИЗ справочник.клиенты КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.заказ КАК t2 ПО t1.ссылка = t2.клиент ГДЕ order_status = ""Delivered"""
6041;"SELECT sum(t2.order_quantity) FROM customer_orders AS t1 JOIN order_items AS t2 ON t1.order_id  =  t2.order_id WHERE t1.order_status  =  ""Cancelled""";"ВЫБРАТЬ СУММА(t2.количество) ИЗ документ.заказ КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ табличнаячасть.товарызаказа КАК t2 ПО t1.ссылка = t2.заказ ГДЕ t1.статус = ""Cancelled"""
6042;"SELECT sum(t2.order_quantity) FROM customer_orders AS t1 JOIN order_items AS t2 ON t1.order_id  =  t2.order_id WHERE t1.order_status  =  ""Cancelled""";"ВЫБРАТЬ СУММА(t2.количество) ИЗ документ.заказ КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ табличнаячасть.товарызаказа КАК t2 ПО t1.ссылка = t2.заказ ГДЕ t1.статус = ""Cancelled"""
6043;"SELECT sum(t2.order_quantity) FROM customer_orders AS t1 JOIN order_items AS t2 ON t1.order_id  =  t2.order_id WHERE t1.order_date  <  ""2018-03-17 07:13:53""";"ВЫБРАТЬ СУММА(t2.количество) ИЗ документ.заказ КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ табличнаячасть.товарызаказа КАК t2 ПО t1.ссылка = t2.заказ ГДЕ t1.датазаказа < ""2018-03-17 07:13:53"""
6044;"SELECT sum(t2.order_quantity) FROM customer_orders AS t1 JOIN order_items AS t2 ON t1.order_id  =  t2.order_id WHERE t1.order_date  <  ""2018-03-17 07:13:53""";"ВЫБРАТЬ СУММА(t2.количество) ИЗ документ.заказ КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ табличнаячасть.товарызаказа КАК t2 ПО t1.ссылка = t2.заказ ГДЕ t1.датазаказа < ""2018-03-17 07:13:53"""
6045;SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id ORDER BY t2.order_date DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 t1.наименование ИЗ справочник.клиенты КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.заказ КАК t2 ПО t1.ссылка = t2.клиент УПОРЯДОЧИТЬ ПО t2.датазаказа УБЫВ
6046;SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id ORDER BY t2.order_date DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 t1.наименование ИЗ справочник.клиенты КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.заказ КАК t2 ПО t1.ссылка = t2.клиент УПОРЯДОЧИТЬ ПО t2.датазаказа УБЫВ
6047;SELECT t2.product_details FROM order_items AS t1 JOIN products AS t2 ON t1.product_id  =  t2.product_id GROUP BY t1.product_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 t2.описание ИЗ табличнаячасть.товарызаказа КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.товары КАК t2 ПО t1.товар = t2.ссылка СГРУППИРОВАТЬ ПО t1.товар УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
6048;SELECT t2.product_details FROM order_items AS t1 JOIN products AS t2 ON t1.product_id  =  t2.product_id GROUP BY t1.product_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 t2.описание ИЗ табличнаячасть.товарызаказа КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.товары КАК t2 ПО t1.товар = t2.ссылка СГРУППИРОВАТЬ ПО t1.товар УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
6049;SELECT t2.product_details ,  t2.product_id FROM order_items AS t1 JOIN products AS t2 ON t1.product_id  =  t2.product_id GROUP BY t1.product_id ORDER BY sum(t1.order_quantity) LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 t2.описание , t2.ссылка ИЗ табличнаячасть.товарызаказа КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.товары КАК t2 ПО t1.товар = t2.ссылка СГРУППИРОВАТЬ ПО t1.товар УПОРЯДОЧИТЬ ПО СУММА(t1.количество)
6050;SELECT t2.product_details ,  t2.product_id FROM order_items AS t1 JOIN products AS t2 ON t1.product_id  =  t2.product_id GROUP BY t1.product_id ORDER BY sum(t1.order_quantity) LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 t2.описание , t2.ссылка ИЗ табличнаячасть.товарызаказа КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.товары КАК t2 ПО t1.товар = t2.ссылка СГРУППИРОВАТЬ ПО t1.товар УПОРЯДОЧИТЬ ПО СУММА(t1.количество)
6051;"SELECT address_content FROM addresses WHERE city  =  ""East Julianaside"" AND state_province_county  =  ""Texas"" UNION SELECT address_content FROM addresses WHERE city  =  ""Gleasonmouth"" AND state_province_county  =  ""Arizona""";"ВЫБРАТЬ содержимоеадреса ИЗ справочник.адреса ГДЕ город = ""East Julianaside"" И регион = ""Texas"" ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ содержимоеадреса ИЗ справочник.адреса ГДЕ город = ""Gleasonmouth"" И регион = ""Arizona"""
6052;"SELECT address_content FROM addresses WHERE city  =  ""East Julianaside"" AND state_province_county  =  ""Texas"" UNION SELECT address_content FROM addresses WHERE city  =  ""Gleasonmouth"" AND state_province_county  =  ""Arizona""";"ВЫБРАТЬ содержимоеадреса ИЗ справочник.адреса ГДЕ город = ""East Julianaside"" И регион = ""Texas"" ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ содержимоеадреса ИЗ справочник.адреса ГДЕ город = ""Gleasonmouth"" И регион = ""Arizona"""
6053;SELECT customer_name FROM customers WHERE payment_method != 'Cash';"ВЫБРАТЬ наименование ИЗ справочник.клиенты ГДЕ способоплаты <> ""Cash"""
6054;SELECT customer_name FROM customers WHERE payment_method != 'Cash';"ВЫБРАТЬ наименование ИЗ справочник.клиенты ГДЕ способоплаты <> ""Cash"""
6061;SELECT count(*) FROM artist;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ наименование
6062;SELECT count(*) FROM artist;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ наименование
6063;SELECT Age FROM artist;ВЫБРАТЬ возраст ИЗ наименование
6064;SELECT Age FROM artist;ВЫБРАТЬ возраст ИЗ наименование
6065;SELECT avg(Age) FROM artist;ВЫБРАТЬ СРЕДНЕЕ(возраст) ИЗ наименование
6066;SELECT avg(Age) FROM artist;ВЫБРАТЬ СРЕДНЕЕ(возраст) ИЗ наименование
6067;"SELECT Famous_Title FROM artist WHERE Artist  =  ""Triumfall""";"ВЫБРАТЬ известноепроизведение ИЗ наименование ГДЕ наименование = ""Triumfall"""
6068;"SELECT Famous_Title FROM artist WHERE Artist  =  ""Triumfall""";"ВЫБРАТЬ известноепроизведение ИЗ наименование ГДЕ наименование = ""Triumfall"""
6069;SELECT distinct(Famous_Release_date) FROM artist;ВЫБРАТЬ distinct(датарелизапроизведения) ИЗ наименование
6070;SELECT distinct(Famous_Release_date) FROM artist;ВЫБРАТЬ distinct(датарелизапроизведения) ИЗ наименование
6071;SELECT Date_of_ceremony ,  RESULT FROM music_festival;ВЫБРАТЬ датапроведения , результат ИЗ наименование
6072;SELECT Date_of_ceremony ,  RESULT FROM music_festival;ВЫБРАТЬ датапроведения , результат ИЗ наименование
6073;"SELECT Category FROM music_festival WHERE RESULT  =  ""Awarded""";"ВЫБРАТЬ категория ИЗ наименование ГДЕ результат = ""Awarded"""
6074;"SELECT Category FROM music_festival WHERE RESULT  =  ""Awarded""";"ВЫБРАТЬ категория ИЗ наименование ГДЕ результат = ""Awarded"""
6075;SELECT max(Weeks_on_Top) ,  min(Weeks_on_Top) FROM volume;ВЫБРАТЬ МАКСИМУМ(недельнавершине) , МИНИМУМ(недельнавершине) ИЗ регистрсведений.чарты
6076;SELECT max(Weeks_on_Top) ,  min(Weeks_on_Top) FROM volume;ВЫБРАТЬ МАКСИМУМ(недельнавершине) , МИНИМУМ(недельнавершине) ИЗ регистрсведений.чарты
6077;SELECT Song FROM volume WHERE Weeks_on_Top  >  1;ВЫБРАТЬ песня ИЗ регистрсведений.чарты ГДЕ недельнавершине > 1
6078;SELECT Song FROM volume WHERE Weeks_on_Top  >  1;ВЫБРАТЬ песня ИЗ регистрсведений.чарты ГДЕ недельнавершине > 1
6079;SELECT Song FROM volume ORDER BY Song;ВЫБРАТЬ песня ИЗ регистрсведений.чарты УПОРЯДОЧИТЬ ПО песня
6080;SELECT Song FROM volume ORDER BY Song;ВЫБРАТЬ песня ИЗ регистрсведений.чарты УПОРЯДОЧИТЬ ПО песня
6081;SELECT COUNT(DISTINCT Artist_ID) FROM volume;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ артист) ИЗ регистрсведений.чарты
6082;SELECT COUNT(DISTINCT Artist_ID) FROM volume;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ артист) ИЗ регистрсведений.чарты
6083;SELECT T1.Date_of_ceremony FROM music_festival AS T1 JOIN volume AS T2 ON T1.Volume  =  T2.Volume_ID WHERE T2.Weeks_on_Top  >  2;ВЫБРАТЬ T1.датапроведения ИЗ регистрсведений.музыкальныефестивали КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.чарты КАК T2 ПО T1.номервыпуска = T2.ссылка ГДЕ T2.недельнавершине > 2
6084;SELECT T1.Date_of_ceremony FROM music_festival AS T1 JOIN volume AS T2 ON T1.Volume  =  T2.Volume_ID WHERE T2.Weeks_on_Top  >  2;ВЫБРАТЬ T1.датапроведения ИЗ регистрсведений.музыкальныефестивали КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.чарты КАК T2 ПО T1.номервыпуска = T2.ссылка ГДЕ T2.недельнавершине > 2
6085;"SELECT T2.Song FROM music_festival AS T1 JOIN volume AS T2 ON T1.Volume  =  T2.Volume_ID WHERE T1.Result  =  ""Nominated""";"ВЫБРАТЬ T2.песня ИЗ регистрсведений.музыкальныефестивали КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.чарты КАК T2 ПО T1.номервыпуска = T2.ссылка ГДЕ T1.результат = ""Nominated"""
6086;"SELECT T2.Song FROM music_festival AS T1 JOIN volume AS T2 ON T1.Volume  =  T2.Volume_ID WHERE T1.Result  =  ""Nominated""";"ВЫБРАТЬ T2.песня ИЗ регистрсведений.музыкальныефестивали КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.чарты КАК T2 ПО T1.номервыпуска = T2.ссылка ГДЕ T1.результат = ""Nominated"""
6087;"SELECT T2.Issue_Date FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T1.Artist  =  ""Gorgoroth""";"ВЫБРАТЬ T2.датавыпуска ИЗ справочник.артисты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.чарты КАК T2 ПО T1.ссылка = T2.артист ГДЕ T1.наименование = ""Gorgoroth"""
6088;"SELECT T2.Issue_Date FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T1.Artist  =  ""Gorgoroth""";"ВЫБРАТЬ T2.датавыпуска ИЗ справочник.артисты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.чарты КАК T2 ПО T1.ссылка = T2.артист ГДЕ T1.наименование = ""Gorgoroth"""
6089;SELECT T2.Song FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T1.age  >=  32;ВЫБРАТЬ T2.песня ИЗ справочник.артисты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.чарты КАК T2 ПО T1.ссылка = T2.артист ГДЕ T1.возраст >= 32
6090;SELECT T2.Song FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T1.age  >=  32;ВЫБРАТЬ T2.песня ИЗ справочник.артисты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.чарты КАК T2 ПО T1.ссылка = T2.артист ГДЕ T1.возраст >= 32
6091;SELECT avg(T2.Weeks_on_Top) FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T1.age  <=  25;ВЫБРАТЬ СРЕДНЕЕ(T2.недельнавершине) ИЗ справочник.артисты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.чарты КАК T2 ПО T1.ссылка = T2.артист ГДЕ T1.возраст <= 25
6092;SELECT avg(T2.Weeks_on_Top) FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T1.age  <=  25;ВЫБРАТЬ СРЕДНЕЕ(T2.недельнавершине) ИЗ справочник.артисты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.чарты КАК T2 ПО T1.ссылка = T2.артист ГДЕ T1.возраст <= 25
6093;SELECT T1.Famous_Title FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T2.Weeks_on_Top  >  2;ВЫБРАТЬ T1.известноепроизведение ИЗ справочник.артисты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.чарты КАК T2 ПО T1.ссылка = T2.артист ГДЕ T2.недельнавершине > 2
6094;SELECT T1.Famous_Title FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T2.Weeks_on_Top  >  2;ВЫБРАТЬ T1.известноепроизведение ИЗ справочник.артисты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.чарты КАК T2 ПО T1.ссылка = T2.артист ГДЕ T2.недельнавершине > 2
6095;SELECT Famous_Title ,  Age FROM artist ORDER BY Age DESC;ВЫБРАТЬ известноепроизведение , возраст ИЗ наименование УПОРЯДОЧИТЬ ПО возраст УБЫВ
6096;SELECT Famous_Title ,  Age FROM artist ORDER BY Age DESC;ВЫБРАТЬ известноепроизведение , возраст ИЗ наименование УПОРЯДОЧИТЬ ПО возраст УБЫВ
6097;SELECT Famous_Release_date FROM artist ORDER BY Age DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 датарелизапроизведения ИЗ наименование УПОРЯДОЧИТЬ ПО возраст УБЫВ
6098;SELECT Famous_Release_date FROM artist ORDER BY Age DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 датарелизапроизведения ИЗ наименование УПОРЯДОЧИТЬ ПО возраст УБЫВ
6099;SELECT Category ,  COUNT(*) FROM music_festival GROUP BY Category;ВЫБРАТЬ категория , КОЛИЧЕСТВО(*) ИЗ наименование СГРУППИРОВАТЬ ПО категория
6100;SELECT Category ,  COUNT(*) FROM music_festival GROUP BY Category;ВЫБРАТЬ категория , КОЛИЧЕСТВО(*) ИЗ наименование СГРУППИРОВАТЬ ПО категория
6101;SELECT RESULT FROM music_festival GROUP BY RESULT ORDER BY COUNT(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 результат ИЗ наименование СГРУППИРОВАТЬ ПО результат УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
6102;SELECT RESULT FROM music_festival GROUP BY RESULT ORDER BY COUNT(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 результат ИЗ наименование СГРУППИРОВАТЬ ПО результат УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
6103;SELECT Category FROM music_festival GROUP BY Category HAVING COUNT(*)  >  1;ВЫБРАТЬ категория ИЗ наименование СГРУППИРОВАТЬ ПО категория ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 1
6104;SELECT Category FROM music_festival GROUP BY Category HAVING COUNT(*)  >  1;ВЫБРАТЬ категория ИЗ наименование СГРУППИРОВАТЬ ПО категория ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 1
6105;SELECT Song FROM volume ORDER BY Weeks_on_Top DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 песня ИЗ регистрсведений.чарты УПОРЯДОЧИТЬ ПО недельнавершине УБЫВ
6106;SELECT Song FROM volume ORDER BY Weeks_on_Top DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 песня ИЗ регистрсведений.чарты УПОРЯДОЧИТЬ ПО недельнавершине УБЫВ
6107;SELECT Famous_Title FROM artist WHERE Artist_ID NOT IN(SELECT Artist_ID FROM volume);ВЫБРАТЬ Famous_Title ИЗ справочник.артисты ГДЕ Artist_ID NOT IN(ВЫБРАТЬ Artist_ID ИЗ регистрсведений.чарты)
6108;SELECT Famous_Title FROM artist WHERE Artist_ID NOT IN(SELECT Artist_ID FROM volume);ВЫБРАТЬ Famous_Title ИЗ справочник.артисты ГДЕ Artist_ID NOT IN(ВЫБРАТЬ Artist_ID ИЗ регистрсведений.чарты)
6111;"SELECT Date_of_ceremony FROM music_festival WHERE Category  =  ""Best Song"" AND RESULT  =  ""Awarded""";"ВЫБРАТЬ датапроведения ИЗ наименование ГДЕ категория = ""Best Song"" И результат = ""Awarded"""
6112;"SELECT Date_of_ceremony FROM music_festival WHERE Category  =  ""Best Song"" AND RESULT  =  ""Awarded""";"ВЫБРАТЬ датапроведения ИЗ наименование ГДЕ категория = ""Best Song"" И результат = ""Awarded"""
6113;SELECT Issue_Date FROM volume ORDER BY Weeks_on_Top ASC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 датавыпуска ИЗ регистрсведений.чарты УПОРЯДОЧИТЬ ПО недельнавершине ВОЗР
6114;SELECT Issue_Date FROM volume ORDER BY Weeks_on_Top ASC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 датавыпуска ИЗ регистрсведений.чарты УПОРЯДОЧИТЬ ПО недельнавершине ВОЗР
6115;SELECT COUNT(DISTINCT Artist_ID) FROM volume;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ артист) ИЗ регистрсведений.чарты
6116;SELECT COUNT(DISTINCT Artist_ID) FROM volume;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ артист) ИЗ регистрсведений.чарты
6117;SELECT RESULT ,  COUNT(*) FROM music_festival GROUP BY RESULT ORDER BY COUNT(*) DESC;ВЫБРАТЬ результат , КОЛИЧЕСТВО(*) ИЗ наименование СГРУППИРОВАТЬ ПО результат УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
6118;SELECT RESULT ,  COUNT(*) FROM music_festival GROUP BY RESULT ORDER BY COUNT(*) DESC;ВЫБРАТЬ результат , КОЛИЧЕСТВО(*) ИЗ наименование СГРУППИРОВАТЬ ПО результат УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
6119;SELECT Issue_Date FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T1.age  <=  23;ВЫБРАТЬ Issue_Date ИЗ справочник.артисты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.чарты КАК T2 ПО T1.ссылка = T2.артист ГДЕ T1.возраст <= 23
6120;SELECT Issue_Date FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T1.age  <=  23;ВЫБРАТЬ Issue_Date ИЗ справочник.артисты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.чарты КАК T2 ПО T1.ссылка = T2.артист ГДЕ T1.возраст <= 23
6121;SELECT count(*) FROM roller_coaster;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.страны
6122;SELECT Name FROM roller_coaster ORDER BY LENGTH ASC;ВЫБРАТЬ наименование ИЗ справочник.страны УПОРЯДОЧИТЬ ПО языки ВОЗР
6123;SELECT LENGTH ,  Height FROM roller_coaster;ВЫБРАТЬ языки , Height ИЗ справочник.страны
6124;"SELECT Name FROM country WHERE Languages != ""German""";"ВЫБРАТЬ наименование ИЗ справочник.аттракционы ГДЕ длина <> ""German"""
6125;SELECT Status FROM roller_coaster WHERE LENGTH  >  3300 OR Height  >  100;ВЫБРАТЬ Status ИЗ справочник.страны ГДЕ языки > 3300 ИЛИ Height > 100
6126;SELECT Speed FROM roller_coaster ORDER BY LENGTH DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 Speed ИЗ справочник.страны УПОРЯДОЧИТЬ ПО языки УБЫВ
6127;SELECT avg(Speed) FROM roller_coaster;ВЫБРАТЬ СРЕДНЕЕ(Speed) ИЗ справочник.страны
6128;SELECT Status ,  COUNT(*) FROM roller_coaster GROUP BY Status;ВЫБРАТЬ Status , КОЛИЧЕСТВО(*) ИЗ справочник.страны СГРУППИРОВАТЬ ПО Status
6129;SELECT Status FROM roller_coaster GROUP BY Status ORDER BY COUNT(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 Status ИЗ справочник.страны СГРУППИРОВАТЬ ПО Status УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
6130;SELECT Status FROM roller_coaster GROUP BY Status HAVING COUNT(*)  >  2;ВЫБРАТЬ Status ИЗ справочник.страны СГРУППИРОВАТЬ ПО Status ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 2
6131;SELECT Park FROM roller_coaster ORDER BY Speed DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 население ИЗ справочник.страны УПОРЯДОЧИТЬ ПО Speed УБЫВ
6132;SELECT T2.Name ,  T1.Name FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID  =  T2.Country_ID;ВЫБРАТЬ T2.наименование , T1.наименование ИЗ справочник.аттракционы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.страны КАК T2 ПО T1.ссылка = T2.площадь
6133;SELECT T1.Name FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID  =  T2.Country_ID GROUP BY T1.Name HAVING COUNT(*)  >  1;ВЫБРАТЬ T1.наименование ИЗ справочник.аттракционы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.страны КАК T2 ПО T1.ссылка = T2.площадь СГРУППИРОВАТЬ ПО T1.наименование ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 1
6134;SELECT T1.Name ,  T1.population FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID  =  T2.Country_ID ORDER BY T2.Height DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.наименование , T1.парк ИЗ справочник.аттракционы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.страны КАК T2 ПО T1.ссылка = T2.площадь УПОРЯДОЧИТЬ ПО T2.Height УБЫВ
6135;SELECT T1.Name ,  avg(T2.Speed) FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID  =  T2.Country_ID GROUP BY T1.Name;ВЫБРАТЬ T1.наименование , СРЕДНЕЕ(T2.Speed) ИЗ справочник.аттракционы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.страны КАК T2 ПО T1.ссылка = T2.площадь СГРУППИРОВАТЬ ПО T1.наименование
6136;SELECT count(*) FROM country WHERE country_id NOT IN ( SELECT country_id FROM roller_coaster WHERE LENGTH  >  3000 );ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.аттракционы ГДЕ площадь НЕ В ( ВЫБРАТЬ площадь ИЗ справочник.страны ГДЕ языки > 3000 )
6138;SELECT count(DISTINCT rank) FROM captain;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ звание) ИЗ справочник.капитаны
6139;SELECT count(DISTINCT rank) FROM captain;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ звание) ИЗ справочник.капитаны
6140;SELECT count(*) ,  rank FROM captain GROUP BY rank;ВЫБРАТЬ КОЛИЧЕСТВО(*) , звание ИЗ справочник.капитаны СГРУППИРОВАТЬ ПО звание
6141;SELECT count(*) ,  rank FROM captain GROUP BY rank;ВЫБРАТЬ КОЛИЧЕСТВО(*) , звание ИЗ справочник.капитаны СГРУППИРОВАТЬ ПО звание
6142;SELECT count(*) ,  rank FROM captain WHERE age  <  50 GROUP BY rank;ВЫБРАТЬ КОЛИЧЕСТВО(*) , звание ИЗ справочник.капитаны ГДЕ возраст < 50 СГРУППИРОВАТЬ ПО звание
6143;SELECT count(*) ,  rank FROM captain WHERE age  <  50 GROUP BY rank;ВЫБРАТЬ КОЛИЧЕСТВО(*) , звание ИЗ справочник.капитаны ГДЕ возраст < 50 СГРУППИРОВАТЬ ПО звание
6144;SELECT name FROM captain ORDER BY age DESC;ВЫБРАТЬ наименование ИЗ справочник.капитаны УПОРЯДОЧИТЬ ПО возраст УБЫВ
6145;SELECT name FROM captain ORDER BY age DESC;ВЫБРАТЬ наименование ИЗ справочник.капитаны УПОРЯДОЧИТЬ ПО возраст УБЫВ
6146;SELECT name ,  CLASS ,  rank FROM captain;ВЫБРАТЬ наименование , класс , звание ИЗ справочник.капитаны
6147;SELECT name ,  CLASS ,  rank FROM captain;ВЫБРАТЬ наименование , класс , звание ИЗ справочник.капитаны
6148;SELECT rank FROM captain GROUP BY rank ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 звание ИЗ справочник.капитаны СГРУППИРОВАТЬ ПО звание УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
6149;SELECT rank FROM captain GROUP BY rank ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 звание ИЗ справочник.капитаны СГРУППИРОВАТЬ ПО звание УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
6150;SELECT CLASS FROM captain GROUP BY CLASS HAVING count(*)  >  2;ВЫБРАТЬ класс ИЗ справочник.капитаны СГРУППИРОВАТЬ ПО класс ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 2
6151;SELECT CLASS FROM captain GROUP BY CLASS HAVING count(*)  >  2;ВЫБРАТЬ класс ИЗ справочник.капитаны СГРУППИРОВАТЬ ПО класс ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 2
6152;SELECT name FROM captain WHERE rank  =  'Midshipman' OR rank  =  'Lieutenant';"ВЫБРАТЬ наименование ИЗ справочник.капитаны ГДЕ звание = ""Midshipman"" ИЛИ звание = ""Lieutenant"""
6153;SELECT name FROM captain WHERE rank  =  'Midshipman' OR rank  =  'Lieutenant';"ВЫБРАТЬ наименование ИЗ справочник.капитаны ГДЕ звание = ""Midshipman"" ИЛИ звание = ""Lieutenant"""
6154;SELECT avg(age) ,  min(age) ,  CLASS FROM captain GROUP BY CLASS;ВЫБРАТЬ СРЕДНЕЕ(возраст) , МИНИМУМ(возраст) , класс ИЗ справочник.капитаны СГРУППИРОВАТЬ ПО класс
6155;SELECT avg(age) ,  min(age) ,  CLASS FROM captain GROUP BY CLASS;ВЫБРАТЬ СРЕДНЕЕ(возраст) , МИНИМУМ(возраст) , класс ИЗ справочник.капитаны СГРУППИРОВАТЬ ПО класс
6160;SELECT name FROM captain ORDER BY age LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование ИЗ справочник.капитаны УПОРЯДОЧИТЬ ПО возраст
6161;SELECT name FROM captain ORDER BY age LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование ИЗ справочник.капитаны УПОРЯДОЧИТЬ ПО возраст
6162;SELECT count(*) FROM ship;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.корабли
6163;SELECT count(*) FROM ship;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.корабли
6164;SELECT name ,  TYPE ,  flag FROM ship ORDER BY built_year DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование , тип , флаг ИЗ справочник.корабли УПОРЯДОЧИТЬ ПО годпостройки УБЫВ
6165;SELECT name ,  TYPE ,  flag FROM ship ORDER BY built_year DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование , тип , флаг ИЗ справочник.корабли УПОРЯДОЧИТЬ ПО годпостройки УБЫВ
6166;SELECT count(*) ,  flag FROM ship GROUP BY flag;ВЫБРАТЬ КОЛИЧЕСТВО(*) , флаг ИЗ справочник.корабли СГРУППИРОВАТЬ ПО флаг
6167;SELECT count(*) ,  flag FROM ship GROUP BY flag;ВЫБРАТЬ КОЛИЧЕСТВО(*) , флаг ИЗ справочник.корабли СГРУППИРОВАТЬ ПО флаг
6168;SELECT flag FROM ship GROUP BY flag ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 флаг ИЗ справочник.корабли СГРУППИРОВАТЬ ПО флаг УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
6169;SELECT flag FROM ship GROUP BY flag ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 флаг ИЗ справочник.корабли СГРУППИРОВАТЬ ПО флаг УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
6170;SELECT name FROM ship ORDER BY built_year ,  CLASS;ВЫБРАТЬ наименование ИЗ справочник.корабли УПОРЯДОЧИТЬ ПО годпостройки , класс
6171;SELECT name FROM ship ORDER BY built_year ,  CLASS;ВЫБРАТЬ наименование ИЗ справочник.корабли УПОРЯДОЧИТЬ ПО годпостройки , класс
6174;SELECT built_year FROM ship GROUP BY built_year ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 годпостройки ИЗ справочник.корабли СГРУППИРОВАТЬ ПО годпостройки УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
6175;SELECT built_year FROM ship GROUP BY built_year ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 годпостройки ИЗ справочник.корабли СГРУППИРОВАТЬ ПО годпостройки УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
6176;SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id  =  t2.ship_id GROUP BY t2.ship_id HAVING count(*)  >  1;ВЫБРАТЬ t1.наименование ИЗ справочник.корабли КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.капитаны КАК t2 ПО t1.ссылка = t2.корабль СГРУППИРОВАТЬ ПО t2.корабль ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 1
6177;SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id  =  t2.ship_id GROUP BY t2.ship_id HAVING count(*)  >  1;ВЫБРАТЬ t1.наименование ИЗ справочник.корабли КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.капитаны КАК t2 ПО t1.ссылка = t2.корабль СГРУППИРОВАТЬ ПО t2.корабль ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 1
6178;SELECT name ,  CLASS FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain);ВЫБРАТЬ name , CLASS ИЗ справочник.корабли ГДЕ ship_id НЕ В (ВЫБРАТЬ ship_id ИЗ справочник.капитаны)
6179;SELECT name ,  CLASS FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain);ВЫБРАТЬ name , CLASS ИЗ справочник.корабли ГДЕ ship_id НЕ В (ВЫБРАТЬ ship_id ИЗ справочник.капитаны)
6180;SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id  =  t2.ship_id ORDER BY t2.age LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 t1.наименование ИЗ справочник.корабли КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.капитаны КАК t2 ПО t1.ссылка = t2.корабль УПОРЯДОЧИТЬ ПО t2.возраст
6181;SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id  =  t2.ship_id ORDER BY t2.age LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 t1.наименование ИЗ справочник.корабли КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.капитаны КАК t2 ПО t1.ссылка = t2.корабль УПОРЯДОЧИТЬ ПО t2.возраст
6182;SELECT name ,  flag FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain WHERE rank  =  'Midshipman');"ВЫБРАТЬ наименование , flag ИЗ справочник.корабли ГДЕ корабль НЕ В (ВЫБРАТЬ корабль ИЗ справочник.капитаны ГДЕ звание = ""Midshipman"")"
6183;SELECT name ,  flag FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain WHERE rank  =  'Midshipman');"ВЫБРАТЬ наименование , flag ИЗ справочник.корабли ГДЕ корабль НЕ В (ВЫБРАТЬ корабль ИЗ справочник.капитаны ГДЕ звание = ""Midshipman"")"
6186;SELECT host_city FROM hosting_city ORDER BY YEAR DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 городприема ИЗ регистрсведений.городаприемаматчей УПОРЯДОЧИТЬ ПО год УБЫВ
6187;SELECT host_city FROM hosting_city ORDER BY YEAR DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 городприема ИЗ регистрсведений.городаприемаматчей УПОРЯДОЧИТЬ ПО год УБЫВ
6188;"SELECT match_id FROM MATCH WHERE competition = ""1994 FIFA World Cup qualification""";"ВЫБРАТЬ ссылка ИЗ справочник.матчи ГДЕ турнир = ""1994 FIFA World Cup qualification"""
6189;"SELECT match_id FROM MATCH WHERE competition = ""1994 FIFA World Cup qualification""";"ВЫБРАТЬ ссылка ИЗ справочник.матчи ГДЕ турнир = ""1994 FIFA World Cup qualification"""
6190;SELECT T1.city FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city WHERE T2.year  >  2010;ВЫБРАТЬ T1.наименование ИЗ справочник.города КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.городаприемаматчей КАК T2 ПО T1.ссылка = T2.городприема ГДЕ T2.год > 2010
6191;SELECT T1.city FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city WHERE T2.year  >  2010;ВЫБРАТЬ T1.наименование ИЗ справочник.города КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.городаприемаматчей КАК T2 ПО T1.ссылка = T2.городприема ГДЕ T2.год > 2010
6192;SELECT T1.city FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id  =  T2.host_city GROUP BY T2.host_city ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.наименование ИЗ справочник.города КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.городаприемаматчей КАК T2 ПО T1.ссылка = T2.городприема СГРУППИРОВАТЬ ПО T2.городприема УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
6193;SELECT T1.city FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id  =  T2.host_city GROUP BY T2.host_city ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.наименование ИЗ справочник.города КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.городаприемаматчей КАК T2 ПО T1.ссылка = T2.городприема СГРУППИРОВАТЬ ПО T2.городприема УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
6194;"SELECT T3.venue FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city JOIN MATCH AS T3 ON T2.match_id = T3.match_id WHERE T1.city = ""Nanjing ( Jiangsu )"" AND T3.competition = ""1994 FIFA World Cup qualification""";"ВЫБРАТЬ T3.местопроведения ИЗ справочник.города КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.городаприемаматчей КАК T2 ПО T1.ссылка = T2.городприема ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.матчи КАК T3 ПО T2.матч = T3.ссылка ГДЕ T1.наименование = ""Nanjing ( Jiangsu )"" И T3.турнир = ""1994 FIFA World Cup qualification"""
6195;"SELECT T3.venue FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city JOIN MATCH AS T3 ON T2.match_id = T3.match_id WHERE T1.city = ""Nanjing ( Jiangsu )"" AND T3.competition = ""1994 FIFA World Cup qualification""";"ВЫБРАТЬ T3.местопроведения ИЗ справочник.города КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.городаприемаматчей КАК T2 ПО T1.ссылка = T2.городприема ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.матчи КАК T3 ПО T2.матч = T3.ссылка ГДЕ T1.наименование = ""Nanjing ( Jiangsu )"" И T3.турнир = ""1994 FIFA World Cup qualification"""
6196;"SELECT T2.Jan FROM city AS T1 JOIN temperature AS T2 ON T1.city_id = T2.city_id WHERE T1.city = ""Shanghai""";"ВЫБРАТЬ T2.январь ИЗ справочник.города КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.температурыпомесяцам КАК T2 ПО T1.ссылка = T2.город ГДЕ T1.наименование = ""Shanghai"""
6197;"SELECT T2.Jan FROM city AS T1 JOIN temperature AS T2 ON T1.city_id = T2.city_id WHERE T1.city = ""Shanghai""";"ВЫБРАТЬ T2.январь ИЗ справочник.города КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.температурыпомесяцам КАК T2 ПО T1.ссылка = T2.город ГДЕ T1.наименование = ""Shanghai"""
6198;"SELECT T2.year FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id  =  T2.host_city WHERE T1.city  =  ""Taizhou ( Zhejiang )""";"ВЫБРАТЬ T2.год ИЗ справочник.города КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.городаприемаматчей КАК T2 ПО T1.ссылка = T2.городприема ГДЕ T1.наименование = ""Taizhou ( Zhejiang )"""
6199;"SELECT T2.year FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id  =  T2.host_city WHERE T1.city  =  ""Taizhou ( Zhejiang )""";"ВЫБРАТЬ T2.год ИЗ справочник.города КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.городаприемаматчей КАК T2 ПО T1.ссылка = T2.городприема ГДЕ T1.наименование = ""Taizhou ( Zhejiang )"""
6200;SELECT city FROM city ORDER BY regional_population DESC LIMIT 3;ВЫБРАТЬ ПЕРВЫЕ 3 наименование ИЗ наименование УПОРЯДОЧИТЬ ПО населениерегиона УБЫВ
6201;SELECT city FROM city ORDER BY regional_population DESC LIMIT 3;ВЫБРАТЬ ПЕРВЫЕ 3 наименование ИЗ наименование УПОРЯДОЧИТЬ ПО населениерегиона УБЫВ
6202;SELECT city ,  GDP FROM city ORDER BY GDP LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование , ввп ИЗ наименование УПОРЯДОЧИТЬ ПО ввп
6203;SELECT city ,  GDP FROM city ORDER BY GDP LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование , ввп ИЗ наименование УПОРЯДОЧИТЬ ПО ввп
6204;SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id ORDER BY T2.Feb DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.наименование ИЗ справочник.города КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.температурыпомесяцам КАК T2 ПО T1.ссылка = T2.город УПОРЯДОЧИТЬ ПО T2.февраль УБЫВ
6205;SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id ORDER BY T2.Feb DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.наименование ИЗ справочник.города КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.температурыпомесяцам КАК T2 ПО T1.ссылка = T2.город УПОРЯДОЧИТЬ ПО T2.февраль УБЫВ
6206;SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id WHERE T2.Mar  <  T2.Jul OR T2.Mar  >  T2.Oct;ВЫБРАТЬ T1.наименование ИЗ справочник.города КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.температурыпомесяцам КАК T2 ПО T1.ссылка = T2.город ГДЕ T2.март < T2.июль ИЛИ T2.март > T2.октябрь
6207;SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id WHERE T2.Mar  <  T2.Jul OR T2.Mar  >  T2.Oct;ВЫБРАТЬ T1.наименование ИЗ справочник.города КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.температурыпомесяцам КАК T2 ПО T1.ссылка = T2.город ГДЕ T2.март < T2.июль ИЛИ T2.март > T2.октябрь
6212;SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id WHERE T2.Feb  >  T2.Jun UNION SELECT T3.city FROM city AS T3 JOIN hosting_city AS T4 ON T3.city_id  =  T4.host_city;ВЫБРАТЬ T1.наименование ИЗ справочник.города КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.температурыпомесяцам КАК T2 ПО T1.ссылка = T2.город ГДЕ T2.февраль > T2.июнь ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ T3.наименование ИЗ справочник.города КАК T3 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.городаприемаматчей КАК T4 ПО T3.ссылка = T4.городприема
6213;SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id WHERE T2.Feb  >  T2.Jun UNION SELECT T3.city FROM city AS T3 JOIN hosting_city AS T4 ON T3.city_id  =  T4.host_city;ВЫБРАТЬ T1.наименование ИЗ справочник.города КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.температурыпомесяцам КАК T2 ПО T1.ссылка = T2.город ГДЕ T2.февраль > T2.июнь ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ T3.наименование ИЗ справочник.города КАК T3 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.городаприемаматчей КАК T4 ПО T3.ссылка = T4.городприема
6214;SELECT city FROM city WHERE regional_population  >  10000000;ВЫБРАТЬ наименование ИЗ наименование ГДЕ населениерегиона > 10000000
6215;SELECT city FROM city WHERE regional_population  >  10000000;ВЫБРАТЬ наименование ИЗ наименование ГДЕ населениерегиона > 10000000
6216;SELECT city FROM city WHERE regional_population  >  10000000 UNION SELECT city FROM city WHERE regional_population  <  5000000;ВЫБРАТЬ наименование ИЗ наименование ГДЕ населениерегиона > 10000000 ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ наименование ИЗ наименование ГДЕ населениерегиона < 5000000
6217;SELECT city FROM city WHERE regional_population  >  10000000 UNION SELECT city FROM city WHERE regional_population  <  5000000;ВЫБРАТЬ наименование ИЗ наименование ГДЕ населениерегиона > 10000000 ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ наименование ИЗ наименование ГДЕ населениерегиона < 5000000
6218;SELECT count(*) ,  Competition FROM MATCH GROUP BY Competition;ВЫБРАТЬ КОЛИЧЕСТВО(*) , турнир ИЗ справочник.матчи СГРУППИРОВАТЬ ПО турнир
6219;SELECT count(*) ,  Competition FROM MATCH GROUP BY Competition;ВЫБРАТЬ КОЛИЧЕСТВО(*) , турнир ИЗ справочник.матчи СГРУППИРОВАТЬ ПО турнир
6220;SELECT venue FROM MATCH ORDER BY date DESC;ВЫБРАТЬ местопроведения ИЗ справочник.матчи УПОРЯДОЧИТЬ ПО дата УБЫВ
6221;SELECT venue FROM MATCH ORDER BY date DESC;ВЫБРАТЬ местопроведения ИЗ справочник.матчи УПОРЯДОЧИТЬ ПО дата УБЫВ
6222;SELECT gdp FROM city ORDER BY Regional_Population DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 ввп ИЗ наименование УПОРЯДОЧИТЬ ПО населениерегиона УБЫВ
6223;SELECT gdp FROM city ORDER BY Regional_Population DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 ввп ИЗ наименование УПОРЯДОЧИТЬ ПО населениерегиона УБЫВ
6224;SELECT t1.gdp ,  t1.Regional_Population FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id  =  T2.host_city GROUP BY t2.Host_City HAVING count(*)  >  1;ВЫБРАТЬ t1.gdp , t1.Regional_Population ИЗ справочник.города КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.городаприемаматчей КАК T2 ПО T1.ссылка = T2.городприема СГРУППИРОВАТЬ ПО t2.Host_City ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 1
6225;SELECT t1.gdp ,  t1.Regional_Population FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id  =  T2.host_city GROUP BY t2.Host_City HAVING count(*)  >  1;ВЫБРАТЬ t1.gdp , t1.Regional_Population ИЗ справочник.города КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.городаприемаматчей КАК T2 ПО T1.ссылка = T2.городприема СГРУППИРОВАТЬ ПО t2.Host_City ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 1
6226;SELECT individual_first_name ,  individual_middle_name ,  individual_last_name FROM individuals ORDER BY individual_last_name;ВЫБРАТЬ имя , отчество , фамилия ИЗ справочник.физическиелица УПОРЯДОЧИТЬ ПО фамилия
6227;SELECT individual_first_name ,  individual_middle_name ,  individual_last_name FROM individuals ORDER BY individual_last_name;ВЫБРАТЬ имя , отчество , фамилия ИЗ справочник.физическиелица УПОРЯДОЧИТЬ ПО фамилия
6228;SELECT DISTINCT form_type_code FROM forms;ВЫБРАТЬ РАЗЛИЧНЫЕ кодтипабланка ИЗ справочник.бланки
6229;SELECT DISTINCT form_type_code FROM forms;ВЫБРАТЬ РАЗЛИЧНЫЕ кодтипабланка ИЗ справочник.бланки
6230;SELECT t1.form_name FROM forms AS t1 JOIN party_forms AS t2 ON t1.form_id  =  t2.form_id GROUP BY t2.form_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 t1.наименование ИЗ справочник.бланки КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.бланкисторон КАК t2 ПО t1.ссылка = t2.бланк СГРУППИРОВАТЬ ПО t2.бланк УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
6231;SELECT t1.form_name FROM forms AS t1 JOIN party_forms AS t2 ON t1.form_id  =  t2.form_id GROUP BY t2.form_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 t1.наименование ИЗ справочник.бланки КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.бланкисторон КАК t2 ПО t1.ссылка = t2.бланк СГРУППИРОВАТЬ ПО t2.бланк УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
6232;"SELECT payment_method_code ,  party_phone FROM parties WHERE party_email  =  ""enrico09@example.com""";"ВЫБРАТЬ кодспособаоплаты , телефон ИЗ справочник.стороны ГДЕ электроннаяпочта = ""enrico09@example.com"""
6233;"SELECT payment_method_code ,  party_phone FROM parties WHERE party_email  =  ""enrico09@example.com""";"ВЫБРАТЬ кодспособаоплаты , телефон ИЗ справочник.стороны ГДЕ электроннаяпочта = ""enrico09@example.com"""
6234;SELECT t1.party_email FROM parties AS t1 JOIN party_forms AS t2 ON t1.party_id  =  t2.party_id WHERE t2.form_id  =  (SELECT form_id FROM party_forms GROUP BY form_id ORDER BY count(*) DESC LIMIT 1);ВЫБРАТЬ t1.электроннаяпочта ИЗ справочник.стороны КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.бланкисторон КАК t2 ПО t1.ссылка = t2.сторона ГДЕ t2.бланк = (ВЫБРАТЬ form_id ИЗ регистрсведений.бланкисторон СГРУППИРОВАТЬ ПО form_id УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ LIMIT 1)
6235;SELECT t1.party_email FROM parties AS t1 JOIN party_forms AS t2 ON t1.party_id  =  t2.party_id WHERE t2.form_id  =  (SELECT form_id FROM party_forms GROUP BY form_id ORDER BY count(*) DESC LIMIT 1);ВЫБРАТЬ t1.электроннаяпочта ИЗ справочник.стороны КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.бланкисторон КАК t2 ПО t1.ссылка = t2.сторона ГДЕ t2.бланк = (ВЫБРАТЬ form_id ИЗ регистрсведений.бланкисторон СГРУППИРОВАТЬ ПО form_id УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ LIMIT 1)
6236;SELECT organization_name FROM organizations ORDER BY date_formed ASC;ВЫБРАТЬ наименование ИЗ справочник.организации УПОРЯДОЧИТЬ ПО датаоснования ВОЗР
6237;SELECT organization_name FROM organizations ORDER BY date_formed ASC;ВЫБРАТЬ наименование ИЗ справочник.организации УПОРЯДОЧИТЬ ПО датаоснования ВОЗР
6238;SELECT organization_name FROM organizations ORDER BY date_formed DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование ИЗ справочник.организации УПОРЯДОЧИТЬ ПО датаоснования УБЫВ
6239;SELECT organization_name FROM organizations ORDER BY date_formed DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование ИЗ справочник.организации УПОРЯДОЧИТЬ ПО датаоснования УБЫВ
6240;"SELECT t3.individual_last_name FROM organizations AS t1 JOIN organization_contact_individuals AS t2 ON t1.organization_id  =  t2.organization_id JOIN individuals AS t3 ON t2.individual_id  =  t3.individual_id WHERE t1.organization_name  =  ""Labour Party"" ORDER BY t2.date_contact_to DESC LIMIT 1";"ВЫБРАТЬ ПЕРВЫЕ 1 t3.фамилия ИЗ справочник.организации КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.контактыорганизаций КАК t2 ПО t1.ссылка = t2.организация ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.физическиелица КАК t3 ПО t2.физлицо = t3.ссылка ГДЕ t1.наименование = ""Labour Party"" УПОРЯДОЧИТЬ ПО t2.датаокончанияконтакта УБЫВ"
6241;"SELECT t3.individual_last_name FROM organizations AS t1 JOIN organization_contact_individuals AS t2 ON t1.organization_id  =  t2.organization_id JOIN individuals AS t3 ON t2.individual_id  =  t3.individual_id WHERE t1.organization_name  =  ""Labour Party"" ORDER BY t2.date_contact_to DESC LIMIT 1";"ВЫБРАТЬ ПЕРВЫЕ 1 t3.фамилия ИЗ справочник.организации КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.контактыорганизаций КАК t2 ПО t1.ссылка = t2.организация ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.физическиелица КАК t3 ПО t2.физлицо = t3.ссылка ГДЕ t1.наименование = ""Labour Party"" УПОРЯДОЧИТЬ ПО t2.датаокончанияконтакта УБЫВ"
6242;SELECT t3.individual_last_name FROM organizations AS t1 JOIN organization_contact_individuals AS t2 ON t1.organization_id  =  t2.organization_id JOIN individuals AS t3 ON t2.individual_id  =  t3.individual_id WHERE t1.uk_vat_number  =  (SELECT max(uk_vat_number) FROM organizations) ORDER BY t2.date_contact_to ASC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 t3.фамилия ИЗ справочник.организации КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.контактыорганизаций КАК t2 ПО t1.ссылка = t2.организация ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.физическиелица КАК t3 ПО t2.физлицо = t3.ссылка ГДЕ t1.ндсномервеликобритании = (ВЫБРАТЬ ПЕРВЫЕ 1 МАКСИМУМ(uk_vat_number) ИЗ справочник.организации) УПОРЯДОЧИТЬ ПО t2.датаокончанияконтакта ВОЗР
6243;SELECT t3.individual_last_name FROM organizations AS t1 JOIN organization_contact_individuals AS t2 ON t1.organization_id  =  t2.organization_id JOIN individuals AS t3 ON t2.individual_id  =  t3.individual_id WHERE t1.uk_vat_number  =  (SELECT max(uk_vat_number) FROM organizations) ORDER BY t2.date_contact_to ASC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 t3.фамилия ИЗ справочник.организации КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.контактыорганизаций КАК t2 ПО t1.ссылка = t2.организация ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.физическиелица КАК t3 ПО t2.физлицо = t3.ссылка ГДЕ t1.ндсномервеликобритании = (ВЫБРАТЬ ПЕРВЫЕ 1 МАКСИМУМ(uk_vat_number) ИЗ справочник.организации) УПОРЯДОЧИТЬ ПО t2.датаокончанияконтакта ВОЗР
6244;SELECT count(*) FROM services;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.сервисы
6245;SELECT count(*) FROM services;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.сервисы
6248;SELECT town_city FROM addresses UNION SELECT state_province_county FROM addresses;ВЫБРАТЬ town_city ИЗ справочник.адреса ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ state_province_county ИЗ справочник.адреса
6249;SELECT town_city FROM addresses UNION SELECT state_province_county FROM addresses;ВЫБРАТЬ town_city ИЗ справочник.адреса ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ state_province_county ИЗ справочник.адреса
6250;"SELECT count(*) FROM addresses WHERE state_province_county  =  ""Colorado""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.адреса ГДЕ регион = ""Colorado"""
6251;"SELECT count(*) FROM addresses WHERE state_province_county  =  ""Colorado""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.адреса ГДЕ регион = ""Colorado"""
6252;SELECT payment_method_code FROM parties GROUP BY payment_method_code HAVING count(*)  >  3;ВЫБРАТЬ кодспособаоплаты ИЗ справочник.стороны СГРУППИРОВАТЬ ПО кодспособаоплаты ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 3
6253;SELECT payment_method_code FROM parties GROUP BY payment_method_code HAVING count(*)  >  3;ВЫБРАТЬ кодспособаоплаты ИЗ справочник.стороны СГРУППИРОВАТЬ ПО кодспособаоплаты ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 3
6254;"SELECT organization_name FROM organizations WHERE organization_name LIKE ""%Party%""";"ВЫБРАТЬ наименование ИЗ справочник.организации ГДЕ наименование ПОДОБНО ""%Party%"""
6255;"SELECT organization_name FROM organizations WHERE organization_name LIKE ""%Party%""";"ВЫБРАТЬ наименование ИЗ справочник.организации ГДЕ наименование ПОДОБНО ""%Party%"""
6256;SELECT count(DISTINCT payment_method_code) FROM parties;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ кодспособаоплаты) ИЗ справочник.стороны
6257;SELECT count(DISTINCT payment_method_code) FROM parties;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ кодспособаоплаты) ИЗ справочник.стороны
6258;SELECT t1.party_email FROM parties AS t1 JOIN party_services AS t2 ON t1.party_id  =  t2.customer_id GROUP BY t1.party_email ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 t1.электроннаяпочта ИЗ справочник.стороны КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.сервисысторон КАК t2 ПО t1.ссылка = t2.клиент СГРУППИРОВАТЬ ПО t1.электроннаяпочта УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
6259;SELECT t1.party_email FROM parties AS t1 JOIN party_services AS t2 ON t1.party_id  =  t2.customer_id GROUP BY t1.party_email ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 t1.электроннаяпочта ИЗ справочник.стороны КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.сервисысторон КАК t2 ПО t1.ссылка = t2.клиент СГРУППИРОВАТЬ ПО t1.электроннаяпочта УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
6260;"SELECT state_province_county FROM addresses WHERE line_1_number_building LIKE ""%6862 Kaitlyn Knolls%""";"ВЫБРАТЬ регион ИЗ справочник.адреса ГДЕ улицаидом ПОДОБНО ""%6862 Kaitlyn Knolls%"""
6261;"SELECT state_province_county FROM addresses WHERE line_1_number_building LIKE ""%6862 Kaitlyn Knolls%""";"ВЫБРАТЬ регион ИЗ справочник.адреса ГДЕ улицаидом ПОДОБНО ""%6862 Kaitlyn Knolls%"""
6262;SELECT t1.organization_name FROM organizations AS t1 JOIN organization_contact_individuals AS t2 ON t1.organization_id  =  t2.organization_id GROUP BY t1.organization_name ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 t1.наименование ИЗ справочник.организации КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.контактыорганизаций КАК t2 ПО t1.ссылка = t2.организация СГРУППИРОВАТЬ ПО t1.наименование УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
6263;SELECT t1.organization_name FROM organizations AS t1 JOIN organization_contact_individuals AS t2 ON t1.organization_id  =  t2.organization_id GROUP BY t1.organization_name ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 t1.наименование ИЗ справочник.организации КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.контактыорганизаций КАК t2 ПО t1.ссылка = t2.организация СГРУППИРОВАТЬ ПО t1.наименование УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
6264;SELECT DISTINCT t1.individual_last_name FROM individuals AS t1 JOIN organization_contact_individuals AS t2 ON t1.individual_id  =  t2.individual_id;ВЫБРАТЬ РАЗЛИЧНЫЕ t1.фамилия ИЗ справочник.физическиелица КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.контактыорганизаций КАК t2 ПО t1.ссылка = t2.физлицо
6265;SELECT DISTINCT t1.individual_last_name FROM individuals AS t1 JOIN organization_contact_individuals AS t2 ON t1.individual_id  =  t2.individual_id;ВЫБРАТЬ РАЗЛИЧНЫЕ t1.фамилия ИЗ справочник.физическиелица КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.контактыорганизаций КАК t2 ПО t1.ссылка = t2.физлицо
6266;SELECT count(*) FROM driver;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.водители
6267;SELECT name ,  home_city ,  age FROM driver;ВЫБРАТЬ наименование , городпроживания , возраст ИЗ справочник.водители
6268;SELECT party ,  count(*) FROM driver GROUP BY party;ВЫБРАТЬ партия , КОЛИЧЕСТВО(*) ИЗ справочник.водители СГРУППИРОВАТЬ ПО партия
6269;SELECT name FROM driver ORDER BY age DESC;ВЫБРАТЬ наименование ИЗ справочник.водители УПОРЯДОЧИТЬ ПО возраст УБЫВ
6270;SELECT DISTINCT home_city FROM driver;ВЫБРАТЬ РАЗЛИЧНЫЕ городпроживания ИЗ справочник.водители
6271;SELECT home_city FROM driver GROUP BY home_city ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 городпроживания ИЗ справочник.водители СГРУППИРОВАТЬ ПО городпроживания УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
6272;SELECT party FROM driver WHERE home_city  =  'Hartford' AND age  >  40;"ВЫБРАТЬ партия ИЗ справочник.водители ГДЕ городпроживания = ""Hartford"" И возраст > 40"
6273;SELECT home_city FROM driver WHERE age  >  40 GROUP BY home_city HAVING count(*)  >=  2;ВЫБРАТЬ городпроживания ИЗ справочник.водители ГДЕ возраст > 40 СГРУППИРОВАТЬ ПО городпроживания ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
6275;SELECT name FROM driver WHERE driver_id NOT IN (SELECT driver_id FROM school_bus);ВЫБРАТЬ name ИЗ справочник.водители ГДЕ driver_id НЕ В (ВЫБРАТЬ driver_id ИЗ регистрсведений.автобусышкол)
6276;SELECT TYPE FROM school GROUP BY TYPE HAVING count(*)  =  2;ВЫБРАТЬ тип ИЗ наименование СГРУППИРОВАТЬ ПО тип ИМЕЮЩИЕ КОЛИЧЕСТВО(*) = 2
6277;SELECT T2.school ,  T3.name FROM school_bus AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id JOIN driver AS T3 ON T1.driver_id  =  T3.driver_id;ВЫБРАТЬ T2.наименование , T3.наименование ИЗ регистрсведений.автобусышкол КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.школы КАК T2 ПО T1.школа = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.водители КАК T3 ПО T1.водитель = T3.ссылка
6278;SELECT max(years_working) ,  min(years_working) ,  avg(years_working) FROM school_bus;ВЫБРАТЬ МАКСИМУМ(стажработылет) , МИНИМУМ(стажработылет) , СРЕДНЕЕ(стажработылет) ИЗ регистрсведений.автобусышкол
6279;SELECT school ,  TYPE FROM school WHERE school_id NOT IN (SELECT school_id FROM school_bus);ВЫБРАТЬ school , TYPE ИЗ справочник.школы ГДЕ school_id НЕ В (ВЫБРАТЬ school_id ИЗ регистрсведений.автобусышкол)
6280;SELECT T2.type ,  count(*) FROM school_bus AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id GROUP BY T2.type;ВЫБРАТЬ T2.тип , КОЛИЧЕСТВО(*) ИЗ регистрсведений.автобусышкол КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.школы КАК T2 ПО T1.школа = T2.ссылка СГРУППИРОВАТЬ ПО T2.тип
6281;SELECT count(*) FROM driver WHERE home_city  =  'Hartford' OR age  <  40;"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.водители ГДЕ городпроживания = ""Hartford"" ИЛИ возраст < 40"
6282;SELECT name FROM driver WHERE home_city  =  'Hartford' AND age  <  40;"ВЫБРАТЬ наименование ИЗ справочник.водители ГДЕ городпроживания = ""Hartford"" И возраст < 40"
6283;SELECT t1.name FROM driver AS t1 JOIN school_bus AS t2 ON t1.driver_id  =  t2.driver_id ORDER BY years_working DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 t1.наименование ИЗ справочник.водители КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.автобусышкол КАК t2 ПО t1.ссылка = t2.водитель УПОРЯДОЧИТЬ ПО years_working УБЫВ
6284;SELECT count(*) FROM flight WHERE velocity  >  200;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.рейсы ГДЕ скорость > 200
6285;SELECT vehicle_flight_number ,  date ,  pilot FROM flight ORDER BY altitude ASC;ВЫБРАТЬ номеррейса , дата , пилот ИЗ регистрсведений.рейсы УПОРЯДОЧИТЬ ПО высота ВОЗР
6286;SELECT id ,  country ,  city ,  name FROM airport ORDER BY name;ВЫБРАТЬ ссылка , страна , город , наименование ИЗ справочник.аэропорты УПОРЯДОЧИТЬ ПО наименование
6287;SELECT max(group_equity_shareholding) FROM operate_company;ВЫБРАТЬ МАКСИМУМ(долявгруппе) ИЗ справочник.компанииоператоры
6288;SELECT avg(velocity) FROM flight WHERE pilot  =  'Thompson';"ВЫБРАТЬ СРЕДНЕЕ(скорость) ИЗ регистрсведений.рейсы ГДЕ пилот = ""Thompson"""
6289;SELECT T1.name ,  T1.type FROM operate_company AS T1 JOIN flight AS t2 ON T1.id  =  T2.company_id;ВЫБРАТЬ T1.наименование , T1.тип ИЗ справочник.компанииоператоры КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.рейсы КАК t2 ПО T1.ссылка = T2.company_id
6290;SELECT name FROM airport WHERE country != 'Iceland';"ВЫБРАТЬ наименование ИЗ справочник.аэропорты ГДЕ страна <> ""Iceland"""
6291;SELECT DISTINCT T1.type FROM operate_company AS T1 JOIN flight AS t2 ON T1.id  =  T2.company_id WHERE T2.velocity  <  200;ВЫБРАТЬ РАЗЛИЧНЫЕ T1.тип ИЗ справочник.компанииоператоры КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.рейсы КАК t2 ПО T1.ссылка = T2.company_id ГДЕ T2.velocity < 200
6292;SELECT T1.id ,  T1.name FROM operate_company AS T1 JOIN flight AS t2 ON T1.id  =  T2.company_id GROUP BY T1.id HAVING count(*)  >  1;ВЫБРАТЬ T1.ссылка , T1.наименование ИЗ справочник.компанииоператоры КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.рейсы КАК t2 ПО T1.ссылка = T2.company_id СГРУППИРОВАТЬ ПО T1.ссылка ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 1
6293;SELECT T1.id ,  T1.name ,  T1.IATA FROM airport AS T1 JOIN flight AS T2 ON T1.id  =  T2.airport_id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.ссылка , T1.наименование , T1.кодiata ИЗ справочник.аэропорты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.рейсы КАК T2 ПО T1.ссылка = T2.аэропорт СГРУППИРОВАТЬ ПО T2.ссылка УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
6294;SELECT DISTINCT T2.pilot FROM airport AS T1 JOIN flight AS T2 ON T1.id  =  T2.airport_id WHERE T1.country  =  'United States' OR T1.name  =  'Billund Airport';"ВЫБРАТЬ РАЗЛИЧНЫЕ T2.пилот ИЗ справочник.аэропорты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.рейсы КАК T2 ПО T1.ссылка = T2.аэропорт ГДЕ T1.страна = ""United States"" ИЛИ T1.наименование = ""Billund Airport"""
6295;SELECT TYPE ,  count(*) FROM operate_company GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 тип , КОЛИЧЕСТВО(*) ИЗ справочник.компанииоператоры СГРУППИРОВАТЬ ПО тип УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
6296;"SELECT count(*) FROM airport WHERE id NOT IN ( SELECT airport_id FROM flight WHERE pilot  =  'Thompson' );";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.аэропорты ГДЕ ссылка НЕ В ( ВЫБРАТЬ аэропорт ИЗ регистрсведений.рейсы ГДЕ пилот = ""Thompson"" );"
6298;SELECT name FROM airport WHERE name LIKE '%international%';"ВЫБРАТЬ наименование ИЗ справочник.аэропорты ГДЕ наименование ПОДОБНО ""%international%"""
6299;SELECT T3.id ,  count(*) FROM operate_company AS T1 JOIN flight AS t2 ON T1.id  =  T2.company_id JOIN airport AS T3 ON T2.airport_id  =  T3.id GROUP BY T3.id;ВЫБРАТЬ T3.ссылка , КОЛИЧЕСТВО(*) ИЗ справочник.компанииоператоры КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.рейсы КАК t2 ПО T1.ссылка = T2.company_id ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.аэропорты КАК T3 ПО T2.airport_id = T3.ссылка СГРУППИРОВАТЬ ПО T3.ссылка
6300;SELECT count(*) ,  country FROM airport GROUP BY country;ВЫБРАТЬ КОЛИЧЕСТВО(*) , страна ИЗ справочник.аэропорты СГРУППИРОВАТЬ ПО страна
6301;SELECT country FROM airport GROUP BY country HAVING count(*)  >  2;ВЫБРАТЬ страна ИЗ справочник.аэропорты СГРУППИРОВАТЬ ПО страна ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 2
6302;SELECT pilot FROM flight GROUP BY pilot ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 пилот ИЗ регистрсведений.рейсы СГРУППИРОВАТЬ ПО пилот УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
6303;SELECT count(*) FROM Accounts;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.счета
6304;SELECT count(*) FROM Accounts;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.счета
6305;SELECT account_id ,  account_details FROM Accounts;ВЫБРАТЬ ссылка , деталисчета ИЗ справочник.счета
6306;SELECT account_id ,  account_details FROM Accounts;ВЫБРАТЬ ссылка , деталисчета ИЗ справочник.счета
6307;SELECT count(*) FROM Statements;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.отчеты
6308;SELECT count(*) FROM Statements;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.отчеты
6309;SELECT STATEMENT_ID ,  statement_details FROM Statements;ВЫБРАТЬ ссылка , описание ИЗ справочник.отчеты
6310;SELECT STATEMENT_ID ,  statement_details FROM Statements;ВЫБРАТЬ ссылка , описание ИЗ справочник.отчеты
6311;SELECT T1.statement_id ,  T2.statement_details ,  T1.account_details FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id  =  T2.statement_id;ВЫБРАТЬ T1.отчет , T2.описание , T1.деталисчета ИЗ справочник.счета КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.отчеты КАК T2 ПО T1.отчет = T2.ссылка
6312;SELECT T1.statement_id ,  T2.statement_details ,  T1.account_details FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id  =  T2.statement_id;ВЫБРАТЬ T1.отчет , T2.описание , T1.деталисчета ИЗ справочник.счета КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.отчеты КАК T2 ПО T1.отчет = T2.ссылка
6313;SELECT STATEMENT_ID ,  count(*) FROM Accounts GROUP BY STATEMENT_ID;ВЫБРАТЬ отчет , КОЛИЧЕСТВО(*) ИЗ справочник.счета СГРУППИРОВАТЬ ПО отчет
6314;SELECT STATEMENT_ID ,  count(*) FROM Accounts GROUP BY STATEMENT_ID;ВЫБРАТЬ отчет , КОЛИЧЕСТВО(*) ИЗ справочник.счета СГРУППИРОВАТЬ ПО отчет
6315;SELECT T1.statement_id ,  T2.statement_details FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id  =  T2.statement_id GROUP BY T1.statement_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.отчет , T2.описание ИЗ справочник.счета КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.отчеты КАК T2 ПО T1.отчет = T2.ссылка СГРУППИРОВАТЬ ПО T1.отчет УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
6316;SELECT T1.statement_id ,  T2.statement_details FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id  =  T2.statement_id GROUP BY T1.statement_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.отчет , T2.описание ИЗ справочник.счета КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.отчеты КАК T2 ПО T1.отчет = T2.ссылка СГРУППИРОВАТЬ ПО T1.отчет УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
6317;SELECT count(*) FROM Documents;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ документ.документы
6318;SELECT count(*) FROM Documents;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ документ.документы
6319;SELECT document_type_code ,  document_name ,  document_description FROM Documents WHERE document_name  =  'Noel CV' OR document_name  =  'King Book';"ВЫБРАТЬ виддокумента , наименование , описание ИЗ документ.документы ГДЕ наименование = ""Noel CV"" ИЛИ наименование = ""King Book"""
6320;SELECT document_type_code ,  document_name ,  document_description FROM Documents WHERE document_name  =  'Noel CV' OR document_name  =  'King Book';"ВЫБРАТЬ виддокумента , наименование , описание ИЗ документ.документы ГДЕ наименование = ""Noel CV"" ИЛИ наименование = ""King Book"""
6321;SELECT document_id ,  document_name FROM Documents;ВЫБРАТЬ ссылка , наименование ИЗ документ.документы
6322;SELECT document_id ,  document_name FROM Documents;ВЫБРАТЬ ссылка , наименование ИЗ документ.документы
6323;"SELECT document_name ,  document_id FROM Documents WHERE document_type_code  =  ""BK""";"ВЫБРАТЬ наименование , ссылка ИЗ документ.документы ГДЕ виддокумента = ""BK"""
6324;"SELECT document_name ,  document_id FROM Documents WHERE document_type_code  =  ""BK""";"ВЫБРАТЬ наименование , ссылка ИЗ документ.документы ГДЕ виддокумента = ""BK"""
6325;"SELECT count(*) ,  project_id FROM Documents WHERE document_type_code  =  ""BK"" GROUP BY project_id";"ВЫБРАТЬ КОЛИЧЕСТВО(*) , проект ИЗ документ.документы ГДЕ виддокумента = ""BK"" СГРУППИРОВАТЬ ПО проект"
6326;"SELECT count(*) ,  project_id FROM Documents WHERE document_type_code  =  ""BK"" GROUP BY project_id";"ВЫБРАТЬ КОЛИЧЕСТВО(*) , проект ИЗ документ.документы ГДЕ виддокумента = ""BK"" СГРУППИРОВАТЬ ПО проект"
6327;SELECT document_name ,  document_date FROM Documents AS T1 JOIN projects AS T2 ON T1.project_id  =  T2.project_id WHERE T2.project_details  =  'Graph Database project';"ВЫБРАТЬ document_name , document_date ИЗ документ.документы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.проекты КАК T2 ПО T1.проект = T2.ссылка ГДЕ T2.описание = ""Graph Database project"""
6328;SELECT document_name ,  document_date FROM Documents AS T1 JOIN projects AS T2 ON T1.project_id  =  T2.project_id WHERE T2.project_details  =  'Graph Database project';"ВЫБРАТЬ document_name , document_date ИЗ документ.документы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.проекты КАК T2 ПО T1.проект = T2.ссылка ГДЕ T2.описание = ""Graph Database project"""
6329;SELECT project_id ,  count(*) FROM Documents GROUP BY project_id;ВЫБРАТЬ проект , КОЛИЧЕСТВО(*) ИЗ документ.документы СГРУППИРОВАТЬ ПО проект
6330;SELECT project_id ,  count(*) FROM Documents GROUP BY project_id;ВЫБРАТЬ проект , КОЛИЧЕСТВО(*) ИЗ документ.документы СГРУППИРОВАТЬ ПО проект
6331;SELECT project_id FROM Documents GROUP BY project_id ORDER BY count(*) ASC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 проект ИЗ документ.документы СГРУППИРОВАТЬ ПО проект УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) ВОЗР
6332;SELECT project_id FROM Documents GROUP BY project_id ORDER BY count(*) ASC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 проект ИЗ документ.документы СГРУППИРОВАТЬ ПО проект УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) ВОЗР
6333;SELECT project_id FROM Documents GROUP BY project_id HAVING count(*)  >=  2;ВЫБРАТЬ проект ИЗ документ.документы СГРУППИРОВАТЬ ПО проект ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
6334;SELECT project_id FROM Documents GROUP BY project_id HAVING count(*)  >=  2;ВЫБРАТЬ проект ИЗ документ.документы СГРУППИРОВАТЬ ПО проект ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
6335;SELECT document_type_code ,  count(*) FROM Documents GROUP BY document_type_code;ВЫБРАТЬ виддокумента , КОЛИЧЕСТВО(*) ИЗ документ.документы СГРУППИРОВАТЬ ПО виддокумента
6336;SELECT document_type_code ,  count(*) FROM Documents GROUP BY document_type_code;ВЫБРАТЬ виддокумента , КОЛИЧЕСТВО(*) ИЗ документ.документы СГРУППИРОВАТЬ ПО виддокумента
6337;SELECT document_type_code FROM Documents GROUP BY document_type_code ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 виддокумента ИЗ документ.документы СГРУППИРОВАТЬ ПО виддокумента УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
6338;SELECT document_type_code FROM Documents GROUP BY document_type_code ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 виддокумента ИЗ документ.документы СГРУППИРОВАТЬ ПО виддокумента УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
6339;SELECT document_type_code FROM Documents GROUP BY document_type_code HAVING count(*)  <  3;ВЫБРАТЬ виддокумента ИЗ документ.документы СГРУППИРОВАТЬ ПО виддокумента ИМЕЮЩИЕ КОЛИЧЕСТВО(*) < 3
6340;SELECT document_type_code FROM Documents GROUP BY document_type_code HAVING count(*)  <  3;ВЫБРАТЬ виддокумента ИЗ документ.документы СГРУППИРОВАТЬ ПО виддокумента ИМЕЮЩИЕ КОЛИЧЕСТВО(*) < 3
6341;SELECT T1.statement_details ,  T2.document_name FROM Statements AS T1 JOIN Documents AS T2 ON T1.statement_id  =  T2.document_id WHERE T1.statement_details  =  'Private Project';"ВЫБРАТЬ T1.описание , T2.наименование ИЗ справочник.отчеты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.документы КАК T2 ПО T1.ссылка = T2.ссылка ГДЕ T1.описание = ""Private Project"""
6342;SELECT T1.statement_details ,  T2.document_name FROM Statements AS T1 JOIN Documents AS T2 ON T1.statement_id  =  T2.document_id WHERE T1.statement_details  =  'Private Project';"ВЫБРАТЬ T1.описание , T2.наименование ИЗ справочник.отчеты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.документы КАК T2 ПО T1.ссылка = T2.ссылка ГДЕ T1.описание = ""Private Project"""
6343;SELECT document_type_code ,  document_type_name ,  document_type_description FROM Ref_document_types;ВЫБРАТЬ кодвидадокумента , наименование , описание ИЗ справочник.видыдокументов
6344;SELECT document_type_code ,  document_type_name ,  document_type_description FROM Ref_document_types;ВЫБРАТЬ кодвидадокумента , наименование , описание ИЗ справочник.видыдокументов
6345;"SELECT document_type_description FROM Ref_document_types WHERE document_type_name  =  ""Film""";"ВЫБРАТЬ описание ИЗ справочник.видыдокументов ГДЕ наименование = ""Film"""
6346;"SELECT document_type_description FROM Ref_document_types WHERE document_type_name  =  ""Film""";"ВЫБРАТЬ описание ИЗ справочник.видыдокументов ГДЕ наименование = ""Film"""
6347;SELECT T1.document_type_name ,  T1.document_type_description ,  T2.Document_date FROM Ref_document_types AS T1 JOIN Documents AS T2 ON T1.document_type_code  =  T2.document_type_code;ВЫБРАТЬ T1.наименование , T1.описание , T2.датадокумента ИЗ справочник.видыдокументов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.документы КАК T2 ПО T1.кодвидадокумента = T2.виддокумента
6348;SELECT T1.document_type_name ,  T1.document_type_description ,  T2.Document_date FROM Ref_document_types AS T1 JOIN Documents AS T2 ON T1.document_type_code  =  T2.document_type_code;ВЫБРАТЬ T1.наименование , T1.описание , T2.датадокумента ИЗ справочник.видыдокументов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.документы КАК T2 ПО T1.кодвидадокумента = T2.виддокумента
6349;SELECT count(*) FROM Projects;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.проекты
6350;SELECT count(*) FROM Projects;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.проекты
6351;SELECT project_id ,  project_details FROM Projects;ВЫБРАТЬ ссылка , описание ИЗ справочник.проекты
6352;SELECT project_id ,  project_details FROM Projects;ВЫБРАТЬ ссылка , описание ИЗ справочник.проекты
6353;SELECT T1.project_id ,  T1.project_details FROM Projects AS T1 JOIN Documents AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.project_id HAVING count(*)  >  2;ВЫБРАТЬ T1.ссылка , T1.описание ИЗ справочник.проекты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.документы КАК T2 ПО T1.ссылка = T2.проект СГРУППИРОВАТЬ ПО T1.ссылка ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 2
6354;SELECT T1.project_id ,  T1.project_details FROM Projects AS T1 JOIN Documents AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.project_id HAVING count(*)  >  2;ВЫБРАТЬ T1.ссылка , T1.описание ИЗ справочник.проекты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.документы КАК T2 ПО T1.ссылка = T2.проект СГРУППИРОВАТЬ ПО T1.ссылка ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 2
6355;"SELECT T1.project_details FROM Projects AS T1 JOIN Documents AS T2 ON T1.project_id  =  T2.project_id WHERE T2.document_name  =  ""King Book""";"ВЫБРАТЬ T1.описание ИЗ справочник.проекты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.документы КАК T2 ПО T1.ссылка = T2.проект ГДЕ T2.наименование = ""King Book"""
6356;"SELECT T1.project_details FROM Projects AS T1 JOIN Documents AS T2 ON T1.project_id  =  T2.project_id WHERE T2.document_name  =  ""King Book""";"ВЫБРАТЬ T1.описание ИЗ справочник.проекты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.документы КАК T2 ПО T1.ссылка = T2.проект ГДЕ T2.наименование = ""King Book"""
6357;SELECT count(*) FROM Ref_budget_codes;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.бюджетныекоды
6358;SELECT count(*) FROM Ref_budget_codes;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.бюджетныекоды
6359;SELECT budget_type_code ,  budget_type_description FROM Ref_budget_codes;ВЫБРАТЬ кодбюджета , описание ИЗ справочник.бюджетныекоды
6360;SELECT budget_type_code ,  budget_type_description FROM Ref_budget_codes;ВЫБРАТЬ кодбюджета , описание ИЗ справочник.бюджетныекоды
6361;"SELECT budget_type_description FROM Ref_budget_codes WHERE budget_type_code  =  ""ORG""";"ВЫБРАТЬ описание ИЗ справочник.бюджетныекоды ГДЕ кодбюджета = ""ORG"""
6362;"SELECT budget_type_description FROM Ref_budget_codes WHERE budget_type_code  =  ""ORG""";"ВЫБРАТЬ описание ИЗ справочник.бюджетныекоды ГДЕ кодбюджета = ""ORG"""
6363;SELECT count(*) FROM Documents_with_expenses;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.документысрасходами
6364;SELECT count(*) FROM Documents_with_expenses;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.документысрасходами
6365;SELECT document_id FROM Documents_with_expenses WHERE budget_type_code  =  'SF';"ВЫБРАТЬ документ ИЗ регистрсведений.документысрасходами ГДЕ бюджетныйкод = ""SF"""
6366;SELECT document_id FROM Documents_with_expenses WHERE budget_type_code  =  'SF';"ВЫБРАТЬ документ ИЗ регистрсведений.документысрасходами ГДЕ бюджетныйкод = ""SF"""
6367;SELECT T2.budget_type_code ,  T2.budget_type_description ,  T1.document_id FROM Documents_with_expenses AS T1 JOIN Ref_budget_codes AS T2 ON T1.budget_type_code  =  T2.budget_type_code;ВЫБРАТЬ T2.кодбюджета , T2.описание , T1.документ ИЗ регистрсведений.документысрасходами КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.бюджетныекоды КАК T2 ПО T1.бюджетныйкод = T2.кодбюджета
6368;SELECT T2.budget_type_code ,  T2.budget_type_description ,  T1.document_id FROM Documents_with_expenses AS T1 JOIN Ref_budget_codes AS T2 ON T1.budget_type_code  =  T2.budget_type_code;ВЫБРАТЬ T2.кодбюджета , T2.описание , T1.документ ИЗ регистрсведений.документысрасходами КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.бюджетныекоды КАК T2 ПО T1.бюджетныйкод = T2.кодбюджета
6369;"SELECT T1.document_id FROM Documents_with_expenses AS T1 JOIN Ref_Budget_Codes AS T2 ON T1.Budget_Type_code  =  T2.Budget_Type_code WHERE T2.budget_type_Description  =  ""Government""";"ВЫБРАТЬ T1.документ ИЗ регистрсведений.документысрасходами КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.бюджетныекоды КАК T2 ПО T1.бюджетныйкод = T2.кодбюджета ГДЕ T2.описание = ""Government"""
6370;"SELECT T1.document_id FROM Documents_with_expenses AS T1 JOIN Ref_Budget_Codes AS T2 ON T1.Budget_Type_code  =  T2.Budget_Type_code WHERE T2.budget_type_Description  =  ""Government""";"ВЫБРАТЬ T1.документ ИЗ регистрсведений.документысрасходами КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.бюджетныекоды КАК T2 ПО T1.бюджетныйкод = T2.кодбюджета ГДЕ T2.описание = ""Government"""
6371;SELECT budget_type_code ,  count(*) FROM Documents_with_expenses GROUP BY budget_type_code;ВЫБРАТЬ бюджетныйкод , КОЛИЧЕСТВО(*) ИЗ регистрсведений.документысрасходами СГРУППИРОВАТЬ ПО бюджетныйкод
6372;SELECT budget_type_code ,  count(*) FROM Documents_with_expenses GROUP BY budget_type_code;ВЫБРАТЬ бюджетныйкод , КОЛИЧЕСТВО(*) ИЗ регистрсведений.документысрасходами СГРУППИРОВАТЬ ПО бюджетныйкод
6373;SELECT budget_type_code FROM Documents_with_expenses GROUP BY budget_type_code ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 бюджетныйкод ИЗ регистрсведений.документысрасходами СГРУППИРОВАТЬ ПО бюджетныйкод УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
6374;SELECT budget_type_code FROM Documents_with_expenses GROUP BY budget_type_code ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 бюджетныйкод ИЗ регистрсведений.документысрасходами СГРУППИРОВАТЬ ПО бюджетныйкод УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
6379;SELECT T1.document_id FROM Documents AS T1 JOIN Documents_with_expenses AS T2 ON T1.document_id  =  T2.document_id WHERE T1.document_name LIKE '%s%';"ВЫБРАТЬ T1.ссылка ИЗ документ.документы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.документысрасходами КАК T2 ПО T1.ссылка = T2.документ ГДЕ T1.наименование ПОДОБНО ""%s%"""
6380;SELECT T1.document_id FROM Documents AS T1 JOIN Documents_with_expenses AS T2 ON T1.document_id  =  T2.document_id WHERE T1.document_name LIKE '%s%';"ВЫБРАТЬ T1.ссылка ИЗ документ.документы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.документысрасходами КАК T2 ПО T1.ссылка = T2.документ ГДЕ T1.наименование ПОДОБНО ""%s%"""
6381;SELECT count(*) FROM Documents WHERE document_id NOT IN ( SELECT document_id FROM Documents_with_expenses );ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ документ.документы ГДЕ document_id НЕ В ( ВЫБРАТЬ document_id ИЗ регистрсведений.документысрасходами )
6382;SELECT count(*) FROM Documents WHERE document_id NOT IN ( SELECT document_id FROM Documents_with_expenses );ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ документ.документы ГДЕ document_id НЕ В ( ВЫБРАТЬ document_id ИЗ регистрсведений.документысрасходами )
6385;"SELECT max(Account_details) FROM Accounts UNION SELECT Account_details FROM Accounts WHERE Account_details LIKE ""%5%""";"ВЫБРАТЬ МАКСИМУМ(Account_details) ИЗ справочник.счета ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ Account_details ИЗ справочник.счета ГДЕ Account_details ПОДОБНО ""%5%"""
6386;"SELECT max(Account_details) FROM Accounts UNION SELECT Account_details FROM Accounts WHERE Account_details LIKE ""%5%""";"ВЫБРАТЬ МАКСИМУМ(Account_details) ИЗ справочник.счета ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ Account_details ИЗ справочник.счета ГДЕ Account_details ПОДОБНО ""%5%"""
6387;SELECT count(*) FROM scientists;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.учёные
6388;SELECT count(*) FROM scientists;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.учёные
6389;SELECT sum(hours) FROM projects;ВЫБРАТЬ СУММА(часы) ИЗ справочник.проекты
6390;SELECT sum(hours) FROM projects;ВЫБРАТЬ СУММА(часы) ИЗ справочник.проекты
6391;SELECT count(DISTINCT scientist) FROM assignedto;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ учёный) ИЗ регистрсведений.назначениянапроекты
6392;SELECT count(DISTINCT scientist) FROM assignedto;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ учёный) ИЗ регистрсведений.назначениянапроекты
6393;SELECT count(DISTINCT name) FROM projects;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ наименование) ИЗ справочник.проекты
6394;SELECT count(DISTINCT name) FROM projects;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ наименование) ИЗ справочник.проекты
6395;SELECT avg(hours) FROM projects;ВЫБРАТЬ СРЕДНЕЕ(часы) ИЗ справочник.проекты
6396;SELECT avg(hours) FROM projects;ВЫБРАТЬ СРЕДНЕЕ(часы) ИЗ справочник.проекты
6397;SELECT name FROM projects ORDER BY hours DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование ИЗ справочник.проекты УПОРЯДОЧИТЬ ПО часы УБЫВ
6398;SELECT name FROM projects ORDER BY hours DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование ИЗ справочник.проекты УПОРЯДОЧИТЬ ПО часы УБЫВ
6399;SELECT name FROM projects WHERE hours  >  (SELECT avg(hours) FROM projects);ВЫБРАТЬ name ИЗ справочник.проекты ГДЕ hours > (ВЫБРАТЬ СРЕДНЕЕ(hours) ИЗ справочник.проекты)
6400;SELECT name FROM projects WHERE hours  >  (SELECT avg(hours) FROM projects);ВЫБРАТЬ name ИЗ справочник.проекты ГДЕ hours > (ВЫБРАТЬ СРЕДНЕЕ(hours) ИЗ справочник.проекты)
6401;SELECT T1.name ,  T1.hours FROM projects AS T1 JOIN assignedto AS T2 ON T1.code  =  T2.project GROUP BY T2.project ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.наименование , T1.часы ИЗ справочник.проекты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.назначениянапроекты КАК T2 ПО T1.ссылка = T2.проект СГРУППИРОВАТЬ ПО T2.проект УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
6402;SELECT T1.name ,  T1.hours FROM projects AS T1 JOIN assignedto AS T2 ON T1.code  =  T2.project GROUP BY T2.project ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.наименование , T1.часы ИЗ справочник.проекты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.назначениянапроекты КАК T2 ПО T1.ссылка = T2.проект СГРУППИРОВАТЬ ПО T2.проект УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
6403;SELECT T2.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T3.name LIKE '%Smith%';"ВЫБРАТЬ T2.наименование ИЗ регистрсведений.назначениянапроекты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.проекты КАК T2 ПО T1.проект = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.учёные КАК T3 ПО T1.учёный = T3.ссылка ГДЕ T3.наименование ПОДОБНО ""%Smith%"""
6404;SELECT T2.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T3.name LIKE '%Smith%';"ВЫБРАТЬ T2.наименование ИЗ регистрсведений.назначениянапроекты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.проекты КАК T2 ПО T1.проект = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.учёные КАК T3 ПО T1.учёный = T3.ссылка ГДЕ T3.наименование ПОДОБНО ""%Smith%"""
6405;SELECT sum(T2.hours) FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T3.name  =  'Michael Rogers' OR T3.name  =  'Carol Smith';"ВЫБРАТЬ СУММА(T2.часы) ИЗ регистрсведений.назначениянапроекты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.проекты КАК T2 ПО T1.проект = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.учёные КАК T3 ПО T1.учёный = T3.ссылка ГДЕ T3.наименование = ""Michael Rogers"" ИЛИ T3.наименование = ""Carol Smith"""
6406;SELECT sum(T2.hours) FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T3.name  =  'Michael Rogers' OR T3.name  =  'Carol Smith';"ВЫБРАТЬ СУММА(T2.часы) ИЗ регистрсведений.назначениянапроекты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.проекты КАК T2 ПО T1.проект = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.учёные КАК T3 ПО T1.учёный = T3.ссылка ГДЕ T3.наименование = ""Michael Rogers"" ИЛИ T3.наименование = ""Carol Smith"""
6407;SELECT name FROM projects WHERE hours BETWEEN 100 AND 300;ВЫБРАТЬ наименование ИЗ справочник.проекты ГДЕ часы МЕЖДУ 100 И 300
6408;SELECT name FROM projects WHERE hours BETWEEN 100 AND 300;ВЫБРАТЬ наименование ИЗ справочник.проекты ГДЕ часы МЕЖДУ 100 И 300
6411;SELECT name FROM scientists ORDER BY name;ВЫБРАТЬ наименование ИЗ справочник.учёные УПОРЯДОЧИТЬ ПО наименование
6412;SELECT name FROM scientists ORDER BY name;ВЫБРАТЬ наименование ИЗ справочник.учёные УПОРЯДОЧИТЬ ПО наименование
6413;SELECT count(*) ,  T1.name FROM projects AS T1 JOIN assignedto AS T2 ON T1.code  =  T2.project GROUP BY T1.name;ВЫБРАТЬ КОЛИЧЕСТВО(*) , T1.наименование ИЗ справочник.проекты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.назначениянапроекты КАК T2 ПО T1.ссылка = T2.проект СГРУППИРОВАТЬ ПО T1.наименование
6414;SELECT count(*) ,  T1.name FROM projects AS T1 JOIN assignedto AS T2 ON T1.code  =  T2.project GROUP BY T1.name;ВЫБРАТЬ КОЛИЧЕСТВО(*) , T1.наименование ИЗ справочник.проекты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.назначениянапроекты КАК T2 ПО T1.ссылка = T2.проект СГРУППИРОВАТЬ ПО T1.наименование
6415;SELECT count(*) ,  T1.name FROM projects AS T1 JOIN assignedto AS T2 ON T1.code  =  T2.project WHERE T1.hours  >  300 GROUP BY T1.name;ВЫБРАТЬ КОЛИЧЕСТВО(*) , T1.наименование ИЗ справочник.проекты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.назначениянапроекты КАК T2 ПО T1.ссылка = T2.проект ГДЕ T1.часы > 300 СГРУППИРОВАТЬ ПО T1.наименование
6416;SELECT count(*) ,  T1.name FROM projects AS T1 JOIN assignedto AS T2 ON T1.code  =  T2.project WHERE T1.hours  >  300 GROUP BY T1.name;ВЫБРАТЬ КОЛИЧЕСТВО(*) , T1.наименование ИЗ справочник.проекты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.назначениянапроекты КАК T2 ПО T1.ссылка = T2.проект ГДЕ T1.часы > 300 СГРУППИРОВАТЬ ПО T1.наименование
6417;SELECT count(*) ,  T1.name FROM scientists AS T1 JOIN assignedto AS T2 ON T1.ssn  =  T2.scientist GROUP BY T1.name;ВЫБРАТЬ КОЛИЧЕСТВО(*) , T1.наименование ИЗ справочник.учёные КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.назначениянапроекты КАК T2 ПО T1.ссылка = T2.учёный СГРУППИРОВАТЬ ПО T1.наименование
6418;SELECT count(*) ,  T1.name FROM scientists AS T1 JOIN assignedto AS T2 ON T1.ssn  =  T2.scientist GROUP BY T1.name;ВЫБРАТЬ КОЛИЧЕСТВО(*) , T1.наименование ИЗ справочник.учёные КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.назначениянапроекты КАК T2 ПО T1.ссылка = T2.учёный СГРУППИРОВАТЬ ПО T1.наименование
6419;SELECT T3.ssn ,  T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T2.hours  =  (SELECT max(hours) FROM projects);ВЫБРАТЬ T3.ссылка , T3.наименование ИЗ регистрсведений.назначениянапроекты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.проекты КАК T2 ПО T1.проект = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.учёные КАК T3 ПО T1.учёный = T3.ссылка ГДЕ T2.часы = (ВЫБРАТЬ МАКСИМУМ(hours) ИЗ справочник.проекты)
6420;SELECT T3.ssn ,  T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T2.hours  =  (SELECT max(hours) FROM projects);ВЫБРАТЬ T3.ссылка , T3.наименование ИЗ регистрсведений.назначениянапроекты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.проекты КАК T2 ПО T1.проект = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.учёные КАК T3 ПО T1.учёный = T3.ссылка ГДЕ T2.часы = (ВЫБРАТЬ МАКСИМУМ(hours) ИЗ справочник.проекты)
6421;SELECT T2.name FROM assignedto AS T1 JOIN scientists AS T2 ON T1.scientist  =  T2.ssn;ВЫБРАТЬ T2.наименование ИЗ регистрсведений.назначениянапроекты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.учёные КАК T2 ПО T1.учёный = T2.ссылка
6422;SELECT T2.name FROM assignedto AS T1 JOIN scientists AS T2 ON T1.scientist  =  T2.ssn;ВЫБРАТЬ T2.наименование ИЗ регистрсведений.назначениянапроекты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.учёные КАК T2 ПО T1.учёный = T2.ссылка
6423;SELECT Name FROM Projects WHERE Code NOT IN (SELECT Project FROM AssignedTo);ВЫБРАТЬ Name ИЗ справочник.проекты ГДЕ Code НЕ В (ВЫБРАТЬ Project ИЗ регистрсведений.назначениянапроекты)
6424;SELECT Name FROM Projects WHERE Code NOT IN (SELECT Project FROM AssignedTo);ВЫБРАТЬ Name ИЗ справочник.проекты ГДЕ Code НЕ В (ВЫБРАТЬ Project ИЗ регистрсведений.назначениянапроекты)
6425;SELECT Name FROM scientists WHERE ssn NOT IN (SELECT scientist FROM AssignedTo);ВЫБРАТЬ Name ИЗ справочник.учёные ГДЕ ssn НЕ В (ВЫБРАТЬ scientist ИЗ регистрсведений.назначениянапроекты)
6426;SELECT Name FROM scientists WHERE ssn NOT IN (SELECT scientist FROM AssignedTo);ВЫБРАТЬ Name ИЗ справочник.учёные ГДЕ ssn НЕ В (ВЫБРАТЬ scientist ИЗ регистрсведений.назначениянапроекты)
6427;SELECT count(*) FROM scientists WHERE ssn NOT IN (SELECT scientist FROM AssignedTo);ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.учёные ГДЕ ssn НЕ В (ВЫБРАТЬ scientist ИЗ регистрсведений.назначениянапроекты)
6428;SELECT count(*) FROM scientists WHERE ssn NOT IN (SELECT scientist FROM AssignedTo);ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.учёные ГДЕ ssn НЕ В (ВЫБРАТЬ scientist ИЗ регистрсведений.назначениянапроекты)
6431;SELECT T1.Name ,  T3.Name ,  T3.Hours FROM Scientists AS T1 JOIN AssignedTo AS T2 ON T1.SSN = T2.Scientist JOIN Projects AS T3 ON T2.Project = T3.Code ORDER BY T3.Name ,  T1.Name;ВЫБРАТЬ T1.наименование , T3.наименование , T3.часы ИЗ справочник.учёные КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.назначениянапроекты КАК T2 ПО T1.ссылка = T2.учёный ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.проекты КАК T3 ПО T2.проект = T3.ссылка УПОРЯДОЧИТЬ ПО T3.наименование , T1.наименование
6432;SELECT T1.Name ,  T3.Name ,  T3.Hours FROM Scientists AS T1 JOIN AssignedTo AS T2 ON T1.SSN = T2.Scientist JOIN Projects AS T3 ON T2.Project = T3.Code ORDER BY T3.Name ,  T1.Name;ВЫБРАТЬ T1.наименование , T3.наименование , T3.часы ИЗ справочник.учёные КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.назначениянапроекты КАК T2 ПО T1.ссылка = T2.учёный ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.проекты КАК T3 ПО T2.проект = T3.ссылка УПОРЯДОЧИТЬ ПО T3.наименование , T1.наименование
6433;SELECT T2.name ,  T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T2.hours  =  (SELECT min(hours) FROM projects);ВЫБРАТЬ T2.наименование , T3.наименование ИЗ регистрсведений.назначениянапроекты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.проекты КАК T2 ПО T1.проект = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.учёные КАК T3 ПО T1.учёный = T3.ссылка ГДЕ T2.часы = (ВЫБРАТЬ МИНИМУМ(hours) ИЗ справочник.проекты)
6434;SELECT T2.name ,  T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T2.hours  =  (SELECT min(hours) FROM projects);ВЫБРАТЬ T2.наименование , T3.наименование ИЗ регистрсведений.назначениянапроекты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.проекты КАК T2 ПО T1.проект = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.учёные КАК T3 ПО T1.учёный = T3.ссылка ГДЕ T2.часы = (ВЫБРАТЬ МИНИМУМ(hours) ИЗ справочник.проекты)
6435;SELECT Name FROM WINE ORDER BY Score LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование ИЗ справочник.вино УПОРЯДОЧИТЬ ПО оценка
6436;SELECT Name FROM WINE ORDER BY Score LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование ИЗ справочник.вино УПОРЯДОЧИТЬ ПО оценка
6437;SELECT Winery FROM WINE ORDER BY SCORE LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 винодельня ИЗ справочник.вино УПОРЯДОЧИТЬ ПО оценка
6438;SELECT Winery FROM WINE ORDER BY SCORE LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 винодельня ИЗ справочник.вино УПОРЯДОЧИТЬ ПО оценка
6439;"SELECT Name FROM WINE WHERE YEAR  =  ""2008""";"ВЫБРАТЬ наименование ИЗ справочник.вино ГДЕ год = ""2008"""
6440;"SELECT Name FROM WINE WHERE YEAR  =  ""2008""";"ВЫБРАТЬ наименование ИЗ справочник.вино ГДЕ год = ""2008"""
6441;SELECT Grape ,  Appelation FROM WINE;ВЫБРАТЬ виноград , апелласьон ИЗ справочник.вино
6442;SELECT Grape ,  Appelation FROM WINE;ВЫБРАТЬ виноград , апелласьон ИЗ справочник.вино
6443;SELECT Name ,  Score FROM WINE;ВЫБРАТЬ наименование , оценка ИЗ справочник.вино
6444;SELECT Name ,  Score FROM WINE;ВЫБРАТЬ наименование , оценка ИЗ справочник.вино
6445;SELECT Area ,  County FROM APPELLATIONS;ВЫБРАТЬ площадь , округ ИЗ справочник.апелласьоны
6446;SELECT Area ,  County FROM APPELLATIONS;ВЫБРАТЬ площадь , округ ИЗ справочник.апелласьоны
6447;SELECT Price FROM WINE WHERE YEAR  <  2010;ВЫБРАТЬ цена ИЗ справочник.вино ГДЕ год < 2010
6448;SELECT Price FROM WINE WHERE YEAR  <  2010;ВЫБРАТЬ цена ИЗ справочник.вино ГДЕ год < 2010
6449;SELECT Name FROM WINE WHERE score  >  90;ВЫБРАТЬ наименование ИЗ справочник.вино ГДЕ оценка > 90
6450;SELECT Name FROM WINE WHERE score  >  90;ВЫБРАТЬ наименование ИЗ справочник.вино ГДЕ оценка > 90
6451;"SELECT DISTINCT T2.Name FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape WHERE T1.Color  =  ""Red""";"ВЫБРАТЬ РАЗЛИЧНЫЕ T2.наименование ИЗ справочник.виноград КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.вино КАК T2 ПО T1.наименование = T2.виноград ГДЕ T1.цветстрокой = ""Red"""
6452;"SELECT DISTINCT T2.Name FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape WHERE T1.Color  =  ""Red""";"ВЫБРАТЬ РАЗЛИЧНЫЕ T2.наименование ИЗ справочник.виноград КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.вино КАК T2 ПО T1.наименование = T2.виноград ГДЕ T1.цветстрокой = ""Red"""
6453;"SELECT DISTINCT T2.Name FROM APPELLATIONs AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T1.Area  =  ""North Coast""";"ВЫБРАТЬ РАЗЛИЧНЫЕ T2.наименование ИЗ справочник.апелласьоны КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.вино КАК T2 ПО T1.наименование = T2.апелласьон ГДЕ T1.площадь = ""North Coast"""
6454;"SELECT DISTINCT T2.Name FROM APPELLATIONs AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T1.Area  =  ""North Coast""";"ВЫБРАТЬ РАЗЛИЧНЫЕ T2.наименование ИЗ справочник.апелласьоны КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.вино КАК T2 ПО T1.наименование = T2.апелласьон ГДЕ T1.площадь = ""North Coast"""
6455;"SELECT count(*) FROM WINE WHERE Winery  =  ""Robert Biale""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.вино ГДЕ винодельня = ""Robert Biale"""
6456;"SELECT count(*) FROM WINE WHERE Winery  =  ""Robert Biale""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.вино ГДЕ винодельня = ""Robert Biale"""
6457;"SELECT count(*) FROM APPELLATIONS WHERE County  =  ""Napa""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.апелласьоны ГДЕ округ = ""Napa"""
6458;"SELECT count(*) FROM APPELLATIONS WHERE County  =  ""Napa""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.апелласьоны ГДЕ округ = ""Napa"""
6459;"SELECT AVG(T2.Price) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T1.County  =  ""Sonoma""";"ВЫБРАТЬ AVG(T2.цена) ИЗ справочник.апелласьоны КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.вино КАК T2 ПО T1.наименование = T2.апелласьон ГДЕ T1.округ = ""Sonoma"""
6460;"SELECT AVG(T2.Price) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T1.County  =  ""Sonoma""";"ВЫБРАТЬ AVG(T2.цена) ИЗ справочник.апелласьоны КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.вино КАК T2 ПО T1.наименование = T2.апелласьон ГДЕ T1.округ = ""Sonoma"""
6461;"SELECT T2.Name ,   T2.Score FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape WHERE T1.Color  =  ""White""";"ВЫБРАТЬ T2.наименование , T2.оценка ИЗ справочник.виноград КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.вино КАК T2 ПО T1.наименование = T2.виноград ГДЕ T1.цветстрокой = ""White"""
6462;"SELECT T2.Name ,   T2.Score FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape WHERE T1.Color  =  ""White""";"ВЫБРАТЬ T2.наименование , T2.оценка ИЗ справочник.виноград КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.вино КАК T2 ПО T1.наименование = T2.виноград ГДЕ T1.цветстрокой = ""White"""
6463;"SELECT max(T2.Price) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T1.Area  =  ""Central Coast"" AND T2.year  <  2005";"ВЫБРАТЬ МАКСИМУМ(T2.цена) ИЗ справочник.апелласьоны КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.вино КАК T2 ПО T1.наименование = T2.апелласьон ГДЕ T1.площадь = ""Central Coast"" И T2.год < 2005"
6464;"SELECT max(T2.Price) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T1.Area  =  ""Central Coast"" AND T2.year  <  2005";"ВЫБРАТЬ МАКСИМУМ(T2.цена) ИЗ справочник.апелласьоны КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.вино КАК T2 ПО T1.наименование = T2.апелласьон ГДЕ T1.площадь = ""Central Coast"" И T2.год < 2005"
6465;"SELECT DISTINCT T1.Grape FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape WHERE T1.Color  =  ""White"" AND T2.score  >  90";"ВЫБРАТЬ РАЗЛИЧНЫЕ T1.наименование ИЗ справочник.виноград КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.вино КАК T2 ПО T1.наименование = T2.виноград ГДЕ T1.цветстрокой = ""White"" И T2.оценка > 90"
6466;"SELECT DISTINCT T1.Grape FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape WHERE T1.Color  =  ""White"" AND T2.score  >  90";"ВЫБРАТЬ РАЗЛИЧНЫЕ T1.наименование ИЗ справочник.виноград КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.вино КАК T2 ПО T1.наименование = T2.виноград ГДЕ T1.цветстрокой = ""White"" И T2.оценка > 90"
6467;"SELECT T2.Name FROM Grapes AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape WHERE T1.Color  =  ""Red"" AND T2.price  >  50";"ВЫБРАТЬ T2.наименование ИЗ справочник.виноград КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.вино КАК T2 ПО T1.наименование = T2.виноград ГДЕ T1.цветстрокой = ""Red"" И T2.цена > 50"
6468;"SELECT T2.Name FROM Grapes AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape WHERE T1.Color  =  ""Red"" AND T2.price  >  50";"ВЫБРАТЬ T2.наименование ИЗ справочник.виноград КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.вино КАК T2 ПО T1.наименование = T2.виноград ГДЕ T1.цветстрокой = ""Red"" И T2.цена > 50"
6469;"SELECT T2.Name FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T1.County  =  ""Monterey"" AND T2.price  <  50";"ВЫБРАТЬ T2.наименование ИЗ справочник.апелласьоны КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.вино КАК T2 ПО T1.наименование = T2.апелласьон ГДЕ T1.округ = ""Monterey"" И T2.цена < 50"
6470;"SELECT T2.Name FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T1.County  =  ""Monterey"" AND T2.price  <  50";"ВЫБРАТЬ T2.наименование ИЗ справочник.апелласьоны КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.вино КАК T2 ПО T1.наименование = T2.апелласьон ГДЕ T1.округ = ""Monterey"" И T2.цена < 50"
6471;SELECT count(*) ,  Grape FROM WINE GROUP BY Grape;ВЫБРАТЬ КОЛИЧЕСТВО(*) , виноград ИЗ справочник.вино СГРУППИРОВАТЬ ПО виноград
6472;SELECT count(*) ,  Grape FROM WINE GROUP BY Grape;ВЫБРАТЬ КОЛИЧЕСТВО(*) , виноград ИЗ справочник.вино СГРУППИРОВАТЬ ПО виноград
6473;SELECT avg(Price) ,  YEAR FROM WINE GROUP BY YEAR;ВЫБРАТЬ СРЕДНЕЕ(цена) , год FROM WINE СГРУППИРОВАТЬ ПО год
6474;SELECT avg(Price) ,  YEAR FROM WINE GROUP BY YEAR;ВЫБРАТЬ СРЕДНЕЕ(цена) , год FROM WINE СГРУППИРОВАТЬ ПО год
6475;"SELECT DISTINCT Name FROM WINE WHERE Price  >  (SELECT min(Price) FROM wine WHERE Winery  =  ""John Anthony"")";"ВЫБРАТЬ РАЗЛИЧНЫЕ наименование ИЗ справочник.вино ГДЕ цена > (ВЫБРАТЬ МИНИМУМ(цена) ИЗ справочник.вино ГДЕ винодельня = ""John Anthony"")"
6476;"SELECT DISTINCT Name FROM WINE WHERE Price  >  (SELECT min(Price) FROM wine WHERE Winery  =  ""John Anthony"")";"ВЫБРАТЬ РАЗЛИЧНЫЕ наименование ИЗ справочник.вино ГДЕ цена > (ВЫБРАТЬ МИНИМУМ(цена) ИЗ справочник.вино ГДЕ винодельня = ""John Anthony"")"
6477;SELECT DISTINCT Name FROM WINE ORDER BY Name;ВЫБРАТЬ РАЗЛИЧНЫЕ наименование ИЗ справочник.вино УПОРЯДОЧИТЬ ПО наименование
6478;SELECT DISTINCT Name FROM WINE ORDER BY Name;ВЫБРАТЬ РАЗЛИЧНЫЕ наименование ИЗ справочник.вино УПОРЯДОЧИТЬ ПО наименование
6479;SELECT DISTINCT Name FROM WINE ORDER BY price;ВЫБРАТЬ РАЗЛИЧНЫЕ наименование ИЗ справочник.вино УПОРЯДОЧИТЬ ПО цена
6480;SELECT DISTINCT Name FROM WINE ORDER BY price;ВЫБРАТЬ РАЗЛИЧНЫЕ наименование ИЗ справочник.вино УПОРЯДОЧИТЬ ПО цена
6481;SELECT T1.Area FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation GROUP BY T2.Appelation HAVING T2.year  <  2010 ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.площадь ИЗ справочник.апелласьоны КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.вино КАК T2 ПО T1.наименование = T2.апелласьон СГРУППИРОВАТЬ ПО T2.апелласьон ИМЕЮЩИЕ T2.год < 2010 УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
6482;SELECT T1.Area FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation GROUP BY T2.Appelation HAVING T2.year  <  2010 ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.площадь ИЗ справочник.апелласьоны КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.вино КАК T2 ПО T1.наименование = T2.апелласьон СГРУППИРОВАТЬ ПО T2.апелласьон ИМЕЮЩИЕ T2.год < 2010 УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
6483;SELECT T1.Color FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape GROUP BY T2.Grape ORDER BY AVG(Price) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.цветстрокой ИЗ справочник.виноград КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.вино КАК T2 ПО T1.наименование = T2.виноград СГРУППИРОВАТЬ ПО T2.виноград УПОРЯДОЧИТЬ ПО AVG(Price) УБЫВ
6484;SELECT T1.Color FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape GROUP BY T2.Grape ORDER BY AVG(Price) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.цветстрокой ИЗ справочник.виноград КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.вино КАК T2 ПО T1.наименование = T2.виноград СГРУППИРОВАТЬ ПО T2.виноград УПОРЯДОЧИТЬ ПО AVG(Price) УБЫВ
6485;SELECT DISTINCT Name FROM WINE WHERE YEAR  <  2000 OR YEAR  >  2010;ВЫБРАТЬ РАЗЛИЧНЫЕ наименование ИЗ справочник.вино ГДЕ год < 2000 ИЛИ год > 2010
6486;SELECT DISTINCT Name FROM WINE WHERE YEAR  <  2000 OR YEAR  >  2010;ВЫБРАТЬ РАЗЛИЧНЫЕ наименование ИЗ справочник.вино ГДЕ год < 2000 ИЛИ год > 2010
6487;SELECT DISTINCT Winery FROM WINE WHERE Price BETWEEN 50 AND 100;ВЫБРАТЬ РАЗЛИЧНЫЕ винодельня ИЗ справочник.вино ГДЕ цена МЕЖДУ 50 И 100
6488;SELECT DISTINCT Winery FROM WINE WHERE Price BETWEEN 50 AND 100;ВЫБРАТЬ РАЗЛИЧНЫЕ винодельня ИЗ справочник.вино ГДЕ цена МЕЖДУ 50 И 100
6489;"SELECT AVG(Price) ,  AVG(Cases) FROM WINE WHERE YEAR  =  2009 AND Grape  =  ""Zinfandel""";"ВЫБРАТЬ AVG(цена) , AVG(количествобутылок) ИЗ справочник.вино ГДЕ год = 2009 И виноград = ""Zinfandel"""
6490;"SELECT AVG(Price) ,  AVG(Cases) FROM WINE WHERE YEAR  =  2009 AND Grape  =  ""Zinfandel""";"ВЫБРАТЬ AVG(цена) , AVG(количествобутылок) ИЗ справочник.вино ГДЕ год = 2009 И виноград = ""Zinfandel"""
6491;"SELECT max(Price) ,  max(Score) FROM WINE WHERE Appelation  =  ""St. Helena""";"ВЫБРАТЬ МАКСИМУМ(цена) , МАКСИМУМ(оценка) ИЗ справочник.вино ГДЕ апелласьон = ""St. Helena"""
6492;"SELECT max(Price) ,  max(Score) FROM WINE WHERE Appelation  =  ""St. Helena""";"ВЫБРАТЬ МАКСИМУМ(цена) , МАКСИМУМ(оценка) ИЗ справочник.вино ГДЕ апелласьон = ""St. Helena"""
6493;SELECT max(Price) ,  max(Score) ,  YEAR FROM WINE GROUP BY YEAR;ВЫБРАТЬ МАКСИМУМ(цена) , МАКСИМУМ(оценка) , год FROM WINE СГРУППИРОВАТЬ ПО год
6494;SELECT max(Price) ,  max(Score) ,  YEAR FROM WINE GROUP BY YEAR;ВЫБРАТЬ МАКСИМУМ(цена) , МАКСИМУМ(оценка) , год FROM WINE СГРУППИРОВАТЬ ПО год
6495;SELECT avg(Price) ,  avg(Score) ,  Appelation FROM WINE GROUP BY Appelation;ВЫБРАТЬ СРЕДНЕЕ(цена) , СРЕДНЕЕ(оценка) , апелласьон ИЗ справочник.вино СГРУППИРОВАТЬ ПО апелласьон
6496;SELECT avg(Price) ,  avg(Score) ,  Appelation FROM WINE GROUP BY Appelation;ВЫБРАТЬ СРЕДНЕЕ(цена) , СРЕДНЕЕ(оценка) , апелласьон ИЗ справочник.вино СГРУППИРОВАТЬ ПО апелласьон
6497;SELECT Winery FROM WINE GROUP BY Winery HAVING count(*)  >=  4;ВЫБРАТЬ винодельня ИЗ справочник.вино СГРУППИРОВАТЬ ПО винодельня ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 4
6498;SELECT Winery FROM WINE GROUP BY Winery HAVING count(*)  >=  4;ВЫБРАТЬ винодельня ИЗ справочник.вино СГРУППИРОВАТЬ ПО винодельня ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 4
6499;SELECT T1.County FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation GROUP BY T2.Appelation HAVING count(*)  <=  3;ВЫБРАТЬ T1.округ ИЗ справочник.апелласьоны КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.вино КАК T2 ПО T1.наименование = T2.апелласьон СГРУППИРОВАТЬ ПО T2.апелласьон ИМЕЮЩИЕ КОЛИЧЕСТВО(*) <= 3
6500;SELECT T1.County FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation GROUP BY T2.Appelation HAVING count(*)  <=  3;ВЫБРАТЬ T1.округ ИЗ справочник.апелласьоны КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.вино КАК T2 ПО T1.наименование = T2.апелласьон СГРУППИРОВАТЬ ПО T2.апелласьон ИМЕЮЩИЕ КОЛИЧЕСТВО(*) <= 3
6501;"SELECT Name FROM WINE WHERE YEAR  <  (SELECT min(YEAR) FROM WINE WHERE Winery  =  ""Brander"")";"ВЫБРАТЬ наименование ИЗ справочник.вино ГДЕ год < (ВЫБРАТЬ МИНИМУМ(год) ИЗ справочник.вино ГДЕ винодельня = ""Brander"")"
6502;"SELECT Name FROM WINE WHERE YEAR  <  (SELECT min(YEAR) FROM WINE WHERE Winery  =  ""Brander"")";"ВЫБРАТЬ наименование ИЗ справочник.вино ГДЕ год < (ВЫБРАТЬ МИНИМУМ(год) ИЗ справочник.вино ГДЕ винодельня = ""Brander"")"
6503;SELECT Name FROM WINE WHERE Price  >  (SELECT max(Price) FROM WINE WHERE YEAR  =  2006);ВЫБРАТЬ наименование ИЗ справочник.вино ГДЕ цена > (ВЫБРАТЬ МАКСИМУМ(цена) ИЗ справочник.вино ГДЕ год = 2006)
6504;SELECT Name FROM WINE WHERE Price  >  (SELECT max(Price) FROM WINE WHERE YEAR  =  2006);ВЫБРАТЬ наименование ИЗ справочник.вино ГДЕ цена > (ВЫБРАТЬ МАКСИМУМ(цена) ИЗ справочник.вино ГДЕ год = 2006)
6505;"SELECT T2.Winery FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.GRAPE  =  T2.GRAPE WHERE T1.Color  =  ""White"" GROUP BY T2.Winery ORDER BY count(*) DESC LIMIT 3";"ВЫБРАТЬ ПЕРВЫЕ 3 T2.винодельня ИЗ справочник.виноград КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.вино КАК T2 ПО T1.наименование = T2.виноград ГДЕ T1.цветстрокой = ""White"" СГРУППИРОВАТЬ ПО T2.винодельня УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ"
6506;"SELECT T2.Winery FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.GRAPE  =  T2.GRAPE WHERE T1.Color  =  ""White"" GROUP BY T2.Winery ORDER BY count(*) DESC LIMIT 3";"ВЫБРАТЬ ПЕРВЫЕ 3 T2.винодельня ИЗ справочник.виноград КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.вино КАК T2 ПО T1.наименование = T2.виноград ГДЕ T1.цветстрокой = ""White"" СГРУППИРОВАТЬ ПО T2.винодельня УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ"
6507;SELECT Grape ,  Winery ,  YEAR FROM WINE WHERE Price  >   100 ORDER BY YEAR;ВЫБРАТЬ виноград , винодельня , год FROM WINE ГДЕ цена > 100 УПОРЯДОЧИТЬ ПО год
6508;SELECT Grape ,  Winery ,  YEAR FROM WINE WHERE Price  >   100 ORDER BY YEAR;ВЫБРАТЬ виноград , винодельня , год FROM WINE ГДЕ цена > 100 УПОРЯДОЧИТЬ ПО год
6509;SELECT Grape ,  Appelation ,  Name FROM WINE WHERE Score  >  93 ORDER BY Name;ВЫБРАТЬ виноград , апелласьон , наименование ИЗ справочник.вино ГДЕ оценка > 93 УПОРЯДОЧИТЬ ПО наименование
6510;SELECT Grape ,  Appelation ,  Name FROM WINE WHERE Score  >  93 ORDER BY Name;ВЫБРАТЬ виноград , апелласьон , наименование ИЗ справочник.вино ГДЕ оценка > 93 УПОРЯДОЧИТЬ ПО наименование
6513;SELECT avg(price) FROM wine WHERE Appelation NOT IN (SELECT T1.Appelation FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T1.County  =  'Sonoma');"ВЫБРАТЬ СРЕДНЕЕ(price) ИЗ справочник.вино ГДЕ Appelation НЕ В (ВЫБРАТЬ T1.наименование ИЗ справочник.апелласьоны КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.вино КАК T2 ПО T1.наименование = T2.апелласьон ГДЕ T1.округ = ""Sonoma"")"
6514;SELECT avg(price) FROM wine WHERE Appelation NOT IN (SELECT T1.Appelation FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T1.County  =  'Sonoma');"ВЫБРАТЬ СРЕДНЕЕ(price) ИЗ справочник.вино ГДЕ Appelation НЕ В (ВЫБРАТЬ T1.наименование ИЗ справочник.апелласьоны КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.вино КАК T2 ПО T1.наименование = T2.апелласьон ГДЕ T1.округ = ""Sonoma"")"
6515;SELECT T1.County FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T2.Score  >  90 GROUP BY T1.County ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.округ ИЗ справочник.апелласьоны КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.вино КАК T2 ПО T1.наименование = T2.апелласьон ГДЕ T2.оценка > 90 СГРУППИРОВАТЬ ПО T1.округ УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
6516;SELECT T1.County FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T2.Score  >  90 GROUP BY T1.County ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.округ ИЗ справочник.апелласьоны КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.вино КАК T2 ПО T1.наименование = T2.апелласьон ГДЕ T2.оценка > 90 СГРУППИРОВАТЬ ПО T1.округ УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
6517;SELECT count(*) FROM station;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.станции
6518;SELECT name ,  LOCATION ,  number_of_platforms FROM station;ВЫБРАТЬ наименование , местоположение , количествоплатформ ИЗ справочник.станции
6519;SELECT DISTINCT LOCATION FROM station;ВЫБРАТЬ РАЗЛИЧНЫЕ местоположение ИЗ справочник.станции
6520;SELECT name ,  total_passengers FROM station WHERE LOCATION != 'London';"ВЫБРАТЬ наименование , всегопассажиров ИЗ справочник.станции ГДЕ местоположение <> ""London"""
6521;SELECT name ,  main_services FROM station ORDER BY total_passengers DESC LIMIT 3;ВЫБРАТЬ ПЕРВЫЕ 3 наименование , основныемаршруты ИЗ справочник.станции УПОРЯДОЧИТЬ ПО всегопассажиров УБЫВ
6522;SELECT avg(total_passengers) ,  max(total_passengers) FROM station WHERE LOCATION  =  'London' OR LOCATION  =  'Glasgow';"ВЫБРАТЬ СРЕДНЕЕ(всегопассажиров) , МАКСИМУМ(всегопассажиров) ИЗ справочник.станции ГДЕ местоположение = ""London"" ИЛИ местоположение = ""Glasgow"""
6523;SELECT LOCATION ,  sum(number_of_platforms) ,  sum(total_passengers) FROM station GROUP BY LOCATION;ВЫБРАТЬ местоположение , СУММА(количествоплатформ) , СУММА(всегопассажиров) ИЗ справочник.станции СГРУППИРОВАТЬ ПО местоположение
6524;SELECT DISTINCT LOCATION FROM station WHERE number_of_platforms  >=  15 AND total_passengers  >  25;ВЫБРАТЬ РАЗЛИЧНЫЕ местоположение ИЗ справочник.станции ГДЕ количествоплатформ >= 15 И всегопассажиров > 25
6526;SELECT LOCATION FROM station GROUP BY LOCATION ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 местоположение ИЗ справочник.станции СГРУППИРОВАТЬ ПО местоположение УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
6527;SELECT name ,  TIME ,  service FROM train;ВЫБРАТЬ наименование , время , обслуживание ИЗ справочник.поезда
6528;SELECT count(*) FROM train;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.поезда
6529;SELECT name ,  service FROM train ORDER BY TIME;ВЫБРАТЬ наименование , обслуживание ИЗ справочник.поезда УПОРЯДОЧИТЬ ПО время
6530;SELECT T2.name ,  count(*) FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id GROUP BY T1.station_id;ВЫБРАТЬ T2.наименование , КОЛИЧЕСТВО(*) ИЗ регистрсведений.станциипоездов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.станции КАК T2 ПО T1.станция = T2.ссылка СГРУППИРОВАТЬ ПО T1.станция
6531;SELECT T2.name ,  T3.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id JOIN train AS T3 ON T3.train_id  =  T1.train_id;ВЫБРАТЬ T2.наименование , T3.наименование ИЗ регистрсведений.станциипоездов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.станции КАК T2 ПО T1.станция = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.поезда КАК T3 ПО T3.ссылка = T1.поезд
6532;SELECT T3.name ,  T3.time FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id JOIN train AS T3 ON T3.train_id  =  T1.train_id WHERE T2.location  =  'London' ORDER BY T3.time DESC;"ВЫБРАТЬ T3.наименование , T3.время ИЗ регистрсведений.станциипоездов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.станции КАК T2 ПО T1.станция = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.поезда КАК T3 ПО T3.ссылка = T1.поезд ГДЕ T2.местоположение = ""London"" УПОРЯДОЧИТЬ ПО T3.время УБЫВ"
6533;SELECT T2.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id GROUP BY T1.station_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.наименование ИЗ регистрсведений.станциипоездов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.станции КАК T2 ПО T1.станция = T2.ссылка СГРУППИРОВАТЬ ПО T1.станция УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
6534;SELECT T2.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id GROUP BY T1.station_id HAVING count(*)  >=  2;ВЫБРАТЬ T2.наименование ИЗ регистрсведений.станциипоездов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.станции КАК T2 ПО T1.станция = T2.ссылка СГРУППИРОВАТЬ ПО T1.станция ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
6535;SELECT LOCATION FROM station GROUP BY LOCATION HAVING count(*)  =  1;ВЫБРАТЬ местоположение ИЗ справочник.станции СГРУППИРОВАТЬ ПО местоположение ИМЕЮЩИЕ КОЛИЧЕСТВО(*) = 1
6536;SELECT name FROM station WHERE station_id NOT IN (SELECT station_id FROM train_station);ВЫБРАТЬ name ИЗ справочник.станции ГДЕ station_id НЕ В (ВЫБРАТЬ station_id ИЗ регистрсведений.станциипоездов)
6538;"SELECT T2.name FROM train_station AS T1 JOIN train AS T2 ON T1.train_id  =  T2.train_id WHERE T1.station_id NOT IN (SELECT T4.station_id FROM train_station AS T3 JOIN station AS T4 ON T3.station_id  =  T4.station_id WHERE t4.location  =  ""London"")";"ВЫБРАТЬ T2.наименование ИЗ регистрсведений.станциипоездов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.поезда КАК T2 ПО T1.поезд = T2.ссылка ГДЕ T1.станция НЕ В (ВЫБРАТЬ T4.ссылка ИЗ регистрсведений.станциипоездов КАК T3 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.станции КАК T4 ПО T3.станция = T4.ссылка ГДЕ t4.location = ""London"")"
6539;SELECT name ,  LOCATION FROM station ORDER BY Annual_entry_exit ,  Annual_interchanges;ВЫБРАТЬ наименование , местоположение ИЗ справочник.станции УПОРЯДОЧИТЬ ПО годовойпассажиропоток , годовыепересадки
6540;"SELECT vehicle_id FROM Vehicles;";"ВЫБРАТЬ ссылка ИЗ справочник.транспортныесредства;"
6541;"SELECT vehicle_id FROM Vehicles;";"ВЫБРАТЬ ссылка ИЗ справочник.транспортныесредства;"
6542;"SELECT count(*) FROM Vehicles;";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.транспортныесредства;"
6543;"SELECT count(*) FROM Vehicles;";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.транспортныесредства;"
6544;"SELECT vehicle_details FROM Vehicles WHERE vehicle_id = 1;";"ВЫБРАТЬ описание ИЗ справочник.транспортныесредства ГДЕ ссылка = 1;"
6545;"SELECT vehicle_details FROM Vehicles WHERE vehicle_id = 1;";"ВЫБРАТЬ описание ИЗ справочник.транспортныесредства ГДЕ ссылка = 1;"
6546;"SELECT first_name ,  middle_name ,  last_name FROM Staff;";"ВЫБРАТЬ имя , отчество , фамилия ИЗ справочник.сотрудники;"
6547;"SELECT first_name ,  middle_name ,  last_name FROM Staff;";"ВЫБРАТЬ имя , отчество , фамилия ИЗ справочник.сотрудники;"
6548;"SELECT date_of_birth FROM Staff WHERE first_name = ""Janessa"" AND last_name = ""Sawayn"";";"ВЫБРАТЬ датарождения ИЗ справочник.сотрудники ГДЕ имя = ""Janessa"" И фамилия = ""Sawayn"";"
6549;"SELECT date_of_birth FROM Staff WHERE first_name = ""Janessa"" AND last_name = ""Sawayn"";";"ВЫБРАТЬ датарождения ИЗ справочник.сотрудники ГДЕ имя = ""Janessa"" И фамилия = ""Sawayn"";"
6550;"SELECT date_joined_staff FROM Staff WHERE first_name = ""Janessa"" AND last_name = ""Sawayn"";";"ВЫБРАТЬ датаприеманаработу ИЗ справочник.сотрудники ГДЕ имя = ""Janessa"" И фамилия = ""Sawayn"";"
6551;"SELECT date_joined_staff FROM Staff WHERE first_name = ""Janessa"" AND last_name = ""Sawayn"";";"ВЫБРАТЬ датаприеманаработу ИЗ справочник.сотрудники ГДЕ имя = ""Janessa"" И фамилия = ""Sawayn"";"
6552;"SELECT date_left_staff FROM Staff WHERE first_name = ""Janessa"" AND last_name = ""Sawayn"";";"ВЫБРАТЬ датаувольнения ИЗ справочник.сотрудники ГДЕ имя = ""Janessa"" И фамилия = ""Sawayn"";"
6553;"SELECT date_left_staff FROM Staff WHERE first_name = ""Janessa"" AND last_name = ""Sawayn"";";"ВЫБРАТЬ датаувольнения ИЗ справочник.сотрудники ГДЕ имя = ""Janessa"" И фамилия = ""Sawayn"";"
6554;"SELECT count(*) FROM Staff WHERE first_name = ""Ludie"";";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.сотрудники ГДЕ имя = ""Ludie"";"
6555;"SELECT count(*) FROM Staff WHERE first_name = ""Ludie"";";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.сотрудники ГДЕ имя = ""Ludie"";"
6556;"SELECT nickname FROM Staff WHERE first_name = ""Janessa"" AND last_name = ""Sawayn"";";"ВЫБРАТЬ псевдоним ИЗ справочник.сотрудники ГДЕ имя = ""Janessa"" И фамилия = ""Sawayn"";"
6557;"SELECT nickname FROM Staff WHERE first_name = ""Janessa"" AND last_name = ""Sawayn"";";"ВЫБРАТЬ псевдоним ИЗ справочник.сотрудники ГДЕ имя = ""Janessa"" И фамилия = ""Sawayn"";"
6558;"SELECT count(*) FROM Staff;";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.сотрудники;"
6559;"SELECT count(*) FROM Staff;";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.сотрудники;"
6560;"SELECT T1.city FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T2.first_name = ""Janessa"" AND T2.last_name = ""Sawayn"";";"ВЫБРАТЬ T1.город ИЗ справочник.адреса КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сотрудники КАК T2 ПО T1.ссылка = T2.адрессправочник ГДЕ T2.имя = ""Janessa"" И T2.фамилия = ""Sawayn"";"
6561;"SELECT T1.city FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T2.first_name = ""Janessa"" AND T2.last_name = ""Sawayn"";";"ВЫБРАТЬ T1.город ИЗ справочник.адреса КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сотрудники КАК T2 ПО T1.ссылка = T2.адрессправочник ГДЕ T2.имя = ""Janessa"" И T2.фамилия = ""Sawayn"";"
6562;"SELECT T1.country ,  T1.state_province_county FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T2.first_name = ""Janessa"" AND T2.last_name = ""Sawayn"";";"ВЫБРАТЬ T1.страна , T1.регион ИЗ справочник.адреса КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сотрудники КАК T2 ПО T1.ссылка = T2.адрессправочник ГДЕ T2.имя = ""Janessa"" И T2.фамилия = ""Sawayn"";"
6563;"SELECT T1.country ,  T1.state_province_county FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T2.first_name = ""Janessa"" AND T2.last_name = ""Sawayn"";";"ВЫБРАТЬ T1.страна , T1.регион ИЗ справочник.адреса КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сотрудники КАК T2 ПО T1.ссылка = T2.адрессправочник ГДЕ T2.имя = ""Janessa"" И T2.фамилия = ""Sawayn"";"
6564;"SELECT sum(T1.lesson_time) FROM Lessons AS T1 JOIN Customers AS T2 ON T1.customer_id  = T2.customer_id WHERE T2.first_name = ""Rylan"" AND T2.last_name = ""Goodwin"";";"ВЫБРАТЬ СУММА(T1.цена) ИЗ регистрсведений.занятия КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.клиенты КАК T2 ПО T1.статус = T2.ссылка ГДЕ T2.имя = ""Rylan"" И T2.фамилия = ""Goodwin"";"
6565;"SELECT sum(T1.lesson_time) FROM Lessons AS T1 JOIN Customers AS T2 ON T1.customer_id  = T2.customer_id WHERE T2.first_name = ""Rylan"" AND T2.last_name = ""Goodwin"";";"ВЫБРАТЬ СУММА(T1.цена) ИЗ регистрсведений.занятия КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.клиенты КАК T2 ПО T1.статус = T2.ссылка ГДЕ T2.имя = ""Rylan"" И T2.фамилия = ""Goodwin"";"
6566;"SELECT T1.zip_postcode FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T2.first_name = ""Janessa"" AND T2.last_name = ""Sawayn"";";"ВЫБРАТЬ T1.почтовыйиндекс ИЗ справочник.адреса КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сотрудники КАК T2 ПО T1.ссылка = T2.адрессправочник ГДЕ T2.имя = ""Janessa"" И T2.фамилия = ""Sawayn"";"
6567;"SELECT T1.zip_postcode FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T2.first_name = ""Janessa"" AND T2.last_name = ""Sawayn"";";"ВЫБРАТЬ T1.почтовыйиндекс ИЗ справочник.адреса КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сотрудники КАК T2 ПО T1.ссылка = T2.адрессправочник ГДЕ T2.имя = ""Janessa"" И T2.фамилия = ""Sawayn"";"
6568;"SELECT count(*) FROM Addresses WHERE state_province_county = ""Georgia"";";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.адреса ГДЕ регион = ""Georgia"";"
6569;"SELECT count(*) FROM Addresses WHERE state_province_county = ""Georgia"";";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.адреса ГДЕ регион = ""Georgia"";"
6570;"SELECT T2.first_name ,  T2.last_name FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T1.city = ""Damianfort"";";"ВЫБРАТЬ T2.имя , T2.фамилия ИЗ справочник.адреса КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сотрудники КАК T2 ПО T1.ссылка = T2.адрессправочник ГДЕ T1.город = ""Damianfort"";"
6571;"SELECT T2.first_name ,  T2.last_name FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T1.city = ""Damianfort"";";"ВЫБРАТЬ T2.имя , T2.фамилия ИЗ справочник.адреса КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сотрудники КАК T2 ПО T1.ссылка = T2.адрессправочник ГДЕ T1.город = ""Damianfort"";"
6572;"SELECT T1.city ,  count(*) FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id GROUP BY T1.city ORDER BY count(*) DESC LIMIT 1;";"ВЫБРАТЬ T1.город , КОЛИЧЕСТВО(*) ИЗ справочник.адреса КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сотрудники КАК T2 ПО T1.ссылка = T2.адрессправочник СГРУППИРОВАТЬ ПО T1.город УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ LIMIT 1;"
6573;"SELECT T1.city ,  count(*) FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id GROUP BY T1.city ORDER BY count(*) DESC LIMIT 1;";"ВЫБРАТЬ T1.город , КОЛИЧЕСТВО(*) ИЗ справочник.адреса КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сотрудники КАК T2 ПО T1.ссылка = T2.адрессправочник СГРУППИРОВАТЬ ПО T1.город УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ LIMIT 1;"
6574;"SELECT T1.state_province_county FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id GROUP BY T1.state_province_county HAVING count(*) BETWEEN 2 AND 4;";"ВЫБРАТЬ T1.регион ИЗ справочник.адреса КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сотрудники КАК T2 ПО T1.ссылка = T2.адрессправочник СГРУППИРОВАТЬ ПО T1.регион ИМЕЮЩИЕ КОЛИЧЕСТВО(*) МЕЖДУ 2 И 4;"
6575;"SELECT T1.state_province_county FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id GROUP BY T1.state_province_county HAVING count(*) BETWEEN 2 AND 4;";"ВЫБРАТЬ T1.регион ИЗ справочник.адреса КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сотрудники КАК T2 ПО T1.ссылка = T2.адрессправочник СГРУППИРОВАТЬ ПО T1.регион ИМЕЮЩИЕ КОЛИЧЕСТВО(*) МЕЖДУ 2 И 4;"
6576;"SELECT first_name ,  last_name FROM Customers;";"ВЫБРАТЬ имя , фамилия ИЗ справочник.клиенты;"
6577;"SELECT first_name ,  last_name FROM Customers;";"ВЫБРАТЬ имя , фамилия ИЗ справочник.клиенты;"
6578;"SELECT email_address ,  date_of_birth FROM Customers WHERE first_name = ""Carole""";"ВЫБРАТЬ электроннаяпочта , датарождения ИЗ справочник.клиенты ГДЕ имя = ""Carole"""
6579;"SELECT email_address ,  date_of_birth FROM Customers WHERE first_name = ""Carole""";"ВЫБРАТЬ электроннаяпочта , датарождения ИЗ справочник.клиенты ГДЕ имя = ""Carole"""
6580;"SELECT phone_number ,  email_address FROM Customers WHERE amount_outstanding  >  2000;";"ВЫБРАТЬ телефон , электроннаяпочта ИЗ справочник.клиенты ГДЕ суммазадолженности > 2000;"
6581;"SELECT phone_number ,  email_address FROM Customers WHERE amount_outstanding  >  2000;";"ВЫБРАТЬ телефон , электроннаяпочта ИЗ справочник.клиенты ГДЕ суммазадолженности > 2000;"
6582;"SELECT customer_status_code ,  cell_mobile_phone_number ,  email_address FROM Customers WHERE first_name = ""Marina"" OR last_name  =  ""Kohler""";"ВЫБРАТЬ статус , мобильныйтелефон , электроннаяпочта ИЗ справочник.клиенты ГДЕ имя = ""Marina"" ИЛИ фамилия = ""Kohler"""
6583;"SELECT customer_status_code ,  cell_mobile_phone_number ,  email_address FROM Customers WHERE first_name = ""Marina"" OR last_name  =  ""Kohler""";"ВЫБРАТЬ статус , мобильныйтелефон , электроннаяпочта ИЗ справочник.клиенты ГДЕ имя = ""Marina"" ИЛИ фамилия = ""Kohler"""
6584;SELECT date_of_birth FROM Customers WHERE customer_status_code  =  'Good Customer';"ВЫБРАТЬ датарождения ИЗ справочник.клиенты ГДЕ статус = ""Good Customer"""
6585;SELECT date_of_birth FROM Customers WHERE customer_status_code  =  'Good Customer';"ВЫБРАТЬ датарождения ИЗ справочник.клиенты ГДЕ статус = ""Good Customer"""
6586;"SELECT date_became_customer FROM Customers WHERE first_name = ""Carole"" AND last_name = ""Bernhard"";";"ВЫБРАТЬ датастатусаклиента ИЗ справочник.клиенты ГДЕ имя = ""Carole"" И фамилия = ""Bernhard"";"
6587;"SELECT date_became_customer FROM Customers WHERE first_name = ""Carole"" AND last_name = ""Bernhard"";";"ВЫБРАТЬ датастатусаклиента ИЗ справочник.клиенты ГДЕ имя = ""Carole"" И фамилия = ""Bernhard"";"
6588;"SELECT count(*) FROM Customers;";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.клиенты;"
6589;"SELECT count(*) FROM Customers;";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.клиенты;"
6590;"SELECT customer_status_code , count(*) FROM Customers GROUP BY customer_status_code;";"ВЫБРАТЬ статус , КОЛИЧЕСТВО(*) ИЗ справочник.клиенты СГРУППИРОВАТЬ ПО статус;"
6591;"SELECT customer_status_code , count(*) FROM Customers GROUP BY customer_status_code;";"ВЫБРАТЬ статус , КОЛИЧЕСТВО(*) ИЗ справочник.клиенты СГРУППИРОВАТЬ ПО статус;"
6592;"SELECT customer_status_code FROM Customers GROUP BY customer_status_code ORDER BY count(*) ASC LIMIT 1;";"ВЫБРАТЬ статус ИЗ справочник.клиенты СГРУППИРОВАТЬ ПО статус УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) ВОЗР LIMIT 1;"
6593;"SELECT customer_status_code FROM Customers GROUP BY customer_status_code ORDER BY count(*) ASC LIMIT 1;";"ВЫБРАТЬ статус ИЗ справочник.клиенты СГРУППИРОВАТЬ ПО статус УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) ВОЗР LIMIT 1;"
6594;"SELECT count(*) FROM Lessons AS T1 JOIN Customers AS T2 ON T1.customer_id  = T2.customer_id WHERE T2.first_name = ""Rylan"" AND T2.last_name = ""Goodwin"" AND T1.lesson_status_code = ""Completed"";";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.занятия КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.клиенты КАК T2 ПО T1.статус = T2.ссылка ГДЕ T2.имя = ""Rylan"" И T2.фамилия = ""Goodwin"" И T1.сотрудник = ""Completed"";"
6595;"SELECT count(*) FROM Lessons AS T1 JOIN Customers AS T2 ON T1.customer_id  = T2.customer_id WHERE T2.first_name = ""Rylan"" AND T2.last_name = ""Goodwin"" AND T1.lesson_status_code = ""Completed"";";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.занятия КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.клиенты КАК T2 ПО T1.статус = T2.ссылка ГДЕ T2.имя = ""Rylan"" И T2.фамилия = ""Goodwin"" И T1.сотрудник = ""Completed"";"
6596;"SELECT max(amount_outstanding) ,  min(amount_outstanding) ,  avg(amount_outstanding) FROM Customers;";"ВЫБРАТЬ МАКСИМУМ(суммазадолженности) , МИНИМУМ(суммазадолженности) , СРЕДНЕЕ(суммазадолженности) ИЗ справочник.клиенты;"
6597;"SELECT max(amount_outstanding) ,  min(amount_outstanding) ,  avg(amount_outstanding) FROM Customers;";"ВЫБРАТЬ МАКСИМУМ(суммазадолженности) , МИНИМУМ(суммазадолженности) , СРЕДНЕЕ(суммазадолженности) ИЗ справочник.клиенты;"
6598;"SELECT first_name ,  last_name FROM Customers WHERE amount_outstanding BETWEEN 1000 AND 3000;";"ВЫБРАТЬ имя , фамилия ИЗ справочник.клиенты ГДЕ суммазадолженности МЕЖДУ 1000 И 3000;"
6599;"SELECT first_name ,  last_name FROM Customers WHERE amount_outstanding BETWEEN 1000 AND 3000;";"ВЫБРАТЬ имя , фамилия ИЗ справочник.клиенты ГДЕ суммазадолженности МЕЖДУ 1000 И 3000;"
6600;"SELECT T1.first_name ,  T1.last_name FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id WHERE T2.city = ""Lockmanfurt"";";"ВЫБРАТЬ T1.имя , T1.фамилия ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.адреса КАК T2 ПО T1.адрессправочник = T2.ссылка ГДЕ T2.город = ""Lockmanfurt"";"
6601;"SELECT T1.first_name ,  T1.last_name FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id WHERE T2.city = ""Lockmanfurt"";";"ВЫБРАТЬ T1.имя , T1.фамилия ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.адреса КАК T2 ПО T1.адрессправочник = T2.ссылка ГДЕ T2.город = ""Lockmanfurt"";"
6602;"SELECT T2.country FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id WHERE T1.first_name = ""Carole"" AND T1.last_name = ""Bernhard""";"ВЫБРАТЬ T2.страна ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.адреса КАК T2 ПО T1.адрессправочник = T2.ссылка ГДЕ T1.имя = ""Carole"" И T1.фамилия = ""Bernhard"""
6603;"SELECT T2.country FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id WHERE T1.first_name = ""Carole"" AND T1.last_name = ""Bernhard""";"ВЫБРАТЬ T2.страна ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.адреса КАК T2 ПО T1.адрессправочник = T2.ссылка ГДЕ T1.имя = ""Carole"" И T1.фамилия = ""Bernhard"""
6604;"SELECT T2.zip_postcode FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id WHERE T1.first_name = ""Carole"" AND T1.last_name = ""Bernhard""";"ВЫБРАТЬ T2.почтовыйиндекс ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.адреса КАК T2 ПО T1.адрессправочник = T2.ссылка ГДЕ T1.имя = ""Carole"" И T1.фамилия = ""Bernhard"""
6605;"SELECT T2.zip_postcode FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id WHERE T1.first_name = ""Carole"" AND T1.last_name = ""Bernhard""";"ВЫБРАТЬ T2.почтовыйиндекс ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.адреса КАК T2 ПО T1.адрессправочник = T2.ссылка ГДЕ T1.имя = ""Carole"" И T1.фамилия = ""Bernhard"""
6606;"SELECT T2.city FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id GROUP BY T2.city ORDER BY count(*) DESC LIMIT 1;";"ВЫБРАТЬ T2.город ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.адреса КАК T2 ПО T1.адрессправочник = T2.ссылка СГРУППИРОВАТЬ ПО T2.город УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ LIMIT 1;"
6607;"SELECT T2.city FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id GROUP BY T2.city ORDER BY count(*) DESC LIMIT 1;";"ВЫБРАТЬ T2.город ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.адреса КАК T2 ПО T1.адрессправочник = T2.ссылка СГРУППИРОВАТЬ ПО T2.город УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ LIMIT 1;"
6608;"SELECT sum(T1.amount_payment) FROM Customer_Payments AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.first_name = ""Carole"" AND T2.last_name = ""Bernhard""";"ВЫБРАТЬ СУММА(T1.суммаплатежа) ИЗ регистрсведений.платежиклиентов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.клиенты КАК T2 ПО T1.клиент = T2.ссылка ГДЕ T2.имя = ""Carole"" И T2.фамилия = ""Bernhard"""
6609;"SELECT sum(T1.amount_payment) FROM Customer_Payments AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.first_name = ""Carole"" AND T2.last_name = ""Bernhard""";"ВЫБРАТЬ СУММА(T1.суммаплатежа) ИЗ регистрсведений.платежиклиентов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.клиенты КАК T2 ПО T1.клиент = T2.ссылка ГДЕ T2.имя = ""Carole"" И T2.фамилия = ""Bernhard"""
6610;"SELECT count(*) FROM Customers WHERE customer_id NOT IN ( SELECT customer_id FROM Customer_Payments );";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.клиенты ГДЕ customer_id НЕ В ( ВЫБРАТЬ customer_id ИЗ регистрсведений.платежиклиентов );"
6611;"SELECT count(*) FROM Customers WHERE customer_id NOT IN ( SELECT customer_id FROM Customer_Payments );";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.клиенты ГДЕ customer_id НЕ В ( ВЫБРАТЬ customer_id ИЗ регистрсведений.платежиклиентов );"
6612;"SELECT T2.first_name ,  T2.last_name FROM Customer_Payments AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >  2;";"ВЫБРАТЬ T2.имя , T2.фамилия ИЗ регистрсведений.платежиклиентов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.клиенты КАК T2 ПО T1.клиент = T2.ссылка СГРУППИРОВАТЬ ПО T1.клиент ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 2;"
6613;"SELECT T2.first_name ,  T2.last_name FROM Customer_Payments AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >  2;";"ВЫБРАТЬ T2.имя , T2.фамилия ИЗ регистрсведений.платежиклиентов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.клиенты КАК T2 ПО T1.клиент = T2.ссылка СГРУППИРОВАТЬ ПО T1.клиент ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 2;"
6614;"SELECT payment_method_code ,  count(*) FROM Customer_Payments GROUP BY payment_method_code;";"ВЫБРАТЬ способоплаты , КОЛИЧЕСТВО(*) ИЗ регистрсведений.платежиклиентов СГРУППИРОВАТЬ ПО способоплаты;"
6615;"SELECT payment_method_code ,  count(*) FROM Customer_Payments GROUP BY payment_method_code;";"ВЫБРАТЬ способоплаты , КОЛИЧЕСТВО(*) ИЗ регистрсведений.платежиклиентов СГРУППИРОВАТЬ ПО способоплаты;"
6616;"SELECT count(*) FROM Lessons WHERE lesson_status_code = ""Cancelled"";";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.занятия ГДЕ сотрудник = ""Cancelled"";"
6617;"SELECT count(*) FROM Lessons WHERE lesson_status_code = ""Cancelled"";";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.занятия ГДЕ сотрудник = ""Cancelled"";"
6618;"SELECT T1.lesson_id FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = ""Janessa"" AND T2.last_name = ""Sawayn"" AND nickname LIKE ""%s%"";";"ВЫБРАТЬ T1.клиент ИЗ регистрсведений.занятия КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сотрудники КАК T2 ПО T1.транспортноесредство = T2.ссылка ГДЕ T2.имя = ""Janessa"" И T2.фамилия = ""Sawayn"" И nickname ПОДОБНО ""%s%"";"
6619;"SELECT T1.lesson_id FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = ""Janessa"" AND T2.last_name = ""Sawayn"" AND nickname LIKE ""%s%"";";"ВЫБРАТЬ T1.клиент ИЗ регистрсведений.занятия КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сотрудники КАК T2 ПО T1.транспортноесредство = T2.ссылка ГДЕ T2.имя = ""Janessa"" И T2.фамилия = ""Sawayn"" И nickname ПОДОБНО ""%s%"";"
6620;"SELECT count(*) FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name LIKE ""%a%""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.занятия КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сотрудники КАК T2 ПО T1.транспортноесредство = T2.ссылка ГДЕ T2.имя ПОДОБНО ""%a%"""
6621;"SELECT count(*) FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name LIKE ""%a%""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.занятия КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сотрудники КАК T2 ПО T1.транспортноесредство = T2.ссылка ГДЕ T2.имя ПОДОБНО ""%a%"""
6622;"SELECT sum(lesson_time) FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = ""Janessa"" AND T2.last_name = ""Sawayn"";";"ВЫБРАТЬ СУММА(lesson_time) ИЗ регистрсведений.занятия КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сотрудники КАК T2 ПО T1.транспортноесредство = T2.ссылка ГДЕ T2.имя = ""Janessa"" И T2.фамилия = ""Sawayn"";"
6623;"SELECT sum(lesson_time) FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = ""Janessa"" AND T2.last_name = ""Sawayn"";";"ВЫБРАТЬ СУММА(lesson_time) ИЗ регистрсведений.занятия КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сотрудники КАК T2 ПО T1.транспортноесредство = T2.ссылка ГДЕ T2.имя = ""Janessa"" И T2.фамилия = ""Sawayn"";"
6624;"SELECT avg(price) FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = ""Janessa"" AND T2.last_name = ""Sawayn"";";"ВЫБРАТЬ СРЕДНЕЕ(price) ИЗ регистрсведений.занятия КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сотрудники КАК T2 ПО T1.транспортноесредство = T2.ссылка ГДЕ T2.имя = ""Janessa"" И T2.фамилия = ""Sawayn"";"
6625;"SELECT avg(price) FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = ""Janessa"" AND T2.last_name = ""Sawayn"";";"ВЫБРАТЬ СРЕДНЕЕ(price) ИЗ регистрсведений.занятия КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сотрудники КАК T2 ПО T1.транспортноесредство = T2.ссылка ГДЕ T2.имя = ""Janessa"" И T2.фамилия = ""Sawayn"";"
6626;"SELECT count(*) FROM Lessons AS T1 JOIN Customers AS T2 ON T1.customer_id  = T2.customer_id WHERE T2.first_name = ""Ray""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.занятия КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.клиенты КАК T2 ПО T1.статус = T2.ссылка ГДЕ T2.имя = ""Ray"""
6627;"SELECT count(*) FROM Lessons AS T1 JOIN Customers AS T2 ON T1.customer_id  = T2.customer_id WHERE T2.first_name = ""Ray""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.занятия КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.клиенты КАК T2 ПО T1.статус = T2.ссылка ГДЕ T2.имя = ""Ray"""
6632;SELECT T1.vehicle_id ,  T1.vehicle_details FROM Vehicles AS T1 JOIN Lessons AS T2 ON T1.vehicle_id  =  T2.vehicle_id GROUP BY T1.vehicle_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.ссылка , T1.описание ИЗ справочник.транспортныесредства КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.занятия КАК T2 ПО T1.ссылка = T2.датазанятия СГРУППИРОВАТЬ ПО T1.ссылка УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
6633;SELECT count(*) FROM Faculty;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.участиепреподавателей
6634;SELECT count(*) FROM Faculty;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.участиепреподавателей
6635;SELECT DISTINCT rank FROM Faculty;ВЫБРАТЬ РАЗЛИЧНЫЕ rank ИЗ регистрсведений.участиепреподавателей
6636;SELECT DISTINCT rank FROM Faculty;ВЫБРАТЬ РАЗЛИЧНЫЕ rank ИЗ регистрсведений.участиепреподавателей
6637;SELECT DISTINCT building FROM Faculty;ВЫБРАТЬ РАЗЛИЧНЫЕ building ИЗ регистрсведений.участиепреподавателей
6638;SELECT DISTINCT building FROM Faculty;ВЫБРАТЬ РАЗЛИЧНЫЕ building ИЗ регистрсведений.участиепреподавателей
6639;SELECT rank ,  Fname ,  Lname FROM Faculty;ВЫБРАТЬ rank , Fname , активностьпреподавателя ИЗ регистрсведений.участиепреподавателей
6640;SELECT rank ,  Fname ,  Lname FROM Faculty;ВЫБРАТЬ rank , Fname , активностьпреподавателя ИЗ регистрсведений.участиепреподавателей
6641;SELECT Fname ,  Lname ,  phone FROM Faculty WHERE Sex  =  'F';"ВЫБРАТЬ Fname , активностьпреподавателя , phone ИЗ регистрсведений.участиепреподавателей ГДЕ Sex = ""F"""
6642;SELECT Fname ,  Lname ,  phone FROM Faculty WHERE Sex  =  'F';"ВЫБРАТЬ Fname , активностьпреподавателя , phone ИЗ регистрсведений.участиепреподавателей ГДЕ Sex = ""F"""
6643;SELECT FacID FROM Faculty WHERE Sex  =  'M';"ВЫБРАТЬ преподаватель ИЗ регистрсведений.участиепреподавателей ГДЕ Sex = ""M"""
6644;SELECT FacID FROM Faculty WHERE Sex  =  'M';"ВЫБРАТЬ преподаватель ИЗ регистрсведений.участиепреподавателей ГДЕ Sex = ""M"""
6645;"SELECT count(*) FROM Faculty WHERE Sex  =  'F' AND Rank  =  ""Professor""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.участиепреподавателей ГДЕ Sex = ""F"" И Rank = ""Professor"""
6646;"SELECT count(*) FROM Faculty WHERE Sex  =  'F' AND Rank  =  ""Professor""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.участиепреподавателей ГДЕ Sex = ""F"" И Rank = ""Professor"""
6647;"SELECT phone ,  room ,  building FROM Faculty WHERE Fname  =  ""Jerry"" AND Lname  =  ""Prince""";"ВЫБРАТЬ phone , room , building ИЗ регистрсведений.участиепреподавателей ГДЕ Fname = ""Jerry"" И активностьпреподавателя = ""Prince"""
6648;"SELECT phone ,  room ,  building FROM Faculty WHERE Fname  =  ""Jerry"" AND Lname  =  ""Prince""";"ВЫБРАТЬ phone , room , building ИЗ регистрсведений.участиепреподавателей ГДЕ Fname = ""Jerry"" И активностьпреподавателя = ""Prince"""
6649;"SELECT count(*) FROM Faculty WHERE Rank  =  ""Professor"" AND building  =  ""NEB""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.участиепреподавателей ГДЕ Rank = ""Professor"" И building = ""NEB"""
6650;"SELECT count(*) FROM Faculty WHERE Rank  =  ""Professor"" AND building  =  ""NEB""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.участиепреподавателей ГДЕ Rank = ""Professor"" И building = ""NEB"""
6651;"SELECT fname ,  lname FROM Faculty WHERE Rank  =  ""Instructor""";"ВЫБРАТЬ fname , активностьпреподавателя ИЗ регистрсведений.участиепреподавателей ГДЕ Rank = ""Instructor"""
6652;"SELECT fname ,  lname FROM Faculty WHERE Rank  =  ""Instructor""";"ВЫБРАТЬ fname , активностьпреподавателя ИЗ регистрсведений.участиепреподавателей ГДЕ Rank = ""Instructor"""
6653;SELECT building ,  count(*) FROM Faculty GROUP BY building;ВЫБРАТЬ building , КОЛИЧЕСТВО(*) ИЗ регистрсведений.участиепреподавателей СГРУППИРОВАТЬ ПО building
6654;SELECT building ,  count(*) FROM Faculty GROUP BY building;ВЫБРАТЬ building , КОЛИЧЕСТВО(*) ИЗ регистрсведений.участиепреподавателей СГРУППИРОВАТЬ ПО building
6655;SELECT building FROM Faculty GROUP BY building ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 building ИЗ регистрсведений.участиепреподавателей СГРУППИРОВАТЬ ПО building УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
6656;SELECT building FROM Faculty GROUP BY building ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 building ИЗ регистрсведений.участиепреподавателей СГРУППИРОВАТЬ ПО building УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
6657;"SELECT building FROM Faculty WHERE rank  =  ""Professor"" GROUP BY building HAVING count(*)  >=  10";"ВЫБРАТЬ building ИЗ регистрсведений.участиепреподавателей ГДЕ rank = ""Professor"" СГРУППИРОВАТЬ ПО building ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 10"
6658;"SELECT building FROM Faculty WHERE rank  =  ""Professor"" GROUP BY building HAVING count(*)  >=  10";"ВЫБРАТЬ building ИЗ регистрсведений.участиепреподавателей ГДЕ rank = ""Professor"" СГРУППИРОВАТЬ ПО building ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 10"
6659;SELECT rank ,  count(*) FROM Faculty GROUP BY rank;ВЫБРАТЬ rank , КОЛИЧЕСТВО(*) ИЗ регистрсведений.участиепреподавателей СГРУППИРОВАТЬ ПО rank
6660;SELECT rank ,  count(*) FROM Faculty GROUP BY rank;ВЫБРАТЬ rank , КОЛИЧЕСТВО(*) ИЗ регистрсведений.участиепреподавателей СГРУППИРОВАТЬ ПО rank
6661;SELECT rank ,  sex ,  count(*) FROM Faculty GROUP BY rank ,  sex;ВЫБРАТЬ rank , sex , КОЛИЧЕСТВО(*) ИЗ регистрсведений.участиепреподавателей СГРУППИРОВАТЬ ПО rank , sex
6662;SELECT rank ,  sex ,  count(*) FROM Faculty GROUP BY rank ,  sex;ВЫБРАТЬ rank , sex , КОЛИЧЕСТВО(*) ИЗ регистрсведений.участиепреподавателей СГРУППИРОВАТЬ ПО rank , sex
6663;SELECT rank FROM Faculty GROUP BY rank ORDER BY count(*) ASC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 rank ИЗ регистрсведений.участиепреподавателей СГРУППИРОВАТЬ ПО rank УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) ВОЗР
6664;SELECT rank FROM Faculty GROUP BY rank ORDER BY count(*) ASC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 rank ИЗ регистрсведений.участиепреподавателей СГРУППИРОВАТЬ ПО rank УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) ВОЗР
6665;"SELECT sex ,  count(*) FROM Faculty WHERE rank  =  ""AsstProf"" GROUP BY sex";"ВЫБРАТЬ sex , КОЛИЧЕСТВО(*) ИЗ регистрсведений.участиепреподавателей ГДЕ rank = ""AsstProf"" СГРУППИРОВАТЬ ПО sex"
6666;"SELECT sex ,  count(*) FROM Faculty WHERE rank  =  ""AsstProf"" GROUP BY sex";"ВЫБРАТЬ sex , КОЛИЧЕСТВО(*) ИЗ регистрсведений.участиепреподавателей ГДЕ rank = ""AsstProf"" СГРУППИРОВАТЬ ПО sex"
6667;"SELECT T1.fname ,  T1.lname FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor WHERE T2.fname  =  ""Linda"" AND T2.lname  =  ""Smith""";"ВЫБРАТЬ T1.fname , T1.активностьпреподавателя ИЗ регистрсведений.участиепреподавателей КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.участиестудентов КАК T2 ПО T1.преподаватель = T2.advisor ГДЕ T2.fname = ""Linda"" И T2.активностьстудента = ""Smith"""
6668;"SELECT T1.fname ,  T1.lname FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor WHERE T2.fname  =  ""Linda"" AND T2.lname  =  ""Smith""";"ВЫБРАТЬ T1.fname , T1.активностьпреподавателя ИЗ регистрсведений.участиепреподавателей КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.участиестудентов КАК T2 ПО T1.преподаватель = T2.advisor ГДЕ T2.fname = ""Linda"" И T2.активностьстудента = ""Smith"""
6669;"SELECT T2.StuID FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor WHERE T1.rank  =  ""Professor""";"ВЫБРАТЬ T2.студент ИЗ регистрсведений.участиепреподавателей КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.участиестудентов КАК T2 ПО T1.преподаватель = T2.advisor ГДЕ T1.rank = ""Professor"""
6670;"SELECT T2.StuID FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor WHERE T1.rank  =  ""Professor""";"ВЫБРАТЬ T2.студент ИЗ регистрсведений.участиепреподавателей КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.участиестудентов КАК T2 ПО T1.преподаватель = T2.advisor ГДЕ T1.rank = ""Professor"""
6671;"SELECT T2.fname ,  T2.lname FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor WHERE T1.fname  =  ""Michael"" AND T1.lname  =  ""Goodrich""";"ВЫБРАТЬ T2.fname , T2.активностьстудента ИЗ регистрсведений.участиепреподавателей КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.участиестудентов КАК T2 ПО T1.преподаватель = T2.advisor ГДЕ T1.fname = ""Michael"" И T1.активностьпреподавателя = ""Goodrich"""
6672;"SELECT T2.fname ,  T2.lname FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor WHERE T1.fname  =  ""Michael"" AND T1.lname  =  ""Goodrich""";"ВЫБРАТЬ T2.fname , T2.активностьстудента ИЗ регистрсведений.участиепреподавателей КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.участиестудентов КАК T2 ПО T1.преподаватель = T2.advisor ГДЕ T1.fname = ""Michael"" И T1.активностьпреподавателя = ""Goodrich"""
6673;SELECT T1.FacID ,  count(*) FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor GROUP BY T1.FacID;ВЫБРАТЬ T1.преподаватель , КОЛИЧЕСТВО(*) ИЗ регистрсведений.участиепреподавателей КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.участиестудентов КАК T2 ПО T1.преподаватель = T2.advisor СГРУППИРОВАТЬ ПО T1.преподаватель
6674;SELECT T1.FacID ,  count(*) FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor GROUP BY T1.FacID;ВЫБРАТЬ T1.преподаватель , КОЛИЧЕСТВО(*) ИЗ регистрсведений.участиепреподавателей КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.участиестудентов КАК T2 ПО T1.преподаватель = T2.advisor СГРУППИРОВАТЬ ПО T1.преподаватель
6675;SELECT T1.rank ,  count(*) FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor GROUP BY T1.rank;ВЫБРАТЬ T1.rank , КОЛИЧЕСТВО(*) ИЗ регистрсведений.участиепреподавателей КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.участиестудентов КАК T2 ПО T1.преподаватель = T2.advisor СГРУППИРОВАТЬ ПО T1.rank
6676;SELECT T1.rank ,  count(*) FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor GROUP BY T1.rank;ВЫБРАТЬ T1.rank , КОЛИЧЕСТВО(*) ИЗ регистрсведений.участиепреподавателей КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.участиестудентов КАК T2 ПО T1.преподаватель = T2.advisor СГРУППИРОВАТЬ ПО T1.rank
6677;SELECT T1.fname ,  T1.lname FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor GROUP BY T1.FacID ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.fname , T1.активностьпреподавателя ИЗ регистрсведений.участиепреподавателей КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.участиестудентов КАК T2 ПО T1.преподаватель = T2.advisor СГРУППИРОВАТЬ ПО T1.преподаватель УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
6678;SELECT T1.fname ,  T1.lname FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor GROUP BY T1.FacID ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.fname , T1.активностьпреподавателя ИЗ регистрсведений.участиепреподавателей КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.участиестудентов КАК T2 ПО T1.преподаватель = T2.advisor СГРУППИРОВАТЬ ПО T1.преподаватель УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
6679;SELECT T1.FacID FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor GROUP BY T1.FacID HAVING count(*)  >=  2;ВЫБРАТЬ T1.преподаватель ИЗ регистрсведений.участиепреподавателей КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.участиестудентов КАК T2 ПО T1.преподаватель = T2.advisor СГРУППИРОВАТЬ ПО T1.преподаватель ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
6680;SELECT T1.FacID FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor GROUP BY T1.FacID HAVING count(*)  >=  2;ВЫБРАТЬ T1.преподаватель ИЗ регистрсведений.участиепреподавателей КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.участиестудентов КАК T2 ПО T1.преподаватель = T2.advisor СГРУППИРОВАТЬ ПО T1.преподаватель ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
6683;SELECT activity_name FROM Activity;ВЫБРАТЬ наименование ИЗ справочник.активности
6684;SELECT activity_name FROM Activity;ВЫБРАТЬ наименование ИЗ справочник.активности
6685;SELECT count(*) FROM Activity;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.активности
6686;SELECT count(*) FROM Activity;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.активности
6687;SELECT count(DISTINCT FacID) FROM Faculty_participates_in;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ссылка) ИЗ справочник.преподаватели
6688;SELECT count(DISTINCT FacID) FROM Faculty_participates_in;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ссылка) ИЗ справочник.преподаватели
6693;"SELECT count(*) FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID WHERE T1.fname  =  ""Mark"" AND T1.lname  =  ""Giuliano""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.участиепреподавателей КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.преподаватели КАК T2 ПО T1.преподаватель = T2.ссылка ГДЕ T1.fname = ""Mark"" И T1.активностьпреподавателя = ""Giuliano"""
6694;"SELECT count(*) FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID WHERE T1.fname  =  ""Mark"" AND T1.lname  =  ""Giuliano""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.участиепреподавателей КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.преподаватели КАК T2 ПО T1.преподаватель = T2.ссылка ГДЕ T1.fname = ""Mark"" И T1.активностьпреподавателя = ""Giuliano"""
6695;"SELECT T3.activity_name FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN Activity AS T3 ON T3.actid  =  T2.actid WHERE T1.fname  =  ""Mark"" AND T1.lname  =  ""Giuliano""";"ВЫБРАТЬ T3.наименование ИЗ регистрсведений.участиепреподавателей КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.преподаватели КАК T2 ПО T1.преподаватель = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.активности КАК T3 ПО T3.ссылка = T2.фамилия ГДЕ T1.fname = ""Mark"" И T1.активностьпреподавателя = ""Giuliano"""
6696;"SELECT T3.activity_name FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN Activity AS T3 ON T3.actid  =  T2.actid WHERE T1.fname  =  ""Mark"" AND T1.lname  =  ""Giuliano""";"ВЫБРАТЬ T3.наименование ИЗ регистрсведений.участиепреподавателей КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.преподаватели КАК T2 ПО T1.преподаватель = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.активности КАК T3 ПО T3.ссылка = T2.фамилия ГДЕ T1.fname = ""Mark"" И T1.активностьпреподавателя = ""Giuliano"""
6697;SELECT  T1.fname ,  T1.lname ,  count(*) ,  T1.FacID FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID GROUP BY T1.FacID;ВЫБРАТЬ T1.fname , T1.активностьпреподавателя , КОЛИЧЕСТВО(*) , T1.преподаватель ИЗ регистрсведений.участиепреподавателей КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.преподаватели КАК T2 ПО T1.преподаватель = T2.ссылка СГРУППИРОВАТЬ ПО T1.преподаватель
6698;SELECT  T1.fname ,  T1.lname ,  count(*) ,  T1.FacID FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID GROUP BY T1.FacID;ВЫБРАТЬ T1.fname , T1.активностьпреподавателя , КОЛИЧЕСТВО(*) , T1.преподаватель ИЗ регистрсведений.участиепреподавателей КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.преподаватели КАК T2 ПО T1.преподаватель = T2.ссылка СГРУППИРОВАТЬ ПО T1.преподаватель
6699;SELECT T1.activity_name ,  count(*) FROM Activity AS T1 JOIN Faculty_participates_in AS T2 ON T1.actID  =  T2.actID GROUP BY T1.actID;ВЫБРАТЬ T1.наименование , КОЛИЧЕСТВО(*) ИЗ справочник.активности КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.преподаватели КАК T2 ПО T1.ссылка = T2.фамилия СГРУППИРОВАТЬ ПО T1.ссылка
6700;SELECT T1.activity_name ,  count(*) FROM Activity AS T1 JOIN Faculty_participates_in AS T2 ON T1.actID  =  T2.actID GROUP BY T1.actID;ВЫБРАТЬ T1.наименование , КОЛИЧЕСТВО(*) ИЗ справочник.активности КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.преподаватели КАК T2 ПО T1.ссылка = T2.фамилия СГРУППИРОВАТЬ ПО T1.ссылка
6701;SELECT  T1.fname ,  T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID GROUP BY T1.FacID ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.fname , T1.активностьпреподавателя ИЗ регистрсведений.участиепреподавателей КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.преподаватели КАК T2 ПО T1.преподаватель = T2.ссылка СГРУППИРОВАТЬ ПО T1.преподаватель УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
6702;SELECT  T1.fname ,  T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID GROUP BY T1.FacID ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.fname , T1.активностьпреподавателя ИЗ регистрсведений.участиепреподавателей КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.преподаватели КАК T2 ПО T1.преподаватель = T2.ссылка СГРУППИРОВАТЬ ПО T1.преподаватель УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
6703;SELECT T1.activity_name FROM Activity AS T1 JOIN Faculty_participates_in AS T2 ON T1.actID  =  T2.actID GROUP BY T1.actID ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.наименование ИЗ справочник.активности КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.преподаватели КАК T2 ПО T1.ссылка = T2.фамилия СГРУППИРОВАТЬ ПО T1.ссылка УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
6704;SELECT T1.activity_name FROM Activity AS T1 JOIN Faculty_participates_in AS T2 ON T1.actID  =  T2.actID GROUP BY T1.actID ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.наименование ИЗ справочник.активности КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.преподаватели КАК T2 ПО T1.ссылка = T2.фамилия СГРУППИРОВАТЬ ПО T1.ссылка УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
6709;SELECT T1.fname ,  T1.lname FROM Student AS T1 JOIN Participates_in AS T2 ON T1.StuID  =  T2.StuID GROUP BY T1.StuID ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.fname , T1.активностьстудента ИЗ регистрсведений.участиестудентов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК T2 ПО T1.студент = T2.ссылка СГРУППИРОВАТЬ ПО T1.студент УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
6710;SELECT T1.fname ,  T1.lname FROM Student AS T1 JOIN Participates_in AS T2 ON T1.StuID  =  T2.StuID GROUP BY T1.StuID ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.fname , T1.активностьстудента ИЗ регистрсведений.участиестудентов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК T2 ПО T1.студент = T2.ссылка СГРУППИРОВАТЬ ПО T1.студент УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
6711;SELECT T1.activity_name FROM Activity AS T1 JOIN Participates_in AS T2 ON T1.actID  =  T2.actID GROUP BY T1.actID ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.наименование ИЗ справочник.активности КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК T2 ПО T1.ссылка = T2.фамилия СГРУППИРОВАТЬ ПО T1.ссылка УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
6712;SELECT T1.activity_name FROM Activity AS T1 JOIN Participates_in AS T2 ON T1.actID  =  T2.actID GROUP BY T1.actID ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.наименование ИЗ справочник.активности КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК T2 ПО T1.ссылка = T2.фамилия СГРУППИРОВАТЬ ПО T1.ссылка УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
6713;SELECT DISTINCT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN activity AS T3 ON T2.actid  =  T2.actid WHERE T3.activity_name  =  'Canoeing' OR T3.activity_name  =  'Kayaking';"ВЫБРАТЬ РАЗЛИЧНЫЕ T1.активностьпреподавателя ИЗ регистрсведений.участиепреподавателей КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.преподаватели КАК T2 ПО T1.преподаватель = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.активности КАК T3 ПО T2.фамилия = T2.фамилия ГДЕ T3.наименование = ""Canoeing"" ИЛИ T3.наименование = ""Kayaking"""
6714;SELECT DISTINCT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN activity AS T3 ON T2.actid  =  T2.actid WHERE T3.activity_name  =  'Canoeing' OR T3.activity_name  =  'Kayaking';"ВЫБРАТЬ РАЗЛИЧНЫЕ T1.активностьпреподавателя ИЗ регистрсведений.участиепреподавателей КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.преподаватели КАК T2 ПО T1.преподаватель = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.активности КАК T3 ПО T2.фамилия = T2.фамилия ГДЕ T3.наименование = ""Canoeing"" ИЛИ T3.наименование = ""Kayaking"""
6721;SELECT name FROM airports WHERE city  =  'Goroka';"ВЫБРАТЬ наименование ИЗ справочник.аэропорты ГДЕ город = ""Goroka"""
6722;SELECT name FROM airports WHERE city  =  'Goroka';"ВЫБРАТЬ наименование ИЗ справочник.аэропорты ГДЕ город = ""Goroka"""
6723;SELECT name ,  city ,  country ,  elevation FROM airports WHERE city  =  'New York';"ВЫБРАТЬ наименование , город , страна , высотанадум ИЗ справочник.аэропорты ГДЕ город = ""New York"""
6724;SELECT name ,  city ,  country ,  elevation FROM airports WHERE city  =  'New York';"ВЫБРАТЬ наименование , город , страна , высотанадум ИЗ справочник.аэропорты ГДЕ город = ""New York"""
6725;SELECT count(*) FROM airlines;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.авиакомпании
6726;SELECT count(*) FROM airlines;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.авиакомпании
6727;SELECT count(*) FROM airlines WHERE country  =  'Russia';"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.авиакомпании ГДЕ страна = ""Russia"""
6728;SELECT count(*) FROM airlines WHERE country  =  'Russia';"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.авиакомпании ГДЕ страна = ""Russia"""
6729;SELECT max(elevation) FROM airports WHERE country  =  'Iceland';"ВЫБРАТЬ МАКСИМУМ(высотанадум) ИЗ справочник.аэропорты ГДЕ страна = ""Iceland"""
6730;SELECT max(elevation) FROM airports WHERE country  =  'Iceland';"ВЫБРАТЬ МАКСИМУМ(высотанадум) ИЗ справочник.аэропорты ГДЕ страна = ""Iceland"""
6731;SELECT name FROM airports WHERE country  =  'Cuba' OR country  =  'Argentina';"ВЫБРАТЬ наименование ИЗ справочник.аэропорты ГДЕ страна = ""Cuba"" ИЛИ страна = ""Argentina"""
6732;SELECT name FROM airports WHERE country  =  'Cuba' OR country  =  'Argentina';"ВЫБРАТЬ наименование ИЗ справочник.аэропорты ГДЕ страна = ""Cuba"" ИЛИ страна = ""Argentina"""
6733;SELECT country FROM airlines WHERE name LIKE 'Orbit%';"ВЫБРАТЬ страна ИЗ справочник.авиакомпании ГДЕ наименование ПОДОБНО ""Orbit%"""
6734;SELECT country FROM airlines WHERE name LIKE 'Orbit%';"ВЫБРАТЬ страна ИЗ справочник.авиакомпании ГДЕ наименование ПОДОБНО ""Orbit%"""
6735;SELECT name FROM airports WHERE elevation BETWEEN -50 AND 50;ВЫБРАТЬ наименование ИЗ справочник.аэропорты ГДЕ высотанадум МЕЖДУ -50 И 50
6736;SELECT name FROM airports WHERE elevation BETWEEN -50 AND 50;ВЫБРАТЬ наименование ИЗ справочник.аэропорты ГДЕ высотанадум МЕЖДУ -50 И 50
6737;SELECT country FROM airports ORDER BY elevation DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 страна ИЗ справочник.аэропорты УПОРЯДОЧИТЬ ПО высотанадум УБЫВ
6738;SELECT country FROM airports ORDER BY elevation DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 страна ИЗ справочник.аэропорты УПОРЯДОЧИТЬ ПО высотанадум УБЫВ
6739;SELECT count(*) FROM airports WHERE name LIKE '%International%';"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.аэропорты ГДЕ наименование ПОДОБНО ""%International%"""
6740;SELECT count(*) FROM airports WHERE name LIKE '%International%';"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.аэропорты ГДЕ наименование ПОДОБНО ""%International%"""
6741;SELECT count(DISTINCT city) FROM airports WHERE country  =  'Greenland';"ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ город) ИЗ справочник.аэропорты ГДЕ страна = ""Greenland"""
6742;SELECT count(DISTINCT city) FROM airports WHERE country  =  'Greenland';"ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ город) ИЗ справочник.аэропорты ГДЕ страна = ""Greenland"""
6743;SELECT count(*) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid WHERE T1.name  =  'American Airlines';"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.авиакомпании КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.маршруты КАК T2 ПО T1.ссылка = T2.авиакомпания ГДЕ T1.наименование = ""American Airlines"""
6744;SELECT count(*) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid WHERE T1.name  =  'American Airlines';"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.авиакомпании КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.маршруты КАК T2 ПО T1.ссылка = T2.авиакомпания ГДЕ T1.наименование = ""American Airlines"""
6745;SELECT count(*) FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid WHERE country  =  'Canada';"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.аэропорты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.маршруты КАК T2 ПО T1.ссылка = T2.аэропортназначения ГДЕ country = ""Canada"""
6746;SELECT count(*) FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid WHERE country  =  'Canada';"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.аэропорты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.маршруты КАК T2 ПО T1.ссылка = T2.аэропортназначения ГДЕ country = ""Canada"""
6747;SELECT name ,  city ,  country FROM airports ORDER BY elevation LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование , город , страна ИЗ справочник.аэропорты УПОРЯДОЧИТЬ ПО высотанадум
6748;SELECT name ,  city ,  country FROM airports ORDER BY elevation LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование , город , страна ИЗ справочник.аэропорты УПОРЯДОЧИТЬ ПО высотанадум
6749;SELECT name ,  city ,  country FROM airports ORDER BY elevation DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование , город , страна ИЗ справочник.аэропорты УПОРЯДОЧИТЬ ПО высотанадум УБЫВ
6750;SELECT name ,  city ,  country FROM airports ORDER BY elevation DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование , город , страна ИЗ справочник.аэропорты УПОРЯДОЧИТЬ ПО высотанадум УБЫВ
6751;SELECT T1.name ,  T1.city ,  T2.dst_apid FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid GROUP BY T2.dst_apid ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.наименование , T1.город , T2.аэропортназначения ИЗ справочник.аэропорты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.маршруты КАК T2 ПО T1.ссылка = T2.аэропортназначения СГРУППИРОВАТЬ ПО T2.аэропортназначения УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
6752;SELECT T1.name ,  T1.city ,  T2.dst_apid FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid GROUP BY T2.dst_apid ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.наименование , T1.город , T2.аэропортназначения ИЗ справочник.аэропорты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.маршруты КАК T2 ПО T1.ссылка = T2.аэропортназначения СГРУППИРОВАТЬ ПО T2.аэропортназначения УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
6753;SELECT T1.name ,  T2.alid FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid GROUP BY T2.alid ORDER BY count(*) DESC LIMIT 10;ВЫБРАТЬ ПЕРВЫЕ 10 T1.наименование , T2.авиакомпания ИЗ справочник.авиакомпании КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.маршруты КАК T2 ПО T1.ссылка = T2.авиакомпания СГРУППИРОВАТЬ ПО T2.авиакомпания УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
6754;SELECT T1.name ,  T2.alid FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid GROUP BY T2.alid ORDER BY count(*) DESC LIMIT 10;ВЫБРАТЬ ПЕРВЫЕ 10 T1.наименование , T2.авиакомпания ИЗ справочник.авиакомпании КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.маршруты КАК T2 ПО T1.ссылка = T2.авиакомпания СГРУППИРОВАТЬ ПО T2.авиакомпания УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
6755;SELECT T1.name ,  T1.city ,  T2.src_apid FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid GROUP BY T2.src_apid ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.наименование , T1.город , T2.аэропортотправления ИЗ справочник.аэропорты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.маршруты КАК T2 ПО T1.ссылка = T2.аэропортотправления СГРУППИРОВАТЬ ПО T2.аэропортотправления УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
6756;SELECT T1.name ,  T1.city ,  T2.src_apid FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid GROUP BY T2.src_apid ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.наименование , T1.город , T2.аэропортотправления ИЗ справочник.аэропорты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.маршруты КАК T2 ПО T1.ссылка = T2.аэропортотправления СГРУППИРОВАТЬ ПО T2.аэропортотправления УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
6757;SELECT count(DISTINCT dst_apid) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid WHERE T1.name  =  'American Airlines';"ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ dst_apid) ИЗ справочник.авиакомпании КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.маршруты КАК T2 ПО T1.ссылка = T2.авиакомпания ГДЕ T1.наименование = ""American Airlines"""
6758;SELECT count(DISTINCT dst_apid) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid WHERE T1.name  =  'American Airlines';"ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ dst_apid) ИЗ справочник.авиакомпании КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.маршруты КАК T2 ПО T1.ссылка = T2.авиакомпания ГДЕ T1.наименование = ""American Airlines"""
6759;SELECT country FROM airlines GROUP BY country ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 страна ИЗ справочник.авиакомпании СГРУППИРОВАТЬ ПО страна УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
6760;SELECT country FROM airlines GROUP BY country ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 страна ИЗ справочник.авиакомпании СГРУППИРОВАТЬ ПО страна УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
6761;SELECT country FROM airlines WHERE active  =  'Y' GROUP BY country ORDER BY count(*) DESC LIMIT 1;"ВЫБРАТЬ ПЕРВЫЕ 1 страна ИЗ справочник.авиакомпании ГДЕ активна = ""Y"" СГРУППИРОВАТЬ ПО страна УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ"
6762;SELECT country FROM airlines WHERE active  =  'Y' GROUP BY country ORDER BY count(*) DESC LIMIT 1;"ВЫБРАТЬ ПЕРВЫЕ 1 страна ИЗ справочник.авиакомпании ГДЕ активна = ""Y"" СГРУППИРОВАТЬ ПО страна УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ"
6763;SELECT country ,  count(*) FROM airlines GROUP BY country ORDER BY count(*) DESC;ВЫБРАТЬ страна , КОЛИЧЕСТВО(*) ИЗ справочник.авиакомпании СГРУППИРОВАТЬ ПО страна УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
6764;SELECT country ,  count(*) FROM airlines GROUP BY country ORDER BY count(*) DESC;ВЫБРАТЬ страна , КОЛИЧЕСТВО(*) ИЗ справочник.авиакомпании СГРУППИРОВАТЬ ПО страна УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
6765;SELECT count(*) ,  country FROM airports GROUP BY country ORDER BY count(*) DESC;ВЫБРАТЬ КОЛИЧЕСТВО(*) , страна ИЗ справочник.аэропорты СГРУППИРОВАТЬ ПО страна УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
6766;SELECT count(*) ,  country FROM airports GROUP BY country ORDER BY count(*) DESC;ВЫБРАТЬ КОЛИЧЕСТВО(*) , страна ИЗ справочник.аэропорты СГРУППИРОВАТЬ ПО страна УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
6767;SELECT count(*) ,  city FROM airports WHERE country  =  'United States' GROUP BY city ORDER BY count(*) DESC;"ВЫБРАТЬ КОЛИЧЕСТВО(*) , город ИЗ справочник.аэропорты ГДЕ страна = ""United States"" СГРУППИРОВАТЬ ПО город УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ"
6768;SELECT count(*) ,  city FROM airports WHERE country  =  'United States' GROUP BY city ORDER BY count(*) DESC;"ВЫБРАТЬ КОЛИЧЕСТВО(*) , город ИЗ справочник.аэропорты ГДЕ страна = ""United States"" СГРУППИРОВАТЬ ПО город УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ"
6769;SELECT city FROM airports WHERE country  =  'United States' GROUP BY city HAVING count(*)  >  3;"ВЫБРАТЬ город ИЗ справочник.аэропорты ГДЕ страна = ""United States"" СГРУППИРОВАТЬ ПО город ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 3"
6770;SELECT city FROM airports WHERE country  =  'United States' GROUP BY city HAVING count(*)  >  3;"ВЫБРАТЬ город ИЗ справочник.аэропорты ГДЕ страна = ""United States"" СГРУППИРОВАТЬ ПО город ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 3"
6771;SELECT count(*) FROM (SELECT city FROM airports GROUP BY city HAVING count(*)  >  3);ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ (ВЫБРАТЬ город ИЗ справочник.аэропорты СГРУППИРОВАТЬ ПО город ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 3)
6772;SELECT count(*) FROM (SELECT city FROM airports GROUP BY city HAVING count(*)  >  3);ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ (ВЫБРАТЬ город ИЗ справочник.аэропорты СГРУППИРОВАТЬ ПО город ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 3)
6773;SELECT city ,  count(*) FROM airports GROUP BY city HAVING count(*)  >  1;ВЫБРАТЬ город , КОЛИЧЕСТВО(*) ИЗ справочник.аэропорты СГРУППИРОВАТЬ ПО город ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 1
6774;SELECT city ,  count(*) FROM airports GROUP BY city HAVING count(*)  >  1;ВЫБРАТЬ город , КОЛИЧЕСТВО(*) ИЗ справочник.аэропорты СГРУППИРОВАТЬ ПО город ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 1
6775;SELECT city FROM airports GROUP BY city HAVING count(*)  >  2 ORDER BY count(*);ВЫБРАТЬ город ИЗ справочник.аэропорты СГРУППИРОВАТЬ ПО город ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 2 УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*)
6776;SELECT city FROM airports GROUP BY city HAVING count(*)  >  2 ORDER BY count(*);ВЫБРАТЬ город ИЗ справочник.аэропорты СГРУППИРОВАТЬ ПО город ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 2 УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*)
6777;SELECT count(*) ,  T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid GROUP BY T1.name;ВЫБРАТЬ КОЛИЧЕСТВО(*) , T1.наименование ИЗ справочник.аэропорты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.маршруты КАК T2 ПО T1.ссылка = T2.аэропортотправления СГРУППИРОВАТЬ ПО T1.наименование
6778;SELECT count(*) ,  T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid GROUP BY T1.name;ВЫБРАТЬ КОЛИЧЕСТВО(*) , T1.наименование ИЗ справочник.аэропорты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.маршруты КАК T2 ПО T1.ссылка = T2.аэропортотправления СГРУППИРОВАТЬ ПО T1.наименование
6779;SELECT count(*) ,  T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid GROUP BY T1.name ORDER BY count(*) DESC;ВЫБРАТЬ КОЛИЧЕСТВО(*) , T1.наименование ИЗ справочник.аэропорты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.маршруты КАК T2 ПО T1.ссылка = T2.аэропортотправления СГРУППИРОВАТЬ ПО T1.наименование УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
6780;SELECT count(*) ,  T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid GROUP BY T1.name ORDER BY count(*) DESC;ВЫБРАТЬ КОЛИЧЕСТВО(*) , T1.наименование ИЗ справочник.аэропорты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.маршруты КАК T2 ПО T1.ссылка = T2.аэропортотправления СГРУППИРОВАТЬ ПО T1.наименование УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
6781;SELECT avg(elevation) ,  country FROM airports GROUP BY country;ВЫБРАТЬ СРЕДНЕЕ(высотанадум) , страна ИЗ справочник.аэропорты СГРУППИРОВАТЬ ПО страна
6782;SELECT avg(elevation) ,  country FROM airports GROUP BY country;ВЫБРАТЬ СРЕДНЕЕ(высотанадум) , страна ИЗ справочник.аэропорты СГРУППИРОВАТЬ ПО страна
6783;SELECT city FROM airports GROUP BY city HAVING count(*)  =  2;ВЫБРАТЬ город ИЗ справочник.аэропорты СГРУППИРОВАТЬ ПО город ИМЕЮЩИЕ КОЛИЧЕСТВО(*) = 2
6784;SELECT city FROM airports GROUP BY city HAVING count(*)  =  2;ВЫБРАТЬ город ИЗ справочник.аэропорты СГРУППИРОВАТЬ ПО город ИМЕЮЩИЕ КОЛИЧЕСТВО(*) = 2
6785;SELECT T1.country ,  T1.name ,  count(*) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid GROUP BY T1.country ,  T1.name;ВЫБРАТЬ T1.страна , T1.наименование , КОЛИЧЕСТВО(*) ИЗ справочник.авиакомпании КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.маршруты КАК T2 ПО T1.ссылка = T2.авиакомпания СГРУППИРОВАТЬ ПО T1.страна , T1.наименование
6786;SELECT T1.country ,  T1.name ,  count(*) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid GROUP BY T1.country ,  T1.name;ВЫБРАТЬ T1.страна , T1.наименование , КОЛИЧЕСТВО(*) ИЗ справочник.авиакомпании КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.маршруты КАК T2 ПО T1.ссылка = T2.авиакомпания СГРУППИРОВАТЬ ПО T1.страна , T1.наименование
6787;SELECT count(*) FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid  =  T2.apid WHERE T2.country  =  'Italy';"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.маршруты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.аэропорты КАК T2 ПО T1.аэропортназначения = T2.ссылка ГДЕ T2.страна = ""Italy"""
6788;SELECT count(*) FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid  =  T2.apid WHERE T2.country  =  'Italy';"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.маршруты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.аэропорты КАК T2 ПО T1.аэропортназначения = T2.ссылка ГДЕ T2.страна = ""Italy"""
6789;SELECT count(*) FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid  =  T2.apid JOIN airlines AS T3 ON T1.alid  =  T3.alid WHERE T2.country  =  'Italy' AND T3.name  =  'American Airlines';"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.маршруты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.аэропорты КАК T2 ПО T1.аэропортназначения = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.авиакомпании КАК T3 ПО T1.авиакомпания = T3.ссылка ГДЕ T2.страна = ""Italy"" И T3.наименование = ""American Airlines"""
6790;SELECT count(*) FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid  =  T2.apid JOIN airlines AS T3 ON T1.alid  =  T3.alid WHERE T2.country  =  'Italy' AND T3.name  =  'American Airlines';"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.маршруты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.аэропорты КАК T2 ПО T1.аэропортназначения = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.авиакомпании КАК T3 ПО T1.авиакомпания = T3.ссылка ГДЕ T2.страна = ""Italy"" И T3.наименование = ""American Airlines"""
6791;SELECT count(*) FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid WHERE T1.name  =  'John F Kennedy International Airport';"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.аэропорты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.маршруты КАК T2 ПО T1.ссылка = T2.аэропортназначения ГДЕ T1.наименование = ""John F Kennedy International Airport"""
6792;SELECT count(*) FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid WHERE T1.name  =  'John F Kennedy International Airport';"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.аэропорты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.маршруты КАК T2 ПО T1.ссылка = T2.аэропортназначения ГДЕ T1.наименование = ""John F Kennedy International Airport"""
6793;SELECT count(*) FROM routes WHERE dst_apid IN (SELECT apid FROM airports WHERE country  =  'Canada') AND src_apid IN (SELECT apid FROM airports WHERE country  =  'United States');"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.маршруты ГДЕ dst_apid В (ВЫБРАТЬ ссылка ИЗ справочник.аэропорты ГДЕ страна = ""Canada"") И src_apid В (ВЫБРАТЬ ссылка ИЗ справочник.аэропорты ГДЕ страна = ""United States"")"
6794;SELECT count(*) FROM routes WHERE dst_apid IN (SELECT apid FROM airports WHERE country  =  'Canada') AND src_apid IN (SELECT apid FROM airports WHERE country  =  'United States');"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.маршруты ГДЕ dst_apid В (ВЫБРАТЬ ссылка ИЗ справочник.аэропорты ГДЕ страна = ""Canada"") И src_apid В (ВЫБРАТЬ ссылка ИЗ справочник.аэропорты ГДЕ страна = ""United States"")"
6795;SELECT rid FROM routes WHERE dst_apid IN (SELECT apid FROM airports WHERE country  =  'United States') AND src_apid IN (SELECT apid FROM airports WHERE country  =  'United States');"ВЫБРАТЬ rid ИЗ справочник.маршруты ГДЕ dst_apid В (ВЫБРАТЬ ссылка ИЗ справочник.аэропорты ГДЕ страна = ""United States"") И src_apid В (ВЫБРАТЬ ссылка ИЗ справочник.аэропорты ГДЕ страна = ""United States"")"
6796;SELECT rid FROM routes WHERE dst_apid IN (SELECT apid FROM airports WHERE country  =  'United States') AND src_apid IN (SELECT apid FROM airports WHERE country  =  'United States');"ВЫБРАТЬ rid ИЗ справочник.маршруты ГДЕ dst_apid В (ВЫБРАТЬ ссылка ИЗ справочник.аэропорты ГДЕ страна = ""United States"") И src_apid В (ВЫБРАТЬ ссылка ИЗ справочник.аэропорты ГДЕ страна = ""United States"")"
6797;SELECT T1.name FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid GROUP BY T1.name ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.наименование ИЗ справочник.авиакомпании КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.маршруты КАК T2 ПО T1.ссылка = T2.авиакомпания СГРУППИРОВАТЬ ПО T1.наименование УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
6798;SELECT T1.name FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid GROUP BY T1.name ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.наименование ИЗ справочник.авиакомпании КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.маршруты КАК T2 ПО T1.ссылка = T2.авиакомпания СГРУППИРОВАТЬ ПО T1.наименование УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
6799;SELECT T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid WHERE T1.country  =  'China' GROUP BY T1.name ORDER BY count(*) DESC LIMIT 1;"ВЫБРАТЬ ПЕРВЫЕ 1 T1.наименование ИЗ справочник.аэропорты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.маршруты КАК T2 ПО T1.ссылка = T2.аэропортотправления ГДЕ T1.страна = ""China"" СГРУППИРОВАТЬ ПО T1.наименование УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ"
6800;SELECT T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid WHERE T1.country  =  'China' GROUP BY T1.name ORDER BY count(*) DESC LIMIT 1;"ВЫБРАТЬ ПЕРВЫЕ 1 T1.наименование ИЗ справочник.аэропорты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.маршруты КАК T2 ПО T1.ссылка = T2.аэропортотправления ГДЕ T1.страна = ""China"" СГРУППИРОВАТЬ ПО T1.наименование УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ"
6801;SELECT T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid WHERE T1.country  =  'China' GROUP BY T1.name ORDER BY count(*) DESC LIMIT 1;"ВЫБРАТЬ ПЕРВЫЕ 1 T1.наименование ИЗ справочник.аэропорты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.маршруты КАК T2 ПО T1.ссылка = T2.аэропортназначения ГДЕ T1.страна = ""China"" СГРУППИРОВАТЬ ПО T1.наименование УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ"
6802;SELECT T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid WHERE T1.country  =  'China' GROUP BY T1.name ORDER BY count(*) DESC LIMIT 1;"ВЫБРАТЬ ПЕРВЫЕ 1 T1.наименование ИЗ справочник.аэропорты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.маршруты КАК T2 ПО T1.ссылка = T2.аэропортназначения ГДЕ T1.страна = ""China"" СГРУППИРОВАТЬ ПО T1.наименование УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ"
6803;SELECT order_id FROM orders ORDER BY date_order_placed DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 ссылка ИЗ документ.заказ УПОРЯДОЧИТЬ ПО датаразмещения УБЫВ
6804;SELECT order_id FROM orders ORDER BY date_order_placed DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 ссылка ИЗ документ.заказ УПОРЯДОЧИТЬ ПО датаразмещения УБЫВ
6805;SELECT order_id ,  customer_id FROM orders ORDER BY date_order_placed LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 ссылка , клиент ИЗ документ.заказ УПОРЯДОЧИТЬ ПО датаразмещения
6806;SELECT order_id ,  customer_id FROM orders ORDER BY date_order_placed LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 ссылка , клиент ИЗ документ.заказ УПОРЯДОЧИТЬ ПО датаразмещения
6807;"SELECT order_id FROM shipments WHERE shipment_tracking_number = ""3452""";"ВЫБРАТЬ заказ ИЗ документ.отгрузка ГДЕ трекномер = ""3452"""
6808;"SELECT order_id FROM shipments WHERE shipment_tracking_number = ""3452""";"ВЫБРАТЬ заказ ИЗ документ.отгрузка ГДЕ трекномер = ""3452"""
6809;SELECT order_item_id FROM order_items WHERE product_id = 11;ВЫБРАТЬ ссылка ИЗ справочник.товарывзаказах ГДЕ товар = 11
6810;SELECT order_item_id FROM order_items WHERE product_id = 11;ВЫБРАТЬ ссылка ИЗ справочник.товарывзаказах ГДЕ товар = 11
6811;"SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = ""Packing""";"ВЫБРАТЬ РАЗЛИЧНЫЕ T1.наименование ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.заказ КАК T2 ПО T1.ссылка = T2.клиент ГДЕ T2.статусзаказа = ""Packing"""
6812;"SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = ""Packing""";"ВЫБРАТЬ РАЗЛИЧНЫЕ T1.наименование ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.заказ КАК T2 ПО T1.ссылка = T2.клиент ГДЕ T2.статусзаказа = ""Packing"""
6813;"SELECT DISTINCT T1.customer_details FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = ""On Road""";"ВЫБРАТЬ РАЗЛИЧНЫЕ T1.описание ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.заказ КАК T2 ПО T1.ссылка = T2.клиент ГДЕ T2.статусзаказа = ""On Road"""
6814;"SELECT DISTINCT T1.customer_details FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = ""On Road""";"ВЫБРАТЬ РАЗЛИЧНЫЕ T1.описание ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.заказ КАК T2 ПО T1.ссылка = T2.клиент ГДЕ T2.статусзаказа = ""On Road"""
6815;SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.наименование ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.заказ КАК T2 ПО T1.ссылка = T2.клиент СГРУППИРОВАТЬ ПО T1.ссылка УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
6816;SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.наименование ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.заказ КАК T2 ПО T1.ссылка = T2.клиент СГРУППИРОВАТЬ ПО T1.ссылка УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
6817;SELECT T1.customer_id FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.ссылка ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.заказ КАК T2 ПО T1.ссылка = T2.клиент СГРУППИРОВАТЬ ПО T1.ссылка УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
6818;SELECT T1.customer_id FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.ссылка ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.заказ КАК T2 ПО T1.ссылка = T2.клиент СГРУППИРОВАТЬ ПО T1.ссылка УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
6819;"SELECT T2.order_id ,  T2.order_status FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = ""Jeramie""";"ВЫБРАТЬ T2.ссылка , T2.статусзаказа ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.заказ КАК T2 ПО T1.ссылка = T2.клиент ГДЕ T1.наименование = ""Jeramie"""
6820;"SELECT T2.order_id ,  T2.order_status FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = ""Jeramie""";"ВЫБРАТЬ T2.ссылка , T2.статусзаказа ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.заказ КАК T2 ПО T1.ссылка = T2.клиент ГДЕ T1.наименование = ""Jeramie"""
6821;"SELECT T2.date_order_placed FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = ""Jeramie""";"ВЫБРАТЬ T2.датаразмещения ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.заказ КАК T2 ПО T1.ссылка = T2.клиент ГДЕ T1.наименование = ""Jeramie"""
6822;"SELECT T2.date_order_placed FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = ""Jeramie""";"ВЫБРАТЬ T2.датаразмещения ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.заказ КАК T2 ПО T1.ссылка = T2.клиент ГДЕ T1.наименование = ""Jeramie"""
6823;"SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.date_order_placed >= ""2009-01-01"" AND T2.date_order_placed <= ""2010-01-01""";"ВЫБРАТЬ T1.наименование ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.заказ КАК T2 ПО T1.ссылка = T2.клиент ГДЕ T2.датаразмещения >= ""2009-01-01"" И T2.датаразмещения <= ""2010-01-01"""
6824;"SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.date_order_placed >= ""2009-01-01"" AND T2.date_order_placed <= ""2010-01-01""";"ВЫБРАТЬ T1.наименование ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.заказ КАК T2 ПО T1.ссылка = T2.клиент ГДЕ T2.датаразмещения >= ""2009-01-01"" И T2.датаразмещения <= ""2010-01-01"""
6825;"SELECT DISTINCT T2.product_id FROM orders AS T1 JOIN order_items AS T2 ON T1.order_id = T2.order_id WHERE T1.date_order_placed >= ""1975-01-01"" AND T1.date_order_placed <= ""1976-01-01""";"ВЫБРАТЬ РАЗЛИЧНЫЕ T2.товар ИЗ документ.заказ КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.товарывзаказах КАК T2 ПО T1.ссылка = T2.заказ ГДЕ T1.датаразмещения >= ""1975-01-01"" И T1.датаразмещения <= ""1976-01-01"""
6826;"SELECT DISTINCT T2.product_id FROM orders AS T1 JOIN order_items AS T2 ON T1.order_id = T2.order_id WHERE T1.date_order_placed >= ""1975-01-01"" AND T1.date_order_placed <= ""1976-01-01""";"ВЫБРАТЬ РАЗЛИЧНЫЕ T2.товар ИЗ документ.заказ КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.товарывзаказах КАК T2 ПО T1.ссылка = T2.заказ ГДЕ T1.датаразмещения >= ""1975-01-01"" И T1.датаразмещения <= ""1976-01-01"""
6831;SELECT T1.date_order_placed FROM orders AS T1 JOIN shipments AS T2 ON T1.order_id = T2.order_id WHERE T2.shipment_tracking_number = 3452;ВЫБРАТЬ T1.датаразмещения ИЗ документ.заказ КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.отгрузка КАК T2 ПО T1.ссылка = T2.заказ ГДЕ T2.трекномер = 3452
6832;SELECT T1.date_order_placed FROM orders AS T1 JOIN shipments AS T2 ON T1.order_id = T2.order_id WHERE T2.shipment_tracking_number = 3452;ВЫБРАТЬ T1.датаразмещения ИЗ документ.заказ КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.отгрузка КАК T2 ПО T1.ссылка = T2.заказ ГДЕ T2.трекномер = 3452
6833;SELECT T1.date_order_placed FROM orders AS T1 JOIN shipments AS T2 ON T1.order_id = T2.order_id WHERE T2.invoice_number = 10;ВЫБРАТЬ T1.датаразмещения ИЗ документ.заказ КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.отгрузка КАК T2 ПО T1.ссылка = T2.заказ ГДЕ T2.счет = 10
6834;SELECT T1.date_order_placed FROM orders AS T1 JOIN shipments AS T2 ON T1.order_id = T2.order_id WHERE T2.invoice_number = 10;ВЫБРАТЬ T1.датаразмещения ИЗ документ.заказ КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.отгрузка КАК T2 ПО T1.ссылка = T2.заказ ГДЕ T2.счет = 10
6835;SELECT count(*) ,  T3.product_id FROM orders AS T1 JOIN order_items AS T2 JOIN products AS T3 ON T1.order_id = T2.order_id AND T2.product_id = T3.product_id GROUP BY T3.product_id;ВЫБРАТЬ КОЛИЧЕСТВО(*) , T3.ссылка ИЗ документ.заказ КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.товарывзаказах КАК T2 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.товары КАК T3 ПО T1.ссылка = T2.заказ И T2.товар = T3.ссылка СГРУППИРОВАТЬ ПО T3.ссылка
6836;SELECT count(*) ,  T3.product_id FROM orders AS T1 JOIN order_items AS T2 JOIN products AS T3 ON T1.order_id = T2.order_id AND T2.product_id = T3.product_id GROUP BY T3.product_id;ВЫБРАТЬ КОЛИЧЕСТВО(*) , T3.ссылка ИЗ документ.заказ КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.товарывзаказах КАК T2 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.товары КАК T3 ПО T1.ссылка = T2.заказ И T2.товар = T3.ссылка СГРУППИРОВАТЬ ПО T3.ссылка
6837;SELECT T3.product_name ,  count(*) FROM orders AS T1 JOIN order_items AS T2 JOIN products AS T3 ON T1.order_id = T2.order_id AND T2.product_id = T3.product_id GROUP BY T3.product_id;ВЫБРАТЬ T3.наименование , КОЛИЧЕСТВО(*) ИЗ документ.заказ КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.товарывзаказах КАК T2 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.товары КАК T3 ПО T1.ссылка = T2.заказ И T2.товар = T3.ссылка СГРУППИРОВАТЬ ПО T3.ссылка
6838;SELECT T3.product_name ,  count(*) FROM orders AS T1 JOIN order_items AS T2 JOIN products AS T3 ON T1.order_id = T2.order_id AND T2.product_id = T3.product_id GROUP BY T3.product_id;ВЫБРАТЬ T3.наименование , КОЛИЧЕСТВО(*) ИЗ документ.заказ КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.товарывзаказах КАК T2 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.товары КАК T3 ПО T1.ссылка = T2.заказ И T2.товар = T3.ссылка СГРУППИРОВАТЬ ПО T3.ссылка
6839;"SELECT order_id FROM shipments WHERE shipment_date > ""2000-01-01""";"ВЫБРАТЬ заказ ИЗ документ.отгрузка ГДЕ датаотгрузки > ""2000-01-01"""
6840;"SELECT order_id FROM shipments WHERE shipment_date > ""2000-01-01""";"ВЫБРАТЬ заказ ИЗ документ.отгрузка ГДЕ датаотгрузки > ""2000-01-01"""
6841;SELECT order_id FROM shipments WHERE shipment_date  =  (SELECT max(shipment_date) FROM shipments);ВЫБРАТЬ order_id ИЗ документ.отгрузка ГДЕ shipment_date = (ВЫБРАТЬ МАКСИМУМ(shipment_date) ИЗ документ.отгрузка)
6842;SELECT order_id FROM shipments WHERE shipment_date  =  (SELECT max(shipment_date) FROM shipments);ВЫБРАТЬ order_id ИЗ документ.отгрузка ГДЕ shipment_date = (ВЫБРАТЬ МАКСИМУМ(shipment_date) ИЗ документ.отгрузка)
6843;SELECT DISTINCT product_name FROM products ORDER BY product_name;ВЫБРАТЬ РАЗЛИЧНЫЕ наименование ИЗ справочник.товары УПОРЯДОЧИТЬ ПО наименование
6844;SELECT DISTINCT product_name FROM products ORDER BY product_name;ВЫБРАТЬ РАЗЛИЧНЫЕ наименование ИЗ справочник.товары УПОРЯДОЧИТЬ ПО наименование
6845;SELECT DISTINCT order_id FROM orders ORDER BY date_order_placed;ВЫБРАТЬ РАЗЛИЧНЫЕ ссылка ИЗ документ.заказ УПОРЯДОЧИТЬ ПО датаразмещения
6846;SELECT DISTINCT order_id FROM orders ORDER BY date_order_placed;ВЫБРАТЬ РАЗЛИЧНЫЕ ссылка ИЗ документ.заказ УПОРЯДОЧИТЬ ПО датаразмещения
6847;SELECT T1.order_id FROM orders AS T1 JOIN order_items AS T2 ON T1.order_id = T2.order_id GROUP BY T1.order_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.ссылка ИЗ документ.заказ КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.товарывзаказах КАК T2 ПО T1.ссылка = T2.заказ СГРУППИРОВАТЬ ПО T1.ссылка УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
6848;SELECT T1.order_id FROM orders AS T1 JOIN order_items AS T2 ON T1.order_id = T2.order_id GROUP BY T1.order_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.ссылка ИЗ документ.заказ КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.товарывзаказах КАК T2 ПО T1.ссылка = T2.заказ СГРУППИРОВАТЬ ПО T1.ссылка УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
6849;SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.наименование ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.заказ КАК T2 ПО T1.ссылка = T2.клиент СГРУППИРОВАТЬ ПО T1.ссылка УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
6850;SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.наименование ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.заказ КАК T2 ПО T1.ссылка = T2.клиент СГРУППИРОВАТЬ ПО T1.ссылка УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
6851;"SELECT invoice_number FROM invoices WHERE invoice_date < ""1989-09-03"" OR invoice_date > ""2007-12-25""";"ВЫБРАТЬ ссылка ИЗ документ.счет ГДЕ дата < ""1989-09-03"" ИЛИ дата > ""2007-12-25"""
6852;"SELECT invoice_number FROM invoices WHERE invoice_date < ""1989-09-03"" OR invoice_date > ""2007-12-25""";"ВЫБРАТЬ ссылка ИЗ документ.счет ГДЕ дата < ""1989-09-03"" ИЛИ дата > ""2007-12-25"""
6853;"SELECT DISTINCT invoice_details FROM invoices WHERE invoice_date < ""1989-09-03"" OR invoice_date > ""2007-12-25""";"ВЫБРАТЬ РАЗЛИЧНЫЕ описание ИЗ документ.счет ГДЕ дата < ""1989-09-03"" ИЛИ дата > ""2007-12-25"""
6854;"SELECT DISTINCT invoice_details FROM invoices WHERE invoice_date < ""1989-09-03"" OR invoice_date > ""2007-12-25""";"ВЫБРАТЬ РАЗЛИЧНЫЕ описание ИЗ документ.счет ГДЕ дата < ""1989-09-03"" ИЛИ дата > ""2007-12-25"""
6855;SELECT T2.customer_name ,  count(*) FROM orders AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.customer_id HAVING count(*)  >=  2;ВЫБРАТЬ T2.наименование , КОЛИЧЕСТВО(*) ИЗ документ.заказ КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.клиенты КАК T2 ПО T1.клиент = T2.ссылка СГРУППИРОВАТЬ ПО T2.ссылка ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
6856;SELECT T2.customer_name ,  count(*) FROM orders AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.customer_id HAVING count(*)  >=  2;ВЫБРАТЬ T2.наименование , КОЛИЧЕСТВО(*) ИЗ документ.заказ КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.клиенты КАК T2 ПО T1.клиент = T2.ссылка СГРУППИРОВАТЬ ПО T2.ссылка ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
6857;SELECT T2.customer_name FROM orders AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.customer_id HAVING count(*)  <=  2;ВЫБРАТЬ T2.наименование ИЗ документ.заказ КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.клиенты КАК T2 ПО T1.клиент = T2.ссылка СГРУППИРОВАТЬ ПО T2.ссылка ИМЕЮЩИЕ КОЛИЧЕСТВО(*) <= 2
6858;SELECT T2.customer_name FROM orders AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.customer_id HAVING count(*)  <=  2;ВЫБРАТЬ T2.наименование ИЗ документ.заказ КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.клиенты КАК T2 ПО T1.клиент = T2.ссылка СГРУППИРОВАТЬ ПО T2.ссылка ИМЕЮЩИЕ КОЛИЧЕСТВО(*) <= 2
6859;"SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 JOIN order_items AS T3 JOIN products AS T4 ON T1.customer_id = T2.customer_id AND T2.order_id = T3.order_id AND T3.product_id = T4.product_id WHERE T4.product_name = ""food"" GROUP BY T1.customer_id HAVING count(*)  >=  1";"ВЫБРАТЬ T1.наименование ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.заказ КАК T2 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.товарывзаказах КАК T3 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.товары КАК T4 ПО T1.ссылка = T2.клиент И T2.ссылка = T3.заказ И T3.товар = T4.ссылка ГДЕ T4.наименование = ""food"" СГРУППИРОВАТЬ ПО T1.ссылка ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 1"
6860;"SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 JOIN order_items AS T3 JOIN products AS T4 ON T1.customer_id = T2.customer_id AND T2.order_id = T3.order_id AND T3.product_id = T4.product_id WHERE T4.product_name = ""food"" GROUP BY T1.customer_id HAVING count(*)  >=  1";"ВЫБРАТЬ T1.наименование ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.заказ КАК T2 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.товарывзаказах КАК T3 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.товары КАК T4 ПО T1.ссылка = T2.клиент И T2.ссылка = T3.заказ И T3.товар = T4.ссылка ГДЕ T4.наименование = ""food"" СГРУППИРОВАТЬ ПО T1.ссылка ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 1"
6861;"SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 JOIN order_items AS T3 JOIN products AS T4 ON T1.customer_id = T2.customer_id AND T2.order_id = T3.order_id AND T3.product_id = T4.product_id WHERE T3.order_item_status = ""Cancel"" AND T4.product_name = ""food"" GROUP BY T1.customer_id HAVING count(*)  >=  1";"ВЫБРАТЬ T1.наименование ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.заказ КАК T2 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.товарывзаказах КАК T3 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.товары КАК T4 ПО T1.ссылка = T2.клиент И T2.ссылка = T3.заказ И T3.товар = T4.ссылка ГДЕ T3.статустовара = ""Cancel"" И T4.наименование = ""food"" СГРУППИРОВАТЬ ПО T1.ссылка ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 1"
6862;"SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 JOIN order_items AS T3 JOIN products AS T4 ON T1.customer_id = T2.customer_id AND T2.order_id = T3.order_id AND T3.product_id = T4.product_id WHERE T3.order_item_status = ""Cancel"" AND T4.product_name = ""food"" GROUP BY T1.customer_id HAVING count(*)  >=  1";"ВЫБРАТЬ T1.наименование ИЗ справочник.клиенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.заказ КАК T2 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.товарывзаказах КАК T3 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.товары КАК T4 ПО T1.ссылка = T2.клиент И T2.ссылка = T3.заказ И T3.товар = T4.ссылка ГДЕ T3.статустовара = ""Cancel"" И T4.наименование = ""food"" СГРУППИРОВАТЬ ПО T1.ссылка ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 1"
6863;SELECT count(*) FROM architect WHERE gender  =  'female';"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.архитекторы ГДЕ пол = ""female"""
6864;SELECT name ,  nationality ,  id FROM architect WHERE gender  =  'male' ORDER BY name;"ВЫБРАТЬ наименование , национальность , ссылка ИЗ справочник.архитекторы ГДЕ пол = ""male"" УПОРЯДОЧИТЬ ПО наименование"
6865;SELECT max(T1.length_meters) ,  T2.name FROM bridge AS T1 JOIN architect AS T2 ON T1.architect_id  =  T2.id;ВЫБРАТЬ МАКСИМУМ(T1.длинаметры) , T2.наименование ИЗ справочник.мосты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.архитекторы КАК T2 ПО T1.ссылка = T2.ссылка
6866;SELECT avg(length_feet) FROM bridge;ВЫБРАТЬ СРЕДНЕЕ(длинафуты) ИЗ справочник.мосты
6867;SELECT name ,  built_year FROM mill WHERE TYPE  =  'Grondzeiler';"ВЫБРАТЬ наименование , годпостройки ИЗ справочник.мельницы ГДЕ тип = ""Grondzeiler"""
6868;SELECT DISTINCT T1.name ,  T1.nationality FROM architect AS T1 JOIN mill AS t2 ON T1.id  =  T2.architect_id;ВЫБРАТЬ РАЗЛИЧНЫЕ T1.наименование , T1.национальность ИЗ справочник.архитекторы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.мельницы КАК t2 ПО T1.ссылка = T2.architect_id
6869;SELECT name FROM mill WHERE LOCATION != 'Donceel';"ВЫБРАТЬ наименование ИЗ справочник.мельницы ГДЕ местоположение <> ""Donceel"""
6870;SELECT DISTINCT T1.type FROM mill AS T1 JOIN architect AS t2 ON T1.architect_id  =  T2.id WHERE T2.nationality  =  'American' OR T2.nationality  =  'Canadian';"ВЫБРАТЬ РАЗЛИЧНЫЕ T1.тип ИЗ справочник.мельницы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.архитекторы КАК t2 ПО T1.ссылка = T2.id ГДЕ T2.nationality = ""American"" ИЛИ T2.nationality = ""Canadian"""
6871;SELECT T1.id ,  T1.name FROM architect AS T1 JOIN bridge AS T2 ON T1.id  =  T2.architect_id GROUP BY T1.id HAVING count(*)  >=  3;ВЫБРАТЬ T1.ссылка , T1.наименование ИЗ справочник.архитекторы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.мосты КАК T2 ПО T1.ссылка = T2.ссылка СГРУППИРОВАТЬ ПО T1.ссылка ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 3
6872;SELECT T1.id ,  T1.name ,  T1.nationality FROM architect AS T1 JOIN mill AS T2 ON T1.id  =  T2.architect_id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.ссылка , T1.наименование , T1.национальность ИЗ справочник.архитекторы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.мельницы КАК T2 ПО T1.ссылка = T2.ссылка СГРУППИРОВАТЬ ПО T1.ссылка УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
6873;SELECT T1.id ,  T1.name ,  T1.gender FROM architect AS T1 JOIN bridge AS T2 ON T1.id  =  T2.architect_id GROUP BY T1.id HAVING count(*)  =  2 UNION SELECT T1.id ,  T1.name ,  T1.gender FROM architect AS T1 JOIN mill AS T2 ON T1.id  =  T2.architect_id GROUP BY T1.id HAVING count(*)  =  1;ВЫБРАТЬ T1.ссылка , T1.наименование , T1.пол ИЗ справочник.архитекторы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.мосты КАК T2 ПО T1.ссылка = T2.ссылка СГРУППИРОВАТЬ ПО T1.ссылка ИМЕЮЩИЕ КОЛИЧЕСТВО(*) = 2 ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ T1.ссылка , T1.наименование , T1.пол ИЗ справочник.архитекторы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.мельницы КАК T2 ПО T1.ссылка = T2.ссылка СГРУППИРОВАТЬ ПО T1.ссылка ИМЕЮЩИЕ КОЛИЧЕСТВО(*) = 1
6874;SELECT LOCATION FROM bridge WHERE name  =  'Kolob Arch' OR name  =  'Rainbow Bridge';"ВЫБРАТЬ местоположение ИЗ справочник.мосты ГДЕ наименование = ""Kolob Arch"" ИЛИ наименование = ""Rainbow Bridge"""
6875;SELECT name FROM mill WHERE name LIKE '%Moulin%';"ВЫБРАТЬ наименование ИЗ справочник.мельницы ГДЕ наименование ПОДОБНО ""%Moulin%"""
6876;SELECT DISTINCT T1.name FROM mill AS T1 JOIN architect AS t2 ON T1.architect_id  =  T2.id JOIN bridge AS T3 ON T3.architect_id  =  T2.id WHERE T3.length_meters  >  80;ВЫБРАТЬ РАЗЛИЧНЫЕ T1.наименование ИЗ справочник.мельницы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.архитекторы КАК t2 ПО T1.ссылка = T2.id ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.мосты КАК T3 ПО T3.ссылка = T2.id ГДЕ T3.длинаметры > 80
6877;SELECT TYPE ,  count(*) FROM mill GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 тип , КОЛИЧЕСТВО(*) ИЗ справочник.мельницы СГРУППИРОВАТЬ ПО тип УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
6878;"SELECT count(*) FROM architect WHERE id NOT IN ( SELECT architect_id FROM mill WHERE built_year  <  1850 );";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.архитекторы ГДЕ архитектор НЕ В ( ВЫБРАТЬ ссылка ИЗ справочник.мельницы ГДЕ годпостройки < 1850 );"
6879;SELECT t1.name FROM bridge AS t1 JOIN architect AS t2 ON t1.architect_id  =  t2.id WHERE t2.nationality  =  'American' ORDER BY t1.length_feet;"ВЫБРАТЬ t1.наименование ИЗ справочник.мосты КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.архитекторы КАК t2 ПО t1.ссылка = t2.ссылка ГДЕ t2.национальность = ""American"" УПОРЯДОЧИТЬ ПО t1.длинафуты"
6880;SELECT count(*) FROM book_club;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.книжныйклуб
6881;SELECT count(*) FROM book_club;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.книжныйклуб
6882;SELECT book_title ,  author_or_editor FROM book_club WHERE YEAR  >  1989;ВЫБРАТЬ названиекниги , авторилиредактор ИЗ справочник.книжныйклуб ГДЕ год > 1989
6883;SELECT book_title ,  author_or_editor FROM book_club WHERE YEAR  >  1989;ВЫБРАТЬ названиекниги , авторилиредактор ИЗ справочник.книжныйклуб ГДЕ год > 1989
6884;SELECT DISTINCT publisher FROM book_club;ВЫБРАТЬ РАЗЛИЧНЫЕ издательство ИЗ справочник.книжныйклуб
6885;SELECT DISTINCT publisher FROM book_club;ВЫБРАТЬ РАЗЛИЧНЫЕ издательство ИЗ справочник.книжныйклуб
6886;SELECT YEAR ,  book_title ,  publisher FROM book_club ORDER BY YEAR DESC;ВЫБРАТЬ год , названиекниги , издательство ИЗ справочник.книжныйклуб УПОРЯДОЧИТЬ ПО год УБЫВ
6887;SELECT YEAR ,  book_title ,  publisher FROM book_club ORDER BY YEAR DESC;ВЫБРАТЬ год , названиекниги , издательство ИЗ справочник.книжныйклуб УПОРЯДОЧИТЬ ПО год УБЫВ
6888;SELECT publisher ,  count(*) FROM book_club GROUP BY publisher;ВЫБРАТЬ издательство , КОЛИЧЕСТВО(*) ИЗ справочник.книжныйклуб СГРУППИРОВАТЬ ПО издательство
6889;SELECT publisher ,  count(*) FROM book_club GROUP BY publisher;ВЫБРАТЬ издательство , КОЛИЧЕСТВО(*) ИЗ справочник.книжныйклуб СГРУППИРОВАТЬ ПО издательство
6890;SELECT publisher FROM book_club GROUP BY publisher ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 издательство ИЗ справочник.книжныйклуб СГРУППИРОВАТЬ ПО издательство УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
6891;SELECT publisher FROM book_club GROUP BY publisher ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 издательство ИЗ справочник.книжныйклуб СГРУППИРОВАТЬ ПО издательство УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
6892;SELECT category ,  count(*) FROM book_club GROUP BY category;ВЫБРАТЬ категория , КОЛИЧЕСТВО(*) ИЗ справочник.книжныйклуб СГРУППИРОВАТЬ ПО категория
6893;SELECT category ,  count(*) FROM book_club GROUP BY category;ВЫБРАТЬ категория , КОЛИЧЕСТВО(*) ИЗ справочник.книжныйклуб СГРУППИРОВАТЬ ПО категория
6894;SELECT category FROM book_club WHERE YEAR  >  1989 GROUP BY category HAVING count(*)  >=  2;ВЫБРАТЬ категория ИЗ справочник.книжныйклуб ГДЕ год > 1989 СГРУППИРОВАТЬ ПО категория ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
6895;SELECT category FROM book_club WHERE YEAR  >  1989 GROUP BY category HAVING count(*)  >=  2;ВЫБРАТЬ категория ИЗ справочник.книжныйклуб ГДЕ год > 1989 СГРУППИРОВАТЬ ПО категория ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
6900;SELECT title ,  YEAR ,  director FROM movie ORDER BY budget_million;ВЫБРАТЬ название , год , режиссер ИЗ справочник.фильмы УПОРЯДОЧИТЬ ПО бюджетвмиллионах
6901;SELECT title ,  YEAR ,  director FROM movie ORDER BY budget_million;ВЫБРАТЬ название , год , режиссер ИЗ справочник.фильмы УПОРЯДОЧИТЬ ПО бюджетвмиллионах
6902;SELECT COUNT (DISTINCT director) FROM movie;ВЫБРАТЬ КОЛИЧЕСТВО (РАЗЛИЧНЫЕ режиссер) ИЗ справочник.фильмы
6903;SELECT COUNT (DISTINCT director) FROM movie;ВЫБРАТЬ КОЛИЧЕСТВО (РАЗЛИЧНЫЕ режиссер) ИЗ справочник.фильмы
6904;SELECT title ,  director FROM movie WHERE YEAR  <=  2000 ORDER BY gross_worldwide DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 название , режиссер ИЗ справочник.фильмы ГДЕ год <= 2000 УПОРЯДОЧИТЬ ПО сборыпомиру УБЫВ
6905;SELECT title ,  director FROM movie WHERE YEAR  <=  2000 ORDER BY gross_worldwide DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 название , режиссер ИЗ справочник.фильмы ГДЕ год <= 2000 УПОРЯДОЧИТЬ ПО сборыпомиру УБЫВ
6908;SELECT director FROM movie WHERE YEAR  =  1999 OR YEAR  =  2000;ВЫБРАТЬ режиссер ИЗ справочник.фильмы ГДЕ год = 1999 ИЛИ год = 2000
6909;SELECT director FROM movie WHERE YEAR  =  1999 OR YEAR  =  2000;ВЫБРАТЬ режиссер ИЗ справочник.фильмы ГДЕ год = 1999 ИЛИ год = 2000
6910;SELECT avg(budget_million) ,  max(budget_million) ,  min(budget_million) FROM movie WHERE YEAR  <  2000;ВЫБРАТЬ СРЕДНЕЕ(бюджетвмиллионах) , МАКСИМУМ(бюджетвмиллионах) , МИНИМУМ(бюджетвмиллионах) ИЗ справочник.фильмы ГДЕ год < 2000
6911;SELECT avg(budget_million) ,  max(budget_million) ,  min(budget_million) FROM movie WHERE YEAR  <  2000;ВЫБРАТЬ СРЕДНЕЕ(бюджетвмиллионах) , МАКСИМУМ(бюджетвмиллионах) , МИНИМУМ(бюджетвмиллионах) ИЗ справочник.фильмы ГДЕ год < 2000
6912;SELECT T1.company_name FROM culture_company AS T1 JOIN book_club AS T2 ON T1.book_club_id  =  T2.book_club_id WHERE T2.publisher  =  'Alyson';"ВЫБРАТЬ T1.наименование ИЗ справочник.культурныекомпании КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.книжныйклуб КАК T2 ПО T1.книжныйклуб = T2.ссылка ГДЕ T2.издательство = ""Alyson"""
6913;SELECT T1.company_name FROM culture_company AS T1 JOIN book_club AS T2 ON T1.book_club_id  =  T2.book_club_id WHERE T2.publisher  =  'Alyson';"ВЫБРАТЬ T1.наименование ИЗ справочник.культурныекомпании КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.книжныйклуб КАК T2 ПО T1.книжныйклуб = T2.ссылка ГДЕ T2.издательство = ""Alyson"""
6914;SELECT T1.title ,  T3.book_title FROM movie AS T1 JOIN culture_company AS T2 ON T1.movie_id  =  T2.movie_id JOIN book_club AS T3 ON T3.book_club_id  =  T2.book_club_id WHERE T2.incorporated_in  =  'China';"ВЫБРАТЬ T1.название , T3.названиекниги ИЗ справочник.фильмы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.культурныекомпании КАК T2 ПО T1.ссылка = T2.фильм ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.книжныйклуб КАК T3 ПО T3.ссылка = T2.книжныйклуб ГДЕ T2.странарегистрации = ""China"""
6915;SELECT T1.title ,  T3.book_title FROM movie AS T1 JOIN culture_company AS T2 ON T1.movie_id  =  T2.movie_id JOIN book_club AS T3 ON T3.book_club_id  =  T2.book_club_id WHERE T2.incorporated_in  =  'China';"ВЫБРАТЬ T1.название , T3.названиекниги ИЗ справочник.фильмы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.культурныекомпании КАК T2 ПО T1.ссылка = T2.фильм ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.книжныйклуб КАК T3 ПО T3.ссылка = T2.книжныйклуб ГДЕ T2.странарегистрации = ""China"""
6916;SELECT T2.company_name FROM movie AS T1 JOIN culture_company AS T2 ON T1.movie_id  =  T2.movie_id WHERE T1.year  =  1999;ВЫБРАТЬ T2.наименование ИЗ справочник.фильмы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.культурныекомпании КАК T2 ПО T1.ссылка = T2.фильм ГДЕ T1.год = 1999
6917;SELECT T2.company_name FROM movie AS T1 JOIN culture_company AS T2 ON T1.movie_id  =  T2.movie_id WHERE T1.year  =  1999;ВЫБРАТЬ T2.наименование ИЗ справочник.фильмы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.культурныекомпании КАК T2 ПО T1.ссылка = T2.фильм ГДЕ T1.год = 1999
6918;SELECT count(*) FROM singer;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.певцы
6919;SELECT count(*) FROM singer;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.певцы
6920;SELECT name ,  country ,  age FROM singer ORDER BY age DESC;ВЫБРАТЬ наименование , страна , возраст ИЗ справочник.певцы УПОРЯДОЧИТЬ ПО возраст УБЫВ
6921;SELECT name ,  country ,  age FROM singer ORDER BY age DESC;ВЫБРАТЬ наименование , страна , возраст ИЗ справочник.певцы УПОРЯДОЧИТЬ ПО возраст УБЫВ
6922;SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France';"ВЫБРАТЬ СРЕДНЕЕ(возраст) , МИНИМУМ(возраст) , МАКСИМУМ(возраст) ИЗ справочник.певцы ГДЕ страна = ""France"""
6923;SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France';"ВЫБРАТЬ СРЕДНЕЕ(возраст) , МИНИМУМ(возраст) , МАКСИМУМ(возраст) ИЗ справочник.певцы ГДЕ страна = ""France"""
6924;SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 названиепесни , годвыпускапесни ИЗ справочник.певцы УПОРЯДОЧИТЬ ПО возраст
6925;SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 названиепесни , годвыпускапесни ИЗ справочник.певцы УПОРЯДОЧИТЬ ПО возраст
6926;SELECT DISTINCT country FROM singer WHERE age  >  20;ВЫБРАТЬ РАЗЛИЧНЫЕ страна ИЗ справочник.певцы ГДЕ возраст > 20
6927;SELECT DISTINCT country FROM singer WHERE age  >  20;ВЫБРАТЬ РАЗЛИЧНЫЕ страна ИЗ справочник.певцы ГДЕ возраст > 20
6928;SELECT country ,  count(*) FROM singer GROUP BY country;ВЫБРАТЬ страна , КОЛИЧЕСТВО(*) ИЗ справочник.певцы СГРУППИРОВАТЬ ПО страна
6929;SELECT country ,  count(*) FROM singer GROUP BY country;ВЫБРАТЬ страна , КОЛИЧЕСТВО(*) ИЗ справочник.певцы СГРУППИРОВАТЬ ПО страна
6930;SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer);ВЫБРАТЬ song_name ИЗ справочник.певцы ГДЕ age > (ВЫБРАТЬ СРЕДНЕЕ(age) ИЗ справочник.певцы)
6931;SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer);ВЫБРАТЬ song_name ИЗ справочник.певцы ГДЕ age > (ВЫБРАТЬ СРЕДНЕЕ(age) ИЗ справочник.певцы)
6932;SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000;ВЫБРАТЬ местоположение , наименование ИЗ справочник.стадионы ГДЕ вместимость МЕЖДУ 5000 И 10000
6933;SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000;ВЫБРАТЬ местоположение , наименование ИЗ справочник.стадионы ГДЕ вместимость МЕЖДУ 5000 И 10000
6934;select max(capacity), average from stadium;select МАКСИМУМ(вместимость), средняяпосещаемость from stadium
6935;select avg(capacity) ,  max(capacity) from stadium;select СРЕДНЕЕ(вместимость) , МАКСИМУМ(вместимость) from stadium
6936;SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование , вместимость ИЗ справочник.стадионы УПОРЯДОЧИТЬ ПО средняяпосещаемость УБЫВ
6937;SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование , вместимость ИЗ справочник.стадионы УПОРЯДОЧИТЬ ПО средняяпосещаемость УБЫВ
6938;SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.концерты ГДЕ год = 2014 ИЛИ год = 2015
6939;SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.концерты ГДЕ год = 2014 ИЛИ год = 2015
6940;SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id;ВЫБРАТЬ T2.наименование , КОЛИЧЕСТВО(*) ИЗ справочник.концерты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.стадионы КАК T2 ПО T1.стадион = T2.ссылка СГРУППИРОВАТЬ ПО T1.стадион
6941;SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id;ВЫБРАТЬ T2.наименование , КОЛИЧЕСТВО(*) ИЗ справочник.концерты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.стадионы КАК T2 ПО T1.стадион = T2.ссылка СГРУППИРОВАТЬ ПО T1.стадион
6942;SELECT T2.name ,  T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  >=  2014 GROUP BY T2.stadium_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.наименование , T2.вместимость ИЗ справочник.концерты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.стадионы КАК T2 ПО T1.стадион = T2.ссылка ГДЕ T1.год >= 2014 СГРУППИРОВАТЬ ПО T2.ссылка УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
6943;select t2.name ,  t2.capacity from concert as t1 join stadium as t2 on t1.stadium_id  =  t2.stadium_id where t1.year  >  2013 group by t2.stadium_id order by count(*) desc limit 1;select t2.наименование , t2.вместимость from concert as t1 join stadium as t2 on t1.стадион = t2.ссылка where t1.год > 2013 group by t2.ссылка order by КОЛИЧЕСТВО(*) desc limit 1
6944;SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 год ИЗ справочник.концерты СГРУППИРОВАТЬ ПО год УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
6945;SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 год ИЗ справочник.концерты СГРУППИРОВАТЬ ПО год УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
6946;SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert);ВЫБРАТЬ name ИЗ справочник.стадионы ГДЕ stadium_id НЕ В (ВЫБРАТЬ stadium_id ИЗ справочник.концерты)
6947;SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert);ВЫБРАТЬ name ИЗ справочник.стадионы ГДЕ stadium_id НЕ В (ВЫБРАТЬ stadium_id ИЗ справочник.концерты)
6951;SELECT T2.concert_name ,  T2.theme ,  count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id  =  T2.concert_id GROUP BY T2.concert_id;ВЫБРАТЬ T2.наименование , T2.тема , КОЛИЧЕСТВО(*) ИЗ регистрсведений.участникиконцертов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.концерты КАК T2 ПО T1.концерт = T2.ссылка СГРУППИРОВАТЬ ПО T2.ссылка
6952;select t2.concert_name ,  t2.theme ,  count(*) from singer_in_concert as t1 join concert as t2 on t1.concert_id  =  t2.concert_id group by t2.concert_id;select t2.наименование , t2.тема , КОЛИЧЕСТВО(*) from singer_in_concert as t1 join concert as t2 on t1.концерт = t2.ссылка group by t2.ссылка
6953;SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id;ВЫБРАТЬ T2.наименование , КОЛИЧЕСТВО(*) ИЗ регистрсведений.участникиконцертов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.певцы КАК T2 ПО T1.певец = T2.ссылка СГРУППИРОВАТЬ ПО T2.ссылка
6954;SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id;ВЫБРАТЬ T2.наименование , КОЛИЧЕСТВО(*) ИЗ регистрсведений.участникиконцертов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.певцы КАК T2 ПО T1.певец = T2.ссылка СГРУППИРОВАТЬ ПО T2.ссылка
6955;SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014;ВЫБРАТЬ T2.наименование ИЗ регистрсведений.участникиконцертов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.певцы КАК T2 ПО T1.певец = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.концерты КАК T3 ПО T1.концерт = T3.ссылка ГДЕ T3.год = 2014
6956;SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014;ВЫБРАТЬ T2.наименование ИЗ регистрсведений.участникиконцертов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.певцы КАК T2 ПО T1.певец = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.концерты КАК T3 ПО T1.концерт = T3.ссылка ГДЕ T3.год = 2014
6957;SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%';"ВЫБРАТЬ наименование , страна ИЗ справочник.певцы ГДЕ названиепесни ПОДОБНО ""%Hey%"""
6958;SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%';"ВЫБРАТЬ наименование , страна ИЗ справочник.певцы ГДЕ названиепесни ПОДОБНО ""%Hey%"""
6961;select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1);select КОЛИЧЕСТВО(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1)
6962;select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1);select КОЛИЧЕСТВО(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1)
6963;SELECT count(*) FROM pets WHERE weight  >  10;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.питомцыстудентов ГДЕ weight > 10
6964;SELECT count(*) FROM pets WHERE weight  >  10;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.питомцыстудентов ГДЕ weight > 10
6965;SELECT weight FROM pets ORDER BY pet_age LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 weight ИЗ регистрсведений.питомцыстудентов УПОРЯДОЧИТЬ ПО pet_age
6966;SELECT weight FROM pets ORDER BY pet_age LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 weight ИЗ регистрсведений.питомцыстудентов УПОРЯДОЧИТЬ ПО pet_age
6967;SELECT max(weight) ,  petType FROM pets GROUP BY petType;ВЫБРАТЬ МАКСИМУМ(weight) , питомец ИЗ регистрсведений.питомцыстудентов СГРУППИРОВАТЬ ПО питомец
6968;SELECT max(weight) ,  petType FROM pets GROUP BY petType;ВЫБРАТЬ МАКСИМУМ(weight) , питомец ИЗ регистрсведений.питомцыстудентов СГРУППИРОВАТЬ ПО питомец
6969;SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.студенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.питомцы КАК T2 ПО T1.ссылка = T2.ссылка ГДЕ T1.возраст > 20
6970;SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.студенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.питомцы КАК T2 ПО T1.ссылка = T2.ссылка ГДЕ T1.возраст > 20
6971;SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog';"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.студенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.питомцы КАК T2 ПО T1.ссылка = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.питомцыстудентов КАК T3 ПО T2.типпитомца = T3.студент ГДЕ T1.пол = ""F"" И T3.питомец = ""dog"""
6972;SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog';"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.студенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.питомцы КАК T2 ПО T1.ссылка = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.питомцыстудентов КАК T3 ПО T2.типпитомца = T3.студент ГДЕ T1.пол = ""F"" И T3.питомец = ""dog"""
6973;SELECT count(DISTINCT pettype) FROM pets;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ питомец) ИЗ регистрсведений.питомцыстудентов
6974;SELECT count(DISTINCT pettype) FROM pets;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ питомец) ИЗ регистрсведений.питомцыстудентов
6975;SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog';"ВЫБРАТЬ РАЗЛИЧНЫЕ T1.имя ИЗ справочник.студенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.питомцы КАК T2 ПО T1.ссылка = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.питомцыстудентов КАК T3 ПО T3.студент = T2.типпитомца ГДЕ T3.питомец = ""cat"" ИЛИ T3.питомец = ""dog"""
6976;SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog';"ВЫБРАТЬ РАЗЛИЧНЫЕ T1.имя ИЗ справочник.студенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.питомцы КАК T2 ПО T1.ссылка = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.питомцыстудентов КАК T3 ПО T3.студент = T2.типпитомца ГДЕ T3.питомец = ""cat"" ИЛИ T3.питомец = ""dog"""
6977;select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype  =  'cat' intersect select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype  =  'dog';"select t1.имя from student as t1 join has_pet as t2 on t1.ссылка = t2.ссылка join pets as t3 on t3.студент = t2.типпитомца where t3.питомец = ""cat"" intersect select t1.имя from student as t1 join has_pet as t2 on t1.ссылка = t2.ссылка join pets as t3 on t3.студент = t2.типпитомца where t3.питомец = ""dog"""
6979;SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat');"ВЫБРАТЬ major , age ИЗ справочник.студенты ГДЕ stuid НЕ В (ВЫБРАТЬ T1.ссылка ИЗ справочник.студенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.питомцы КАК T2 ПО T1.ссылка = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.питомцыстудентов КАК T3 ПО T3.студент = T2.типпитомца ГДЕ T3.питомец = ""cat"")"
6980;SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat');"ВЫБРАТЬ major , age ИЗ справочник.студенты ГДЕ stuid НЕ В (ВЫБРАТЬ T1.ссылка ИЗ справочник.студенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.питомцы КАК T2 ПО T1.ссылка = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.питомцыстудентов КАК T3 ПО T3.студент = T2.типпитомца ГДЕ T3.питомец = ""cat"")"
6983;SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat');"ВЫБРАТЬ T1.имя , T1.возраст ИЗ справочник.студенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.питомцы КАК T2 ПО T1.ссылка = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.питомцыстудентов КАК T3 ПО T3.студент = T2.типпитомца ГДЕ T3.питомец = ""dog"" И T1.ссылка НЕ В (ВЫБРАТЬ T1.ссылка ИЗ справочник.студенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.питомцы КАК T2 ПО T1.ссылка = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.питомцыстудентов КАК T3 ПО T3.студент = T2.типпитомца ГДЕ T3.питомец = ""cat"")"
6984;SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat');"ВЫБРАТЬ T1.имя , T1.возраст ИЗ справочник.студенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.питомцы КАК T2 ПО T1.ссылка = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.питомцыстудентов КАК T3 ПО T3.студент = T2.типпитомца ГДЕ T3.питомец = ""dog"" И T1.ссылка НЕ В (ВЫБРАТЬ T1.ссылка ИЗ справочник.студенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.питомцы КАК T2 ПО T1.ссылка = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.питомцыстудентов КАК T3 ПО T3.студент = T2.типпитомца ГДЕ T3.питомец = ""cat"")"
6985;SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 питомец , weight ИЗ регистрсведений.питомцыстудентов УПОРЯДОЧИТЬ ПО pet_age
6986;SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 питомец , weight ИЗ регистрсведений.питомцыстудентов УПОРЯДОЧИТЬ ПО pet_age
6987;SELECT petid ,  weight FROM pets WHERE pet_age  >  1;ВЫБРАТЬ студент , weight ИЗ регистрсведений.питомцыстудентов ГДЕ pet_age > 1
6988;SELECT petid ,  weight FROM pets WHERE pet_age  >  1;ВЫБРАТЬ студент , weight ИЗ регистрсведений.питомцыстудентов ГДЕ pet_age > 1
6989;SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype;ВЫБРАТЬ СРЕДНЕЕ(pet_age) , МАКСИМУМ(pet_age) , питомец ИЗ регистрсведений.питомцыстудентов СГРУППИРОВАТЬ ПО питомец
6990;SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype;ВЫБРАТЬ СРЕДНЕЕ(pet_age) , МАКСИМУМ(pet_age) , питомец ИЗ регистрсведений.питомцыстудентов СГРУППИРОВАТЬ ПО питомец
6991;SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype;ВЫБРАТЬ СРЕДНЕЕ(weight) , питомец ИЗ регистрсведений.питомцыстудентов СГРУППИРОВАТЬ ПО питомец
6992;SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype;ВЫБРАТЬ СРЕДНЕЕ(weight) , питомец ИЗ регистрсведений.питомцыстудентов СГРУППИРОВАТЬ ПО питомец
6993;SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid;ВЫБРАТЬ РАЗЛИЧНЫЕ T1.имя , T1.возраст ИЗ справочник.студенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.питомцы КАК T2 ПО T1.ссылка = T2.ссылка
6994;SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid;ВЫБРАТЬ РАЗЛИЧНЫЕ T1.имя , T1.возраст ИЗ справочник.студенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.питомцы КАК T2 ПО T1.ссылка = T2.ссылка
6995;SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith';"ВЫБРАТЬ T2.типпитомца ИЗ справочник.студенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.питомцы КАК T2 ПО T1.ссылка = T2.ссылка ГДЕ T1.фамилия = ""Smith"""
6996;SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith';"ВЫБРАТЬ T2.типпитомца ИЗ справочник.студенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.питомцы КАК T2 ПО T1.ссылка = T2.ссылка ГДЕ T1.фамилия = ""Smith"""
6997;SELECT count(*) ,  T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid;ВЫБРАТЬ КОЛИЧЕСТВО(*) , T1.ссылка ИЗ справочник.студенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.питомцы КАК T2 ПО T1.ссылка = T2.ссылка СГРУППИРОВАТЬ ПО T1.ссылка
6998;select count(*) ,  t1.stuid from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid group by t1.stuid;select КОЛИЧЕСТВО(*) , t1.ссылка from student as t1 join has_pet as t2 on t1.ссылка = t2.ссылка group by t1.ссылка
6999;SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1;ВЫБРАТЬ T1.имя , T1.пол ИЗ справочник.студенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.питомцы КАК T2 ПО T1.ссылка = T2.ссылка СГРУППИРОВАТЬ ПО T1.ссылка ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 1
7000;SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1;ВЫБРАТЬ T1.имя , T1.пол ИЗ справочник.студенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.питомцы КАК T2 ПО T1.ссылка = T2.ссылка СГРУППИРОВАТЬ ПО T1.ссылка ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 1
7001;SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat';"ВЫБРАТЬ T1.фамилия ИЗ справочник.студенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.питомцы КАК T2 ПО T1.ссылка = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.питомцыстудентов КАК T3 ПО T3.студент = T2.типпитомца ГДЕ T3.pet_age = 3 И T3.питомец = ""cat"""
7002;SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat';"ВЫБРАТЬ T1.фамилия ИЗ справочник.студенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.питомцы КАК T2 ПО T1.ссылка = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.питомцыстудентов КАК T3 ПО T3.студент = T2.типпитомца ГДЕ T3.pet_age = 3 И T3.питомец = ""cat"""
7003;select avg(age) from student where stuid not in (select stuid from has_pet);select СРЕДНЕЕ(age) from student where stuid not in (select stuid from has_pet)
7004;select avg(age) from student where stuid not in (select stuid from has_pet);select СРЕДНЕЕ(age) from student where stuid not in (select stuid from has_pet)
7005;"SELECT count(*) FROM CONTINENTS;";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.континенты;"
7006;"SELECT count(*) FROM CONTINENTS;";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.континенты;"
7007;"SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;";"ВЫБРАТЬ T1.ссылка , T1.наименование , КОЛИЧЕСТВО(*) ИЗ справочник.континенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.страны КАК T2 ПО T1.ссылка = T2.континентсправочник СГРУППИРОВАТЬ ПО T1.ссылка;"
7008;"SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;";"ВЫБРАТЬ T1.ссылка , T1.наименование , КОЛИЧЕСТВО(*) ИЗ справочник.континенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.страны КАК T2 ПО T1.ссылка = T2.континентсправочник СГРУППИРОВАТЬ ПО T1.ссылка;"
7009;"SELECT count(*) FROM COUNTRIES;";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.страны;"
7010;"SELECT count(*) FROM COUNTRIES;";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.страны;"
7011;"SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;";"ВЫБРАТЬ T1.полноенаименование , T1.ссылка , КОЛИЧЕСТВО(*) ИЗ справочник.производителиавто КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.моделиавто КАК T2 ПО T1.ссылка = T2.производитель СГРУППИРОВАТЬ ПО T1.ссылка;"
7012;"SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;";"ВЫБРАТЬ T1.полноенаименование , T1.ссылка , КОЛИЧЕСТВО(*) ИЗ справочник.производителиавто КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.моделиавто КАК T2 ПО T1.ссылка = T2.производитель СГРУППИРОВАТЬ ПО T1.ссылка;"
7013;"SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;";"ВЫБРАТЬ T1.модель ИЗ справочник.названияавто КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.характеристикиавто КАК T2 ПО T1.производительid = T2.ссылка УПОРЯДОЧИТЬ ПО T2.мощность ВОЗР LIMIT 1;"
7014;"SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;";"ВЫБРАТЬ T1.модель ИЗ справочник.названияавто КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.характеристикиавто КАК T2 ПО T1.производительid = T2.ссылка УПОРЯДОЧИТЬ ПО T2.мощность ВОЗР LIMIT 1;"
7015;SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA);ВЫБРАТЬ T1.модель ИЗ справочник.названияавто КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.характеристикиавто КАК T2 ПО T1.производительid = T2.ссылка ГДЕ T2.вес < (ВЫБРАТЬ СРЕДНЕЕ(Weight) ИЗ регистрсведений.характеристикиавто)
7016;SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA);ВЫБРАТЬ T1.модель ИЗ справочник.названияавто КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.характеристикиавто КАК T2 ПО T1.производительid = T2.ссылка ГДЕ T2.вес < (ВЫБРАТЬ СРЕДНЕЕ(Weight) ИЗ регистрсведений.характеристикиавто)
7017;"SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';";"ВЫБРАТЬ РАЗЛИЧНЫЕ T1.наименование ИЗ справочник.производителиавто КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.моделиавто КАК T2 ПО T1.ссылка = T2.производитель ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.названияавто КАК T3 ПО T2.модель = T3.модель ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.характеристикиавто КАК T4 ПО T3.производительid = T4.ссылка ГДЕ T4.год = ""1970"";"
7018;"SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';";"ВЫБРАТЬ РАЗЛИЧНЫЕ T1.наименование ИЗ справочник.производителиавто КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.моделиавто КАК T2 ПО T1.ссылка = T2.производитель ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.названияавто КАК T3 ПО T2.модель = T3.модель ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.характеристикиавто КАК T4 ПО T3.производительid = T4.ссылка ГДЕ T4.год = ""1970"";"
7019;"SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);";"ВЫБРАТЬ T2.производитель , T1.год ИЗ регистрсведений.характеристикиавто КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.названияавто КАК T2 ПО T1.ссылка = T2.производительid ГДЕ T1.год = (ВЫБРАТЬ МИНИМУМ(YEAR) ИЗ регистрсведений.характеристикиавто);"
7020;"SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);";"ВЫБРАТЬ T2.производитель , T1.год ИЗ регистрсведений.характеристикиавто КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.названияавто КАК T2 ПО T1.ссылка = T2.производительid ГДЕ T1.год = (ВЫБРАТЬ МИНИМУМ(YEAR) ИЗ регистрсведений.характеристикиавто);"
7021;"SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;";"ВЫБРАТЬ РАЗЛИЧНЫЕ T1.модель ИЗ справочник.моделиавто КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.названияавто КАК T2 ПО T1.модель = T2.модель ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.характеристикиавто КАК T3 ПО T2.производительid = T3.ссылка ГДЕ T3.год > 1980;"
7022;"SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;";"ВЫБРАТЬ РАЗЛИЧНЫЕ T1.модель ИЗ справочник.моделиавто КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.названияавто КАК T2 ПО T1.модель = T2.модель ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.характеристикиавто КАК T3 ПО T2.производительid = T3.ссылка ГДЕ T3.год > 1980;"
7023;"SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;";"ВЫБРАТЬ T1.наименование , КОЛИЧЕСТВО(*) ИЗ справочник.континенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.страны КАК T2 ПО T1.ссылка = T2.континентсправочник ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.производителиавто КАК T3 ПО T2.ссылка = T3.страна СГРУППИРОВАТЬ ПО T1.наименование;"
7024;"SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;";"ВЫБРАТЬ T1.наименование , КОЛИЧЕСТВО(*) ИЗ справочник.континенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.страны КАК T2 ПО T1.ссылка = T2.континентсправочник ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.производителиавто КАК T3 ПО T2.ссылка = T3.страна СГРУППИРОВАТЬ ПО T1.наименование;"
7025;"SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;";"ВЫБРАТЬ T2.наименование ИЗ справочник.производителиавто КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.страны КАК T2 ПО T1.страна = T2.ссылка СГРУППИРОВАТЬ ПО T1.страна УПОРЯДОЧИТЬ ПО Count(*) УБЫВ LIMIT 1;"
7026;"SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;";"ВЫБРАТЬ T2.наименование ИЗ справочник.производителиавто КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.страны КАК T2 ПО T1.страна = T2.ссылка СГРУППИРОВАТЬ ПО T1.страна УПОРЯДОЧИТЬ ПО Count(*) УБЫВ LIMIT 1;"
7027;"select count(*) ,  t2.fullname from model_list as t1 join car_makers as t2 on t1.maker  =  t2.id group by t2.id;";"select КОЛИЧЕСТВО(*) , t2.полноенаименование from model_list as t1 join car_makers as t2 on t1.производитель = t2.ссылка group by t2.ссылка;"
7028;"SELECT Count(*) ,  T2.FullName ,  T2.id FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id GROUP BY T2.id;";"ВЫБРАТЬ Count(*) , T2.полноенаименование , T2.ссылка ИЗ справочник.моделиавто КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.производителиавто КАК T2 ПО T1.производитель = T2.ссылка СГРУППИРОВАТЬ ПО T2.ссылка;"
7029;"SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';";"ВЫБРАТЬ T1.ускорение ИЗ регистрсведений.характеристикиавто КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.названияавто КАК T2 ПО T1.ссылка = T2.производительid ГДЕ T2.производитель = ""amc hornet sportabout (sw)"";"
7030;"SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';";"ВЫБРАТЬ T1.ускорение ИЗ регистрсведений.характеристикиавто КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.названияавто КАК T2 ПО T1.ссылка = T2.производительid ГДЕ T2.производитель = ""amc hornet sportabout (sw)"";"
7031;"SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.производителиавто КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.страны КАК T2 ПО T1.страна = T2.ссылка ГДЕ T2.наименование = ""france"";"
7032;"SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.производителиавто КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.страны КАК T2 ПО T1.страна = T2.ссылка ГДЕ T2.наименование = ""france"";"
7033;"SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.моделиавто КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.производителиавто КАК T2 ПО T1.производитель = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.страны КАК T3 ПО T2.страна = T3.ссылка ГДЕ T3.наименование = ""usa"";"
7034;"SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.моделиавто КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.производителиавто КАК T2 ПО T1.производитель = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.страны КАК T3 ПО T2.страна = T3.ссылка ГДЕ T3.наименование = ""usa"";"
7035;"SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;";"ВЫБРАТЬ СРЕДНЕЕ(расходтоплива) ИЗ регистрсведений.характеристикиавто ГДЕ цилиндров = 4;"
7036;"SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;";"ВЫБРАТЬ СРЕДНЕЕ(расходтоплива) ИЗ регистрсведений.характеристикиавто ГДЕ цилиндров = 4;"
7037;select min(weight) from cars_data where cylinders  =  8 and year  =  1974;select МИНИМУМ(вес) from cars_data where цилиндров = 8 and год = 1974
7038;select min(weight) from cars_data where cylinders  =  8 and year  =  1974;select МИНИМУМ(вес) from cars_data where цилиндров = 8 and год = 1974
7039;"SELECT Maker ,  Model FROM MODEL_LIST;";"ВЫБРАТЬ производитель , модель ИЗ справочник.моделиавто;"
7040;"SELECT Maker ,  Model FROM MODEL_LIST;";"ВЫБРАТЬ производитель , модель ИЗ справочник.моделиавто;"
7041;"SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;";"ВЫБРАТЬ T1.наименование , T1.ссылка ИЗ справочник.страны КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.производителиавто КАК T2 ПО T1.ссылка = T2.страна СГРУППИРОВАТЬ ПО T1.ссылка ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 1;"
7042;"SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;";"ВЫБРАТЬ T1.наименование , T1.ссылка ИЗ справочник.страны КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.производителиавто КАК T2 ПО T1.ссылка = T2.страна СГРУППИРОВАТЬ ПО T1.ссылка ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 1;"
7043;"SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.характеристикиавто ГДЕ мощность > 150;"
7044;"SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.характеристикиавто ГДЕ мощность > 150;"
7045;"SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;";"ВЫБРАТЬ СРЕДНЕЕ(вес) , год FROM CARS_DATA СГРУППИРОВАТЬ ПО год;"
7046;"SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;";"ВЫБРАТЬ СРЕДНЕЕ(вес) , год FROM CARS_DATA СГРУППИРОВАТЬ ПО год;"
7047;"SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;";"ВЫБРАТЬ T1.наименование ИЗ справочник.страны КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.континенты КАК T2 ПО T1.континентсправочник = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.производителиавто КАК T3 ПО T1.ссылка = T3.страна ГДЕ T2.наименование = ""europe"" СГРУППИРОВАТЬ ПО T1.наименование ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 3;"
7048;"SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;";"ВЫБРАТЬ T1.наименование ИЗ справочник.страны КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.континенты КАК T2 ПО T1.континентсправочник = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.производителиавто КАК T3 ПО T1.ссылка = T3.страна ГДЕ T2.наименование = ""europe"" СГРУППИРОВАТЬ ПО T1.наименование ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 3;"
7049;"SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;";"ВЫБРАТЬ T2.мощность , T1.производитель ИЗ справочник.названияавто КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.характеристикиавто КАК T2 ПО T1.производительid = T2.ссылка ГДЕ T2.цилиндров = 3 УПОРЯДОЧИТЬ ПО T2.мощность УБЫВ LIMIT 1;"
7050;"SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;";"ВЫБРАТЬ T2.мощность , T1.производитель ИЗ справочник.названияавто КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.характеристикиавто КАК T2 ПО T1.производительid = T2.ссылка ГДЕ T2.цилиндров = 3 УПОРЯДОЧИТЬ ПО T2.мощность УБЫВ LIMIT 1;"
7051;"SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.mpg DESC LIMIT 1;";"ВЫБРАТЬ T1.модель ИЗ справочник.названияавто КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.характеристикиавто КАК T2 ПО T1.производительid = T2.ссылка УПОРЯДОЧИТЬ ПО T2.расходтоплива УБЫВ LIMIT 1;"
7052;"select t1.model from car_names as t1 join cars_data as t2 on t1.makeid  =  t2.id order by t2.mpg desc limit 1;";"select t1.модель from car_names as t1 join cars_data as t2 on t1.производительid = t2.ссылка order by t2.расходтоплива desc limit 1;"
7053;"SELECT avg(horsepower) FROM CARS_DATA WHERE YEAR  <  1980;";"ВЫБРАТЬ СРЕДНЕЕ(мощность) ИЗ регистрсведений.характеристикиавто ГДЕ год < 1980;"
7054;"select avg(horsepower) from cars_data where year  <  1980;";"select СРЕДНЕЕ(мощность) from cars_data where год < 1980;"
7055;"SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';";"ВЫБРАТЬ СРЕДНЕЕ(T2.объемдвигателя) ИЗ справочник.названияавто КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.характеристикиавто КАК T2 ПО T1.производительid = T2.ссылка ГДЕ T1.модель = ""volvo"";"
7056;"SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';";"ВЫБРАТЬ СРЕДНЕЕ(T2.объемдвигателя) ИЗ справочник.названияавто КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.характеристикиавто КАК T2 ПО T1.производительid = T2.ссылка ГДЕ T1.модель = ""volvo"";"
7057;"SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;";"ВЫБРАТЬ МАКСИМУМ(ускорение) , цилиндров ИЗ регистрсведений.характеристикиавто СГРУППИРОВАТЬ ПО цилиндров;"
7058;"SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;";"ВЫБРАТЬ МАКСИМУМ(ускорение) , цилиндров ИЗ регистрсведений.характеристикиавто СГРУППИРОВАТЬ ПО цилиндров;"
7059;"SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;";"ВЫБРАТЬ модель ИЗ справочник.названияавто СГРУППИРОВАТЬ ПО модель УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ LIMIT 1;"
7060;"SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;";"ВЫБРАТЬ модель ИЗ справочник.названияавто СГРУППИРОВАТЬ ПО модель УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ LIMIT 1;"
7061;"SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.характеристикиавто ГДЕ цилиндров > 4;"
7062;"SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.характеристикиавто ГДЕ цилиндров > 4;"
7063;"SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.характеристикиавто ГДЕ год = 1980;"
7064;"SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.характеристикиавто ГДЕ год = 1980;"
7065;"SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.производителиавто КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.моделиавто КАК T2 ПО T1.ссылка = T2.производитель ГДЕ T1.полноенаименование = ""American Motor Company"";"
7066;"SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.производителиавто КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.моделиавто КАК T2 ПО T1.ссылка = T2.производитель ГДЕ T1.полноенаименование = ""American Motor Company"";"
7067;"SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;";"ВЫБРАТЬ T1.полноенаименование , T1.ссылка ИЗ справочник.производителиавто КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.моделиавто КАК T2 ПО T1.ссылка = T2.производитель СГРУППИРОВАТЬ ПО T1.ссылка ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 3;"
7068;"SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;";"ВЫБРАТЬ T1.полноенаименование , T1.ссылка ИЗ справочник.производителиавто КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.моделиавто КАК T2 ПО T1.ссылка = T2.производитель СГРУППИРОВАТЬ ПО T1.ссылка ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 3;"
7069;"SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;";"ВЫБРАТЬ РАЗЛИЧНЫЕ T2.модель ИЗ справочник.названияавто КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.моделиавто КАК T2 ПО T1.модель = T2.модель ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.производителиавто КАК T3 ПО T2.производитель = T3.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.характеристикиавто КАК T4 ПО T1.производительid = T4.ссылка ГДЕ T3.полноенаименование = ""General Motors"" ИЛИ T4.вес > 3500;"
7070;"SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;";"ВЫБРАТЬ РАЗЛИЧНЫЕ T2.модель ИЗ справочник.названияавто КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.моделиавто КАК T2 ПО T1.модель = T2.модель ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.производителиавто КАК T3 ПО T2.производитель = T3.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.характеристикиавто КАК T4 ПО T1.производительid = T4.ссылка ГДЕ T3.полноенаименование = ""General Motors"" ИЛИ T4.вес > 3500;"
7071;"select distinct year from cars_data where weight between 3000 and 4000;";"select distinct год from cars_data where вес between 3000 and 4000;"
7072;"select distinct year from cars_data where weight between 3000 and 4000;";"select distinct год from cars_data where вес between 3000 and 4000;"
7073;"SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;";"ВЫБРАТЬ T1.мощность ИЗ регистрсведений.характеристикиавто КАК T1 УПОРЯДОЧИТЬ ПО T1.ускорение УБЫВ LIMIT 1;"
7074;"SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;";"ВЫБРАТЬ T1.мощность ИЗ регистрсведений.характеристикиавто КАК T1 УПОРЯДОЧИТЬ ПО T1.ускорение УБЫВ LIMIT 1;"
7075;"SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;";"ВЫБРАТЬ T1.цилиндров ИЗ регистрсведений.характеристикиавто КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.названияавто КАК T2 ПО T1.ссылка = T2.производительid ГДЕ T2.модель = ""volvo"" УПОРЯДОЧИТЬ ПО T1.ускорение ВОЗР LIMIT 1;"
7076;"SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;";"ВЫБРАТЬ T1.цилиндров ИЗ регистрсведений.характеристикиавто КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.названияавто КАК T2 ПО T1.ссылка = T2.производительid ГДЕ T2.модель = ""volvo"" УПОРЯДОЧИТЬ ПО T1.ускорение ВОЗР LIMIT 1;"
7077;"SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.характеристикиавто ГДЕ Accelerate > ( ВЫБРАТЬ Accelerate ИЗ регистрсведений.характеристикиавто УПОРЯДОЧИТЬ ПО Horsepower УБЫВ LIMIT 1 );"
7078;"SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.характеристикиавто ГДЕ Accelerate > ( ВЫБРАТЬ Accelerate ИЗ регистрсведений.характеристикиавто УПОРЯДОЧИТЬ ПО Horsepower УБЫВ LIMIT 1 );"
7079;select count(*) from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  2;select КОЛИЧЕСТВО(*) from countries as t1 join car_makers as t2 on t1.ссылка = t2.страна group by t1.ссылка having КОЛИЧЕСТВО(*) > 2
7080;select count(*) from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  2;select КОЛИЧЕСТВО(*) from countries as t1 join car_makers as t2 on t1.ссылка = t2.страна group by t1.ссылка having КОЛИЧЕСТВО(*) > 2
7081;"SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.характеристикиавто ГДЕ цилиндров > 6;"
7082;"SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.характеристикиавто ГДЕ цилиндров > 6;"
7083;"SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;";"ВЫБРАТЬ T1.модель ИЗ справочник.названияавто КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.характеристикиавто КАК T2 ПО T1.производительid = T2.ссылка ГДЕ T2.цилиндров = 4 УПОРЯДОЧИТЬ ПО T2.мощность УБЫВ LIMIT 1;"
7084;"SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;";"ВЫБРАТЬ T1.модель ИЗ справочник.названияавто КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.характеристикиавто КАК T2 ПО T1.производительid = T2.ссылка ГДЕ T2.цилиндров = 4 УПОРЯДОЧИТЬ ПО T2.мощность УБЫВ LIMIT 1;"
7085;"SELECT T2.MakeId ,  T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Horsepower  >  (SELECT min(Horsepower) FROM CARS_DATA) AND T1.Cylinders  <=  3;";"ВЫБРАТЬ T2.производительid , T2.производитель ИЗ регистрсведений.характеристикиавто КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.названияавто КАК T2 ПО T1.ссылка = T2.производительid ГДЕ T1.мощность > (ВЫБРАТЬ МИНИМУМ(Horsepower) ИЗ регистрсведений.характеристикиавто) И T1.цилиндров <= 3;"
7086;"select t2.makeid ,  t2.make from cars_data as t1 join car_names as t2 on t1.id  =  t2.makeid where t1.horsepower  >  (select min(horsepower) from cars_data) and t1.cylinders  <  4;";"select t2.производительid , t2.производитель from cars_data as t1 join car_names as t2 on t1.ссылка = t2.производительid where t1.мощность > (select МИНИМУМ(horsepower) from cars_data) and t1.цилиндров < 4;"
7087;select max(mpg) from cars_data where cylinders  =  8 or year  <  1980;select МАКСИМУМ(расходтоплива) from cars_data where цилиндров = 8 or год < 1980
7088;select max(mpg) from cars_data where cylinders  =  8 or year  <  1980;select МАКСИМУМ(расходтоплива) from cars_data where цилиндров = 8 or год < 1980
7089;"SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';";"ВЫБРАТЬ РАЗЛИЧНЫЕ T1.модель ИЗ справочник.моделиавто КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.названияавто КАК T2 ПО T1.модель = T2.модель ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.характеристикиавто КАК T3 ПО T2.производительid = T3.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.производителиавто КАК T4 ПО T1.производитель = T4.ссылка ГДЕ T3.вес < 3500 И T4.полноенаименование <> ""Ford Motor Company"";"
7090;"SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';";"ВЫБРАТЬ РАЗЛИЧНЫЕ T1.модель ИЗ справочник.моделиавто КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.названияавто КАК T2 ПО T1.модель = T2.модель ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.характеристикиавто КАК T3 ПО T2.производительid = T3.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.производителиавто КАК T4 ПО T1.производитель = T4.ссылка ГДЕ T3.вес < 3500 И T4.полноенаименование <> ""Ford Motor Company"";"
7093;"select t1.id ,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker group by t1.id having count(*)  >=  2 intersect select t1.id ,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker join car_names as t3 on t2.model  =  t3.model group by t1.id having count(*)  >  3;";"select t1.ссылка , t1.наименование from car_makers as t1 join model_list as t2 on t1.ссылка = t2.производитель group by t1.ссылка having КОЛИЧЕСТВО(*) >= 2 intersect select t1.ссылка , t1.наименование from car_makers as t1 join model_list as t2 on t1.ссылка = t2.производитель join car_names as t3 on t2.модель = t3.модель group by t1.ссылка having КОЛИЧЕСТВО(*) > 3;"
7095;"SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.countryId HAVING count(*)  >  3 UNION SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country JOIN MODEL_LIST AS T3 ON T2.Id  =  T3.Maker WHERE T3.Model  =  'fiat';";"ВЫБРАТЬ T1.ссылка , T1.наименование ИЗ справочник.страны КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.производителиавто КАК T2 ПО T1.ссылка = T2.страна СГРУППИРОВАТЬ ПО T1.ссылка ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 3 ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ T1.ссылка , T1.наименование ИЗ справочник.страны КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.производителиавто КАК T2 ПО T1.ссылка = T2.страна ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.моделиавто КАК T3 ПО T2.ссылка = T3.производитель ГДЕ T3.модель = ""fiat"";"
7096;"select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  3 union select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country join model_list as t3 on t2.id  =  t3.maker where t3.model  =  'fiat';";"select t1.ссылка , t1.наименование from countries as t1 join car_makers as t2 on t1.ссылка = t2.страна group by t1.ссылка having КОЛИЧЕСТВО(*) > 3 union select t1.ссылка , t1.наименование from countries as t1 join car_makers as t2 on t1.ссылка = t2.страна join model_list as t3 on t2.ссылка = t3.производитель where t3.модель = ""fiat"";"
7097;"SELECT Country FROM AIRLINES WHERE Airline  =  ""JetBlue Airways""";"ВЫБРАТЬ страна ИЗ справочник.авиалинии ГДЕ наименование = ""JetBlue Airways"""
7098;"SELECT Country FROM AIRLINES WHERE Airline  =  ""JetBlue Airways""";"ВЫБРАТЬ страна ИЗ справочник.авиалинии ГДЕ наименование = ""JetBlue Airways"""
7099;"SELECT Abbreviation FROM AIRLINES WHERE Airline  =  ""JetBlue Airways""";"ВЫБРАТЬ аббревиатура ИЗ справочник.авиалинии ГДЕ наименование = ""JetBlue Airways"""
7100;"SELECT Abbreviation FROM AIRLINES WHERE Airline  =  ""JetBlue Airways""";"ВЫБРАТЬ аббревиатура ИЗ справочник.авиалинии ГДЕ наименование = ""JetBlue Airways"""
7101;"SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  ""USA""";"ВЫБРАТЬ наименование , аббревиатура ИЗ справочник.авиалинии ГДЕ страна = ""USA"""
7102;"SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  ""USA""";"ВЫБРАТЬ наименование , аббревиатура ИЗ справочник.авиалинии ГДЕ страна = ""USA"""
7103;"SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  ""Anthony""";"ВЫБРАТЬ кодаэропорта , наименование ИЗ справочник.аэропорты ГДЕ город = ""Anthony"""
7104;"SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  ""Anthony""";"ВЫБРАТЬ кодаэропорта , наименование ИЗ справочник.аэропорты ГДЕ город = ""Anthony"""
7105;SELECT count(*) FROM AIRLINES;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.авиалинии
7106;SELECT count(*) FROM AIRLINES;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.авиалинии
7107;SELECT count(*) FROM AIRPORTS;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.аэропорты
7108;SELECT count(*) FROM AIRPORTS;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.аэропорты
7109;SELECT count(*) FROM FLIGHTS;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.рейсы
7110;SELECT count(*) FROM FLIGHTS;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.рейсы
7111;"SELECT Airline FROM AIRLINES WHERE Abbreviation  =  ""UAL""";"ВЫБРАТЬ наименование ИЗ справочник.авиалинии ГДЕ аббревиатура = ""UAL"""
7112;"SELECT Airline FROM AIRLINES WHERE Abbreviation  =  ""UAL""";"ВЫБРАТЬ наименование ИЗ справочник.авиалинии ГДЕ аббревиатура = ""UAL"""
7113;"SELECT count(*) FROM AIRLINES WHERE Country  =  ""USA""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.авиалинии ГДЕ страна = ""USA"""
7114;"SELECT count(*) FROM AIRLINES WHERE Country  =  ""USA""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.авиалинии ГДЕ страна = ""USA"""
7115;"SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  ""Alton""";"ВЫБРАТЬ город , страна ИЗ справочник.аэропорты ГДЕ наименование = ""Alton"""
7116;"SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  ""Alton""";"ВЫБРАТЬ город , страна ИЗ справочник.аэропорты ГДЕ наименование = ""Alton"""
7117;"SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  ""AKO""";"ВЫБРАТЬ наименование ИЗ справочник.аэропорты ГДЕ кодаэропорта = ""AKO"""
7118;"SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  ""AKO""";"ВЫБРАТЬ наименование ИЗ справочник.аэропорты ГДЕ кодаэропорта = ""AKO"""
7119;"SELECT AirportName FROM AIRPORTS WHERE City = ""Aberdeen""";"ВЫБРАТЬ наименование ИЗ справочник.аэропорты ГДЕ город = ""Aberdeen"""
7120;"SELECT AirportName FROM AIRPORTS WHERE City = ""Aberdeen""";"ВЫБРАТЬ наименование ИЗ справочник.аэропорты ГДЕ город = ""Aberdeen"""
7121;"SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  ""APG""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.рейсы ГДЕ аэропортотправления = ""APG"""
7122;"SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  ""APG""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.рейсы ГДЕ аэропортотправления = ""APG"""
7123;"SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  ""ATO""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.рейсы ГДЕ аэропортназначения = ""ATO"""
7124;"SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  ""ATO""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.рейсы ГДЕ аэропортназначения = ""ATO"""
7125;"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  ""Aberdeen""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.рейсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.аэропорты КАК T2 ПО T1.аэропортотправления = T2.кодаэропорта ГДЕ T2.город = ""Aberdeen"""
7126;"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  ""Aberdeen""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.рейсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.аэропорты КАК T2 ПО T1.аэропортотправления = T2.кодаэропорта ГДЕ T2.город = ""Aberdeen"""
7127;"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  ""Aberdeen""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.рейсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.аэропорты КАК T2 ПО T1.аэропортназначения = T2.кодаэропорта ГДЕ T2.город = ""Aberdeen"""
7128;"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  ""Aberdeen""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.рейсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.аэропорты КАК T2 ПО T1.аэропортназначения = T2.кодаэропорта ГДЕ T2.город = ""Aberdeen"""
7129;"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  ""Ashley"" AND T3.City  =  ""Aberdeen""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.рейсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.аэропорты КАК T2 ПО T1.аэропортназначения = T2.кодаэропорта ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.аэропорты КАК T3 ПО T1.аэропортотправления = T3.кодаэропорта ГДЕ T2.город = ""Ashley"" И T3.город = ""Aberdeen"""
7130;"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  ""Ashley"" AND T3.City  =  ""Aberdeen""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.рейсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.аэропорты КАК T2 ПО T1.аэропортназначения = T2.кодаэропорта ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.аэропорты КАК T3 ПО T1.аэропортотправления = T3.кодаэропорта ГДЕ T2.город = ""Ashley"" И T3.город = ""Aberdeen"""
7131;"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = ""JetBlue Airways""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.рейсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.авиалинии КАК T2 ПО T1.авиалиния = T2.ссылка ГДЕ T2.наименование = ""JetBlue Airways"""
7132;"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = ""JetBlue Airways""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.рейсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.авиалинии КАК T2 ПО T1.авиалиния = T2.ссылка ГДЕ T2.наименование = ""JetBlue Airways"""
7133;"SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  ""United Airlines"" AND T2.DestAirport  =  ""ASY""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.авиалинии КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.рейсы КАК T2 ПО T2.авиалиния = T1.ссылка ГДЕ T1.наименование = ""United Airlines"" И T2.аэропортназначения = ""ASY"""
7134;"SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  ""United Airlines"" AND T2.DestAirport  =  ""ASY""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.авиалинии КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.рейсы КАК T2 ПО T2.авиалиния = T1.ссылка ГДЕ T1.наименование = ""United Airlines"" И T2.аэропортназначения = ""ASY"""
7135;"SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  ""United Airlines"" AND T2.SourceAirport  =  ""AHD""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.авиалинии КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.рейсы КАК T2 ПО T2.авиалиния = T1.ссылка ГДЕ T1.наименование = ""United Airlines"" И T2.аэропортотправления = ""AHD"""
7136;"SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  ""United Airlines"" AND T2.SourceAirport  =  ""AHD""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.авиалинии КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.рейсы КАК T2 ПО T2.авиалиния = T1.ссылка ГДЕ T1.наименование = ""United Airlines"" И T2.аэропортотправления = ""AHD"""
7137;"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  ""Aberdeen"" AND T3.Airline  =  ""United Airlines""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.рейсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.аэропорты КАК T2 ПО T1.аэропортназначения = T2.кодаэропорта ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.авиалинии КАК T3 ПО T3.ссылка = T1.авиалиния ГДЕ T2.город = ""Aberdeen"" И T3.наименование = ""United Airlines"""
7138;"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  ""Aberdeen"" AND T3.Airline  =  ""United Airlines""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.рейсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.аэропорты КАК T2 ПО T1.аэропортназначения = T2.кодаэропорта ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.авиалинии КАК T3 ПО T3.ссылка = T1.авиалиния ГДЕ T2.город = ""Aberdeen"" И T3.наименование = ""United Airlines"""
7139;SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.город ИЗ справочник.аэропорты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.рейсы КАК T2 ПО T1.кодаэропорта = T2.аэропортназначения СГРУППИРОВАТЬ ПО T1.город УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
7140;SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.город ИЗ справочник.аэропорты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.рейсы КАК T2 ПО T1.кодаэропорта = T2.аэропортназначения СГРУППИРОВАТЬ ПО T1.город УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
7141;SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.город ИЗ справочник.аэропорты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.рейсы КАК T2 ПО T1.кодаэропорта = T2.аэропортотправления СГРУППИРОВАТЬ ПО T1.город УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
7142;SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.город ИЗ справочник.аэропорты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.рейсы КАК T2 ПО T1.кодаэропорта = T2.аэропортотправления СГРУППИРОВАТЬ ПО T1.город УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
7143;SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.кодаэропорта ИЗ справочник.аэропорты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.рейсы КАК T2 ПО T1.кодаэропорта = T2.аэропортназначения ИЛИ T1.кодаэропорта = T2.аэропортотправления СГРУППИРОВАТЬ ПО T1.кодаэропорта УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
7144;SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.кодаэропорта ИЗ справочник.аэропорты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.рейсы КАК T2 ПО T1.кодаэропорта = T2.аэропортназначения ИЛИ T1.кодаэропорта = T2.аэропортотправления СГРУППИРОВАТЬ ПО T1.кодаэропорта УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
7145;SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.кодаэропорта ИЗ справочник.аэропорты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.рейсы КАК T2 ПО T1.кодаэропорта = T2.аэропортназначения ИЛИ T1.кодаэропорта = T2.аэропортотправления СГРУППИРОВАТЬ ПО T1.кодаэропорта УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*)
7146;SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.кодаэропорта ИЗ справочник.аэропорты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.рейсы КАК T2 ПО T1.кодаэропорта = T2.аэропортназначения ИЛИ T1.кодаэропорта = T2.аэропортотправления СГРУППИРОВАТЬ ПО T1.кодаэропорта УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*)
7147;SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.наименование ИЗ справочник.авиалинии КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.рейсы КАК T2 ПО T1.ссылка = T2.авиалиния СГРУППИРОВАТЬ ПО T1.наименование УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
7148;SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.наименование ИЗ справочник.авиалинии КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.рейсы КАК T2 ПО T1.ссылка = T2.авиалиния СГРУППИРОВАТЬ ПО T1.наименование УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
7149;SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.аббревиатура , T1.страна ИЗ справочник.авиалинии КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.рейсы КАК T2 ПО T1.ссылка = T2.авиалиния СГРУППИРОВАТЬ ПО T1.наименование УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*)
7150;SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.аббревиатура , T1.страна ИЗ справочник.авиалинии КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.рейсы КАК T2 ПО T1.ссылка = T2.авиалиния СГРУППИРОВАТЬ ПО T1.наименование УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*)
7151;"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  ""AHD""";"ВЫБРАТЬ T1.наименование ИЗ справочник.авиалинии КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.рейсы КАК T2 ПО T1.ссылка = T2.авиалиния ГДЕ T2.аэропортотправления = ""AHD"""
7152;"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  ""AHD""";"ВЫБРАТЬ T1.наименование ИЗ справочник.авиалинии КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.рейсы КАК T2 ПО T1.ссылка = T2.авиалиния ГДЕ T2.аэропортотправления = ""AHD"""
7153;"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  ""AHD""";"ВЫБРАТЬ T1.наименование ИЗ справочник.авиалинии КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.рейсы КАК T2 ПО T1.ссылка = T2.авиалиния ГДЕ T2.аэропортназначения = ""AHD"""
7154;"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  ""AHD""";"ВЫБРАТЬ T1.наименование ИЗ справочник.авиалинии КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.рейсы КАК T2 ПО T1.ссылка = T2.авиалиния ГДЕ T2.аэропортназначения = ""AHD"""
7159;SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10;ВЫБРАТЬ T1.наименование ИЗ справочник.авиалинии КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.рейсы КАК T2 ПО T1.ссылка = T2.авиалиния СГРУППИРОВАТЬ ПО T1.наименование ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 10
7160;SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10;ВЫБРАТЬ T1.наименование ИЗ справочник.авиалинии КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.рейсы КАК T2 ПО T1.ссылка = T2.авиалиния СГРУППИРОВАТЬ ПО T1.наименование ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 10
7161;SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200;ВЫБРАТЬ T1.наименование ИЗ справочник.авиалинии КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.рейсы КАК T2 ПО T1.ссылка = T2.авиалиния СГРУППИРОВАТЬ ПО T1.наименование ИМЕЮЩИЕ КОЛИЧЕСТВО(*) < 200
7162;SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200;ВЫБРАТЬ T1.наименование ИЗ справочник.авиалинии КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.рейсы КАК T2 ПО T1.ссылка = T2.авиалиния СГРУППИРОВАТЬ ПО T1.наименование ИМЕЮЩИЕ КОЛИЧЕСТВО(*) < 200
7163;"SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  ""United Airlines""";"ВЫБРАТЬ T1.номеррейса ИЗ регистрсведений.рейсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.авиалинии КАК T2 ПО T2.ссылка = T1.авиалиния ГДЕ T2.наименование = ""United Airlines"""
7164;"SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  ""United Airlines""";"ВЫБРАТЬ T1.номеррейса ИЗ регистрсведений.рейсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.авиалинии КАК T2 ПО T2.ссылка = T1.авиалиния ГДЕ T2.наименование = ""United Airlines"""
7165;"SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  ""APG""";"ВЫБРАТЬ номеррейса ИЗ регистрсведений.рейсы ГДЕ аэропортотправления = ""APG"""
7166;"SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  ""APG""";"ВЫБРАТЬ номеррейса ИЗ регистрсведений.рейсы ГДЕ аэропортотправления = ""APG"""
7167;"SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  ""APG""";"ВЫБРАТЬ номеррейса ИЗ регистрсведений.рейсы ГДЕ аэропортназначения = ""APG"""
7168;"SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  ""APG""";"ВЫБРАТЬ номеррейса ИЗ регистрсведений.рейсы ГДЕ аэропортназначения = ""APG"""
7169;"SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  ""Aberdeen""";"ВЫБРАТЬ T1.номеррейса ИЗ регистрсведений.рейсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.аэропорты КАК T2 ПО T1.аэропортотправления = T2.кодаэропорта ГДЕ T2.город = ""Aberdeen"""
7170;"SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  ""Aberdeen""";"ВЫБРАТЬ T1.номеррейса ИЗ регистрсведений.рейсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.аэропорты КАК T2 ПО T1.аэропортотправления = T2.кодаэропорта ГДЕ T2.город = ""Aberdeen"""
7171;"SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  ""Aberdeen""";"ВЫБРАТЬ T1.номеррейса ИЗ регистрсведений.рейсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.аэропорты КАК T2 ПО T1.аэропортназначения = T2.кодаэропорта ГДЕ T2.город = ""Aberdeen"""
7172;"SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  ""Aberdeen""";"ВЫБРАТЬ T1.номеррейса ИЗ регистрсведений.рейсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.аэропорты КАК T2 ПО T1.аэропортназначения = T2.кодаэропорта ГДЕ T2.город = ""Aberdeen"""
7173;"SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  ""Aberdeen"" OR T2.city  =  ""Abilene""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.рейсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.аэропорты КАК T2 ПО T1.аэропортназначения = T2.кодаэропорта ГДЕ T2.город = ""Aberdeen"" ИЛИ T2.город = ""Abilene"""
7174;"SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  ""Aberdeen"" OR T2.city  =  ""Abilene""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.рейсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.аэропорты КАК T2 ПО T1.аэропортназначения = T2.кодаэропорта ГДЕ T2.город = ""Aberdeen"" ИЛИ T2.город = ""Abilene"""
7175;SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights);ВЫБРАТЬ AirportName ИЗ справочник.аэропорты ГДЕ AirportCode НЕ В (ВЫБРАТЬ SourceAirport ИЗ регистрсведений.рейсы ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ DestAirport ИЗ регистрсведений.рейсы)
7176;SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights);ВЫБРАТЬ AirportName ИЗ справочник.аэропорты ГДЕ AirportCode НЕ В (ВЫБРАТЬ SourceAirport ИЗ регистрсведений.рейсы ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ DestAirport ИЗ регистрсведений.рейсы)
7177;SELECT count(*) FROM employee;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.сотрудники
7178;SELECT count(*) FROM employee;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.сотрудники
7179;SELECT name FROM employee ORDER BY age;ВЫБРАТЬ наименование ИЗ справочник.сотрудники УПОРЯДОЧИТЬ ПО возраст
7180;SELECT name FROM employee ORDER BY age;ВЫБРАТЬ наименование ИЗ справочник.сотрудники УПОРЯДОЧИТЬ ПО возраст
7181;SELECT count(*) ,  city FROM employee GROUP BY city;ВЫБРАТЬ КОЛИЧЕСТВО(*) , город ИЗ справочник.сотрудники СГРУППИРОВАТЬ ПО город
7182;SELECT count(*) ,  city FROM employee GROUP BY city;ВЫБРАТЬ КОЛИЧЕСТВО(*) , город ИЗ справочник.сотрудники СГРУППИРОВАТЬ ПО город
7183;SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1;ВЫБРАТЬ город ИЗ справочник.сотрудники ГДЕ возраст < 30 СГРУППИРОВАТЬ ПО город ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 1
7184;SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1;ВЫБРАТЬ город ИЗ справочник.сотрудники ГДЕ возраст < 30 СГРУППИРОВАТЬ ПО город ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 1
7185;SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION;ВЫБРАТЬ КОЛИЧЕСТВО(*) , местоположение ИЗ справочник.магазины СГРУППИРОВАТЬ ПО местоположение
7186;SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION;ВЫБРАТЬ КОЛИЧЕСТВО(*) , местоположение ИЗ справочник.магазины СГРУППИРОВАТЬ ПО местоположение
7187;SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 имяменеджера , район ИЗ справочник.магазины УПОРЯДОЧИТЬ ПО количествотоваров УБЫВ
7188;SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 имяменеджера , район ИЗ справочник.магазины УПОРЯДОЧИТЬ ПО количествотоваров УБЫВ
7189;SELECT min(Number_products) ,  max(Number_products) FROM shop;ВЫБРАТЬ МИНИМУМ(количествотоваров) , МАКСИМУМ(количествотоваров) ИЗ справочник.магазины
7190;SELECT min(Number_products) ,  max(Number_products) FROM shop;ВЫБРАТЬ МИНИМУМ(количествотоваров) , МАКСИМУМ(количествотоваров) ИЗ справочник.магазины
7191;SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC;ВЫБРАТЬ наименование , местоположение , район ИЗ справочник.магазины УПОРЯДОЧИТЬ ПО количествотоваров УБЫВ
7192;SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC;ВЫБРАТЬ наименование , местоположение , район ИЗ справочник.магазины УПОРЯДОЧИТЬ ПО количествотоваров УБЫВ
7193;SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop);ВЫБРАТЬ name ИЗ справочник.магазины ГДЕ number_products > (ВЫБРАТЬ СРЕДНЕЕ(number_products) ИЗ справочник.магазины)
7194;SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop);ВЫБРАТЬ name ИЗ справочник.магазины ГДЕ number_products > (ВЫБРАТЬ СРЕДНЕЕ(number_products) ИЗ справочник.магазины)
7195;SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 t1.наименование ИЗ справочник.сотрудники КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.оценкасотрудников КАК t2 ПО t1.ссылка = t2.сотрудник СГРУППИРОВАТЬ ПО t2.сотрудник УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
7196;SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 t1.наименование ИЗ справочник.сотрудники КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.оценкасотрудников КАК t2 ПО t1.ссылка = t2.сотрудник СГРУППИРОВАТЬ ПО t2.сотрудник УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
7197;SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 t1.наименование ИЗ справочник.сотрудники КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.оценкасотрудников КАК t2 ПО t1.ссылка = t2.сотрудник УПОРЯДОЧИТЬ ПО t2.премия УБЫВ
7198;SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 t1.наименование ИЗ справочник.сотрудники КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.оценкасотрудников КАК t2 ПО t1.ссылка = t2.сотрудник УПОРЯДОЧИТЬ ПО t2.премия УБЫВ
7199;SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation);ВЫБРАТЬ name ИЗ справочник.сотрудники ГДЕ Employee_ID НЕ В (ВЫБРАТЬ Employee_ID ИЗ регистрсведений.оценкасотрудников)
7200;SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation);ВЫБРАТЬ name ИЗ справочник.сотрудники ГДЕ Employee_ID НЕ В (ВЫБРАТЬ Employee_ID ИЗ регистрсведений.оценкасотрудников)
7201;SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 t2.наименование ИЗ регистрсведений.наймсотрудников КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.магазины КАК t2 ПО t1.магазин = t2.ссылка СГРУППИРОВАТЬ ПО t1.магазин УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
7202;SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 t2.наименование ИЗ регистрсведений.наймсотрудников КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.магазины КАК t2 ПО t1.магазин = t2.ссылка СГРУППИРОВАТЬ ПО t1.магазин УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
7203;SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring);ВЫБРАТЬ name ИЗ справочник.магазины ГДЕ shop_id НЕ В (ВЫБРАТЬ shop_id ИЗ регистрсведений.наймсотрудников)
7204;SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring);ВЫБРАТЬ name ИЗ справочник.магазины ГДЕ shop_id НЕ В (ВЫБРАТЬ shop_id ИЗ регистрсведений.наймсотрудников)
7205;SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name;ВЫБРАТЬ КОЛИЧЕСТВО(*) , t2.наименование ИЗ регистрсведений.наймсотрудников КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.магазины КАК t2 ПО t1.магазин = t2.ссылка СГРУППИРОВАТЬ ПО t2.наименование
7206;SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name;ВЫБРАТЬ КОЛИЧЕСТВО(*) , t2.наименование ИЗ регистрсведений.наймсотрудников КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.магазины КАК t2 ПО t1.магазин = t2.ссылка СГРУППИРОВАТЬ ПО t2.наименование
7207;SELECT sum(bonus) FROM evaluation;ВЫБРАТЬ СУММА(премия) ИЗ регистрсведений.оценкасотрудников
7208;SELECT sum(bonus) FROM evaluation;ВЫБРАТЬ СУММА(премия) ИЗ регистрсведений.оценкасотрудников
7209;SELECT * FROM hiring;ВЫБРАТЬ * ИЗ регистрсведений.наймсотрудников
7210;SELECT * FROM hiring;ВЫБРАТЬ * ИЗ регистрсведений.наймсотрудников
7213;SELECT count(DISTINCT LOCATION) FROM shop;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ местоположение) ИЗ справочник.магазины
7214;SELECT count(DISTINCT LOCATION) FROM shop;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ местоположение) ИЗ справочник.магазины
7215;SELECT count(*) FROM Documents;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.документы
7216;SELECT count(*) FROM Documents;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.документы
7217;SELECT document_id ,  document_name ,  document_description FROM Documents;ВЫБРАТЬ ссылка , наименование , описание ИЗ справочник.документы
7218;SELECT document_id ,  document_name ,  document_description FROM Documents;ВЫБРАТЬ ссылка , наименование , описание ИЗ справочник.документы
7219;"SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE ""%w%""";"ВЫБРАТЬ наименование , шаблон ИЗ справочник.документы ГДЕ описание ПОДОБНО ""%w%"""
7220;"SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE ""%w%""";"ВЫБРАТЬ наименование , шаблон ИЗ справочник.документы ГДЕ описание ПОДОБНО ""%w%"""
7221;"SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  ""Robbin CV""";"ВЫБРАТЬ ссылка , шаблон , описание ИЗ справочник.документы ГДЕ наименование = ""Robbin CV"""
7222;"SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  ""Robbin CV""";"ВЫБРАТЬ ссылка , шаблон , описание ИЗ справочник.документы ГДЕ наименование = ""Robbin CV"""
7223;SELECT count(DISTINCT template_id) FROM Documents;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ шаблон) ИЗ справочник.документы
7224;SELECT count(DISTINCT template_id) FROM Documents;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ шаблон) ИЗ справочник.документы
7225;SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT';"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.документы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.шаблоны КАК T2 ПО T1.шаблон = T2.ссылка ГДЕ T2.видшаблона = ""PPT"""
7226;SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT';"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.документы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.шаблоны КАК T2 ПО T1.шаблон = T2.ссылка ГДЕ T2.видшаблона = ""PPT"""
7227;SELECT template_id ,  count(*) FROM Documents GROUP BY template_id;ВЫБРАТЬ шаблон , КОЛИЧЕСТВО(*) ИЗ справочник.документы СГРУППИРОВАТЬ ПО шаблон
7228;SELECT template_id ,  count(*) FROM Documents GROUP BY template_id;ВЫБРАТЬ шаблон , КОЛИЧЕСТВО(*) ИЗ справочник.документы СГРУППИРОВАТЬ ПО шаблон
7229;SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.шаблон , T2.видшаблона ИЗ справочник.документы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.шаблоны КАК T2 ПО T1.шаблон = T2.ссылка СГРУППИРОВАТЬ ПО T1.шаблон УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
7230;SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.шаблон , T2.видшаблона ИЗ справочник.документы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.шаблоны КАК T2 ПО T1.шаблон = T2.ссылка СГРУППИРОВАТЬ ПО T1.шаблон УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
7231;SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1;ВЫБРАТЬ шаблон ИЗ справочник.документы СГРУППИРОВАТЬ ПО шаблон ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 1
7232;SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1;ВЫБРАТЬ шаблон ИЗ справочник.документы СГРУППИРОВАТЬ ПО шаблон ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 1
7235;SELECT count(*) FROM Templates;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.шаблоны
7236;SELECT count(*) FROM Templates;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.шаблоны
7237;SELECT template_id ,  version_number ,  template_type_code FROM Templates;ВЫБРАТЬ ссылка , номерверсии , видшаблона ИЗ справочник.шаблоны
7238;SELECT template_id ,  version_number ,  template_type_code FROM Templates;ВЫБРАТЬ ссылка , номерверсии , видшаблона ИЗ справочник.шаблоны
7239;SELECT DISTINCT template_type_code FROM Templates;ВЫБРАТЬ РАЗЛИЧНЫЕ видшаблона ИЗ справочник.шаблоны
7240;SELECT DISTINCT template_type_code FROM Templates;ВЫБРАТЬ РАЗЛИЧНЫЕ видшаблона ИЗ справочник.шаблоны
7241;"SELECT template_id FROM Templates WHERE template_type_code  =  ""PP"" OR template_type_code  =  ""PPT""";"ВЫБРАТЬ ссылка ИЗ справочник.шаблоны ГДЕ видшаблона = ""PP"" ИЛИ видшаблона = ""PPT"""
7242;"SELECT template_id FROM Templates WHERE template_type_code  =  ""PP"" OR template_type_code  =  ""PPT""";"ВЫБРАТЬ ссылка ИЗ справочник.шаблоны ГДЕ видшаблона = ""PP"" ИЛИ видшаблона = ""PPT"""
7243;"SELECT count(*) FROM Templates WHERE template_type_code  =  ""CV""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.шаблоны ГДЕ видшаблона = ""CV"""
7244;"SELECT count(*) FROM Templates WHERE template_type_code  =  ""CV""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.шаблоны ГДЕ видшаблона = ""CV"""
7245;SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5;ВЫБРАТЬ номерверсии , видшаблона ИЗ справочник.шаблоны ГДЕ номерверсии > 5
7246;SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5;ВЫБРАТЬ номерверсии , видшаблона ИЗ справочник.шаблоны ГДЕ номерверсии > 5
7247;SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code;ВЫБРАТЬ видшаблона , КОЛИЧЕСТВО(*) ИЗ справочник.шаблоны СГРУППИРОВАТЬ ПО видшаблона
7248;SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code;ВЫБРАТЬ видшаблона , КОЛИЧЕСТВО(*) ИЗ справочник.шаблоны СГРУППИРОВАТЬ ПО видшаблона
7249;SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 видшаблона ИЗ справочник.шаблоны СГРУППИРОВАТЬ ПО видшаблона УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
7250;SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 видшаблона ИЗ справочник.шаблоны СГРУППИРОВАТЬ ПО видшаблона УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
7251;SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3;ВЫБРАТЬ видшаблона ИЗ справочник.шаблоны СГРУППИРОВАТЬ ПО видшаблона ИМЕЮЩИЕ КОЛИЧЕСТВО(*) < 3
7252;SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3;ВЫБРАТЬ видшаблона ИЗ справочник.шаблоны СГРУППИРОВАТЬ ПО видшаблона ИМЕЮЩИЕ КОЛИЧЕСТВО(*) < 3
7253;SELECT min(Version_Number) ,  template_type_code FROM Templates;ВЫБРАТЬ МИНИМУМ(номерверсии) , видшаблона ИЗ справочник.шаблоны
7254;SELECT min(Version_Number) ,  template_type_code FROM Templates;ВЫБРАТЬ МИНИМУМ(номерверсии) , видшаблона ИЗ справочник.шаблоны
7255;"SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  ""Data base""";"ВЫБРАТЬ T1.видшаблона ИЗ справочник.шаблоны КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.документы КАК T2 ПО T1.ссылка = T2.шаблон ГДЕ T2.наименование = ""Data base"""
7256;"SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  ""Data base""";"ВЫБРАТЬ T1.видшаблона ИЗ справочник.шаблоны КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.документы КАК T2 ПО T1.ссылка = T2.шаблон ГДЕ T2.наименование = ""Data base"""
7257;"SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  ""BK""";"ВЫБРАТЬ T2.наименование ИЗ справочник.шаблоны КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.документы КАК T2 ПО T1.ссылка = T2.шаблон ГДЕ T1.видшаблона = ""BK"""
7258;"SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  ""BK""";"ВЫБРАТЬ T2.наименование ИЗ справочник.шаблоны КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.документы КАК T2 ПО T1.ссылка = T2.шаблон ГДЕ T1.видшаблона = ""BK"""
7259;SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code;ВЫБРАТЬ T1.видшаблона , КОЛИЧЕСТВО(*) ИЗ справочник.шаблоны КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.документы КАК T2 ПО T1.ссылка = T2.шаблон СГРУППИРОВАТЬ ПО T1.видшаблона
7260;SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code;ВЫБРАТЬ T1.видшаблона , КОЛИЧЕСТВО(*) ИЗ справочник.шаблоны КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.документы КАК T2 ПО T1.ссылка = T2.шаблон СГРУППИРОВАТЬ ПО T1.видшаблона
7261;SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.видшаблона ИЗ справочник.шаблоны КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.документы КАК T2 ПО T1.ссылка = T2.шаблон СГРУППИРОВАТЬ ПО T1.видшаблона УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
7262;SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.видшаблона ИЗ справочник.шаблоны КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.документы КАК T2 ПО T1.ссылка = T2.шаблон СГРУППИРОВАТЬ ПО T1.видшаблона УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
7265;SELECT template_type_code ,  template_type_description FROM Ref_template_types;ВЫБРАТЬ код , описание ИЗ справочник.видышаблонов
7266;SELECT template_type_code ,  template_type_description FROM Ref_template_types;ВЫБРАТЬ код , описание ИЗ справочник.видышаблонов
7267;"SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  ""AD""";"ВЫБРАТЬ описание ИЗ справочник.видышаблонов ГДЕ код = ""AD"""
7268;"SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  ""AD""";"ВЫБРАТЬ описание ИЗ справочник.видышаблонов ГДЕ код = ""AD"""
7269;"SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  ""Book""";"ВЫБРАТЬ код ИЗ справочник.видышаблонов ГДЕ описание = ""Book"""
7270;"SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  ""Book""";"ВЫБРАТЬ код ИЗ справочник.видышаблонов ГДЕ описание = ""Book"""
7271;SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID;ВЫБРАТЬ РАЗЛИЧНЫЕ T1.описание ИЗ справочник.видышаблонов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.шаблоны КАК T2 ПО T1.код = T2.видшаблона ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.документы КАК T3 ПО T2.ссылка = T3.шаблон
7272;SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID;ВЫБРАТЬ РАЗЛИЧНЫЕ T1.описание ИЗ справочник.видышаблонов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.шаблоны КАК T2 ПО T1.код = T2.видшаблона ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.документы КАК T3 ПО T2.ссылка = T3.шаблон
7273;"SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  ""Presentation""";"ВЫБРАТЬ T2.ссылка ИЗ справочник.видышаблонов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.шаблоны КАК T2 ПО T1.код = T2.видшаблона ГДЕ T1.описание = ""Presentation"""
7274;"SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  ""Presentation""";"ВЫБРАТЬ T2.ссылка ИЗ справочник.видышаблонов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.шаблоны КАК T2 ПО T1.код = T2.видшаблона ГДЕ T1.описание = ""Presentation"""
7275;SELECT count(*) FROM Paragraphs;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.пункты
7276;SELECT count(*) FROM Paragraphs;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.пункты
7277;SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show';"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.пункты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.документы КАК T2 ПО T1.документ = T2.ссылка ГДЕ T2.наименование = ""Summer Show"""
7278;SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show';"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.пункты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.документы КАК T2 ПО T1.документ = T2.ссылка ГДЕ T2.наименование = ""Summer Show"""
7279;select other_details from paragraphs where paragraph_text like 'korea';"select прочее from paragraphs where текстпункта like ""korea"""
7280;select other_details from paragraphs where paragraph_text like 'korea';"select прочее from paragraphs where текстпункта like ""korea"""
7281;SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY';"ВЫБРАТЬ T1.ссылка , T1.текстпункта ИЗ справочник.пункты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.документы КАК T2 ПО T1.документ = T2.ссылка ГДЕ T2.наименование = ""Welcome to NY"""
7282;SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY';"ВЫБРАТЬ T1.ссылка , T1.текстпункта ИЗ справочник.пункты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.документы КАК T2 ПО T1.документ = T2.ссылка ГДЕ T2.наименование = ""Welcome to NY"""
7283;"SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  ""Customer reviews""";"ВЫБРАТЬ T1.текстпункта ИЗ справочник.пункты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.документы КАК T2 ПО T1.документ = T2.ссылка ГДЕ T2.наименование = ""Customer reviews"""
7284;"SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  ""Customer reviews""";"ВЫБРАТЬ T1.текстпункта ИЗ справочник.пункты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.документы КАК T2 ПО T1.документ = T2.ссылка ГДЕ T2.наименование = ""Customer reviews"""
7285;SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id;ВЫБРАТЬ документ , КОЛИЧЕСТВО(*) ИЗ справочник.пункты СГРУППИРОВАТЬ ПО документ УПОРЯДОЧИТЬ ПО документ
7286;SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id;ВЫБРАТЬ документ , КОЛИЧЕСТВО(*) ИЗ справочник.пункты СГРУППИРОВАТЬ ПО документ УПОРЯДОЧИТЬ ПО документ
7287;SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id;ВЫБРАТЬ T1.документ , T2.наименование , КОЛИЧЕСТВО(*) ИЗ справочник.пункты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.документы КАК T2 ПО T1.документ = T2.ссылка СГРУППИРОВАТЬ ПО T1.документ
7288;SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id;ВЫБРАТЬ T1.документ , T2.наименование , КОЛИЧЕСТВО(*) ИЗ справочник.пункты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.документы КАК T2 ПО T1.документ = T2.ссылка СГРУППИРОВАТЬ ПО T1.документ
7289;SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2;ВЫБРАТЬ документ ИЗ справочник.пункты СГРУППИРОВАТЬ ПО документ ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
7290;SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2;ВЫБРАТЬ документ ИЗ справочник.пункты СГРУППИРОВАТЬ ПО документ ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
7291;SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.документ , T2.наименование ИЗ справочник.пункты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.документы КАК T2 ПО T1.документ = T2.ссылка СГРУППИРОВАТЬ ПО T1.документ УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
7292;SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.документ , T2.наименование ИЗ справочник.пункты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.документы КАК T2 ПО T1.документ = T2.ссылка СГРУППИРОВАТЬ ПО T1.документ УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
7293;SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 документ ИЗ справочник.пункты СГРУППИРОВАТЬ ПО документ УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) ВОЗР
7294;SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 документ ИЗ справочник.пункты СГРУППИРОВАТЬ ПО документ УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) ВОЗР
7295;SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2;ВЫБРАТЬ документ ИЗ справочник.пункты СГРУППИРОВАТЬ ПО документ ИМЕЮЩИЕ КОЛИЧЕСТВО(*) МЕЖДУ 1 И 2
7296;SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2;ВЫБРАТЬ документ ИЗ справочник.пункты СГРУППИРОВАТЬ ПО документ ИМЕЮЩИЕ КОЛИЧЕСТВО(*) МЕЖДУ 1 И 2
7299;SELECT count(*) FROM teacher;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.преподаватели
7300;SELECT count(*) FROM teacher;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.преподаватели
7301;SELECT Name FROM teacher ORDER BY Age ASC;ВЫБРАТЬ наименование ИЗ справочник.преподаватели УПОРЯДОЧИТЬ ПО возраст ВОЗР
7302;SELECT Name FROM teacher ORDER BY Age ASC;ВЫБРАТЬ наименование ИЗ справочник.преподаватели УПОРЯДОЧИТЬ ПО возраст ВОЗР
7303;SELECT Age ,  Hometown FROM teacher;ВЫБРАТЬ возраст , городродной ИЗ справочник.преподаватели
7304;SELECT Age ,  Hometown FROM teacher;ВЫБРАТЬ возраст , городродной ИЗ справочник.преподаватели
7305;"select name from teacher where hometown != ""little lever urban district""";"select наименование from teacher where городродной <> ""little lever urban district"""
7306;"select name from teacher where hometown != ""little lever urban district""";"select наименование from teacher where городродной <> ""little lever urban district"""
7307;SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33;ВЫБРАТЬ наименование ИЗ справочник.преподаватели ГДЕ возраст = 32 ИЛИ возраст = 33
7308;SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33;ВЫБРАТЬ наименование ИЗ справочник.преподаватели ГДЕ возраст = 32 ИЛИ возраст = 33
7309;SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 городродной ИЗ справочник.преподаватели УПОРЯДОЧИТЬ ПО возраст ВОЗР
7310;SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 городродной ИЗ справочник.преподаватели УПОРЯДОЧИТЬ ПО возраст ВОЗР
7311;SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown;ВЫБРАТЬ городродной , КОЛИЧЕСТВО(*) ИЗ справочник.преподаватели СГРУППИРОВАТЬ ПО городродной
7312;SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown;ВЫБРАТЬ городродной , КОЛИЧЕСТВО(*) ИЗ справочник.преподаватели СГРУППИРОВАТЬ ПО городродной
7313;SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 городродной ИЗ справочник.преподаватели СГРУППИРОВАТЬ ПО городродной УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
7314;SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 городродной ИЗ справочник.преподаватели СГРУППИРОВАТЬ ПО городродной УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
7315;SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2;ВЫБРАТЬ городродной ИЗ справочник.преподаватели СГРУППИРОВАТЬ ПО городродной ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
7316;SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2;ВЫБРАТЬ городродной ИЗ справочник.преподаватели СГРУППИРОВАТЬ ПО городродной ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
7317;SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID;ВЫБРАТЬ T3.наименование , T2.наименование ИЗ регистрсведений.назначениекурсов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.курсы КАК T2 ПО T1.курс = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.преподаватели КАК T3 ПО T1.преподаватель = T3.ссылка
7318;SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID;ВЫБРАТЬ T3.наименование , T2.наименование ИЗ регистрсведений.назначениекурсов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.курсы КАК T2 ПО T1.курс = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.преподаватели КАК T3 ПО T1.преподаватель = T3.ссылка
7319;SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name;ВЫБРАТЬ T3.наименование , T2.наименование ИЗ регистрсведений.назначениекурсов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.курсы КАК T2 ПО T1.курс = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.преподаватели КАК T3 ПО T1.преподаватель = T3.ссылка УПОРЯДОЧИТЬ ПО T3.наименование
7320;SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name;ВЫБРАТЬ T3.наименование , T2.наименование ИЗ регистрсведений.назначениекурсов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.курсы КАК T2 ПО T1.курс = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.преподаватели КАК T3 ПО T1.преподаватель = T3.ссылка УПОРЯДОЧИТЬ ПО T3.наименование
7321;"SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  ""Math""";"ВЫБРАТЬ T3.наименование ИЗ регистрсведений.назначениекурсов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.курсы КАК T2 ПО T1.курс = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.преподаватели КАК T3 ПО T1.преподаватель = T3.ссылка ГДЕ T2.наименование = ""Math"""
7322;"SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  ""Math""";"ВЫБРАТЬ T3.наименование ИЗ регистрсведений.назначениекурсов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.курсы КАК T2 ПО T1.курс = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.преподаватели КАК T3 ПО T1.преподаватель = T3.ссылка ГДЕ T2.наименование = ""Math"""
7323;SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name;ВЫБРАТЬ T2.наименование , КОЛИЧЕСТВО(*) ИЗ регистрсведений.назначениекурсов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.преподаватели КАК T2 ПО T1.преподаватель = T2.ссылка СГРУППИРОВАТЬ ПО T2.наименование
7324;SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name;ВЫБРАТЬ T2.наименование , КОЛИЧЕСТВО(*) ИЗ регистрсведений.назначениекурсов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.преподаватели КАК T2 ПО T1.преподаватель = T2.ссылка СГРУППИРОВАТЬ ПО T2.наименование
7325;SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2;ВЫБРАТЬ T2.наименование ИЗ регистрсведений.назначениекурсов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.преподаватели КАК T2 ПО T1.преподаватель = T2.ссылка СГРУППИРОВАТЬ ПО T2.наименование ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
7326;SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2;ВЫБРАТЬ T2.наименование ИЗ регистрсведений.назначениекурсов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.преподаватели КАК T2 ПО T1.преподаватель = T2.ссылка СГРУППИРОВАТЬ ПО T2.наименование ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
7327;SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange);ВЫБРАТЬ Name ИЗ справочник.преподаватели ГДЕ Teacher_id НЕ В (ВЫБРАТЬ Teacher_id ИЗ регистрсведений.назначениекурсов)
7328;SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange);ВЫБРАТЬ Name ИЗ справочник.преподаватели ГДЕ Teacher_id НЕ В (ВЫБРАТЬ Teacher_id ИЗ регистрсведений.назначениекурсов)
7329;SELECT count(*) FROM visitor WHERE age  <  30;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.посетители ГДЕ возраст < 30
7330;SELECT name FROM visitor WHERE Level_of_membership  >  4 ORDER BY Level_of_membership DESC;ВЫБРАТЬ наименование ИЗ справочник.посетители ГДЕ уровеньчленства > 4 УПОРЯДОЧИТЬ ПО уровеньчленства УБЫВ
7331;SELECT avg(age) FROM visitor WHERE Level_of_membership  <=  4;ВЫБРАТЬ СРЕДНЕЕ(возраст) ИЗ справочник.посетители ГДЕ уровеньчленства <= 4
7332;SELECT name ,  Level_of_membership FROM visitor WHERE Level_of_membership  >  4 ORDER BY age DESC;ВЫБРАТЬ наименование , уровеньчленства ИЗ справочник.посетители ГДЕ уровеньчленства > 4 УПОРЯДОЧИТЬ ПО возраст УБЫВ
7333;SELECT museum_id ,  name FROM museum ORDER BY num_of_staff DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 ссылка , наименование ИЗ справочник.музеи УПОРЯДОЧИТЬ ПО количествосотрудников УБЫВ
7334;SELECT avg(num_of_staff) FROM museum WHERE open_year  <  2009;ВЫБРАТЬ СРЕДНЕЕ(количествосотрудников) ИЗ справочник.музеи ГДЕ годоткрытия < 2009
7335;SELECT Num_of_Staff ,  Open_Year FROM museum WHERE name  =  'Plaza Museum';"ВЫБРАТЬ количествосотрудников , годоткрытия ИЗ справочник.музеи ГДЕ наименование = ""Plaza Museum"""
7336;SELECT name FROM museum WHERE num_of_staff  >  (SELECT min(num_of_staff) FROM museum WHERE open_year  >  2010);ВЫБРАТЬ наименование ИЗ справочник.музеи ГДЕ количествосотрудников > (ВЫБРАТЬ МИНИМУМ(количествосотрудников) ИЗ справочник.музеи ГДЕ годоткрытия > 2010)
7337;SELECT t1.id ,  t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t1.id HAVING count(*)  >  1;ВЫБРАТЬ t1.ссылка , t1.наименование , t1.возраст ИЗ справочник.посетители КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.посещения КАК t2 ПО t1.ссылка = t2.посетитель СГРУППИРОВАТЬ ПО t1.ссылка ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 1
7338;SELECT t2.visitor_id ,  t1.name ,  t1.Level_of_membership FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t2.visitor_id ORDER BY sum(t2.Total_spent) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 t2.посетитель , t1.наименование , t1.уровеньчленства ИЗ справочник.посетители КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.посещения КАК t2 ПО t1.ссылка = t2.посетитель СГРУППИРОВАТЬ ПО t2.посетитель УПОРЯДОЧИТЬ ПО СУММА(t2.суммазатрат) УБЫВ
7339;SELECT t2.Museum_ID ,  t1.name FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID GROUP BY t2.Museum_ID ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 t2.музей , t1.наименование ИЗ справочник.музеи КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.посещения КАК t2 ПО t1.ссылка = t2.музей СГРУППИРОВАТЬ ПО t2.музей УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
7340;SELECT name FROM museum WHERE Museum_ID NOT IN (SELECT museum_id FROM visit);ВЫБРАТЬ name ИЗ справочник.музеи ГДЕ Museum_ID НЕ В (ВЫБРАТЬ museum_id ИЗ регистрсведений.посещения)
7341;SELECT t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id ORDER BY t2.num_of_ticket DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 t1.наименование , t1.возраст ИЗ справочник.посетители КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.посещения КАК t2 ПО t1.ссылка = t2.посетитель УПОРЯДОЧИТЬ ПО t2.количествобилетов УБЫВ
7342;SELECT avg(num_of_ticket) ,  max(num_of_ticket) FROM visit;ВЫБРАТЬ СРЕДНЕЕ(количествобилетов) , МАКСИМУМ(количествобилетов) ИЗ регистрсведений.посещения
7343;SELECT sum(t2.Total_spent) FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id WHERE t1.Level_of_membership  =  1;ВЫБРАТЬ СУММА(t2.суммазатрат) ИЗ справочник.посетители КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.посещения КАК t2 ПО t1.ссылка = t2.посетитель ГДЕ t1.уровеньчленства = 1
7345;SELECT count(*) FROM visitor WHERE id NOT IN (SELECT t2.visitor_id FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID WHERE t1.open_year  >  2010);ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.посетители ГДЕ id НЕ В (ВЫБРАТЬ t2.посетитель ИЗ справочник.музеи КАК t1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.посещения КАК t2 ПО t1.ссылка = t2.музей ГДЕ t1.годоткрытия > 2010)
7346;SELECT count(*) FROM museum WHERE open_year  >  2013 OR open_year  <  2008;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.музеи ГДЕ годоткрытия > 2013 ИЛИ годоткрытия < 2008
7347;SELECT count(*) FROM players;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.игроки
7348;SELECT count(*) FROM players;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.игроки
7349;SELECT count(*) FROM matches;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.матчи
7350;SELECT count(*) FROM matches;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.матчи
7351;SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA';"ВЫБРАТЬ имя , датарождения ИЗ справочник.игроки ГДЕ кодстраны = ""USA"""
7352;SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA';"ВЫБРАТЬ имя , датарождения ИЗ справочник.игроки ГДЕ кодстраны = ""USA"""
7353;SELECT avg(loser_age) ,  avg(winner_age) FROM matches;ВЫБРАТЬ СРЕДНЕЕ(возрастпроигравшего) , СРЕДНЕЕ(возрастпобедителя) ИЗ регистрсведений.матчи
7354;SELECT avg(loser_age) ,  avg(winner_age) FROM matches;ВЫБРАТЬ СРЕДНЕЕ(возрастпроигравшего) , СРЕДНЕЕ(возрастпобедителя) ИЗ регистрсведений.матчи
7355;SELECT avg(winner_rank) FROM matches;ВЫБРАТЬ СРЕДНЕЕ(рейтингпобедителя) ИЗ регистрсведений.матчи
7356;SELECT avg(winner_rank) FROM matches;ВЫБРАТЬ СРЕДНЕЕ(рейтингпобедителя) ИЗ регистрсведений.матчи
7357;SELECT min(loser_rank) FROM matches;ВЫБРАТЬ МИНИМУМ(рейтингпроигравшего) ИЗ регистрсведений.матчи
7358;SELECT min(loser_rank) FROM matches;ВЫБРАТЬ МИНИМУМ(рейтингпроигравшего) ИЗ регистрсведений.матчи
7359;SELECT count(DISTINCT country_code) FROM players;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ кодстраны) ИЗ справочник.игроки
7360;SELECT count(DISTINCT country_code) FROM players;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ кодстраны) ИЗ справочник.игроки
7361;SELECT count(DISTINCT loser_name) FROM matches;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ имяпроигравшего) ИЗ регистрсведений.матчи
7362;SELECT count(DISTINCT loser_name) FROM matches;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ имяпроигравшего) ИЗ регистрсведений.матчи
7363;SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10;ВЫБРАТЬ названиетурнира ИЗ регистрсведений.матчи СГРУППИРОВАТЬ ПО названиетурнира ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 10
7364;SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10;ВЫБРАТЬ названиетурнира ИЗ регистрсведений.матчи СГРУППИРОВАТЬ ПО названиетурнира ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 10
7367;SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.матчи ГДЕ год = 2013 ИЛИ год = 2016
7368;SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.матчи ГДЕ год = 2013 ИЛИ год = 2016
7371;SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 имя , кодстраны ИЗ справочник.игроки УПОРЯДОЧИТЬ ПО датарождения
7372;SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 имя , кодстраны ИЗ справочник.игроки УПОРЯДОЧИТЬ ПО датарождения
7373;SELECT first_name ,  last_name FROM players ORDER BY birth_date;ВЫБРАТЬ имя , фамилия ИЗ справочник.игроки УПОРЯДОЧИТЬ ПО датарождения
7374;SELECT first_name ,  last_name FROM players ORDER BY birth_date;ВЫБРАТЬ имя , фамилия ИЗ справочник.игроки УПОРЯДОЧИТЬ ПО датарождения
7375;SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date;"ВЫБРАТЬ имя , фамилия ИЗ справочник.игроки ГДЕ руководящаярука = ""L"" УПОРЯДОЧИТЬ ПО датарождения"
7376;SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date;"ВЫБРАТЬ имя , фамилия ИЗ справочник.игроки ГДЕ руководящаярука = ""L"" УПОРЯДОЧИТЬ ПО датарождения"
7377;SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.кодстраны , T1.имя ИЗ справочник.игроки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.рейтинги КАК T2 ПО T1.ссылка = T2.игрок УПОРЯДОЧИТЬ ПО T2.количествотуров УБЫВ
7378;SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.кодстраны , T1.имя ИЗ справочник.игроки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.рейтинги КАК T2 ПО T1.ссылка = T2.игрок УПОРЯДОЧИТЬ ПО T2.количествотуров УБЫВ
7379;SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 год ИЗ регистрсведений.матчи СГРУППИРОВАТЬ ПО год УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
7380;SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 год ИЗ регистрсведений.матчи СГРУППИРОВАТЬ ПО год УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
7381;SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 имяпобедителя , очкипобедителя ИЗ регистрсведений.матчи СГРУППИРОВАТЬ ПО имяпобедителя УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
7382;SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 имяпобедителя , очкипобедителя ИЗ регистрсведений.матчи СГРУППИРОВАТЬ ПО имяпобедителя УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
7383;SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1;"ВЫБРАТЬ ПЕРВЫЕ 1 имяпобедителя ИЗ регистрсведений.матчи ГДЕ названиетурнира = ""Australian Open"" УПОРЯДОЧИТЬ ПО очкипобедителя УБЫВ"
7384;SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1;"ВЫБРАТЬ ПЕРВЫЕ 1 имяпобедителя ИЗ регистрсведений.матчи ГДЕ названиетурнира = ""Australian Open"" УПОРЯДОЧИТЬ ПО очкипобедителя УБЫВ"
7385;SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 имяпобедителя , имяпроигравшего ИЗ регистрсведений.матчи УПОРЯДОЧИТЬ ПО минут УБЫВ
7386;SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 имяпобедителя , имяпроигравшего ИЗ регистрсведений.матчи УПОРЯДОЧИТЬ ПО минут УБЫВ
7387;SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name;ВЫБРАТЬ СРЕДНЕЕ(ranking) , T1.имя ИЗ справочник.игроки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.рейтинги КАК T2 ПО T1.ссылка = T2.игрок СГРУППИРОВАТЬ ПО T1.имя
7388;SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name;ВЫБРАТЬ СРЕДНЕЕ(ranking) , T1.имя ИЗ справочник.игроки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.рейтинги КАК T2 ПО T1.ссылка = T2.игрок СГРУППИРОВАТЬ ПО T1.имя
7389;SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name;ВЫБРАТЬ СУММА(ranking_points) , T1.имя ИЗ справочник.игроки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.рейтинги КАК T2 ПО T1.ссылка = T2.игрок СГРУППИРОВАТЬ ПО T1.имя
7390;SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name;ВЫБРАТЬ СУММА(ranking_points) , T1.имя ИЗ справочник.игроки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.рейтинги КАК T2 ПО T1.ссылка = T2.игрок СГРУППИРОВАТЬ ПО T1.имя
7391;SELECT count(*) ,  country_code FROM players GROUP BY country_code;ВЫБРАТЬ КОЛИЧЕСТВО(*) , кодстраны ИЗ справочник.игроки СГРУППИРОВАТЬ ПО кодстраны
7392;SELECT count(*) ,  country_code FROM players GROUP BY country_code;ВЫБРАТЬ КОЛИЧЕСТВО(*) , кодстраны ИЗ справочник.игроки СГРУППИРОВАТЬ ПО кодстраны
7393;SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 кодстраны ИЗ справочник.игроки СГРУППИРОВАТЬ ПО кодстраны УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
7394;SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 кодстраны ИЗ справочник.игроки СГРУППИРОВАТЬ ПО кодстраны УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
7395;SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50;ВЫБРАТЬ кодстраны ИЗ справочник.игроки СГРУППИРОВАТЬ ПО кодстраны ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 50
7396;SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50;ВЫБРАТЬ кодстраны ИЗ справочник.игроки СГРУППИРОВАТЬ ПО кодстраны ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 50
7397;SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date;ВЫБРАТЬ СУММА(количествотуров) , датарейтинга ИЗ регистрсведений.рейтинги СГРУППИРОВАТЬ ПО датарейтинга
7398;SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date;ВЫБРАТЬ СУММА(количествотуров) , датарейтинга ИЗ регистрсведений.рейтинги СГРУППИРОВАТЬ ПО датарейтинга
7399;SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR;ВЫБРАТЬ КОЛИЧЕСТВО(*) , год FROM matches СГРУППИРОВАТЬ ПО год
7400;SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR;ВЫБРАТЬ КОЛИЧЕСТВО(*) , год FROM matches СГРУППИРОВАТЬ ПО год
7401;SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3;ВЫБРАТЬ ПЕРВЫЕ 3 РАЗЛИЧНЫЕ имяпобедителя , рейтингпобедителя ИЗ регистрсведений.матчи УПОРЯДОЧИТЬ ПО возрастпобедителя
7402;SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3;ВЫБРАТЬ ПЕРВЫЕ 3 РАЗЛИЧНЫЕ имяпобедителя , рейтингпобедителя ИЗ регистрсведений.матчи УПОРЯДОЧИТЬ ПО возрастпобедителя
7403;SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L';"ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ имяпобедителя) ИЗ регистрсведений.матчи ГДЕ названиетурнира = ""WTA Championships"" И рукапобедителя = ""L"""
7404;SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L';"ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ имяпобедителя) ИЗ регистрсведений.матчи ГДЕ названиетурнира = ""WTA Championships"" И рукапобедителя = ""L"""
7405;SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.имя , T1.кодстраны , T1.датарождения ИЗ справочник.игроки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.матчи КАК T2 ПО T1.ссылка = T2.победитель УПОРЯДОЧИТЬ ПО T2.очкипобедителя УБЫВ
7406;SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.имя , T1.кодстраны , T1.датарождения ИЗ справочник.игроки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.матчи КАК T2 ПО T1.ссылка = T2.победитель УПОРЯДОЧИТЬ ПО T2.очкипобедителя УБЫВ
7407;SELECT count(*) ,  hand FROM players GROUP BY hand;ВЫБРАТЬ КОЛИЧЕСТВО(*) , руководящаярука ИЗ справочник.игроки СГРУППИРОВАТЬ ПО руководящаярука
7408;SELECT count(*) ,  hand FROM players GROUP BY hand;ВЫБРАТЬ КОЛИЧЕСТВО(*) , руководящаярука ИЗ справочник.игроки СГРУППИРОВАТЬ ПО руководящаярука
7409;SELECT count(*) FROM ship WHERE disposition_of_ship  =  'Captured';"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.корабли ГДЕ состояниекорабля = ""Captured"""
7410;SELECT name ,  tonnage FROM ship ORDER BY name DESC;ВЫБРАТЬ наименование , водоизмещение ИЗ справочник.корабли УПОРЯДОЧИТЬ ПО наименование УБЫВ
7411;SELECT name ,  date FROM battle;ВЫБРАТЬ наименование , дата ИЗ справочник.битвы
7412;SELECT max(killed) ,  min(killed) FROM death;ВЫБРАТЬ МАКСИМУМ(погибшие) , МИНИМУМ(погибшие) ИЗ регистрсведений.потери
7413;SELECT avg(injured) FROM death;ВЫБРАТЬ СРЕДНЕЕ(раненые) ИЗ регистрсведений.потери
7414;SELECT T1.killed ,  T1.injured FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't';"ВЫБРАТЬ T1.погибшие , T1.раненые ИЗ регистрсведений.потери КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.корабли КАК t2 ПО T1.корабльпричина = T2.id ГДЕ T2.tonnage = ""t"""
7415;SELECT name ,  RESULT FROM battle WHERE bulgarian_commander != 'Boril';"ВЫБРАТЬ наименование , результат ИЗ справочник.битвы ГДЕ командующийболгар <> ""Boril"""
7416;SELECT DISTINCT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.ship_type  =  'Brig';"ВЫБРАТЬ РАЗЛИЧНЫЕ T1.ссылка , T1.наименование ИЗ справочник.битвы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.корабли КАК T2 ПО T1.ссылка = T2.ссылка ГДЕ T2.типкорабля = ""Brig"""
7417;SELECT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle JOIN death AS T3 ON T2.id  =  T3.caused_by_ship_id GROUP BY T1.id HAVING sum(T3.killed)  >  10;ВЫБРАТЬ T1.ссылка , T1.наименование ИЗ справочник.битвы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.корабли КАК T2 ПО T1.ссылка = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.потери КАК T3 ПО T2.битвапотери = T3.корабльпричина СГРУППИРОВАТЬ ПО T1.ссылка ИМЕЮЩИЕ СУММА(T3.погибшие) > 10
7418;SELECT T2.id ,  T2.name FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.id , T2.name ИЗ регистрсведений.потери КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.корабли КАК t2 ПО T1.корабльпричина = T2.id СГРУППИРОВАТЬ ПО T2.id УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
7419;SELECT name FROM battle WHERE bulgarian_commander  =  'Kaloyan' AND latin_commander  =  'Baldwin I';"ВЫБРАТЬ наименование ИЗ справочник.битвы ГДЕ командующийболгар = ""Kaloyan"" И командующийлатинян = ""Baldwin I"""
7420;SELECT count(DISTINCT RESULT) FROM battle;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ результат) ИЗ справочник.битвы
7421;"SELECT count(*) FROM battle WHERE id NOT IN ( SELECT lost_in_battle FROM ship WHERE tonnage  =  '225' );";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.битвы ГДЕ битвапотери НЕ В ( ВЫБРАТЬ ссылка ИЗ справочник.корабли ГДЕ водоизмещение = ""225"" );"
7424;SELECT note FROM death WHERE note LIKE '%East%';"ВЫБРАТЬ примечание ИЗ регистрсведений.потери ГДЕ примечание ПОДОБНО ""%East%"""
7425;SELECT line_1 ,  line_2 FROM addresses;ВЫБРАТЬ строка1 , строка2 ИЗ справочник.адреса
7426;SELECT line_1 ,  line_2 FROM addresses;ВЫБРАТЬ строка1 , строка2 ИЗ справочник.адреса
7427;SELECT count(*) FROM Courses;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.курсы
7428;SELECT count(*) FROM Courses;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.курсы
7429;SELECT course_description FROM Courses WHERE course_name  =  'math';"ВЫБРАТЬ описание ИЗ справочник.курсы ГДЕ наименование = ""math"""
7430;SELECT course_description FROM Courses WHERE course_name  =  'math';"ВЫБРАТЬ описание ИЗ справочник.курсы ГДЕ наименование = ""math"""
7431;SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea';"ВЫБРАТЬ почтовыйиндекс ИЗ справочник.адреса ГДЕ город = ""Port Chelsea"""
7432;SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea';"ВЫБРАТЬ почтовыйиндекс ИЗ справочник.адреса ГДЕ город = ""Port Chelsea"""
7433;SELECT T2.department_name ,  T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.наименование , T1.факультет ИЗ справочник.образовательныепрограммы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.факультеты КАК T2 ПО T1.факультет = T2.ссылка СГРУППИРОВАТЬ ПО T1.факультет УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
7434;select t2.department_name ,  t1.department_id from degree_programs as t1 join departments as t2 on t1.department_id  =  t2.department_id group by t1.department_id order by count(*) desc limit 1;select t2.наименование , t1.факультет from degree_programs as t1 join departments as t2 on t1.факультет = t2.ссылка group by t1.факультет order by КОЛИЧЕСТВО(*) desc limit 1
7435;SELECT count(DISTINCT department_id) FROM Degree_Programs;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ факультет) ИЗ справочник.образовательныепрограммы
7436;SELECT count(DISTINCT department_id) FROM Degree_Programs;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ факультет) ИЗ справочник.образовательныепрограммы
7437;SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ наименование) ИЗ справочник.образовательныепрограммы
7438;SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ наименование) ИЗ справочник.образовательныепрограммы
7439;SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer';"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.факультеты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.образовательныепрограммы КАК T2 ПО T1.ссылка = T2.факультет ГДЕ T1.наименование = ""engineer"""
7440;SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer';"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.факультеты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.образовательныепрограммы КАК T2 ПО T1.ссылка = T2.факультет ГДЕ T1.наименование = ""engineer"""
7441;SELECT section_name ,  section_description FROM Sections;ВЫБРАТЬ наименование , описание ИЗ справочник.группы
7442;SELECT section_name ,  section_description FROM Sections;ВЫБРАТЬ наименование , описание ИЗ справочник.группы
7443;SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2;ВЫБРАТЬ T1.наименование , T1.ссылка ИЗ справочник.курсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.группы КАК T2 ПО T1.ссылка = T2.курс СГРУППИРОВАТЬ ПО T1.ссылка ИМЕЮЩИЕ КОЛИЧЕСТВО(*) <= 2
7444;SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2;ВЫБРАТЬ T1.наименование , T1.ссылка ИЗ справочник.курсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.группы КАК T2 ПО T1.ссылка = T2.курс СГРУППИРОВАТЬ ПО T1.ссылка ИМЕЮЩИЕ КОЛИЧЕСТВО(*) <= 2
7445;SELECT section_name FROM Sections ORDER BY section_name DESC;ВЫБРАТЬ наименование ИЗ справочник.группы УПОРЯДОЧИТЬ ПО наименование УБЫВ
7446;SELECT section_name FROM Sections ORDER BY section_name DESC;ВЫБРАТЬ наименование ИЗ справочник.группы УПОРЯДОЧИТЬ ПО наименование УБЫВ
7447;SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.наименование , T1.ссылка ИЗ справочник.семестры КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.зачислениестудента КАК T2 ПО T1.ссылка = T2.семестр СГРУППИРОВАТЬ ПО T1.ссылка УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
7448;SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.наименование , T1.ссылка ИЗ справочник.семестры КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.зачислениестудента КАК T2 ПО T1.ссылка = T2.семестр СГРУППИРОВАТЬ ПО T1.ссылка УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
7449;SELECT department_description FROM Departments WHERE department_name LIKE '%computer%';"ВЫБРАТЬ описание ИЗ справочник.факультеты ГДЕ наименование ПОДОБНО ""%computer%"""
7450;SELECT department_description FROM Departments WHERE department_name LIKE '%computer%';"ВЫБРАТЬ описание ИЗ справочник.факультеты ГДЕ наименование ПОДОБНО ""%computer%"""
7451;SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2;ВЫБРАТЬ T1.имя , T1.отчество , T1.фамилия , T1.ссылка ИЗ справочник.студенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.зачислениестудента КАК T2 ПО T1.ссылка = T2.студент СГРУППИРОВАТЬ ПО T1.ссылка ИМЕЮЩИЕ КОЛИЧЕСТВО(*) = 2
7452;SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2;ВЫБРАТЬ T1.имя , T1.отчество , T1.фамилия , T1.ссылка ИЗ справочник.студенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.зачислениестудента КАК T2 ПО T1.ссылка = T2.студент СГРУППИРОВАТЬ ПО T1.ссылка ИМЕЮЩИЕ КОЛИЧЕСТВО(*) = 2
7453;SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor';"ВЫБРАТЬ РАЗЛИЧНЫЕ T1.имя , T1.отчество , T1.фамилия ИЗ справочник.студенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.зачислениестудента КАК T2 ПО T1.ссылка = T2.студент ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.образовательныепрограммы КАК T3 ПО T2.программа = T3.ссылка ГДЕ T3.наименование = ""Bachelor"""
7454;SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor';"ВЫБРАТЬ РАЗЛИЧНЫЕ T1.имя , T1.отчество , T1.фамилия ИЗ справочник.студенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.зачислениестудента КАК T2 ПО T1.ссылка = T2.студент ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.образовательныепрограммы КАК T3 ПО T2.программа = T3.ссылка ГДЕ T3.наименование = ""Bachelor"""
7455;SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.наименование ИЗ справочник.образовательныепрограммы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.зачислениестудента КАК T2 ПО T1.ссылка = T2.программа СГРУППИРОВАТЬ ПО T1.наименование УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
7456;SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.наименование ИЗ справочник.образовательныепрограммы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.зачислениестудента КАК T2 ПО T1.ссылка = T2.программа СГРУППИРОВАТЬ ПО T1.наименование УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
7457;SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.ссылка , T1.наименование ИЗ справочник.образовательныепрограммы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.зачислениестудента КАК T2 ПО T1.ссылка = T2.программа СГРУППИРОВАТЬ ПО T1.ссылка УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
7458;SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.ссылка , T1.наименование ИЗ справочник.образовательныепрограммы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.зачислениестудента КАК T2 ПО T1.ссылка = T2.программа СГРУППИРОВАТЬ ПО T1.ссылка УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
7459;SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.ссылка , T1.имя , T1.отчество , T1.фамилия , КОЛИЧЕСТВО(*) , T1.ссылка ИЗ справочник.студенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.зачислениестудента КАК T2 ПО T1.ссылка = T2.студент СГРУППИРОВАТЬ ПО T1.ссылка УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
7460;SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.ссылка , T1.имя , T1.отчество , T1.фамилия , КОЛИЧЕСТВО(*) , T1.ссылка ИЗ справочник.студенты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.зачислениестудента КАК T2 ПО T1.ссылка = T2.студент СГРУППИРОВАТЬ ПО T1.ссылка УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
7461;SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment );ВЫБРАТЬ semester_name ИЗ справочник.семестры ГДЕ semester_id NOT IN( ВЫБРАТЬ semester_id ИЗ документ.зачислениестудента )
7462;SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment );ВЫБРАТЬ semester_name ИЗ справочник.семестры ГДЕ semester_id NOT IN( ВЫБРАТЬ semester_id ИЗ документ.зачислениестудента )
7463;SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id;ВЫБРАТЬ РАЗЛИЧНЫЕ T1.наименование ИЗ справочник.курсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.записиокурсахстудентов КАК T2 ПО T1.ссылка = T2.курс
7464;SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id;ВЫБРАТЬ РАЗЛИЧНЫЕ T1.наименование ИЗ справочник.курсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.записиокурсахстудентов КАК T2 ПО T1.ссылка = T2.курс
7465;SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.наименование ИЗ справочник.курсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.записиокурсахстудентов КАК T2 ПО T1.ссылка = T2.курс СГРУППИРОВАТЬ ПО T1.наименование УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
7466;SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.наименование ИЗ справочник.курсы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.записиокурсахстудентов КАК T2 ПО T1.ссылка = T2.курс СГРУППИРОВАТЬ ПО T1.наименование УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
7469;SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2;ВЫБРАТЬ T2.дата , T1.справка ИЗ регистрсведений.содержимоесправок КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.академическаясправка КАК T2 ПО T1.справка = T2.ссылка СГРУППИРОВАТЬ ПО T1.справка ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
7470;SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2;ВЫБРАТЬ T2.дата , T1.справка ИЗ регистрсведений.содержимоесправок КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.академическаясправка КАК T2 ПО T1.справка = T2.ссылка СГРУППИРОВАТЬ ПО T1.справка ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
7471;SELECT cell_mobile_number FROM Students WHERE first_name  =  'Timmothy' AND last_name  =  'Ward';"ВЫБРАТЬ мобильныйтелефон ИЗ справочник.студенты ГДЕ имя = ""Timmothy"" И фамилия = ""Ward"""
7472;select cell_mobile_number from students where first_name  =  'timmothy' and last_name  =  'ward';"select мобильныйтелефон from students where имя = ""timmothy"" and фамилия = ""ward"""
7473;SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 имя , отчество , фамилия ИЗ справочник.студенты УПОРЯДОЧИТЬ ПО датапервичнойрегистрации ВОЗР
7474;SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 имя , отчество , фамилия ИЗ справочник.студенты УПОРЯДОЧИТЬ ПО датапервичнойрегистрации ВОЗР
7475;SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 имя , отчество , фамилия ИЗ справочник.студенты УПОРЯДОЧИТЬ ПО датаотчисления ВОЗР
7476;SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 имя , отчество , фамилия ИЗ справочник.студенты УПОРЯДОЧИТЬ ПО датаотчисления ВОЗР
7477;SELECT first_name FROM Students WHERE current_address_id != permanent_address_id;ВЫБРАТЬ имя ИЗ справочник.студенты ГДЕ адрестекущий <> адреспостоянный
7478;SELECT first_name FROM Students WHERE current_address_id != permanent_address_id;ВЫБРАТЬ имя ИЗ справочник.студенты ГДЕ адрестекущий <> адреспостоянный
7479;SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.ссылка , T1.строка1 , T1.строка2 ИЗ справочник.адреса КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК T2 ПО T1.ссылка = T2.адрестекущий СГРУППИРОВАТЬ ПО T1.ссылка УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
7480;SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.ссылка , T1.строка1 , T1.строка2 ИЗ справочник.адреса КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.студенты КАК T2 ПО T1.ссылка = T2.адрестекущий СГРУППИРОВАТЬ ПО T1.ссылка УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
7481;SELECT avg(transcript_date) FROM Transcripts;ВЫБРАТЬ СРЕДНЕЕ(дата) ИЗ документ.академическаясправка
7482;SELECT avg(transcript_date) FROM Transcripts;ВЫБРАТЬ СРЕДНЕЕ(дата) ИЗ документ.академическаясправка
7483;SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 дата , дополнительно ИЗ документ.академическаясправка УПОРЯДОЧИТЬ ПО дата ВОЗР
7484;SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 дата , дополнительно ИЗ документ.академическаясправка УПОРЯДОЧИТЬ ПО дата ВОЗР
7485;SELECT count(*) FROM Transcripts;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ документ.академическаясправка
7486;SELECT count(*) FROM Transcripts;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ документ.академическаясправка
7487;SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 дата ИЗ документ.академическаясправка УПОРЯДОЧИТЬ ПО дата УБЫВ
7488;SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 дата ИЗ документ.академическаясправка УПОРЯДОЧИТЬ ПО дата УБЫВ
7489;SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 КОЛИЧЕСТВО(*) , курсстудента ИЗ регистрсведений.содержимоесправок СГРУППИРОВАТЬ ПО курсстудента УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
7490;SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 КОЛИЧЕСТВО(*) , курсстудента ИЗ регистрсведений.содержимоесправок СГРУППИРОВАТЬ ПО курсстудента УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
7491;SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.дата , T1.справка ИЗ регистрсведений.содержимоесправок КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.академическаясправка КАК T2 ПО T1.справка = T2.ссылка СГРУППИРОВАТЬ ПО T1.справка УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) ВОЗР
7492;SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.дата , T1.справка ИЗ регистрсведений.содержимоесправок КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ документ.академическаясправка КАК T2 ПО T1.справка = T2.ссылка СГРУППИРОВАТЬ ПО T1.справка УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) ВОЗР
7495;SELECT count(DISTINCT current_address_id) FROM Students;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ адрестекущий) ИЗ справочник.студенты
7496;SELECT count(DISTINCT current_address_id) FROM Students;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ адрестекущий) ИЗ справочник.студенты
7497;SELECT other_student_details FROM Students ORDER BY other_student_details DESC;ВЫБРАТЬ дополнительно ИЗ справочник.студенты УПОРЯДОЧИТЬ ПО дополнительно УБЫВ
7498;SELECT other_student_details FROM Students ORDER BY other_student_details DESC;ВЫБРАТЬ дополнительно ИЗ справочник.студенты УПОРЯДОЧИТЬ ПО дополнительно УБЫВ
7499;SELECT section_description FROM Sections WHERE section_name  =  'h';"ВЫБРАТЬ описание ИЗ справочник.группы ГДЕ наименование = ""h"""
7500;SELECT section_description FROM Sections WHERE section_name  =  'h';"ВЫБРАТЬ описание ИЗ справочник.группы ГДЕ наименование = ""h"""
7501;select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country  =  'haiti' or t1.cell_mobile_number  =  '09700166582';"select t1.имя from students as t1 join addresses as t2 on t1.адреспостоянный = t2.ссылка where t2.страна = ""haiti"" or t1.мобильныйтелефон = ""09700166582"""
7502;select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country  =  'haiti' or t1.cell_mobile_number  =  '09700166582';"select t1.имя from students as t1 join addresses as t2 on t1.адреспостоянный = t2.ссылка where t2.страна = ""haiti"" or t1.мобильныйтелефон = ""09700166582"""
7503;SELECT Title FROM Cartoon ORDER BY title;ВЫБРАТЬ название ИЗ справочник.мультфильмы УПОРЯДОЧИТЬ ПО название
7504;SELECT Title FROM Cartoon ORDER BY title;ВЫБРАТЬ название ИЗ справочник.мультфильмы УПОРЯДОЧИТЬ ПО название
7505;"SELECT Title FROM Cartoon WHERE Directed_by = ""Ben Jones"";";"ВЫБРАТЬ название ИЗ справочник.мультфильмы ГДЕ режиссер = ""Ben Jones"";"
7506;"SELECT Title FROM Cartoon WHERE Directed_by = ""Ben Jones"";";"ВЫБРАТЬ название ИЗ справочник.мультфильмы ГДЕ режиссер = ""Ben Jones"";"
7507;"SELECT count(*) FROM Cartoon WHERE Written_by = ""Joseph Kuhr"";";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.мультфильмы ГДЕ сценарист = ""Joseph Kuhr"";"
7508;"SELECT count(*) FROM Cartoon WHERE Written_by = ""Joseph Kuhr"";";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.мультфильмы ГДЕ сценарист = ""Joseph Kuhr"";"
7509;SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date;ВЫБРАТЬ название , режиссер ИЗ справочник.мультфильмы УПОРЯДОЧИТЬ ПО датапоказа
7510;SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date;ВЫБРАТЬ название , режиссер ИЗ справочник.мультфильмы УПОРЯДОЧИТЬ ПО датапоказа
7511;"SELECT Title FROM Cartoon WHERE Directed_by = ""Ben Jones"" OR Directed_by = ""Brandon Vietti"";";"ВЫБРАТЬ название ИЗ справочник.мультфильмы ГДЕ режиссер = ""Ben Jones"" ИЛИ режиссер = ""Brandon Vietti"";"
7512;"SELECT Title FROM Cartoon WHERE Directed_by = ""Ben Jones"" OR Directed_by = ""Brandon Vietti"";";"ВЫБРАТЬ название ИЗ справочник.мультфильмы ГДЕ режиссер = ""Ben Jones"" ИЛИ режиссер = ""Brandon Vietti"";"
7513;"SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;";"ВЫБРАТЬ страна , КОЛИЧЕСТВО(*) ИЗ справочник.телеканалы СГРУППИРОВАТЬ ПО страна УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ LIMIT 1;"
7514;"SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;";"ВЫБРАТЬ страна , КОЛИЧЕСТВО(*) ИЗ справочник.телеканалы СГРУППИРОВАТЬ ПО страна УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ LIMIT 1;"
7515;"SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;";"ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ названиесериала) , КОЛИЧЕСТВО(РАЗЛИЧНЫЕ контент) ИЗ справочник.телеканалы;"
7516;"SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;";"ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ названиесериала) , КОЛИЧЕСТВО(РАЗЛИЧНЫЕ контент) ИЗ справочник.телеканалы;"
7517;"SELECT Content FROM TV_Channel WHERE series_name = ""Sky Radio"";";"ВЫБРАТЬ контент ИЗ справочник.телеканалы ГДЕ названиесериала = ""Sky Radio"";"
7518;"SELECT Content FROM TV_Channel WHERE series_name = ""Sky Radio"";";"ВЫБРАТЬ контент ИЗ справочник.телеканалы ГДЕ названиесериала = ""Sky Radio"";"
7519;"SELECT Package_Option FROM TV_Channel WHERE series_name = ""Sky Radio"";";"ВЫБРАТЬ пакет ИЗ справочник.телеканалы ГДЕ названиесериала = ""Sky Radio"";"
7520;"SELECT Package_Option FROM TV_Channel WHERE series_name = ""Sky Radio"";";"ВЫБРАТЬ пакет ИЗ справочник.телеканалы ГДЕ названиесериала = ""Sky Radio"";"
7521;"SELECT count(*) FROM TV_Channel WHERE LANGUAGE = ""English"";";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.телеканалы ГДЕ язык = ""English"";"
7522;"SELECT count(*) FROM TV_Channel WHERE LANGUAGE = ""English"";";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.телеканалы ГДЕ язык = ""English"";"
7523;"SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;";"ВЫБРАТЬ язык , КОЛИЧЕСТВО(*) ИЗ справочник.телеканалы СГРУППИРОВАТЬ ПО язык УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) ВОЗР LIMIT 1;"
7524;"SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;";"ВЫБРАТЬ язык , КОЛИЧЕСТВО(*) ИЗ справочник.телеканалы СГРУППИРОВАТЬ ПО язык УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) ВОЗР LIMIT 1;"
7525;SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE;ВЫБРАТЬ язык , КОЛИЧЕСТВО(*) ИЗ справочник.телеканалы СГРУППИРОВАТЬ ПО язык
7526;SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE;ВЫБРАТЬ язык , КОЛИЧЕСТВО(*) ИЗ справочник.телеканалы СГРУППИРОВАТЬ ПО язык
7527;"SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = ""The Rise of the Blue Beetle!"";";"ВЫБРАТЬ T1.названиесериала ИЗ справочник.телеканалы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.мультфильмы КАК T2 ПО T1.ссылка = T2.канал ГДЕ T2.название = ""The Rise of the Blue Beetle!"";"
7528;"SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = ""The Rise of the Blue Beetle!"";";"ВЫБРАТЬ T1.названиесериала ИЗ справочник.телеканалы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.мультфильмы КАК T2 ПО T1.ссылка = T2.канал ГДЕ T2.название = ""The Rise of the Blue Beetle!"";"
7529;"SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = ""Sky Radio"";";"ВЫБРАТЬ T2.название ИЗ справочник.телеканалы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.мультфильмы КАК T2 ПО T1.ссылка = T2.канал ГДЕ T1.названиесериала = ""Sky Radio"";"
7530;"SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = ""Sky Radio"";";"ВЫБРАТЬ T2.название ИЗ справочник.телеканалы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.мультфильмы КАК T2 ПО T1.ссылка = T2.канал ГДЕ T1.названиесериала = ""Sky Radio"";"
7531;SELECT Episode FROM TV_series ORDER BY rating;ВЫБРАТЬ эпизод ИЗ справочник.твсерии УПОРЯДОЧИТЬ ПО рейтинг
7532;SELECT Episode FROM TV_series ORDER BY rating;ВЫБРАТЬ эпизод ИЗ справочник.твсерии УПОРЯДОЧИТЬ ПО рейтинг
7533;"SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;";"ВЫБРАТЬ эпизод , рейтинг ИЗ справочник.твсерии УПОРЯДОЧИТЬ ПО рейтинг УБЫВ LIMIT 3;"
7534;"SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;";"ВЫБРАТЬ эпизод , рейтинг ИЗ справочник.твсерии УПОРЯДОЧИТЬ ПО рейтинг УБЫВ LIMIT 3;"
7535;"SELECT max(SHARE) , min(SHARE) FROM TV_series;";"ВЫБРАТЬ МАКСИМУМ(доля) , МИНИМУМ(доля) ИЗ справочник.твсерии;"
7536;"SELECT max(SHARE) , min(SHARE) FROM TV_series;";"ВЫБРАТЬ МАКСИМУМ(доля) , МИНИМУМ(доля) ИЗ справочник.твсерии;"
7537;"SELECT Air_Date FROM TV_series WHERE Episode = ""A Love of a Lifetime"";";"ВЫБРАТЬ датавыхода ИЗ справочник.твсерии ГДЕ эпизод = ""A Love of a Lifetime"";"
7538;"SELECT Air_Date FROM TV_series WHERE Episode = ""A Love of a Lifetime"";";"ВЫБРАТЬ датавыхода ИЗ справочник.твсерии ГДЕ эпизод = ""A Love of a Lifetime"";"
7539;"SELECT Weekly_Rank FROM TV_series WHERE Episode = ""A Love of a Lifetime"";";"ВЫБРАТЬ рангнедели ИЗ справочник.твсерии ГДЕ эпизод = ""A Love of a Lifetime"";"
7540;"SELECT Weekly_Rank FROM TV_series WHERE Episode = ""A Love of a Lifetime"";";"ВЫБРАТЬ рангнедели ИЗ справочник.твсерии ГДЕ эпизод = ""A Love of a Lifetime"";"
7541;"SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = ""A Love of a Lifetime"";";"ВЫБРАТЬ T1.названиесериала ИЗ справочник.телеканалы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.твсерии КАК T2 ПО T1.ссылка = T2.канал ГДЕ T2.эпизод = ""A Love of a Lifetime"";"
7542;"SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = ""A Love of a Lifetime"";";"ВЫБРАТЬ T1.названиесериала ИЗ справочник.телеканалы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.твсерии КАК T2 ПО T1.ссылка = T2.канал ГДЕ T2.эпизод = ""A Love of a Lifetime"";"
7543;"SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = ""Sky Radio"";";"ВЫБРАТЬ T2.эпизод ИЗ справочник.телеканалы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.твсерии КАК T2 ПО T1.ссылка = T2.канал ГДЕ T1.названиесериала = ""Sky Radio"";"
7544;"SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = ""Sky Radio"";";"ВЫБРАТЬ T2.эпизод ИЗ справочник.телеканалы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.твсерии КАК T2 ПО T1.ссылка = T2.канал ГДЕ T1.названиесериала = ""Sky Radio"";"
7545;SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by;ВЫБРАТЬ КОЛИЧЕСТВО(*) , режиссер ИЗ справочник.мультфильмы СГРУППИРОВАТЬ ПО режиссер
7546;SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by;ВЫБРАТЬ КОЛИЧЕСТВО(*) , режиссер ИЗ справочник.мультфильмы СГРУППИРОВАТЬ ПО режиссер
7547;select production_code ,  channel from cartoon order by original_air_date desc limit 1;select кодпроизводства , канал from cartoon order by датапоказа desc limit 1
7548;select production_code ,  channel from cartoon order by original_air_date desc limit 1;select кодпроизводства , канал from cartoon order by датапоказа desc limit 1
7549;"SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  ""yes""";"ВЫБРАТЬ пакет , названиесериала ИЗ справочник.телеканалы ГДЕ hdtv = ""yes"""
7550;"SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  ""yes""";"ВЫБРАТЬ пакет , названиесериала ИЗ справочник.телеканалы ГДЕ hdtv = ""yes"""
7551;SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey';"ВЫБРАТЬ T1.страна ИЗ справочник.телеканалы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.мультфильмы КАК T2 ПО T1.ссылка = T2.канал ГДЕ T2.сценарист = ""Todd Casey"""
7552;SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey';"ВЫБРАТЬ T1.страна ИЗ справочник.телеканалы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.мультфильмы КАК T2 ПО T1.ссылка = T2.канал ГДЕ T2.сценарист = ""Todd Casey"""
7557;SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English';"ВЫБРАТЬ аспектноесоотношение , страна ИЗ справочник.телеканалы ГДЕ язык <> ""English"""
7558;SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English';"ВЫБРАТЬ аспектноесоотношение , страна ИЗ справочник.телеканалы ГДЕ язык <> ""English"""
7559;SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2;ВЫБРАТЬ ссылка ИЗ справочник.телеканалы СГРУППИРОВАТЬ ПО страна ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 2
7560;SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2;ВЫБРАТЬ ссылка ИЗ справочник.телеканалы СГРУППИРОВАТЬ ПО страна ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 2
7563;SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones');"ВЫБРАТЬ package_option ИЗ справочник.телеканалы ГДЕ ссылка НЕ В (ВЫБРАТЬ канал ИЗ справочник.мультфильмы ГДЕ режиссер = ""Ben Jones"")"
7564;SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones');"ВЫБРАТЬ package_option ИЗ справочник.телеканалы ГДЕ ссылка НЕ В (ВЫБРАТЬ канал ИЗ справочник.мультфильмы ГДЕ режиссер = ""Ben Jones"")"
7565;SELECT count(*) FROM poker_player;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.люди
7566;SELECT count(*) FROM poker_player;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.люди
7567;SELECT Earnings FROM poker_player ORDER BY Earnings DESC;ВЫБРАТЬ Earnings ИЗ справочник.люди УПОРЯДОЧИТЬ ПО Earnings УБЫВ
7568;SELECT Earnings FROM poker_player ORDER BY Earnings DESC;ВЫБРАТЬ Earnings ИЗ справочник.люди УПОРЯДОЧИТЬ ПО Earnings УБЫВ
7569;SELECT Final_Table_Made ,  Best_Finish FROM poker_player;ВЫБРАТЬ наименование , датарождения ИЗ справочник.люди
7570;SELECT Final_Table_Made ,  Best_Finish FROM poker_player;ВЫБРАТЬ наименование , датарождения ИЗ справочник.люди
7571;SELECT avg(Earnings) FROM poker_player;ВЫБРАТЬ СРЕДНЕЕ(Earnings) ИЗ справочник.люди
7572;SELECT avg(Earnings) FROM poker_player;ВЫБРАТЬ СРЕДНЕЕ(Earnings) ИЗ справочник.люди
7573;SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 рост ИЗ справочник.люди УПОРЯДОЧИТЬ ПО Earnings УБЫВ
7574;SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 рост ИЗ справочник.люди УПОРЯДОЧИТЬ ПО Earnings УБЫВ
7575;SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000;ВЫБРАТЬ МАКСИМУМ(наименование) ИЗ справочник.люди ГДЕ Earnings < 200000
7576;SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000;ВЫБРАТЬ МАКСИМУМ(наименование) ИЗ справочник.люди ГДЕ Earnings < 200000
7577;SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID;ВЫБРАТЬ T1.финальныестолы ИЗ справочник.покерныеигроки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.люди КАК T2 ПО T1.ссылка = T2.гражданство
7578;SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID;ВЫБРАТЬ T1.финальныестолы ИЗ справочник.покерныеигроки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.люди КАК T2 ПО T1.ссылка = T2.гражданство
7579;SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000;ВЫБРАТЬ T1.финальныестолы ИЗ справочник.покерныеигроки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.люди КАК T2 ПО T1.ссылка = T2.гражданство ГДЕ T2.Earnings > 300000
7580;SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000;ВЫБРАТЬ T1.финальныестолы ИЗ справочник.покерныеигроки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.люди КАК T2 ПО T1.ссылка = T2.гражданство ГДЕ T2.Earnings > 300000
7581;SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made;ВЫБРАТЬ T1.финальныестолы ИЗ справочник.покерныеигроки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.люди КАК T2 ПО T1.ссылка = T2.гражданство УПОРЯДОЧИТЬ ПО T2.наименование
7582;SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made;ВЫБРАТЬ T1.финальныестолы ИЗ справочник.покерныеигроки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.люди КАК T2 ПО T1.ссылка = T2.гражданство УПОРЯДОЧИТЬ ПО T2.наименование
7583;SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.лучшийрезультат ИЗ справочник.покерныеигроки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.люди КАК T2 ПО T1.ссылка = T2.гражданство УПОРЯДОЧИТЬ ПО T2.Earnings ВОЗР
7584;SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.лучшийрезультат ИЗ справочник.покерныеигроки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.люди КАК T2 ПО T1.ссылка = T2.гражданство УПОРЯДОЧИТЬ ПО T2.Earnings ВОЗР
7585;SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.рост ИЗ справочник.покерныеигроки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.люди КАК T2 ПО T1.ссылка = T2.гражданство УПОРЯДОЧИТЬ ПО T1.денежныйрейтинг УБЫВ
7586;SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.рост ИЗ справочник.покерныеигроки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.люди КАК T2 ПО T1.ссылка = T2.гражданство УПОРЯДОЧИТЬ ПО T1.денежныйрейтинг УБЫВ
7587;SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200;ВЫБРАТЬ СРЕДНЕЕ(T2.Earnings) ИЗ справочник.покерныеигроки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.люди КАК T2 ПО T1.ссылка = T2.гражданство ГДЕ T1.денежныйрейтинг > 200
7588;SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200;ВЫБРАТЬ СРЕДНЕЕ(T2.Earnings) ИЗ справочник.покерныеигроки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.люди КАК T2 ПО T1.ссылка = T2.гражданство ГДЕ T1.денежныйрейтинг > 200
7589;SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC;ВЫБРАТЬ T1.финальныестолы ИЗ справочник.покерныеигроки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.люди КАК T2 ПО T1.ссылка = T2.гражданство УПОРЯДОЧИТЬ ПО T2.Earnings УБЫВ
7590;SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC;ВЫБРАТЬ T1.финальныестолы ИЗ справочник.покерныеигроки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.люди КАК T2 ПО T1.ссылка = T2.гражданство УПОРЯДОЧИТЬ ПО T2.Earnings УБЫВ
7591;SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality;ВЫБРАТЬ человек , КОЛИЧЕСТВО(*) ИЗ справочник.покерныеигроки СГРУППИРОВАТЬ ПО человек
7592;SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality;ВЫБРАТЬ человек , КОЛИЧЕСТВО(*) ИЗ справочник.покерныеигроки СГРУППИРОВАТЬ ПО человек
7593;SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 человек ИЗ справочник.покерныеигроки СГРУППИРОВАТЬ ПО человек УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
7594;SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 человек ИЗ справочник.покерныеигроки СГРУППИРОВАТЬ ПО человек УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
7595;SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2;ВЫБРАТЬ человек ИЗ справочник.покерныеигроки СГРУППИРОВАТЬ ПО человек ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
7596;SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2;ВЫБРАТЬ человек ИЗ справочник.покерныеигроки СГРУППИРОВАТЬ ПО человек ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
7597;SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC;ВЫБРАТЬ финальныестолы , лучшийрезультат ИЗ справочник.покерныеигроки УПОРЯДОЧИТЬ ПО финальныестолы ВОЗР
7598;SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC;ВЫБРАТЬ финальныестолы , лучшийрезультат ИЗ справочник.покерныеигроки УПОРЯДОЧИТЬ ПО финальныестолы ВОЗР
7599;"SELECT Name FROM people WHERE Nationality != ""Russia""";"ВЫБРАТЬ финальныестолы ИЗ справочник.покерныеигроки ГДЕ человек <> ""Russia"""
7600;"SELECT Name FROM people WHERE Nationality != ""Russia""";"ВЫБРАТЬ финальныестолы ИЗ справочник.покерныеигроки ГДЕ человек <> ""Russia"""
7601;SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player);ВЫБРАТЬ Name ИЗ справочник.покерныеигроки ГДЕ People_ID НЕ В (ВЫБРАТЬ People_ID ИЗ справочник.люди)
7602;SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player);ВЫБРАТЬ Name ИЗ справочник.покерныеигроки ГДЕ People_ID НЕ В (ВЫБРАТЬ People_ID ИЗ справочник.люди)
7603;SELECT count(DISTINCT Nationality) FROM people;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ человек) ИЗ справочник.покерныеигроки
7604;SELECT count(DISTINCT Nationality) FROM people;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ человек) ИЗ справочник.покерныеигроки
7605;SELECT count(*) FROM area_code_state;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.кодырегионов
7606;SELECT contestant_number ,  contestant_name FROM contestants ORDER BY contestant_name DESC;ВЫБРАТЬ ссылка , наименование ИЗ справочник.участники УПОРЯДОЧИТЬ ПО наименование УБЫВ
7607;SELECT vote_id ,  phone_number ,  state FROM votes;ВЫБРАТЬ ссылка , телефон , штат ИЗ регистрсведений.голоса
7608;SELECT max(area_code) ,  min(area_code) FROM area_code_state;ВЫБРАТЬ МАКСИМУМ(код) , МИНИМУМ(код) ИЗ справочник.кодырегионов
7609;SELECT max(created) FROM votes WHERE state  =  'CA';"ВЫБРАТЬ МАКСИМУМ(датасоздания) ИЗ регистрсведений.голоса ГДЕ штат = ""CA"""
7610;SELECT contestant_name FROM contestants WHERE contestant_name != 'Jessie Alloway';"ВЫБРАТЬ наименование ИЗ справочник.участники ГДЕ наименование <> ""Jessie Alloway"""
7611;SELECT DISTINCT state ,  created FROM votes;ВЫБРАТЬ РАЗЛИЧНЫЕ штат , датасоздания ИЗ регистрсведений.голоса
7612;SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number HAVING count(*)  >=  2;ВЫБРАТЬ T1.ссылка , T1.наименование ИЗ справочник.участники КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.голоса КАК T2 ПО T1.ссылка = T2.участник СГРУППИРОВАТЬ ПО T1.ссылка ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
7613;SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number ORDER BY count(*) ASC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.ссылка , T1.наименование ИЗ справочник.участники КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.голоса КАК T2 ПО T1.ссылка = T2.участник СГРУППИРОВАТЬ ПО T1.ссылка УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) ВОЗР
7614;SELECT count(*) FROM votes WHERE state  =  'NY' OR state  =  'CA';"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.голоса ГДЕ штат = ""NY"" ИЛИ штат = ""CA"""
7615;SELECT count(*) FROM contestants WHERE contestant_number NOT IN ( SELECT contestant_number FROM votes );ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.участники ГДЕ contestant_number НЕ В ( ВЫБРАТЬ contestant_number ИЗ регистрсведений.голоса )
7616;SELECT T1.area_code FROM area_code_state AS T1 JOIN votes AS T2 ON T1.state  =  T2.state GROUP BY T1.area_code ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.код ИЗ справочник.кодырегионов КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.голоса КАК T2 ПО T1.штат = T2.штат СГРУППИРОВАТЬ ПО T1.код УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
7617;SELECT T2.created ,  T2.state ,  T2.phone_number FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number WHERE T1.contestant_name  =  'Tabatha Gehling';"ВЫБРАТЬ T2.датасоздания , T2.штат , T2.телефон ИЗ справочник.участники КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.голоса КАК T2 ПО T1.ссылка = T2.участник ГДЕ T1.наименование = ""Tabatha Gehling"""
7619;"select contestant_name from contestants where contestant_name like ""%al%""";"select наименование from contestants where наименование like ""%al%"""
7620;SELECT Name FROM country WHERE IndepYear  >  1950;ВЫБРАТЬ наименование ИЗ справочник.страны ГДЕ годнезависимости > 1950
7621;SELECT Name FROM country WHERE IndepYear  >  1950;ВЫБРАТЬ наименование ИЗ справочник.страны ГДЕ годнезависимости > 1950
7622;"SELECT count(*) FROM country WHERE GovernmentForm  =  ""Republic""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.страны ГДЕ формаправления = ""Republic"""
7623;"SELECT count(*) FROM country WHERE GovernmentForm  =  ""Republic""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.страны ГДЕ формаправления = ""Republic"""
7624;"SELECT sum(SurfaceArea) FROM country WHERE Region  =  ""Caribbean""";"ВЫБРАТЬ СУММА(площадь) ИЗ справочник.страны ГДЕ регион = ""Caribbean"""
7625;"SELECT sum(SurfaceArea) FROM country WHERE Region  =  ""Caribbean""";"ВЫБРАТЬ СУММА(площадь) ИЗ справочник.страны ГДЕ регион = ""Caribbean"""
7626;"SELECT Continent FROM country WHERE Name  =  ""Anguilla""";"ВЫБРАТЬ континент ИЗ справочник.страны ГДЕ наименование = ""Anguilla"""
7627;"SELECT Continent FROM country WHERE Name  =  ""Anguilla""";"ВЫБРАТЬ континент ИЗ справочник.страны ГДЕ наименование = ""Anguilla"""
7628;"SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  ""Kabul""";"ВЫБРАТЬ Region ИЗ справочник.страны КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.города КАК T2 ПО T1.код = T2.кодстраны ГДЕ T2.наименование = ""Kabul"""
7629;"SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  ""Kabul""";"ВЫБРАТЬ Region ИЗ справочник.страны КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.города КАК T2 ПО T1.код = T2.кодстраны ГДЕ T2.наименование = ""Kabul"""
7630;"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  ""Aruba"" ORDER BY Percentage DESC LIMIT 1";"ВЫБРАТЬ ПЕРВЫЕ 1 T2.язык ИЗ справочник.страны КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.языкистран КАК T2 ПО T1.код = T2.кодстраны ГДЕ T1.наименование = ""Aruba"" УПОРЯДОЧИТЬ ПО Percentage УБЫВ"
7631;"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  ""Aruba"" ORDER BY Percentage DESC LIMIT 1";"ВЫБРАТЬ ПЕРВЫЕ 1 T2.язык ИЗ справочник.страны КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.языкистран КАК T2 ПО T1.код = T2.кодстраны ГДЕ T1.наименование = ""Aruba"" УПОРЯДОЧИТЬ ПО Percentage УБЫВ"
7632;"SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  ""Brazil""";"ВЫБРАТЬ население , ожидаемаяпродолжительностьжизни ИЗ справочник.страны ГДЕ наименование = ""Brazil"""
7633;"SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  ""Brazil""";"ВЫБРАТЬ население , ожидаемаяпродолжительностьжизни ИЗ справочник.страны ГДЕ наименование = ""Brazil"""
7634;"SELECT Population ,  Region FROM country WHERE Name  =  ""Angola""";"ВЫБРАТЬ население , регион ИЗ справочник.страны ГДЕ наименование = ""Angola"""
7635;"SELECT Population ,  Region FROM country WHERE Name  =  ""Angola""";"ВЫБРАТЬ население , регион ИЗ справочник.страны ГДЕ наименование = ""Angola"""
7636;"SELECT avg(LifeExpectancy) FROM country WHERE Region  =  ""Central Africa""";"ВЫБРАТЬ СРЕДНЕЕ(ожидаемаяпродолжительностьжизни) ИЗ справочник.страны ГДЕ регион = ""Central Africa"""
7637;"SELECT avg(LifeExpectancy) FROM country WHERE Region  =  ""Central Africa""";"ВЫБРАТЬ СРЕДНЕЕ(ожидаемаяпродолжительностьжизни) ИЗ справочник.страны ГДЕ регион = ""Central Africa"""
7638;"SELECT Name FROM country WHERE Continent  =  ""Asia"" ORDER BY LifeExpectancy LIMIT 1";"ВЫБРАТЬ ПЕРВЫЕ 1 наименование ИЗ справочник.страны ГДЕ континент = ""Asia"" УПОРЯДОЧИТЬ ПО ожидаемаяпродолжительностьжизни"
7639;"SELECT Name FROM country WHERE Continent  =  ""Asia"" ORDER BY LifeExpectancy LIMIT 1";"ВЫБРАТЬ ПЕРВЫЕ 1 наименование ИЗ справочник.страны ГДЕ континент = ""Asia"" УПОРЯДОЧИТЬ ПО ожидаемаяпродолжительностьжизни"
7640;"SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  ""Asia""";"ВЫБРАТЬ СУММА(население) , МАКСИМУМ(внп) ИЗ справочник.страны ГДЕ континент = ""Asia"""
7641;"SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  ""Asia""";"ВЫБРАТЬ СУММА(население) , МАКСИМУМ(внп) ИЗ справочник.страны ГДЕ континент = ""Asia"""
7642;"SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  ""Africa"" AND GovernmentForm  =  ""Republic""";"ВЫБРАТЬ СРЕДНЕЕ(ожидаемаяпродолжительностьжизни) ИЗ справочник.страны ГДЕ континент = ""Africa"" И формаправления = ""Republic"""
7643;"SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  ""Africa"" AND GovernmentForm  =  ""Republic""";"ВЫБРАТЬ СРЕДНЕЕ(ожидаемаяпродолжительностьжизни) ИЗ справочник.страны ГДЕ континент = ""Africa"" И формаправления = ""Republic"""
7644;"SELECT sum(SurfaceArea) FROM country WHERE Continent  =  ""Asia"" OR Continent  =  ""Europe""";"ВЫБРАТЬ СУММА(площадь) ИЗ справочник.страны ГДЕ континент = ""Asia"" ИЛИ континент = ""Europe"""
7645;"SELECT sum(SurfaceArea) FROM country WHERE Continent  =  ""Asia"" OR Continent  =  ""Europe""";"ВЫБРАТЬ СУММА(площадь) ИЗ справочник.страны ГДЕ континент = ""Asia"" ИЛИ континент = ""Europe"""
7646;"SELECT sum(Population) FROM city WHERE District  =  ""Gelderland""";"ВЫБРАТЬ СУММА(численность) ИЗ справочник.города ГДЕ район = ""Gelderland"""
7647;"SELECT sum(Population) FROM city WHERE District  =  ""Gelderland""";"ВЫБРАТЬ СУММА(численность) ИЗ справочник.города ГДЕ район = ""Gelderland"""
7648;"SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  ""US Territory""";"ВЫБРАТЬ СРЕДНЕЕ(внп) , СУММА(население) ИЗ справочник.страны ГДЕ формаправления = ""US Territory"""
7649;"SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  ""US Territory""";"ВЫБРАТЬ СРЕДНЕЕ(внп) , СУММА(население) ИЗ справочник.страны ГДЕ формаправления = ""US Territory"""
7650;SELECT count(DISTINCT LANGUAGE) FROM countrylanguage;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ язык) ИЗ справочник.языкистран
7651;SELECT count(DISTINCT LANGUAGE) FROM countrylanguage;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ язык) ИЗ справочник.языкистран
7652;"SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  ""Africa""";"ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ формаправления) ИЗ справочник.страны ГДЕ континент = ""Africa"""
7653;"SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  ""Africa""";"ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ формаправления) ИЗ справочник.страны ГДЕ континент = ""Africa"""
7654;"SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  ""Aruba""";"ВЫБРАТЬ КОЛИЧЕСТВО(T2.язык) ИЗ справочник.страны КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.языкистран КАК T2 ПО T1.код = T2.кодстраны ГДЕ T1.наименование = ""Aruba"""
7655;"SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  ""Aruba""";"ВЫБРАТЬ КОЛИЧЕСТВО(T2.язык) ИЗ справочник.страны КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.языкистран КАК T2 ПО T1.код = T2.кодстраны ГДЕ T1.наименование = ""Aruba"""
7656;"SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  ""Afghanistan"" AND IsOfficial  =  ""T""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.страны КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.языкистран КАК T2 ПО T1.код = T2.кодстраны ГДЕ T1.наименование = ""Afghanistan"" И IsOfficial = ""T"""
7657;"SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  ""Afghanistan"" AND IsOfficial  =  ""T""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.страны КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.языкистран КАК T2 ПО T1.код = T2.кодстраны ГДЕ T1.наименование = ""Afghanistan"" И IsOfficial = ""T"""
7658;SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.наименование ИЗ справочник.страны КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.языкистран КАК T2 ПО T1.код = T2.кодстраны СГРУППИРОВАТЬ ПО T1.наименование УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
7659;SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.наименование ИЗ справочник.страны КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.языкистран КАК T2 ПО T1.код = T2.кодстраны СГРУППИРОВАТЬ ПО T1.наименование УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
7660;SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.континент ИЗ справочник.страны КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.языкистран КАК T2 ПО T1.код = T2.кодстраны СГРУППИРОВАТЬ ПО T1.континент УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
7661;SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.континент ИЗ справочник.страны КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.языкистран КАК T2 ПО T1.код = T2.кодстраны СГРУППИРОВАТЬ ПО T1.континент УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
7668;"SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""Chinese""";"ВЫБРАТЬ КОЛИЧЕСТВО( РАЗЛИЧНЫЕ Continent) ИЗ справочник.страны КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.языкистран КАК T2 ПО T1.код = T2.кодстраны ГДЕ T2.язык = ""Chinese"""
7669;"SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""Chinese""";"ВЫБРАТЬ КОЛИЧЕСТВО( РАЗЛИЧНЫЕ Continent) ИЗ справочник.страны КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.языкистран КАК T2 ПО T1.код = T2.кодстраны ГДЕ T2.язык = ""Chinese"""
7670;"SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" OR T2.Language  =  ""Dutch""";"ВЫБРАТЬ РАЗЛИЧНЫЕ T1.регион ИЗ справочник.страны КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.языкистран КАК T2 ПО T1.код = T2.кодстраны ГДЕ T2.язык = ""English"" ИЛИ T2.язык = ""Dutch"""
7671;"SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" OR T2.Language  =  ""Dutch""";"ВЫБРАТЬ РАЗЛИЧНЫЕ T1.регион ИЗ справочник.страны КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.языкистран КАК T2 ПО T1.код = T2.кодстраны ГДЕ T2.язык = ""English"" ИЛИ T2.язык = ""Dutch"""
7672;"select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  ""english"" and isofficial  =  ""t"" union select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  ""dutch"" and isofficial  =  ""t""";"select t1.наименование from country as t1 join countrylanguage as t2 on t1.код = t2.кодстраны where t2.язык = ""english"" and isofficial = ""t"" union select t1.наименование from country as t1 join countrylanguage as t2 on t1.код = t2.кодстраны where t2.язык = ""dutch"" and isofficial = ""t"""
7673;"SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" AND IsOfficial  =  ""T"" UNION SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""Dutch"" AND IsOfficial  =  ""T""";"ВЫБРАТЬ * ИЗ справочник.страны КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.языкистран КАК T2 ПО T1.код = T2.кодстраны ГДЕ T2.язык = ""English"" И IsOfficial = ""T"" ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ * ИЗ справочник.страны КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.языкистран КАК T2 ПО T1.код = T2.кодстраны ГДЕ T2.язык = ""Dutch"" И IsOfficial = ""T"""
7674;"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  ""Asia"" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1";"ВЫБРАТЬ ПЕРВЫЕ 1 T2.язык ИЗ справочник.страны КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.языкистран КАК T2 ПО T1.код = T2.кодстраны ГДЕ T1.континент = ""Asia"" СГРУППИРОВАТЬ ПО T2.язык УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО (*) УБЫВ"
7675;"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  ""Asia"" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1";"ВЫБРАТЬ ПЕРВЫЕ 1 T2.язык ИЗ справочник.страны КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.языкистран КАК T2 ПО T1.код = T2.кодстраны ГДЕ T1.континент = ""Asia"" СГРУППИРОВАТЬ ПО T2.язык УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО (*) УБЫВ"
7676;"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  ""Republic"" GROUP BY T2.Language HAVING COUNT(*)  =  1";"ВЫБРАТЬ T2.язык ИЗ справочник.страны КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.языкистран КАК T2 ПО T1.код = T2.кодстраны ГДЕ T1.формаправления = ""Republic"" СГРУППИРОВАТЬ ПО T2.язык ИМЕЮЩИЕ КОЛИЧЕСТВО(*) = 1"
7677;"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  ""Republic"" GROUP BY T2.Language HAVING COUNT(*)  =  1";"ВЫБРАТЬ T2.язык ИЗ справочник.страны КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.языкистран КАК T2 ПО T1.код = T2.кодстраны ГДЕ T1.формаправления = ""Republic"" СГРУППИРОВАТЬ ПО T2.язык ИМЕЮЩИЕ КОЛИЧЕСТВО(*) = 1"
7678;"SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  ""English"" ORDER BY T1.Population DESC LIMIT 1";"ВЫБРАТЬ ПЕРВЫЕ 1 T1.наименование , T1.численность ИЗ справочник.города КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.языкистран КАК T2 ПО T1.кодстраны = T2.кодстраны ГДЕ T2.язык = ""English"" УПОРЯДОЧИТЬ ПО T1.численность УБЫВ"
7679;"SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  ""English"" ORDER BY T1.Population DESC LIMIT 1";"ВЫБРАТЬ ПЕРВЫЕ 1 T1.наименование , T1.численность ИЗ справочник.города КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.языкистран КАК T2 ПО T1.кодстраны = T2.кодстраны ГДЕ T2.язык = ""English"" УПОРЯДОЧИТЬ ПО T1.численность УБЫВ"
7680;"SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  ""Asia"" ORDER BY SurfaceArea DESC LIMIT 1";"ВЫБРАТЬ ПЕРВЫЕ 1 наименование , население , ожидаемаяпродолжительностьжизни ИЗ справочник.страны ГДЕ континент = ""Asia"" УПОРЯДОЧИТЬ ПО площадь УБЫВ"
7681;"SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  ""Asia"" ORDER BY SurfaceArea DESC LIMIT 1";"ВЫБРАТЬ ПЕРВЫЕ 1 наименование , население , ожидаемаяпродолжительностьжизни ИЗ справочник.страны ГДЕ континент = ""Asia"" УПОРЯДОЧИТЬ ПО площадь УБЫВ"
7682;"SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" AND T2.IsOfficial  =  ""T"")";"ВЫБРАТЬ СРЕДНЕЕ(LifeExpectancy) ИЗ справочник.страны ГДЕ Name НЕ В (ВЫБРАТЬ T1.наименование ИЗ справочник.страны КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.языкистран КАК T2 ПО T1.код = T2.кодстраны ГДЕ T2.язык = ""English"" И T2.официальный = ""T"")"
7683;"SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" AND T2.IsOfficial  =  ""T"")";"ВЫБРАТЬ СРЕДНЕЕ(LifeExpectancy) ИЗ справочник.страны ГДЕ Name НЕ В (ВЫБРАТЬ T1.наименование ИЗ справочник.страны КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.языкистран КАК T2 ПО T1.код = T2.кодстраны ГДЕ T2.язык = ""English"" И T2.официальный = ""T"")"
7684;"SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"")";"ВЫБРАТЬ СУММА(Population) ИЗ справочник.страны ГДЕ Name НЕ В (ВЫБРАТЬ T1.наименование ИЗ справочник.страны КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.языкистран КАК T2 ПО T1.код = T2.кодстраны ГДЕ T2.язык = ""English"")"
7685;"SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"")";"ВЫБРАТЬ СУММА(Population) ИЗ справочник.страны ГДЕ Name НЕ В (ВЫБРАТЬ T1.наименование ИЗ справочник.страны КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.языкистран КАК T2 ПО T1.код = T2.кодстраны ГДЕ T2.язык = ""English"")"
7686;"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  ""Beatrix"" AND T2.IsOfficial  =  ""T""";"ВЫБРАТЬ T2.язык ИЗ справочник.страны КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.языкистран КАК T2 ПО T1.код = T2.кодстраны ГДЕ T1.главагосударства = ""Beatrix"" И T2.официальный = ""T"""
7687;"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  ""Beatrix"" AND T2.IsOfficial  =  ""T""";"ВЫБРАТЬ T2.язык ИЗ справочник.страны КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.языкистран КАК T2 ПО T1.код = T2.кодстраны ГДЕ T1.главагосударства = ""Beatrix"" И T2.официальный = ""T"""
7688;"SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  ""T""";"ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ T2.язык) ИЗ справочник.страны КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.языкистран КАК T2 ПО T1.код = T2.кодстраны ГДЕ IndepYear < 1930 И T2.официальный = ""T"""
7689;"SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  ""T""";"ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ T2.язык) ИЗ справочник.страны КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.языкистран КАК T2 ПО T1.код = T2.кодстраны ГДЕ IndepYear < 1930 И T2.официальный = ""T"""
7690;"SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  ""Europe"")";"ВЫБРАТЬ наименование ИЗ справочник.страны ГДЕ площадь > (ВЫБРАТЬ МИНИМУМ(площадь) ИЗ справочник.страны ГДЕ континент = ""Europe"")"
7691;"SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  ""Europe"")";"ВЫБРАТЬ наименование ИЗ справочник.страны ГДЕ площадь > (ВЫБРАТЬ МИНИМУМ(площадь) ИЗ справочник.страны ГДЕ континент = ""Europe"")"
7692;"SELECT Name FROM country WHERE Continent  =  ""Africa""  AND population  <  (SELECT max(population) FROM country WHERE Continent  =  ""Asia"")";"ВЫБРАТЬ наименование ИЗ справочник.страны ГДЕ континент = ""Africa"" И население < (ВЫБРАТЬ МАКСИМУМ(население) ИЗ справочник.страны ГДЕ континент = ""Asia"")"
7693;"SELECT Name FROM country WHERE Continent  =  ""Africa""  AND population  <  (SELECT min(population) FROM country WHERE Continent  =  ""Asia"")";"ВЫБРАТЬ наименование ИЗ справочник.страны ГДЕ континент = ""Africa"" И население < (ВЫБРАТЬ МИНИМУМ(население) ИЗ справочник.страны ГДЕ континент = ""Asia"")"
7694;"SELECT Name FROM country WHERE Continent  =  ""Asia""  AND population  >  (SELECT max(population) FROM country WHERE Continent  =  ""Africa"")";"ВЫБРАТЬ наименование ИЗ справочник.страны ГДЕ континент = ""Asia"" И население > (ВЫБРАТЬ МАКСИМУМ(население) ИЗ справочник.страны ГДЕ континент = ""Africa"")"
7695;"SELECT Name FROM country WHERE Continent  =  ""Asia""  AND population  >  (SELECT min(population) FROM country WHERE Continent  =  ""Africa"")";"ВЫБРАТЬ наименование ИЗ справочник.страны ГДЕ континент = ""Asia"" И население > (ВЫБРАТЬ МИНИМУМ(население) ИЗ справочник.страны ГДЕ континент = ""Africa"")"
7698;"SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != ""English""";"ВЫБРАТЬ РАЗЛИЧНЫЕ кодстраны ИЗ справочник.языкистран ГДЕ язык <> ""English"""
7699;"SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != ""English""";"ВЫБРАТЬ РАЗЛИЧНЫЕ кодстраны ИЗ справочник.языкистран ГДЕ язык <> ""English"""
7702;SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English');"ВЫБРАТЬ РАЗЛИЧНЫЕ T2.наименование ИЗ справочник.страны КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.города КАК T2 ПО T2.кодстраны = T1.код ГДЕ T1.континент = ""Europe"" И T1.наименование НЕ В (ВЫБРАТЬ T3.наименование ИЗ справочник.страны КАК T3 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.языкистран КАК T4 ПО T3.код = T4.кодстраны ГДЕ T4.официальный = ""T"" И T4.язык = ""English"")"
7703;SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English');"ВЫБРАТЬ РАЗЛИЧНЫЕ T2.наименование ИЗ справочник.страны КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.города КАК T2 ПО T2.кодстраны = T1.код ГДЕ T1.континент = ""Europe"" И T1.наименование НЕ В (ВЫБРАТЬ T3.наименование ИЗ справочник.страны КАК T3 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.языкистран КАК T4 ПО T3.код = T4.кодстраны ГДЕ T4.официальный = ""T"" И T4.язык = ""English"")"
7704;"select distinct t3.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode join city as t3 on t1.code  =  t3.countrycode where t2.isofficial  =  't' and t2.language  =  'chinese' and t1.continent  =  ""asia""";"select distinct t3.наименование from country as t1 join countrylanguage as t2 on t1.код = t2.кодстраны join city as t3 on t1.код = t3.кодстраны where t2.официальный = ""t"" and t2.язык = ""chinese"" and t1.континент = ""asia"""
7705;"SELECT DISTINCT T3.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode JOIN city AS T3 ON T1.Code  =  T3.CountryCode WHERE T2.IsOfficial  =  'T' AND T2.Language  =  'Chinese' AND T1.Continent  =  ""Asia""";"ВЫБРАТЬ РАЗЛИЧНЫЕ T3.наименование ИЗ справочник.страны КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.языкистран КАК T2 ПО T1.код = T2.кодстраны ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.города КАК T3 ПО T1.код = T3.кодстраны ГДЕ T2.официальный = ""T"" И T2.язык = ""Chinese"" И T1.континент = ""Asia"""
7706;SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование , площадь , годнезависимости ИЗ справочник.страны УПОРЯДОЧИТЬ ПО население
7707;SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование , площадь , годнезависимости ИЗ справочник.страны УПОРЯДОЧИТЬ ПО население
7708;SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование , население , главагосударства ИЗ справочник.страны УПОРЯДОЧИТЬ ПО площадь УБЫВ
7709;SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование , население , главагосударства ИЗ справочник.страны УПОРЯДОЧИТЬ ПО площадь УБЫВ
7710;SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2;ВЫБРАТЬ КОЛИЧЕСТВО(T2.язык) , T1.наименование ИЗ справочник.страны КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.языкистран КАК T2 ПО T1.код = T2.кодстраны СГРУППИРОВАТЬ ПО T1.наименование ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 2
7711;SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2;ВЫБРАТЬ КОЛИЧЕСТВО(T2.язык) , T1.наименование ИЗ справочник.страны КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.языкистран КАК T2 ПО T1.код = T2.кодстраны СГРУППИРОВАТЬ ПО T1.наименование ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 2
7712;SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District;ВЫБРАТЬ КОЛИЧЕСТВО(*) , District ИЗ справочник.города ГДЕ Population > (ВЫБРАТЬ СРЕДНЕЕ(Population) ИЗ справочник.города) СГРУППИРОВАТЬ ПО District
7713;SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District;ВЫБРАТЬ КОЛИЧЕСТВО(*) , District ИЗ справочник.города ГДЕ Population > (ВЫБРАТЬ СРЕДНЕЕ(Population) ИЗ справочник.города) СГРУППИРОВАТЬ ПО District
7714;SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72;ВЫБРАТЬ СУММА(население) , формаправления ИЗ справочник.страны СГРУППИРОВАТЬ ПО формаправления ИМЕЮЩИЕ СРЕДНЕЕ(ожидаемаяпродолжительностьжизни) > 72
7715;SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72;ВЫБРАТЬ СУММА(население) , формаправления ИЗ справочник.страны СГРУППИРОВАТЬ ПО формаправления ИМЕЮЩИЕ СРЕДНЕЕ(ожидаемаяпродолжительностьжизни) > 72
7716;SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72;ВЫБРАТЬ СУММА(население) , СРЕДНЕЕ(ожидаемаяпродолжительностьжизни) , континент ИЗ справочник.страны СГРУППИРОВАТЬ ПО континент ИМЕЮЩИЕ СРЕДНЕЕ(ожидаемаяпродолжительностьжизни) < 72
7717;SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72;ВЫБРАТЬ СУММА(население) , СРЕДНЕЕ(ожидаемаяпродолжительностьжизни) , континент ИЗ справочник.страны СГРУППИРОВАТЬ ПО континент ИМЕЮЩИЕ СРЕДНЕЕ(ожидаемаяпродолжительностьжизни) < 72
7718;SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5;ВЫБРАТЬ ПЕРВЫЕ 5 наименование , площадь ИЗ справочник.страны УПОРЯДОЧИТЬ ПО площадь УБЫВ
7719;SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5;ВЫБРАТЬ ПЕРВЫЕ 5 наименование , площадь ИЗ справочник.страны УПОРЯДОЧИТЬ ПО площадь УБЫВ
7720;SELECT Name FROM country ORDER BY Population DESC LIMIT 3;ВЫБРАТЬ ПЕРВЫЕ 3 наименование ИЗ справочник.страны УПОРЯДОЧИТЬ ПО население УБЫВ
7721;SELECT Name FROM country ORDER BY Population DESC LIMIT 3;ВЫБРАТЬ ПЕРВЫЕ 3 наименование ИЗ справочник.страны УПОРЯДОЧИТЬ ПО население УБЫВ
7722;SELECT Name FROM country ORDER BY Population ASC LIMIT 3;ВЫБРАТЬ ПЕРВЫЕ 3 наименование ИЗ справочник.страны УПОРЯДОЧИТЬ ПО население ВОЗР
7723;SELECT Name FROM country ORDER BY Population ASC LIMIT 3;ВЫБРАТЬ ПЕРВЫЕ 3 наименование ИЗ справочник.страны УПОРЯДОЧИТЬ ПО население ВОЗР
7724;"SELECT count(*) FROM country WHERE continent  =  ""Asia""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.страны ГДЕ континент = ""Asia"""
7725;"SELECT count(*) FROM country WHERE continent  =  ""Asia""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.страны ГДЕ континент = ""Asia"""
7726;"SELECT Name FROM country WHERE continent  =  ""Europe"" AND Population  =  ""80000""";"ВЫБРАТЬ наименование ИЗ справочник.страны ГДЕ континент = ""Europe"" И население = ""80000"""
7727;"SELECT Name FROM country WHERE continent  =  ""Europe"" AND Population  =  ""80000""";"ВЫБРАТЬ наименование ИЗ справочник.страны ГДЕ континент = ""Europe"" И население = ""80000"""
7728;"select sum(population) ,  avg(surfacearea) from country where continent  =  ""north america"" and surfacearea  >  3000";"select СУММА(население) , СРЕДНЕЕ(площадь) from country where континент = ""north america"" and площадь > 3000"
7729;"select sum(population) ,  avg(surfacearea) from country where continent  =  ""north america"" and surfacearea  >  3000";"select СУММА(население) , СРЕДНЕЕ(площадь) from country where континент = ""north america"" and площадь > 3000"
7730;SELECT name FROM city WHERE Population BETWEEN 160000 AND 900000;ВЫБРАТЬ наименование ИЗ справочник.города ГДЕ численность МЕЖДУ 160000 И 900000
7731;select name from city where population between 160000 and 900000;select наименование from city where численность between 160000 and 900000
7732;SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 язык ИЗ справочник.языкистран СГРУППИРОВАТЬ ПО язык УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
7733;SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 язык ИЗ справочник.языкистран СГРУППИРОВАТЬ ПО язык УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
7734;SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode;ВЫБРАТЬ язык , кодстраны , МАКСИМУМ(долянаселения) ИЗ справочник.языкистран СГРУППИРОВАТЬ ПО кодстраны
7735;SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode;ВЫБРАТЬ язык , кодстраны , МАКСИМУМ(долянаселения) ИЗ справочник.языкистран СГРУППИРОВАТЬ ПО кодстраны
7736;"SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  ""Spanish"" GROUP BY CountryCode";"ВЫБРАТЬ КОЛИЧЕСТВО(*) , МАКСИМУМ(долянаселения) ИЗ справочник.языкистран ГДЕ язык = ""Spanish"" СГРУППИРОВАТЬ ПО кодстраны"
7737;"SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  ""Spanish"" GROUP BY CountryCode";"ВЫБРАТЬ КОЛИЧЕСТВО(*) , МАКСИМУМ(долянаселения) ИЗ справочник.языкистран ГДЕ язык = ""Spanish"" СГРУППИРОВАТЬ ПО кодстраны"
7738;"SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  ""Spanish"" GROUP BY CountryCode";"ВЫБРАТЬ кодстраны , МАКСИМУМ(долянаселения) ИЗ справочник.языкистран ГДЕ язык = ""Spanish"" СГРУППИРОВАТЬ ПО кодстраны"
7739;"SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  ""Spanish"" GROUP BY CountryCode";"ВЫБРАТЬ кодстраны , МАКСИМУМ(долянаселения) ИЗ справочник.языкистран ГДЕ язык = ""Spanish"" СГРУППИРОВАТЬ ПО кодстраны"
7740;SELECT count(*) FROM conductor;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.дирижеры
7741;SELECT count(*) FROM conductor;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.дирижеры
7742;SELECT Name FROM conductor ORDER BY Age ASC;ВЫБРАТЬ наименование ИЗ справочник.дирижеры УПОРЯДОЧИТЬ ПО возраст ВОЗР
7743;SELECT Name FROM conductor ORDER BY Age ASC;ВЫБРАТЬ наименование ИЗ справочник.дирижеры УПОРЯДОЧИТЬ ПО возраст ВОЗР
7744;SELECT Name FROM conductor WHERE Nationality != 'USA';"ВЫБРАТЬ наименование ИЗ справочник.дирижеры ГДЕ национальность <> ""USA"""
7745;SELECT Name FROM conductor WHERE Nationality != 'USA';"ВЫБРАТЬ наименование ИЗ справочник.дирижеры ГДЕ национальность <> ""USA"""
7746;SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC;ВЫБРАТЬ лейбл ИЗ наименование УПОРЯДОЧИТЬ ПО годоснования УБЫВ
7747;SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC;ВЫБРАТЬ лейбл ИЗ наименование УПОРЯДОЧИТЬ ПО годоснования УБЫВ
7748;SELECT avg(Attendance) FROM SHOW;ВЫБРАТЬ СРЕДНЕЕ(посещаемость) ИЗ регистрсведений.шоу
7749;SELECT avg(Attendance) FROM SHOW;ВЫБРАТЬ СРЕДНЕЕ(посещаемость) ИЗ регистрсведений.шоу
7750;"SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != ""Live final""";"ВЫБРАТЬ МАКСИМУМ(доля) , МИНИМУМ(доля) ИЗ справочник.выступления ГДЕ тип <> ""Live final"""
7751;"SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != ""Live final""";"ВЫБРАТЬ МАКСИМУМ(доля) , МИНИМУМ(доля) ИЗ справочник.выступления ГДЕ тип <> ""Live final"""
7752;SELECT count(DISTINCT Nationality) FROM conductor;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ национальность) ИЗ справочник.дирижеры
7753;SELECT count(DISTINCT Nationality) FROM conductor;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ национальность) ИЗ справочник.дирижеры
7754;SELECT Name FROM conductor ORDER BY Year_of_Work DESC;ВЫБРАТЬ наименование ИЗ справочник.дирижеры УПОРЯДОЧИТЬ ПО стаж УБЫВ
7755;SELECT Name FROM conductor ORDER BY Year_of_Work DESC;ВЫБРАТЬ наименование ИЗ справочник.дирижеры УПОРЯДОЧИТЬ ПО стаж УБЫВ
7756;SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование ИЗ справочник.дирижеры УПОРЯДОЧИТЬ ПО стаж УБЫВ
7757;SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование ИЗ справочник.дирижеры УПОРЯДОЧИТЬ ПО стаж УБЫВ
7758;SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID;ВЫБРАТЬ T1.наименование , T2.наименование ИЗ справочник.дирижеры КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.оркестры КАК T2 ПО T1.ссылка = T2.дирижер
7759;SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID;ВЫБРАТЬ T1.наименование , T2.наименование ИЗ справочник.дирижеры КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.оркестры КАК T2 ПО T1.ссылка = T2.дирижер
7760;SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1;ВЫБРАТЬ T1.наименование ИЗ справочник.дирижеры КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.оркестры КАК T2 ПО T1.ссылка = T2.дирижер СГРУППИРОВАТЬ ПО T2.дирижер ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 1
7761;SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1;ВЫБРАТЬ T1.наименование ИЗ справочник.дирижеры КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.оркестры КАК T2 ПО T1.ссылка = T2.дирижер СГРУППИРОВАТЬ ПО T2.дирижер ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 1
7762;SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.наименование ИЗ справочник.дирижеры КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.оркестры КАК T2 ПО T1.ссылка = T2.дирижер СГРУППИРОВАТЬ ПО T2.дирижер УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
7763;SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.наименование ИЗ справочник.дирижеры КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.оркестры КАК T2 ПО T1.ссылка = T2.дирижер СГРУППИРОВАТЬ ПО T2.дирижер УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
7764;SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008;ВЫБРАТЬ T1.наименование ИЗ справочник.дирижеры КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.оркестры КАК T2 ПО T1.ссылка = T2.дирижер ГДЕ Year_of_Founded > 2008
7765;SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008;ВЫБРАТЬ T1.наименование ИЗ справочник.дирижеры КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.оркестры КАК T2 ПО T1.ссылка = T2.дирижер ГДЕ Year_of_Founded > 2008
7766;SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company;ВЫБРАТЬ лейбл , КОЛИЧЕСТВО(*) ИЗ наименование СГРУППИРОВАТЬ ПО лейбл
7767;SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company;ВЫБРАТЬ лейбл , КОЛИЧЕСТВО(*) ИЗ наименование СГРУППИРОВАТЬ ПО лейбл
7768;SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC;ВЫБРАТЬ форматзаписи ИЗ наименование СГРУППИРОВАТЬ ПО форматзаписи УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) ВОЗР
7769;SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC;ВЫБРАТЬ форматзаписи ИЗ наименование СГРУППИРОВАТЬ ПО форматзаписи УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) ВОЗР
7770;SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 лейбл ИЗ наименование СГРУППИРОВАТЬ ПО лейбл УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
7771;SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 лейбл ИЗ наименование СГРУППИРОВАТЬ ПО лейбл УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
7772;SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance);ВЫБРАТЬ Orchestra ИЗ справочник.оркестры ГДЕ Orchestra_ID НЕ В (ВЫБРАТЬ Orchestra_ID ИЗ справочник.выступления)
7773;SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance);ВЫБРАТЬ Orchestra ИЗ справочник.оркестры ГДЕ Orchestra_ID НЕ В (ВЫБРАТЬ Orchestra_ID ИЗ справочник.выступления)
7776;"SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  ""CD"" OR Major_Record_Format  =  ""DVD""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ наименование ГДЕ форматзаписи = ""CD"" ИЛИ форматзаписи = ""DVD"""
7777;"SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  ""CD"" OR Major_Record_Format  =  ""DVD""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ наименование ГДЕ форматзаписи = ""CD"" ИЛИ форматзаписи = ""DVD"""
7778;SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1;ВЫБРАТЬ Year_of_Founded ИЗ справочник.оркестры КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.выступления КАК T2 ПО T1.ссылка = T2.оркестр СГРУППИРОВАТЬ ПО T2.оркестр ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 1
7779;SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1;ВЫБРАТЬ Year_of_Founded ИЗ справочник.оркестры КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.выступления КАК T2 ПО T1.ссылка = T2.оркестр СГРУППИРОВАТЬ ПО T2.оркестр ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 1
7780;SELECT count(*) FROM Highschooler;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.школьники
7781;SELECT count(*) FROM Highschooler;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.школьники
7782;SELECT name ,  grade FROM Highschooler;ВЫБРАТЬ наименование , класс ИЗ справочник.школьники
7783;SELECT name ,  grade FROM Highschooler;ВЫБРАТЬ наименование , класс ИЗ справочник.школьники
7784;SELECT grade FROM Highschooler;ВЫБРАТЬ класс ИЗ справочник.школьники
7785;SELECT grade FROM Highschooler;ВЫБРАТЬ класс ИЗ справочник.школьники
7786;"SELECT grade FROM Highschooler WHERE name  =  ""Kyle""";"ВЫБРАТЬ класс ИЗ справочник.школьники ГДЕ наименование = ""Kyle"""
7787;"SELECT grade FROM Highschooler WHERE name  =  ""Kyle""";"ВЫБРАТЬ класс ИЗ справочник.школьники ГДЕ наименование = ""Kyle"""
7788;SELECT name FROM Highschooler WHERE grade  =  10;ВЫБРАТЬ наименование ИЗ справочник.школьники ГДЕ класс = 10
7789;SELECT name FROM Highschooler WHERE grade  =  10;ВЫБРАТЬ наименование ИЗ справочник.школьники ГДЕ класс = 10
7790;"SELECT ID FROM Highschooler WHERE name  =  ""Kyle""";"ВЫБРАТЬ ссылка ИЗ справочник.школьники ГДЕ наименование = ""Kyle"""
7791;"SELECT ID FROM Highschooler WHERE name  =  ""Kyle""";"ВЫБРАТЬ ссылка ИЗ справочник.школьники ГДЕ наименование = ""Kyle"""
7792;SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.школьники ГДЕ класс = 9 ИЛИ класс = 10
7793;SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.школьники ГДЕ класс = 9 ИЛИ класс = 10
7794;SELECT grade ,  count(*) FROM Highschooler GROUP BY grade;ВЫБРАТЬ класс , КОЛИЧЕСТВО(*) ИЗ справочник.школьники СГРУППИРОВАТЬ ПО класс
7795;SELECT grade ,  count(*) FROM Highschooler GROUP BY grade;ВЫБРАТЬ класс , КОЛИЧЕСТВО(*) ИЗ справочник.школьники СГРУППИРОВАТЬ ПО класс
7796;SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 класс ИЗ справочник.школьники СГРУППИРОВАТЬ ПО класс УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
7797;SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 класс ИЗ справочник.школьники СГРУППИРОВАТЬ ПО класс УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
7798;SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4;ВЫБРАТЬ класс ИЗ справочник.школьники СГРУППИРОВАТЬ ПО класс ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 4
7799;SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4;ВЫБРАТЬ класс ИЗ справочник.школьники СГРУППИРОВАТЬ ПО класс ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 4
7800;SELECT student_id ,  count(*) FROM Friend GROUP BY student_id;ВЫБРАТЬ ученик , КОЛИЧЕСТВО(*) ИЗ регистрсведений.школьныедрузья СГРУППИРОВАТЬ ПО ученик
7801;SELECT student_id ,  count(*) FROM Friend GROUP BY student_id;ВЫБРАТЬ ученик , КОЛИЧЕСТВО(*) ИЗ регистрсведений.школьныедрузья СГРУППИРОВАТЬ ПО ученик
7802;SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id;ВЫБРАТЬ T2.наименование , КОЛИЧЕСТВО(*) ИЗ регистрсведений.школьныедрузья КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.школьники КАК T2 ПО T1.ученик = T2.ссылка СГРУППИРОВАТЬ ПО T1.ученик
7803;SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id;ВЫБРАТЬ T2.наименование , КОЛИЧЕСТВО(*) ИЗ регистрсведений.школьныедрузья КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.школьники КАК T2 ПО T1.ученик = T2.ссылка СГРУППИРОВАТЬ ПО T1.ученик
7804;SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.наименование ИЗ регистрсведений.школьныедрузья КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.школьники КАК T2 ПО T1.ученик = T2.ссылка СГРУППИРОВАТЬ ПО T1.ученик УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
7805;SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.наименование ИЗ регистрсведений.школьныедрузья КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.школьники КАК T2 ПО T1.ученик = T2.ссылка СГРУППИРОВАТЬ ПО T1.ученик УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
7806;SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3;ВЫБРАТЬ T2.наименование ИЗ регистрсведений.школьныедрузья КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.школьники КАК T2 ПО T1.ученик = T2.ссылка СГРУППИРОВАТЬ ПО T1.ученик ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 3
7807;SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3;ВЫБРАТЬ T2.наименование ИЗ регистрсведений.школьныедрузья КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.школьники КАК T2 ПО T1.ученик = T2.ссылка СГРУППИРОВАТЬ ПО T1.ученик ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 3
7808;"SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  ""Kyle""";"ВЫБРАТЬ T3.наименование ИЗ регистрсведений.школьныедрузья КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.школьники КАК T2 ПО T1.ученик = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.школьники КАК T3 ПО T1.друг = T3.ссылка ГДЕ T2.наименование = ""Kyle"""
7809;"SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  ""Kyle""";"ВЫБРАТЬ T3.наименование ИЗ регистрсведений.школьныедрузья КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.школьники КАК T2 ПО T1.ученик = T2.ссылка ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.школьники КАК T3 ПО T1.друг = T3.ссылка ГДЕ T2.наименование = ""Kyle"""
7810;"SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  ""Kyle""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.школьныедрузья КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.школьники КАК T2 ПО T1.ученик = T2.ссылка ГДЕ T2.наименование = ""Kyle"""
7811;"SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  ""Kyle""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.школьныедрузья КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.школьники КАК T2 ПО T1.ученик = T2.ссылка ГДЕ T2.наименование = ""Kyle"""
7820;SELECT student_id ,  count(*) FROM Likes GROUP BY student_id;ВЫБРАТЬ ученик , КОЛИЧЕСТВО(*) ИЗ регистрсведений.симпатии СГРУППИРОВАТЬ ПО ученик
7821;SELECT student_id ,  count(*) FROM Likes GROUP BY student_id;ВЫБРАТЬ ученик , КОЛИЧЕСТВО(*) ИЗ регистрсведений.симпатии СГРУППИРОВАТЬ ПО ученик
7822;SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id;ВЫБРАТЬ T2.наименование , КОЛИЧЕСТВО(*) ИЗ регистрсведений.симпатии КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.школьники КАК T2 ПО T1.ученик = T2.ссылка СГРУППИРОВАТЬ ПО T1.ученик
7823;SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id;ВЫБРАТЬ T2.наименование , КОЛИЧЕСТВО(*) ИЗ регистрсведений.симпатии КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.школьники КАК T2 ПО T1.ученик = T2.ссылка СГРУППИРОВАТЬ ПО T1.ученик
7824;SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.наименование ИЗ регистрсведений.симпатии КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.школьники КАК T2 ПО T1.ученик = T2.ссылка СГРУППИРОВАТЬ ПО T1.ученик УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
7825;SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T2.наименование ИЗ регистрсведений.симпатии КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.школьники КАК T2 ПО T1.ученик = T2.ссылка СГРУППИРОВАТЬ ПО T1.ученик УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
7826;SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2;ВЫБРАТЬ T2.наименование ИЗ регистрсведений.симпатии КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.школьники КАК T2 ПО T1.ученик = T2.ссылка СГРУППИРОВАТЬ ПО T1.ученик ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
7827;SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2;ВЫБРАТЬ T2.наименование ИЗ регистрсведений.симпатии КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.школьники КАК T2 ПО T1.ученик = T2.ссылка СГРУППИРОВАТЬ ПО T1.ученик ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
7828;SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2;ВЫБРАТЬ T2.наименование ИЗ регистрсведений.школьныедрузья КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.школьники КАК T2 ПО T1.ученик = T2.ссылка ГДЕ T2.класс > 5 СГРУППИРОВАТЬ ПО T1.ученик ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
7829;SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2;ВЫБРАТЬ T2.наименование ИЗ регистрсведений.школьныедрузья КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.школьники КАК T2 ПО T1.ученик = T2.ссылка ГДЕ T2.класс > 5 СГРУППИРОВАТЬ ПО T1.ученик ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
7830;"SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  ""Kyle""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.симпатии КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.школьники КАК T2 ПО T1.ученик = T2.ссылка ГДЕ T2.наименование = ""Kyle"""
7831;"SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  ""Kyle""";"ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ регистрсведений.симпатии КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.школьники КАК T2 ПО T1.ученик = T2.ссылка ГДЕ T2.наименование = ""Kyle"""
7832;SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id);ВЫБРАТЬ СРЕДНЕЕ(grade) ИЗ справочник.школьники ГДЕ id В (ВЫБРАТЬ T1.ученик ИЗ регистрсведений.школьныедрузья КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.школьники КАК T2 ПО T1.ученик = T2.ссылка)
7833;SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id);ВЫБРАТЬ СРЕДНЕЕ(grade) ИЗ справочник.школьники ГДЕ id В (ВЫБРАТЬ T1.ученик ИЗ регистрсведений.школьныедрузья КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.школьники КАК T2 ПО T1.ученик = T2.ссылка)
7834;SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id);ВЫБРАТЬ МИНИМУМ(grade) ИЗ справочник.школьники ГДЕ id НЕ В (ВЫБРАТЬ T1.ученик ИЗ регистрсведений.школьныедрузья КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.школьники КАК T2 ПО T1.ученик = T2.ссылка)
7835;SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id);ВЫБРАТЬ МИНИМУМ(grade) ИЗ справочник.школьники ГДЕ id НЕ В (ВЫБРАТЬ T1.ученик ИЗ регистрсведений.школьныедрузья КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.школьники КАК T2 ПО T1.ученик = T2.ссылка)
7838;SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments );ВЫБРАТЬ СРЕДНЕЕ(age) ИЗ справочник.собаки ГДЕ dog_id В ( ВЫБРАТЬ dog_id ИЗ регистрсведений.лечения )
7839;SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments );ВЫБРАТЬ СРЕДНЕЕ(age) ИЗ справочник.собаки ГДЕ dog_id В ( ВЫБРАТЬ dog_id ИЗ регистрсведений.лечения )
7840;SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2;"ВЫБРАТЬ professional_id , last_name , cell_number ИЗ справочник.сотрудники ГДЕ state = ""Indiana"" ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ T1.ссылка , T1.фамилия , T1.мобильныйтелефон ИЗ справочник.сотрудники КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.лечения КАК T2 ПО T1.ссылка = T2.специалист СГРУППИРОВАТЬ ПО T1.ссылка ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 2"
7841;SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2;"ВЫБРАТЬ professional_id , last_name , cell_number ИЗ справочник.сотрудники ГДЕ state = ""Indiana"" ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ T1.ссылка , T1.фамилия , T1.мобильныйтелефон ИЗ справочник.сотрудники КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.лечения КАК T2 ПО T1.ссылка = T2.специалист СГРУППИРОВАТЬ ПО T1.ссылка ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 2"
7842;select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment)  >  1000 );select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having СУММА(cost_of_treatment) > 1000 )
7843;select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment)  >  1000 );select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having СУММА(cost_of_treatment) > 1000 )
7848;SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.владелецсобаки , T2.имя , T2.фамилия ИЗ справочник.собаки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.владельцы КАК T2 ПО T1.владелецсобаки = T2.ссылка СГРУППИРОВАТЬ ПО T1.владелецсобаки УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
7849;SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.владелецсобаки , T2.имя , T2.фамилия ИЗ справочник.собаки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.владельцы КАК T2 ПО T1.владелецсобаки = T2.ссылка СГРУППИРОВАТЬ ПО T1.владелецсобаки УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
7850;SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2;ВЫБРАТЬ T1.ссылка , T1.роль , T1.имя ИЗ справочник.сотрудники КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.лечения КАК T2 ПО T1.ссылка = T2.специалист СГРУППИРОВАТЬ ПО T1.ссылка ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
7851;SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2;ВЫБРАТЬ T1.ссылка , T1.роль , T1.имя ИЗ справочник.сотрудники КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.лечения КАК T2 ПО T1.ссылка = T2.специалист СГРУППИРОВАТЬ ПО T1.ссылка ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
7852;SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.наименование ИЗ справочник.породы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.собаки КАК T2 ПО T1.код = T2.порода СГРУППИРОВАТЬ ПО T1.наименование УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
7853;SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.наименование ИЗ справочник.породы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.собаки КАК T2 ПО T1.код = T2.порода СГРУППИРОВАТЬ ПО T1.наименование УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
7854;SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.ссылка , T1.фамилия ИЗ справочник.владельцы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.собаки КАК T2 ПО T1.ссылка = T2.владелецсобаки ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.лечения КАК T3 ПО T2.ссылка = T3.собака СГРУППИРОВАТЬ ПО T1.ссылка УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
7855;SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.ссылка , T1.фамилия ИЗ справочник.владельцы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.собаки КАК T2 ПО T1.ссылка = T2.владелецсобаки ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.лечения КАК T3 ПО T2.ссылка = T3.собака СГРУППИРОВАТЬ ПО T1.ссылка УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
7856;SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.описание ИЗ справочник.видылечения КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.лечения КАК T2 ПО T1.код = T2.видлечения СГРУППИРОВАТЬ ПО T1.код УПОРЯДОЧИТЬ ПО СУММА(cost_of_treatment) ВОЗР
7857;SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.описание ИЗ справочник.видылечения КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.лечения КАК T2 ПО T1.код = T2.видлечения СГРУППИРОВАТЬ ПО T1.код УПОРЯДОЧИТЬ ПО СУММА(cost_of_treatment) ВОЗР
7858;SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.ссылка , T1.индекс ИЗ справочник.владельцы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.собаки КАК T2 ПО T1.ссылка = T2.владелецсобаки ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.лечения КАК T3 ПО T2.ссылка = T3.собака СГРУППИРОВАТЬ ПО T1.ссылка УПОРЯДОЧИТЬ ПО СУММА(T3.стоимостьлечения) УБЫВ
7859;SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 T1.ссылка , T1.индекс ИЗ справочник.владельцы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.собаки КАК T2 ПО T1.ссылка = T2.владелецсобаки ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.лечения КАК T3 ПО T2.ссылка = T3.собака СГРУППИРОВАТЬ ПО T1.ссылка УПОРЯДОЧИТЬ ПО СУММА(T3.стоимостьлечения) УБЫВ
7860;SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2;ВЫБРАТЬ T1.ссылка , T1.мобильныйтелефон ИЗ справочник.сотрудники КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.лечения КАК T2 ПО T1.ссылка = T2.специалист СГРУППИРОВАТЬ ПО T1.ссылка ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
7861;SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2;ВЫБРАТЬ T1.ссылка , T1.мобильныйтелефон ИЗ справочник.сотрудники КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.лечения КАК T2 ПО T1.ссылка = T2.специалист СГРУППИРОВАТЬ ПО T1.ссылка ИМЕЮЩИЕ КОЛИЧЕСТВО(*) >= 2
7862;SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments );ВЫБРАТЬ РАЗЛИЧНЫЕ T1.имя , T1.фамилия ИЗ справочник.сотрудники КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.лечения КАК T2 ГДЕ cost_of_treatment < ( ВЫБРАТЬ СРЕДНЕЕ(cost_of_treatment) ИЗ регистрсведений.лечения )
7863;SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments );ВЫБРАТЬ РАЗЛИЧНЫЕ T1.имя , T1.фамилия ИЗ справочник.сотрудники КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.лечения КАК T2 ГДЕ cost_of_treatment < ( ВЫБРАТЬ СРЕДНЕЕ(cost_of_treatment) ИЗ регистрсведений.лечения )
7864;SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id;ВЫБРАТЬ T1.даталечения , T2.имя ИЗ регистрсведений.лечения КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сотрудники КАК T2 ПО T1.специалист = T2.ссылка
7865;SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id;ВЫБРАТЬ T1.даталечения , T2.имя ИЗ регистрсведений.лечения КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.сотрудники КАК T2 ПО T1.специалист = T2.ссылка
7866;SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code;ВЫБРАТЬ T1.стоимостьлечения , T2.описание ИЗ регистрсведений.лечения КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.видылечения КАК T2 ПО T1.видлечения = T2.код
7867;SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code;ВЫБРАТЬ T1.стоимостьлечения , T2.описание ИЗ регистрсведений.лечения КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.видылечения КАК T2 ПО T1.видлечения = T2.код
7868;SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id;ВЫБРАТЬ T1.имя , T1.фамилия , T2.размер ИЗ справочник.владельцы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.собаки КАК T2 ПО T1.ссылка = T2.владелецсобаки
7869;SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id;ВЫБРАТЬ T1.имя , T1.фамилия , T2.размер ИЗ справочник.владельцы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.собаки КАК T2 ПО T1.ссылка = T2.владелецсобаки
7870;SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id;ВЫБРАТЬ T1.имя , T2.кличка ИЗ справочник.владельцы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.собаки КАК T2 ПО T1.ссылка = T2.владелецсобаки
7871;SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id;ВЫБРАТЬ T1.имя , T2.кличка ИЗ справочник.владельцы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.собаки КАК T2 ПО T1.ссылка = T2.владелецсобаки
7872;SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 );ВЫБРАТЬ T1.кличка , T2.даталечения ИЗ справочник.собаки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.лечения КАК T2 ПО T1.ссылка = T2.собака ГДЕ T1.порода = ( ВЫБРАТЬ breed_code ИЗ справочник.собаки СГРУППИРОВАТЬ ПО breed_code УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) ВОЗР LIMIT 1 )
7873;SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 );ВЫБРАТЬ T1.кличка , T2.даталечения ИЗ справочник.собаки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.лечения КАК T2 ПО T1.ссылка = T2.собака ГДЕ T1.порода = ( ВЫБРАТЬ breed_code ИЗ справочник.собаки СГРУППИРОВАТЬ ПО breed_code УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) ВОЗР LIMIT 1 )
7874;SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia';"ВЫБРАТЬ T1.имя , T2.кличка ИЗ справочник.владельцы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.собаки КАК T2 ПО T1.ссылка = T2.владелецсобаки ГДЕ T1.штат = ""Virginia"""
7875;SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia';"ВЫБРАТЬ T1.имя , T2.кличка ИЗ справочник.владельцы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.собаки КАК T2 ПО T1.ссылка = T2.владелецсобаки ГДЕ T1.штат = ""Virginia"""
7876;SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id;ВЫБРАТЬ РАЗЛИЧНЫЕ T1.датапоступления , T1.датавыбытия ИЗ справочник.собаки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.лечения КАК T2 ПО T1.ссылка = T2.собака
7877;SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id;ВЫБРАТЬ РАЗЛИЧНЫЕ T1.датапоступления , T1.датавыбытия ИЗ справочник.собаки КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.лечения КАК T2 ПО T1.ссылка = T2.собака
7878;SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs );ВЫБРАТЬ T1.фамилия ИЗ справочник.владельцы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.собаки КАК T2 ПО T1.ссылка = T2.владелецсобаки ГДЕ T2.возраст = ( ВЫБРАТЬ МАКСИМУМ(age) ИЗ справочник.собаки )
7879;SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs );ВЫБРАТЬ T1.фамилия ИЗ справочник.владельцы КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.собаки КАК T2 ПО T1.ссылка = T2.владелецсобаки ГДЕ T2.возраст = ( ВЫБРАТЬ МАКСИМУМ(age) ИЗ справочник.собаки )
7880;SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin';"ВЫБРАТЬ элпочта ИЗ справочник.сотрудники ГДЕ штат = ""Hawaii"" ИЛИ штат = ""Wisconsin"""
7881;SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin';"ВЫБРАТЬ элпочта ИЗ справочник.сотрудники ГДЕ штат = ""Hawaii"" ИЛИ штат = ""Wisconsin"""
7882;SELECT date_arrived ,  date_departed FROM Dogs;ВЫБРАТЬ датапоступления , датавыбытия ИЗ справочник.собаки
7883;SELECT date_arrived ,  date_departed FROM Dogs;ВЫБРАТЬ датапоступления , датавыбытия ИЗ справочник.собаки
7884;SELECT count(DISTINCT dog_id) FROM Treatments;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ собака) ИЗ регистрсведений.лечения
7885;SELECT count(DISTINCT dog_id) FROM Treatments;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ собака) ИЗ регистрсведений.лечения
7886;SELECT count(DISTINCT professional_id) FROM Treatments;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ специалист) ИЗ регистрсведений.лечения
7887;SELECT count(DISTINCT professional_id) FROM Treatments;ВЫБРАТЬ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ специалист) ИЗ регистрсведений.лечения
7888;SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%';"ВЫБРАТЬ роль , улица , город , штат ИЗ справочник.сотрудники ГДЕ город ПОДОБНО ""%West%"""
7889;SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%';"ВЫБРАТЬ роль , улица , город , штат ИЗ справочник.сотрудники ГДЕ город ПОДОБНО ""%West%"""
7890;SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%';"ВЫБРАТЬ имя , фамилия , элпочта ИЗ справочник.владельцы ГДЕ штат ПОДОБНО ""%North%"""
7891;SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%';"ВЫБРАТЬ имя , фамилия , элпочта ИЗ справочник.владельцы ГДЕ штат ПОДОБНО ""%North%"""
7892;SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs );ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.собаки ГДЕ age < ( ВЫБРАТЬ СРЕДНЕЕ(age) ИЗ справочник.собаки )
7893;SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs );ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.собаки ГДЕ age < ( ВЫБРАТЬ СРЕДНЕЕ(age) ИЗ справочник.собаки )
7894;SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 стоимостьлечения ИЗ регистрсведений.лечения УПОРЯДОЧИТЬ ПО даталечения УБЫВ
7895;SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 стоимостьлечения ИЗ регистрсведений.лечения УПОРЯДОЧИТЬ ПО даталечения УБЫВ
7896;SELECT count(*) FROM Dogs WHERE dog_id NOT IN ( SELECT dog_id FROM Treatments );ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.собаки ГДЕ dog_id НЕ В ( ВЫБРАТЬ dog_id ИЗ регистрсведений.лечения )
7897;select count(*) from dogs where dog_id not in ( select dog_id from treatments );select КОЛИЧЕСТВО(*) from dogs where dog_id not in ( select dog_id from treatments )
7898;SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs );ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.владельцы ГДЕ owner_id НЕ В ( ВЫБРАТЬ owner_id ИЗ справочник.собаки )
7899;SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs );ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.владельцы ГДЕ owner_id НЕ В ( ВЫБРАТЬ owner_id ИЗ справочник.собаки )
7900;SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments );ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.сотрудники ГДЕ professional_id НЕ В ( ВЫБРАТЬ professional_id ИЗ регистрсведений.лечения )
7901;SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments );ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.сотрудники ГДЕ professional_id НЕ В ( ВЫБРАТЬ professional_id ИЗ регистрсведений.лечения )
7902;SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1;ВЫБРАТЬ кличка , возраст , вес ИЗ справочник.собаки ГДЕ брошен = 1
7903;SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1;ВЫБРАТЬ кличка , возраст , вес ИЗ справочник.собаки ГДЕ брошен = 1
7904;SELECT avg(age) FROM Dogs;ВЫБРАТЬ СРЕДНЕЕ(возраст) ИЗ справочник.собаки
7905;SELECT avg(age) FROM Dogs;ВЫБРАТЬ СРЕДНЕЕ(возраст) ИЗ справочник.собаки
7906;SELECT max(age) FROM Dogs;ВЫБРАТЬ МАКСИМУМ(возраст) ИЗ справочник.собаки
7907;SELECT max(age) FROM Dogs;ВЫБРАТЬ МАКСИМУМ(возраст) ИЗ справочник.собаки
7908;SELECT charge_type ,  charge_amount FROM Charges;ВЫБРАТЬ видплатежа , сумма ИЗ справочник.платежи
7909;SELECT charge_type ,  charge_amount FROM Charges;ВЫБРАТЬ видплатежа , сумма ИЗ справочник.платежи
7910;SELECT max(charge_amount) FROM Charges;ВЫБРАТЬ МАКСИМУМ(сумма) ИЗ справочник.платежи
7911;SELECT max(charge_amount) FROM Charges;ВЫБРАТЬ МАКСИМУМ(сумма) ИЗ справочник.платежи
7912;SELECT email_address ,  cell_number ,  home_phone FROM professionals;ВЫБРАТЬ элпочта , мобильныйтелефон , домашнийтелефон ИЗ справочник.сотрудники
7913;SELECT email_address ,  cell_number ,  home_phone FROM professionals;ВЫБРАТЬ элпочта , мобильныйтелефон , домашнийтелефон ИЗ справочник.сотрудники
7914;SELECT DISTINCT breed_code ,  size_code FROM dogs;ВЫБРАТЬ РАЗЛИЧНЫЕ порода , размер ИЗ справочник.собаки
7915;SELECT DISTINCT breed_code ,  size_code FROM dogs;ВЫБРАТЬ РАЗЛИЧНЫЕ порода , размер ИЗ справочник.собаки
7916;SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code;ВЫБРАТЬ РАЗЛИЧНЫЕ T1.имя , T3.описание ИЗ справочник.сотрудники КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.лечения КАК T2 ПО T1.ссылка = T2.специалист ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.видылечения КАК T3 ПО T2.видлечения = T3.код
7917;SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code;ВЫБРАТЬ РАЗЛИЧНЫЕ T1.имя , T3.описание ИЗ справочник.сотрудники КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ регистрсведений.лечения КАК T2 ПО T1.ссылка = T2.специалист ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.видылечения КАК T3 ПО T2.видлечения = T3.код
7918;SELECT count(*) FROM singer;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.артисты
7919;SELECT count(*) FROM singer;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.артисты
7920;SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC;ВЫБРАТЬ наименование ИЗ справочник.артисты УПОРЯДОЧИТЬ ПО состояниевмиллионах ВОЗР
7921;SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC;ВЫБРАТЬ наименование ИЗ справочник.артисты УПОРЯДОЧИТЬ ПО состояниевмиллионах ВОЗР
7922;SELECT Birth_Year ,  Citizenship FROM singer;ВЫБРАТЬ годрождения , гражданство ИЗ справочник.артисты
7923;SELECT Birth_Year ,  Citizenship FROM singer;ВЫБРАТЬ годрождения , гражданство ИЗ справочник.артисты
7924;"SELECT Name FROM singer WHERE Citizenship != ""France""";"ВЫБРАТЬ наименование ИЗ справочник.артисты ГДЕ гражданство <> ""France"""
7925;"SELECT Name FROM singer WHERE Citizenship != ""France""";"ВЫБРАТЬ наименование ИЗ справочник.артисты ГДЕ гражданство <> ""France"""
7926;SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949;ВЫБРАТЬ наименование ИЗ справочник.артисты ГДЕ годрождения = 1948 ИЛИ годрождения = 1949
7927;SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949;ВЫБРАТЬ наименование ИЗ справочник.артисты ГДЕ годрождения = 1948 ИЛИ годрождения = 1949
7928;SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование ИЗ справочник.артисты УПОРЯДОЧИТЬ ПО состояниевмиллионах УБЫВ
7929;SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 наименование ИЗ справочник.артисты УПОРЯДОЧИТЬ ПО состояниевмиллионах УБЫВ
7930;SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship;ВЫБРАТЬ гражданство , КОЛИЧЕСТВО(*) ИЗ справочник.артисты СГРУППИРОВАТЬ ПО гражданство
7931;SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship;ВЫБРАТЬ гражданство , КОЛИЧЕСТВО(*) ИЗ справочник.артисты СГРУППИРОВАТЬ ПО гражданство
7932;SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1;ВЫБРАТЬ ПЕРВЫЕ 1 гражданство ИЗ справочник.артисты СГРУППИРОВАТЬ ПО гражданство УПОРЯДОЧИТЬ ПО КОЛИЧЕСТВО(*) УБЫВ
7933;select citizenship from singer group by citizenship order by count(*) desc limit 1;select гражданство from singer group by гражданство order by КОЛИЧЕСТВО(*) desc limit 1
7934;SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship;ВЫБРАТЬ гражданство , МАКСИМУМ(состояниевмиллионах) ИЗ справочник.артисты СГРУППИРОВАТЬ ПО гражданство
7935;SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship;ВЫБРАТЬ гражданство , МАКСИМУМ(состояниевмиллионах) ИЗ справочник.артисты СГРУППИРОВАТЬ ПО гражданство
7936;SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID;ВЫБРАТЬ T2.название , T1.наименование ИЗ справочник.артисты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.песни КАК T2 ПО T1.ссылка = T2.артист
7937;SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID;ВЫБРАТЬ T2.название , T1.наименование ИЗ справочник.артисты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.песни КАК T2 ПО T1.ссылка = T2.артист
7938;SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000;ВЫБРАТЬ РАЗЛИЧНЫЕ T1.наименование ИЗ справочник.артисты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.песни КАК T2 ПО T1.ссылка = T2.артист ГДЕ T2.продажи > 300000
7939;SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000;ВЫБРАТЬ РАЗЛИЧНЫЕ T1.наименование ИЗ справочник.артисты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.песни КАК T2 ПО T1.ссылка = T2.артист ГДЕ T2.продажи > 300000
7940;SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1;ВЫБРАТЬ T1.наименование ИЗ справочник.артисты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.песни КАК T2 ПО T1.ссылка = T2.артист СГРУППИРОВАТЬ ПО T1.наименование ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 1
7941;SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1;ВЫБРАТЬ T1.наименование ИЗ справочник.артисты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.песни КАК T2 ПО T1.ссылка = T2.артист СГРУППИРОВАТЬ ПО T1.наименование ИМЕЮЩИЕ КОЛИЧЕСТВО(*) > 1
7942;SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name;ВЫБРАТЬ T1.наименование , СУММА(T2.продажи) ИЗ справочник.артисты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.песни КАК T2 ПО T1.ссылка = T2.артист СГРУППИРОВАТЬ ПО T1.наименование
7943;SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name;ВЫБРАТЬ T1.наименование , СУММА(T2.продажи) ИЗ справочник.артисты КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.песни КАК T2 ПО T1.ссылка = T2.артист СГРУППИРОВАТЬ ПО T1.наименование
7944;SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song);ВЫБРАТЬ Name ИЗ справочник.артисты ГДЕ Singer_ID НЕ В (ВЫБРАТЬ Singer_ID ИЗ справочник.песни)
7945;SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song);ВЫБРАТЬ Name ИЗ справочник.артисты ГДЕ Singer_ID НЕ В (ВЫБРАТЬ Singer_ID ИЗ справочник.песни)
7948;SELECT count(*) FROM Other_Available_Features;ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ справочник.допхарактеристики
7949;"SELECT T2.feature_type_name FROM Other_Available_Features AS T1 JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code  =  T2.feature_type_code WHERE T1.feature_name  =  ""AirCon""";"ВЫБРАТЬ T2.наименование ИЗ справочник.допхарактеристики КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.видыхарактеристик КАК T2 ПО T1.видхарактеристики = T2.код ГДЕ T1.наименование = ""AirCon"""
7950;SELECT T2.property_type_description FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code  =  T2.property_type_code GROUP BY T1.property_type_code;ВЫБРАТЬ T2.описание ИЗ справочник.недвижимость КАК T1 ВНУТРЕННЕЕ СОЕДИНЕНИЕ справочник.видынедвижимости КАК T2 ПО T1.виднедвижимости = T2.код СГРУППИРОВАТЬ ПО T1.виднедвижимости
7951;"SELECT property_name FROM Properties WHERE property_type_code  =  ""House"" UNION SELECT property_name FROM Properties WHERE property_type_code  =  ""Apartment"" AND room_count  >  1";"ВЫБРАТЬ наименование ИЗ справочник.недвижимость ГДЕ виднедвижимости = ""House"" ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ наименование ИЗ справочник.недвижимость ГДЕ виднедвижимости = ""Apartment"" И количествокомнат > 1"
